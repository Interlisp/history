(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)(FILECREATED "26-Feb-93 03:39:22" ("compiled on " |{PELE:MV:ENVOS}<LISPCORE>LIBRARY>FOREIGN-FUNCTIONS.;2|) "19-Feb-93 17:03:08" |bcompl'd| |in| "Medley 19-Feb-93 ..." |dated| "19-Feb-93 18:20:42")(FILECREATED "29-Jan-92 17:36:03" |{PELE:MV:ENVOS}<LISPCORE>LIBRARY>FOREIGN-FUNCTIONS.;2| 4980 |changes| |to:| (FUNCTIONS FOREIGN-FUNCTIONS:DEFFOREIGN FOREIGN-FUNCTIONS::DLD-LINK) (VARS FOREIGN-FUNCTIONSCOMS) |previous| |date:| "29-Jan-92 13:51:24" |{PELE:MV:ENVOS}<LISPCORE>LIBRARY>FOREIGN-FUNCTIONS.;1|)(PRETTYCOMPRINT FOREIGN-FUNCTIONSCOMS)(RPAQQ FOREIGN-FUNCTIONSCOMS ((P (CL:UNLESS (FIND-PACKAGE :FOREIGN-FUNCTIONS) (CL:MAKE-PACKAGE "FOREIGN-FUNCTIONS" :NICKNAMES (QUOTE (:FF :FOREIGN)) :USE (QUOTE (:CL))))) (FUNCTIONS FOREIGN-FUNCTIONS:DEFFOREIGN FOREIGN-FUNCTIONS::DLD-LINK)))(CL:UNLESS (FIND-PACKAGE :FOREIGN-FUNCTIONS) (CL:MAKE-PACKAGE "FOREIGN-FUNCTIONS" :NICKNAMES (QUOTE (:FF :FOREIGN)) :USE (QUOTE (:CL))))(CL:DEFUN FOREIGN-FUNCTIONS:DEFFOREIGN (CL:FUNCTION FOREIGN-FUNCTIONS::RESULT-TYPE FOREIGN-FUNCTIONS::ARGLIST &KEY FOREIGN-FUNCTIONS::FUNCTION-NAME) (* |;;| "Define a foreign function") (COND ((CL:GETHASH CL:FUNCTION FOREIGN-FUNCTIONS::*FOREIGN-FUNCTION-ADDRESS*) (CL:WARN "Function ~s being redefined." CL:FUNCTION))) (CL:SETF (CL:GETHASH CL:FUNCTION FOREIGN-FUNCTIONS::*FOREIGN-FUNCTION-ADDRESS*) 0) (OR (FMEMB FOREIGN-FUNCTIONS::RESULT-TYPE (QUOTE (:INT :VOID :LONG :SHORT :CHAR :BYTE :LISPPTR :CPOINTER :FLOAT))) (CL:ERROR "RESULT-TYPE arg ~s not a valid choice." FOREIGN-FUNCTIONS::RESULT-TYPE)) (CL:DOLIST (FOREIGN-FUNCTIONS::ARG FOREIGN-FUNCTIONS::ARGLIST) (OR (FMEMB FOREIGN-FUNCTIONS::ARG (QUOTE (:INT :VOID :LONG :SHORT :CHAR :BYTE :LISPPTR :CPOINTER :FLOAT))) (CL:ERROR "ARGLIST arg ~s not a valid choice." FOREIGN-FUNCTIONS::ARG))) (LET ((FOREIGN-FUNCTIONS::ADDRESS-CELL (\\CREATECELL \\FIXP)) (FOREIGN-FUNCTIONS::ERROR-CELL (\\CREATECELL \\FIXP)) (FOREIGN-FUNCTIONS::CONVERSIONS-BLOCK (\\ALLOCBLOCK (CL:1+ (CL:LENGTH FOREIGN-FUNCTIONS::ARGLIST)) NIL))) (CL:EVAL (BQUOTE (CL:DEFUN (\\\, CL:FUNCTION) (\\\, (FOR FOREIGN-FUNCTIONS::ARG FOREIGN-FUNCTIONS::ARGLIST AS FOREIGN-FUNCTIONS::I FROM 1 COLLECT (CL:INTERN (CONCAT "Arg-" FOREIGN-FUNCTIONS::I) (CL:SYMBOL-PACKAGE CL:FUNCTION)))) (COND ((CL:ZEROP (\\\, FOREIGN-FUNCTIONS::ADDRESS-CELL)) (CL:ERROR "Foreign function never loaded: ~s" (QUOTE (\\\, CL:FUNCTION)))) ((= -1 (\\\, FOREIGN-FUNCTIONS::ADDRESS-CELL)) (CL:ERROR "Foreign function was unloaded: ~s" (QUOTE (\\\, CL:FUNCTION)))) ((= -2 (\\\, FOREIGN-FUNCTIONS::ADDRESS-CELL)) (CL:ERROR "Foreign function has unresolved external references: ~s" (QUOTE (\\\, CL:FUNCTION)))) (T (PROG1 (MISCN 12 (\\\, FOREIGN-FUNCTIONS::ADDRESS-CELL) (\\\, FOREIGN-FUNCTIONS::CONVERSIONS-BLOCK) (\\\, FOREIGN-FUNCTIONS::ERROR-CELL) (\\\,@ (FOR FOREIGN-FUNCTIONS::ARG IN FOREIGN-FUNCTIONS::ARGLIST AS FOREIGN-FUNCTIONS::I FROM 1 COLLECT (CL:INTERN (CONCAT "Arg-" USER::I) (CL:SYMBOL-PACKAGE CL:FUNCTION))))) (OR (CL:ZEROP (\\\, FOREIGN-FUNCTIONS::ERROR-CELL)) (CL:ERROR "Foreign function encountered error during call: ~s" (QUOTE (\\\, CL:FUNCTION)))))))))) (CL:COMPILE CL:FUNCTION)))(CL:DEFUN FOREIGN-FUNCTIONS::DLD-LINK (PATHNAME) (CL:TYPECASE PATHNAME (STRING (FOREIGN-FUNCTIONS::SUBR FOREIGN-FUNCTIONS::DLD-LINK PATHNAME)) (T (CL:ERROR "PATHNAME SHOULD BE OF TYPE STRING"))))(PUTPROPS FOREIGN-FUNCTIONS COPYRIGHT ("Venue" 1992))NIL