(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE (DEFPACKAGE "YP" (USE "XCL" "LISP")))
(il:filecreated "13-Nov-89 18:59:25" "{piglet/n}<piglet>nfs>sources>YP;3" 3116   

      il:|changes| il:|to:|  (il:vars il:ypcoms) (il:files il:ypimpl) (il:functions ypdef)

      il:|previous| il:|date:| "15-Nov-88 18:42:19" "{piglet/n}<piglet>nfs>sources>YP;1")


; Copyright (c) 1988, 1989 by Xerox Corporation.  All rights reserved.

(il:prettycomprint il:ypcoms)

(il:rpaqq il:ypcoms ((il:* il:|;;;| "Yellow Pages Service... Requires Sun-RPC.") (il:declare\: il:dontcopy (il:prop (il:filetype il:makefile-environment) il:yp)) (il:structures map-parameters) (il:functions ypdef) (eval-when (load) (il:p (ypdef))) (il:files il:ypimpl)))



(il:* il:|;;;| "Yellow Pages Service... Requires Sun-RPC.")

(il:declare\: il:dontcopy 

(il:putprops il:yp il:filetype :compile-file)

(il:putprops il:yp il:makefile-environment (:readtable "XCL" :package (defpackage "YP" (:use "XCL" "LISP"))))
)

(defstruct (map-parameters) domain-name map-name order-num peer-name)

(defun ypdef nil (quote dummy) (il:* il:\; "Keep defun from macroexpanding this needlessly") (rpc2:define-remote-program (quote yp) 100004 2 (quote rpc2:udp) :constants (quote ((maxrecord 1024) (maxdomain 64) (maxmap 64) (maxpeer 64))) :types (quote ((status (:enumeration (t 1) (nil 0) (:no-more 2) (:no-map -1) (:no-domain -2) (:no-key -3) (:bad-operation -4) (:bad-data-base -5) (:yp-server-error -6) (:bad-arguments -7) (:version-mismatch -8))) (transfer-status (:enumeration (t 1) (:age 2) (:no-map -1) (:no-domain -2) (:resource-failure -3) (:rpc-failure -4) (:master-address -5) (:yp-server-error -6) (:bad-arguments -7) (:data-base-failure -8) (:file-error -9) (:skew -10) (:cant-clear -11) (:force -12) (:transfer-error -13) (:server-refused -14))) (domain-name :string) (map-name :string) (peer-name :string) (key-data :string) (value-data :string) (order-number :unsigned) (map-list (:sequence map-name)) (transaction-id :unsigned) (program :unsigned) (port :unsigned) (map-parameters (:struct map-parameters (domain-name domain-name) (map-name map-name) (order-num :unsigned) (peer-name peer-name))) (response-all (:union (:enumeration (t 1) (nil 0)) (t (:list status value-data key-data)) (nil :void))))) :procedures (quote ((null 0 nil nil) (serve-domain-p 1 (domain-name) (:boolean)) (serve-domain-p-no-nack 2 (domain-name) (:boolean)) (match-key 3 (domain-name map-name key-data) (status value-data)) (first-pair 4 (domain-name map-name key-data) (status value-data key-data)) (next-pair 5 (domain-name map-name key-data) (status value-data key-data)) (transfer-map 6 (map-parameters transaction-id program port) (transaction-id transfer-status)) (clear 7 nil nil) (get-all-pairs 8 (domain-name map-name) response-all) (map-master-name 9 (domain-name map-name) (status peer-name)) (map-order 10 (domain-name map-name) (status order-number)) (get-all-maps 11 (domain-name) (status map-list))))))
(eval-when (load)

(ypdef)
)

(il:filesload il:ypimpl)
(il:putprops il:yp il:copyright ("Xerox Corporation" 1988 1989))
(il:declare\: il:dontcopy
  (il:filemap (nil)))
il:stop
