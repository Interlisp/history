(FILECREATED "11-AUG-78 15:45:32" ("compiled on " <NEWLISP>MATCH.;5) (2 . 2))
(FILECREATED "11-AUG-78 00:18:23" <NEWLISP>MATCH.;5 73233 changes to: QPROGN 
QAND3 QAND MAKEMATCH QMATCHSUBPAT QMATCHWM QMATCH$ QMATCH! QMATCH$= QMATCHELT1 
QMATCHELT DOSIDE MKAND QFOR QAND2 DOREPLACE1 MKAND2 EQUALUNCROP CHECKSLISTP 
PATPARSE1 PATPARSEAT MATCHCOMS MATCHBLOCKS previous date: "10-AUG-78 15:45:58" 
<NEWLISP>MATCH.;2)

MATCHBLOCK BINARY
wn -.n-.@ox,,~-.Z-,:Z,<Zd,<Z,<@A ,,~,<,XB,<,XB,<,XB,<,XBZXBZpZ83B+,<Z,<,<,<,XBZ3B+2B+D[,<Z,<[,<,<,<Zl[[Z3B+92B+$+9[ [Z,<,<,<,<[$[j2B+9[([Z-,+7[*[Z,<Z[-[Z,,<,<,<3B+7,<[/[d+9,<[5[,<,o[7[[[Z3B+E3B+E2B+?+E,<[9[[[Z,<,o+E,<"[@[[Z,<,<p,/XB`	[E[[[3B+ZZ,<Zd,<@q +Z[I[[[[,<ZP,<,<,<,<Z
l[S[[[[,~+[ZXB`[WZ,<,
3B+`[[Z+b[^Z,<,[XB`
,<,<`	,<,XB`
ZbXBeZ`3B+o[`[[[Z2B+o,<,<`
,<`
,,XB`Zb,<Zb,<Z`2B+}Z3B+v,+}Z3B+{Zp3B+zZ+}Z+|Z+}Z,f XB,<`
b
,<,",<,%XB`
Z3B+,<,<!,<`
,,,<,j,~Z`
,~ZZ,,<@! +Z3B+ZwZ82B+,<?,m,<Zw,<?,<?,<,,<,",~Zw,<?,<?,<,,~+,<,<Zw~2B+!Z2B+Z+Z2B+
Z+,<w~,K+Zw~-,+*Zw~3B"+%2B#+',<w~,<w~,<w~,+,<w~,<w~,<w~,2+Zw~Z3B#+13B$+13B$+13B%+13B%+12B&+3,<w~,<w~,<w~,2+2B&+7,<w~,<w~,<w~,1+2B'+:,<w~,<w~,<w~,C+2B'+Zw~[[,<,	*3B+SZ2B(+CZw~[[3B(+QZw~[Z,<,73B+QZw~[Z,<,<w},',<,^,<,<w}Zw}[[[w},,<,<w},,<,"+,<w~,<w~,<w~,2+[w~3B+Zw2B+qZw~[[,<,	%3B+q[w~Z,<,<,	M3B+q,<),
XBw,<,<w}Zw}[Z,<,<w|,<w},e,<,^,<,<w}[w|,<,<,,<,",<,<[w|,<,
J,<,XBwZ?3B+pZlZwXDZ+Zw+ZZn,,<@r +Zw,<?~Z?~[[,<Zw~Z?~[Z,<Zw~,<?~,<',e,<,^,<Zw~[?~,<,?,<,<,<,<,~,Z',,,<Zw~,<?,,~+,<w~Zw~[[[w~,,<Zw}Zw~,,<,+@)(
+1Zw[?2B+Zw,<8,<?,9,~Zr3B+#Z-,+,<,,<,Z,<ZZ,,<@r + Zw,<?,<?,<8,,~ ,\XD,<,Z,~Zw[?Z,<,<,	M3B+),<,,<,o,~ZwZ82B+\[?,<Zp-,+/Z+@Zp,<,<w/Zp2B(+6,<-Z,<,XB3Z+<Zp2B'+;Z4,<[w,<,XB7Z+<Z/3B+>Zp+@[pXBp+,/XB`Z:1B+\Z`3B+F,<,	^3B+IZw,<?ZA,<,g,~ZG-,+RZw,<? I.",,<,k,<ZwZ?Z`,,<,<,,~Zw,<?,<,k,<,[XB`,<,),<,),<ZwZ?Z`,,<,<,,~Zw[?,<Zp-,+`Z+pZp,<,<w,<w,<,dXBp2B+fZ+l0B+iZXBZ+lZK,<,<,XBiZ/3B+nZp+p[pXBp+^/XB`,<,	l3B+$@-+$Zk1B+ZwZ?2B.+Zw[?Z,<,	*2B+Zw[?Z,<,
Y3B+ZwZ?2B.+Zw[?Z+ZwZ?,<Zt,<,<-,,<,<Zg,<,,<,[,<,)+Zw,<?Z,<,<Z,<,,<,[ZwXB8Zw[?,<,
J2B+Z+ZwZ8,<Zw~,<8Zw~[?,<,<,,<Zw~Z82B+Z+!,<,<?Zw},<8,e,<,9,<,",<,",~,~ZwZ82B+dZ`[?[2B+dZ0B+d,<`,	^3B+dZw[?ZZ2B%+dZwZ?3B"+>Zw[?Z[[,<Zp-,+7Z+<Zp,<,<w,	M2B+;Z+<[pXBp+4/3B+dZw[?Z[Z-,+FZw[?Z[ZZ.,2B+d+KZw[?Z[ZZZ/,3B+d,</Zw[?Z[Z,<,iXB`ZZ0,3B+dZ`2B0+W,<1Zw,<?,<,$+WZ1,<[`[Z,<Zw~,<?,,<Z(Zw[?Z[[,,<,<,<w,[,<,<w,<,+Z,<Zd3B+h,<2,<,+lZwZ?2B"+kZ(+lZ2 ,\XD,<,
XB`Z,,<@3@ ,~ZwZ?2B.+	Zw[?,<,<,<Zw-,+x+ZXBp,<,	*3B+|Z+,<p,
Y3B+Z+[wXBw+vZw/3B+	Zw[?ZXB`3B+	Zw,<8,)ZwXB8+ZwZ?XB`ZwZ8XB8,<Zw[?,<,<,XB`2B+Ze3B2+3B(+2B+,<6,<,+'ZXB`ZwZ82B+Z+',<,<?Zw~,<8,e,<,9+'Zw,<8,<?Zw~,<8,e,<,9,<ZZ6,3B+&Z+&Z",<,"XB`Zo2B77ZXB`,<Zw~,<8,<`,<`,<`Zw}[?,<,
J,<,,~+,<[w,<,	l3B+AZw[Z2B%+;,<w~Zw~[[,<,<,+=,<w~Zw~[,<,i,<,<w,<w},9,<,"+Zw-,+D,<7,<w~,o+Zw[Z2B#+l,
,<,^,<,
,<,^,<,<,<w~,<w|,<w~,e,<,9,<,<w[w|,<,<,,<,"XBp,<8,<w,<w|,<w}Zw{[[,<Zw}2B+],<w|,K,<,<w|,<w|,A,,<,+i[w{,<,
J2B+c,<w|,K,<,<w},"+i,<w|,K,<,<w|,<w|,A,,<,,<,<w},"^,,,<,<89/+2B$+y[w,<,	^3B+v@:+vZw,<?~Z?,,<Zw~,<?,,~+,<:Zw~[,<,o+2B$+!Zw[[-,+Zw[[b;[3B+[w,<,	^3B+	@<+	Zw,<?~Z?,,<Zw~,<?,,~+,<:Zw~[,<,o+,<w~Zw~[[,<,<Zw-,+ZpZ2B+ "+[QD "+Zw,<Z$Zp,/Zp,XBp[wXBw+/Z%,Z&,[w~,,<,<w~,+2B%+@Zw2B+),<w~Zw~[[,<[w~d,<,<,+ZZ,,<@t +?Zw,<?~Z?[[,<Z*,<Zw~[?,<,?,<,<,<,<,~,Z<,,d,<,<,,<Zw,<?,<?~Z0,<,e,<,9,<,",~+,<=Zw~[Z,<,o+@= +2Zw[?,<,	l3B+QZ2B+JZ+MZw,<?Z?[,<,3,<Zw,<8,<?,9,<,",~ZwZ82B+[?,<Zp-,+WZ+hZp,<,<w/Zp2B(+^,<-Z),<,XB[Z+dZp2B'+cZ\,<[w,<,XB_Z+dZ/3B+fZp+h[pXBp+T/XB`,<,	^3B+zZH2B+mZ+rZw,<?Z?[,<Zb,<,,<,gXB`Z&3B+xZsZ`XDZ,<,Z,~Z`2B+1+Z`3B+}Z+ZZw,<?Z?[,<Zp,<,,<,32B+1ZwZ?[0B+Zw,<8,<?,<?,e,<,9,<Zw,<?[?,<,<,,<,",~ZwZ?[-,+ZwZ?[,,>n,>  ,^/2"+Zw,<?Z?[,<,k+Zw,<?Z?[,<,k,<,[XB`Zk2B+!Z+&Zw[?,<,
J2B+%Z+&Z`,<Zw,<8,<?,<`,),<,e,<,9,<,<`,),<Zw~[?,<,<,,<,",<,",~+Z
2B+5Z+D[w3B+=Zw,<,	r3B+<[w,<,
J3B+<Zw+DZ+DZw,<,	r3B+B,<w,<-,3+D,<w,),<,K,<,<w~,',<Zw~,<,i,<,<w,<w},',<,9,<[w~2B+MZ+eZt2B(+bZw~-,+TZw~ZZ?,3B+b+VZw~Z@,2B+bZM,<ZZV,,<@r +`Zw,<?},),<Zw[?},<,<,,~,\XBZ+e,<w},),<[w},<,<,,<,",<,",<,"+Zp-,+p3B"+m3B#+m2B(+nZ+,<w,<,A+Zp2B$+t,<w[w,<,++2B'+[pZ,<,73B+[pZ,<,<w,^,<,<w[w[,<,i,<,"+,<w[w[,<,i,<[wZ,<,<w~,^,<,"+2B&+[p,<,<Zw-,+ZpZ2B+ "+[QD "+Zw,<,<w~,<w,i/Zp,XBp[wXBw+	/,<,+2B%+,<w[w,<,i,<,I+2B$+$,<w[w3B+"3B+"-,+",<@,<,,<,A+2B#+',<w[w,<,A+2B%++,<w[w,<,<,+2B'+5Z23B+4Z3B+2,<w[w,<,3+,<w[w,<,g+Z+,<A,<,+ZpZ,+Zw2B+<Z+ZwZ2BA+K,<p,<w,y2B+uZw[Z,<,<w,<,
,<Zw[[,<,	r3B+IZ,+JZ,b
+u2BB+[,<p,<w,y2B+uZw[Z,<,,<p,Zw[Z,<,<w,<,
Zo,XBVZw[[,<,	rXBvZ+u2B+`,<pZw[Z,<,+u2BB+jZw[Z,<,,<p,,<pZw[Z,<,Zw,XBgZ+u2B'+nZw[Z,<,<w,^+u2B<+tZw[ZZpXD,<,Z+u,<C,<w,,<[w,<,<w,9,<,"+Zp[ZZL,3B+Zp[ZZ,3B+ZX,<Zp-,++
,<Zp3B2+Zp2B(+,<p,<C/[pXBp+/Zp[Z,<,<w,<D,Z+Zp[Z2BE77+,<w,ZwXBsZ+[wZ,<[w[Z,<Zw~2B7Z,<,<w~,-2B+'Zp2B+ZXBp3B+Zw,<[w,<,-2B+%[w,XBw+XBwZp3B+*Zw+,,<w,-2B+,Zw+,<w~,<w~E2B+Zw3B+IZw3BF+32BG+I,<w~,',<[w~Z,<,<,<,-,<Zw~2BG+=[w~[2B+=Z+FZ,<w~,),<Zw~2BG+CZG[w~[,+D[w~[Z,<,<,<,-,<,52B++IZZw~2BG+P,<H,<,<,$,<[w~Z,<,<w~,+2B.+W,<H,<,<,$,<[w~Z,<,<w~,+2BI+_[w~Z,<,<w~[w}[Z,<,.,<,<w~,<w~,-+Zp3B+c,<I,<w~,<w~,+Z+Zw-,+p3B"+g2B#+hZ+	%2B(+mZp2B+lZ"+	%Z+	%Zp3B+oZ"+	%Z"+	%Zw2B%+	Zp3B+	[w,<,<,<,<JZw~-,+x+	ZXBw,<p,<,<,d2B+}Z/+	,<,XBp[w~XBw~+vZp/+	%Z"+	%2B'+	[w+	%3BB+	3B+	3BA+	3BB+	3B'+	2B<+	[w[XBw+d2B&+	[wXBwZXBp+d2B&+	Zp3B+	Z+	%Z"+	%2B$+	Zp3B+	[wbJ+	%Z"+	%3B#+	3B$+	2B%+	 Zp2B+	
Z"+	%Z+	%3BK+	"2BL+	#Z+	%,<L,<w,+Zp3B#77+Zp2B"7Z+Zp-,+	0-,+-,+ZpZM,+Zp3B#+	63B$+	63B$+	63B%+	63B%+	62B&+	7Z+3BB+	=3B+	=3BA+	=3BB+	=3B'+	=2B<+	@[p[,<,	*+Z+Zp-,+	CZ+Zp2B'+	G[p[,<,	A+3BB+	K3B+	K3BA+	K2BB+	LZ+Z+Zw-,+	P,<,	%+Zw2B&+	SZ+2B'+	UZp+3BA+	Z3BB+	Z3BB+	Z3B+	Z2B<+	][w[,<,<w,	M+Z+Zp2B+	bZ.2B+	a7Z+,<Zp-,+	eZ+	kZp,<,<w/,	%2B+	jZ+	k[pXBp+	c/+Z	_3B+	qZp2B+	p7Z+Z+Zp-,+	xZpZM,3B+	wZ+Z+Zp-,+
HZp2B'+
[p[,<,	r3B+
[pZZ,2B+
ZN+Z+2B%+
Z2B+
[p,<,
J+Z+2BL+

Z+2B'+
[p-,+
Z+[p,0"7Z+2BK+
Z+3BB+
3B+
3BB+
3BA+
2B<+
[p[,<,	r+2B&+
"[pZ2B%+
 [p[,<,
J+[p,<,	r+2B$+
&[p2B+
%7Z+3B#+
(2B$+
9[p-,+
.[p3B+
8[p3B+
7Z3B+
8+
7[p-,+
8[pZ,<,<NOZP,2B+
8[pZZ,2B+
87Z+2B&+
D[p,<Zp-,+
=Z+
CZp,<,<w/,	r3B+
BZp+
C[pXBp+
;/+2B%+
F[p+,<P,<w,+,<Q,<,+,<pZp-,+
MZ+Zp,<,<w/Z,3B+
S,<p,	*2B+
T,<p,	r+
UZ/2B+
WZ+[pXBp+
KZp-,+
~Zp3B+
^3BB+
^2B<+
_Z+3B'+
b3BB+
b2BA+
d[p[,<,
Y+2B&+
g[p,<,
Y+2B%+
s[p,<Zp-,+
lZ+
rZp,<,<w/,
Y3B+
pZp+
r[pXBp+
i/+3B'+
{3B#+
{3B$+
{3B$+
{3BL+
{3BK+
{3B%+
{2B&+
|Z+,<Q,<w,+Z+Zp-,+2B+Zp,<,<RO2B+ZpZR,3B+	[pZ,<,
+Z+,<,<[XBZ2B+SXBpZM,2B+++Zp+Zw2B+,
XBwZp2BD+,<w,,<w,,<w,<wZw2B+Z+!2BD+!,<w~,
3B+ 7Z+!Z,,Zf,XB"Zw+Zp-,+*,,<,-Z2B++,,<,-2B+Zp+,<,<Zw-,+0Z+Zw-,+iZ#,<,<,<Zw-,+6+?ZXBp-,+:Zw}2B+>Z+@ZpZw}2B+>ZpXBw+?[wXBw+4Zw/XBw3B+iZw[w,XBw[w[-,+Q,
,<,^XBp[w[,<,<w[w~[Z,<,<,
,\XB[wZpXD[wZQD+Y[w[2B+Y[w,<[wZ-,+WZ+XZw~,\QBZw[wZXDZw-,+_,<w,-2B+Zw+,<wZw~,<,-2B+cZw~,\XB,<w[w~,<,-2B+g[w~ ,\QD+Zw2BT+y[wZ,<Z2d,<@T +xZw[?[,<,-XB`3B+xZwZ?,<Zw[?ZZ`,,,~+2BU+2,<,<,<[w}Z,<,<Zw-,+ZpZ2B+ "+[QD "+Zw,<Zp-,+[p,<,-XBw~3B+ZXBw~ZpZw~,+Zp/Zp,XBp[wXBw+}/XBw[w}Z,<,<Zw-,+ZpZ2B+ "+[QD "+!Zw,<Zp-,+Zp+/Zp,XBp[wXBw+/,<Zld ,<@{ +1Zw[?}[,<,-ZwXB?2B++Z83B+0Z?},<Zw,<?Z?2B+/[?}[,,,~/+2B@+4Z+3B+62BV+8,<w,<,+Zw3BG+:2B.+G[wZZ3BG+>2B.+G[wZ,<,-2B+B[wZXBwZw2B.+E,<w,)+,<w,'+,<,<Zw~,<,-XBw[w~,<,-XBpZw~2B/+QZp3B+PZw~ZpQDZ+ZZw2B+TZp3B+ZZw2B+VZw~,<Zw2B+Y[w},+ZZ/+,
,<,<w,<,+ZpZ,XB_Zp+Zp-,+-,+2B+fZ+2B7Z+,<w,<w,{2B+Z",<Zp-,+nZ+zZp,<,<w/Zp,<,<w,{3B+u,<w~[w,<,{+vZ/3B+xZp+z[pXBp+k/+ZwZp3B77+Zp-,+,<wZw,<,{2B+,<w[w,<,{+Z+Z(3B+,<Zp-,+
Z+,<Zp3B7+Zp,<,<w,h3B+ZpZ7XD/[pXBp+/+Z+,<p,<VO2B+,<pW+Zw3B+
,<X,<,<,$,<,<w~,<w~,<w~,+Zw0B+$,<.,<X,<w},,+0B+*Zp3B+(,<X,<w~,+,<w~,Z+,<X,<,<,$,<,<w~,<w~,+Zp2B+1Zw+Zw-,ZZ2BG+>[wbY,<Zp-,+7+=Zp,<,<F,<w,<w~,XBw/[pXBp+5/Zp+Zp-,ZZ2BG+G[p[2B+G,<Z,<w[wZ,<,+,<Z,<w,<w,+,<p,<[,M+,<p,<[,M+Zw-,+U3B+Q2B+S,<\,<,o+,<p,<,+Zw3B[+W2B[+Y[wZ+2B0+\ZwZ\XD+2B\+_ZwZ0XD+2B]+bZwZ]XD+2B]+eZwZ]XD+,<p,<w,+Zp0B+iZ+,<w,<,k+Zp+n p0"+uZ
O3B+r,<^,<,<,$+sZ^,<,<w,<w,+ p,>n,>  ,^/3b+,<Zw-,ZZ3B.+~Zp+ w.",XBw[wZXBw+z/,<^,<w,<w,+,< w/",XBw,0b+
Zp+,<.,<w~,XBw+/Zw+[p3B+Z_Zp,+Zp+Zw-,+Zp-,+ w,>n,> p.Bx,^/,+,<_,<w,<w,+,<V,<w,<w,+,<`,<w~,<w~,+,<w,<w,52B+,<`,<w,<w,+,<G,<w,+,<.,<w,+Zp2B+.,<w,K+0B+1,<a,<w,+,<0,<w,<,+Zp0B+6,<w,K+Zw2B.+<[wZ,<,<-,<w,,<,3+,<a,<,<,$,<,<w,<w,+Zp2B@+G[pZ,<,a3B+G[pZXBpZp2B+J,<w,K+2B+M,<w,<,++"+QZp2B@+R[pZ-,+RZ0+WZp-,+UZb+W-,+WZb+WZc,<,<w,<w,+,<X,<w,<,$,<,<w,+Zw-,+aZw2BT+c,<w,<w,+,<p,<',<w~c+,<I,<,<,$,<,<w,<w,+-.d[`2B+Z`Z2B!+Z`[ZZ2BU+Z`[Z[Z3B+vZ2B+Z`[Z[,<Z`[Z[Z,<Zud,\XBZ`[Z,~Z|Z`,ZU,,~,<Zw~2B+	,<e,<w|,<w|,<w|,<w},,<,Zw~Zw}2B+,<f,<,oZw3B++PZw~2B`+[w~ZZw}2B+[w~[[3B+Z`[w~[,+[w~[ZXBw~Zw~2B0+$[w~Z,<,<w},'dE3B+#,<f[w~[Z,<,<w},2B+HZ+/2Bc+/[w~Z,<,<w},'dE3B+.,<g[w~[Z,<,<w},2B+HZ+/Z,<g,<w},
,<,<w|,,<,<h[w|ZZw2B+D,<w|,<hi3B+;Zw|,<,1B+CZw|,<,0B+D,<w|,<ji3B+D[w|[Z[wZ2B+DZw|+F,<T,<w,<w{,,/,XBpZw}2B+KZw3B+O,<w},<w,<,,<w},<w~,"+Zp+Zw}2B+T,<w},<w},,+UZ,<Zw|3B+[,<w},^,<,<w},<,
,+[Z,<,<j,<k,<w|,I,<,<k,<wz,m,<,<wz,<wy,),<,<,
,<,<k,,,<,<l,,<,<,<!,<w{,,,,d ,<,j+,<],<w,+Zw2Bf+qZl+2Bm+sZm+2Bn+uZn+2Bo+wZo+2Bp+yZp+2Bq+{Zq+2Br+}Zr+2B+Zs+2Bs+Zt+2B:+Zt+2B+Zu,<,<u,<vZp3B+,<w,<u,<p,<,<x,<y,<uZh,<,<,<xy+,<z,<u,<v,<w,<w$+,<w,<w,<w,$,<,<w,<w,+Z3B+!,<p[Z,<,<Z,<,<,<{{+ZpZ7@7Z+,<w,<|O2B+'Zw,<,<,<Z3B+4,<w},<}OXBp3B+4,<w},<w},<w}Z),<,<w},<w{,<NO,<,<w}{+Zw+,<,<Zw~2B+8Zw+Zw2B+;Zw~+,<w~,<,\3B+>Zw+,<w,<w~,\3B+BZw~+Zw~2B]+F,<w~,<w~,2B++o2B}+Q,<w~;XBwZ,<,<w~,5XBp3B+o,<w~,<w~,<Zw,d 2B++o2B`+e,<w~;XBwZ,<,<w~,5XBp3B+a[w~[Zw2B+[[w~Z+^[w~,<,<w~Z`,,<,<w,"2B++o,<w~Zw~,d2B++o2B`+n[w~Z,<,<w~,\3B+m,<w~[w~Z,<,<w~c2B+Z+oZZw2B`+,<w~[w~Z,<,5XBw3B+},<[w~[[3B+zZ`[w~[,+{[w~[Z,<,"+Zw~[w,Z`,+Z+[wZ,<,<wE3B+Zw+Zp-,+Z+Zp3Bf+3Bg+3B1+2B1+[p[Z,<[wZdE3B+Zp2B+Z+
3Bg+3BX+3BX+3B^+2Ba+
[pZ,<[wZdE3B+Zp2B+Z+
ZZp3BG+*3B.+*3B^+*3B+*3B]+*3BX+*3BX+*3Bg+*3B^+*2Ba+3,<w[wZ,<,XBw3B+2Zp,<Zw[w[,,+Z+3Bc+73B0+73Bb+72Bb+L[p[Z3B+K[p[Z,<,a2B+C[p[ZZ2B@+K[p[Z[Z3B+K,<w[wZ,<,XBw3B+KZp,<Zw[w[,,+Z+3B+R3B+R3Bf+R3Bg+R3B1+R2B1+[,<w[w[Z,<,XBw3B+Zp,<[wZ,<,<w~,+Z+,<w,<wE2B+Zp-,+Zp,<,<RO3B+f,<w[wZ,<,\+Zp3BG+o3B.+o3B^+o3BX+o3BX+o3B+o3B^+o3Bg+o2B]+r,<w[wZ,<,\+3Bf+x3B+x3Bg+x3B1+x3B1+x2B+|,<w[w[Z,<,\+3B0+3Bc+3Bb+2B+[p[Z3B+[p[Z-,+[p[ZZ2B@+[p[Z[Z3B+,<w[wZ,<,\+Z+Z+Z+Zp-,+,<,<,@+Zw,<8,<,,~+,<,<,<,<,<,<Zw|2B+Z+c[w|3B+$[w|-,+$Zw|,<,<[w{,XBw|Zw|XBwZ2B+*Z2B+*,<w|ZXBw[w|XBwZw-,+RZw2B&+@Zw,<,<w~[w~,<,<,/,XBw,<Zp-,+6Z+<Zp,<,<w/,	A2B+;Z+<[pXBp+4/2B+,<,<w|,o+2B@+K[wZ-,+G,<w|,<$[w~ZZw~,f+,<w|,<$[w~Z,bd+2BT+N,<,<w|+,<w,<w~,<,/,<,?XBw+-,+W-,+-,+,<r,<,o+3B+3B+3B(+3B#+2B"+]+2B+_Z#XBw+2B+bZ(XBw+3B+j3B	+j3B	+j3B
+j3B
+j3B+j3B+j2B+m,<,<hZ',XBw+3B$+r3B#+r3BK+r3BL+r2B'+|,<w,<w|,xXBw~Zw2B'+xZw~0B+xZ(+zZwZw~,XBw[w~XBw+3B&+~2B+,<w,<,XBw~Zw~,<,<w},<w{,<w{,~[w~,+c2B%+,<w,<,XBw~Zw~,<,<w|,J[w~,+c2B$+Z$Zw,XBw[wXBw+,<w|,aXBw}3B+XBw|+Zw|XBpZw3B+-,+,<,<,XBw3B+
ZwZ7[ZZ1H+2D++
ZXBw}3B+;Zp3B+2ZwZ{,2B++,<,<w~,<-,<,<-
3B++ZwZ#,XB)[w,<,<w,XBw~[w}Z,<Zw~Zw~,,[w~,+c[w}[Z,<[w,<,<,xXBwZZw~,,XBw[wXBw+Zp3B+SZw,<,<-2BB+HZwb,1b+H,<w,<BZw~,<,<h,<b[w~,f+Zw}3B+OZ,<Zw|d3B+MZm+NZs,<,<w|,o,<w|,<,<w|,gXBw|ZXBp+Zw2B'+][w,<,d2B+X[wXBw,<,fZw,Z',XBw[wXBw+,<w,dXBw}3B+aXBw+,<w,<w,<,,/,~,<pZ,<,+Zw-,+kZw3B+kZw2B+m,<Zw~,<,,<,<Zw~Z,3B+rZ#XBw~+,<Zw},<,<-,<,<-
3B+~Zw~,<Zd[b-,+,<q,<w},o3B++,<Zw}d3B+Zw~3BE+,<p,<w},o3B+Z`XBw~+Zw~-,+ZI,<Zw}d3B+,<m,<w},oZw~2B+Z-,++Z3BB+3B`+2B+Zw~Zo,XBZw~,<Z([w},ZB,,+N3B@+2B$+!Zw3B+
,<$,<w}+NZ$Zw~,+3B#+#2Bc+(Zw3B+&,<#,<w}+NZ#Zw~,+3B$+*2B0+0Zw3B+.,<$,<w}+NZ$Zw~,+3B'+22B+8Zw3B+5,<,<w}+NZ'Zw~,Z,+ZXBwZw~3B+@Z3B+=Z+>Zs,<,<w},o+MZw~,<,<VO0B+EZXBwZ'+MZw~,<,<,<,<,S3B+JZ#+MZ;-,+LZJ+MZXBw~+XBpZw3B+R,<w~,<wZw~+Zp+Zw~-,+\Zw~Z,2B+[Zw~Z7@7Z3B+\Zw~2B+Zw2B+`,<w~,<,<+Z+,<pZ,<,+,<pZe,<,+Zp-,+wZp."Z2B+wZp,<,<Z,<,<,<w~Z,<,<,<,<2B+wZp,<,<Z,<,<,<w~Z,<,<Zp+Zw2B+{,<,<w,o,<w,d2B+~ZwXBwZw-,+
Z*,<ZUd,<@q +
ZwZ?,<ZwZ?,<,<,<,<ZVl,~Z,<Zp-,++Zp,<ZpZ~,2B+,<pZw~,<,{3B+ZpZ,XB/[pXBp+/Zw+,<,<,<,<Zw}-,+
Z,<Zw}d2B+ Z+Zw},<ZxdXBwZw~2B+%+
Zw~[[ZZw}2B+)+
Zw~[Z2B+E,<,<Zw~XBpZp-,+/+D,<Zw|Z,<,<,<,<Zw~-,+5+?ZXBwZw~-,+8+?ZXBwZwZw3B+<ZXBp+?[w~XBw~[w~XBw~+3Zp/3B+BZpXBw+D[pXBp+-Zw/+W,<wZw}Z,<,<,<,<Zw~-,+K+UZXBwZw~-,+N+UZXBwZwZw3B+RZXBp+U[w~XBw~[w~XBw~+IZp/3B+WZwXBp2B+Z[w~XBw~+#Zw},<,<wZw}Zg[2B9] ." ,\5dd Z,+e[2B=dcXBw~3B+hb[w},+i[w},XBw}Zw~3B+rZw~[[Z2B"+rZw~Z,2B+rZ'+tZw~[[ZXBw~ZpZw3B+{,<w},<,<,d,<Zw}[w|,f+}Zw}Zw~XDZw}+Zw2B&+Zw~Zw2B+Zw~3BB+Zw~2BA+[w~ZZ,2B+[w~,<[w~[[w~,,<,?,<,<,<,<,~,\QBZwZQDZw~+Zw~-,+2B(+Z"+3B"+2B#+Z"+Z+=Zw~2B&+,<o,<w~,o2B++=3BB+"3BA+"3BB+"3B+"2B'+*[w~,<[w~[,<,<,<,<,~,\QBZw~2B++=2BE+1Zw~,<[w~,<,<,<,<,~,2B++=2B%+:[w~[2B+9[w~Z,<,	*2B+9[w~Z2B+Z+=2B'+=Zw~2B++=ZZ&Zw~,+Zp2B+BZ+,<,<E2B+G,<p,<E3B+HZ(+Z%Zp,+Zw-,+O3B(+M2B"+b,<
,<,o+bZw3B#+b3B$+b3B$+b2B%+T+b3BB+X3BB+X3BA+X2B+_Zw,<[wZ,<[w~[,<,<,J,,+c2B'+`+b,<n,<w,oZ%Zw,+,<,<,<w~,<-,<w~
XBw2B+i ZQD,<w~,<ZwZwQD,\+$&mH<GC
 q~`@"P A$!HJ%)*
"AD^GbEEBXaA $(.((@@PBAQM!h! dX$)("(*"
"iPS+ TB(JC0
I`&%Gl|CE*HA{0(XJ$
FCUAPDe&	LZ"a	@H@Q
A2  $
(!I0$) A(P B
*$
BI%R]$"EdMA

Q~	
+!,+
bbBdD !JJ

h(32
"
"T^@R8@RrdD2n*UH&K_G+K?J}$ GODb&3	!)	RbHf bfd<IA*BUD%|~,(*'~P!TDCCBu "@DQP@(

B "	@ Q$<O
 DdH$" 1HDL*F@	BH@ 1BIL+@xiS&!	`@AP
0	 !BS
1*@bA$KwA
H	0$61A.UJV@X B
j	"*e)@H NBHNB!		a DB b !`POB ~P`!p Mp_`!6D)(BR7El%+5o?{
~&8H'AJbC-@i'd"e
(@DY4+].Z"i7p>77GH	s`\Z0*B
!U*`"@ P#B0`H"I0$"Bd4pCEX@>.
~A`#D((#-P?7~'l
1(MATCHBLOCK#0 . 1)
(VARIABLE-VALUE-CELL MATCHSTATS . 12)
(VARIABLE-VALUE-CELL EXPR . 15)
(VARIABLE-VALUE-CELL FAULTFN . 5393)
(VARIABLE-VALUE-CELL PATGENSYMVARS . 20)
(VARIABLE-VALUE-CELL CLISPCHANGE . 38)
(VARIABLE-VALUE-CELL VARS . 5378)
(VARIABLE-VALUE-CELL INASOME . 2049)
(VARIABLE-VALUE-CELL LISTPCHECK . 2568)
(VARIABLE-VALUE-CELL CHECKLENGTH . 2521)
(VARIABLE-VALUE-CELL CHECKINGLENGTH . 3549)
(VARIABLE-VALUE-CELL WATCHPOSTPONELST . 3340)
(VARIABLE-VALUE-CELL WMLST . 1399)
(VARIABLE-VALUE-CELL MAXCDDDDRS . 3566)
(VARIABLE-VALUE-CELL SIMPLE.PREDICATES . 1904)
(VARIABLE-VALUE-CELL POSTPONEDSETQS . 1966)
(VARIABLE-VALUE-CELL LASTEFFECTCANBENIL . 1972)
(VARIABLE-VALUE-CELL POSTPONEDRPLACS . 2001)
(VARIABLE-VALUE-CELL #LIST . 5396)
(VARIABLE-VALUE-CELL #LISTUSED . 5418)
(VARIABLE-VALUE-CELL MUSTRETURN . 2089)
(VARIABLE-VALUE-CELL PATNONNILFUNCTIONS . 2558)
(VARIABLE-VALUE-CELL PATVARSNIL . 2649)
(VARIABLE-VALUE-CELL NEVERNILFUNCTIONS . 2667)
(VARIABLE-VALUE-CELL GENSYMVARLIST . 2840)
(VARIABLE-VALUE-CELL SUBLIST . 3285)
(VARIABLE-VALUE-CELL BINDINGS . 3264)
(VARIABLE-VALUE-CELL MATCHEXPRESSION . 4153)
(VARIABLE-VALUE-CELL LOCALDECLARATION . 4190)
(VARIABLE-VALUE-CELL COMMENTFLG . 4683)
(VARIABLE-VALUE-CELL NORMALCOMMENTSFLG . 4686)
(VARIABLE-VALUE-CELL PATTERNREPLACEOPRS . 4916)
(VARIABLE-VALUE-CELL CLISPCHARRAY . 5135)
(VARIABLE-VALUE-CELL PATTERNINFIXES1 . 5321)
(VARIABLE-VALUE-CELL DEFAULTLST . 5643)
(VARIABLE-VALUE-CELL SKORLST3 . 5443)
(VARIABLE-VALUE-CELL VARDEFAULT . 5271)
(VARIABLE-VALUE-CELL PATCHARS . 5316)
(VARIABLE-VALUE-CELL SPELLINGS2 . 5336)
(VARIABLE-VALUE-CELL USERWORDS . 5351)
(VARIABLE-VALUE-CELL PATTERNCHARRAY . 5433)
MAKEMATCH
*MAKEMATCH*
((UNBOXED-NUM . 1) VARIABLE-VALUE-CELL MATCHEXPRESSION . 0)
(NIL)
(LINKED-FN-CALL . GETLOCALDEC)
(VARIABLE-VALUE-CELL LOCALDECLARATION . 0)
(VARIABLE-VALUE-CELL GENSYMVARLIST . 0)
(NIL VARIABLE-VALUE-CELL #LIST . 0)
(NIL VARIABLE-VALUE-CELL #LISTUSED . 0)
(NIL VARIABLE-VALUE-CELL BINDINGS . 0)
(NIL VARIABLE-VALUE-CELL CHECKLENGTH . 0)
(NIL VARIABLE-VALUE-CELL LISTPCHECK . 0)
(NIL VARIABLE-VALUE-CELL VARDEFAULT . 0)
(NIL VARIABLE-VALUE-CELL PATVARSNIL . 0)
NIL
(NIL VARIABLE-VALUE-CELL POSTPONEDRPLACS . 0)
(NIL VARIABLE-VALUE-CELL POSTPONEDSETQS . 0)
(T VARIABLE-VALUE-CELL LASTEFFECTCANBENIL . 0)
(NIL VARIABLE-VALUE-CELL MUSTRETURN . 0)
(NIL VARIABLE-VALUE-CELL WMLST . 0)
(NIL VARIABLE-VALUE-CELL WATCHPOSTPONELST . 0)
(NIL VARIABLE-VALUE-CELL SUBLIST . 0)
NIL
(NIL VARIABLE-VALUE-CELL MATCHEFFECTS . 251)
NIL
NIL
(NIL VARIABLE-VALUE-CELL INASOME . 0)
PATCHECKLENGTH
PATLISTPCHECK
PATVARDEFAULT
PATVARSMIGHTBENIL
match
with
MATCH
(NIL)
(LINKED-FN-CALL . DWIMIFY0?)
WITH
70
((WITH) . 0)
(NIL)
(LINKED-FN-CALL . FIXSPELL)
(NIL)
(LINKED-FN-CALL . FIXSPELL1)
(NIL)
(LINKED-FN-CALL . /ATTACH)
NOWITH
->
=>
"Expression after pattern not preceded by => or ->"
"Bad arg to MAKEMATCH"
HELP
(NIL)
(LINKED-FN-CALL . APPEND)
(NIL)
(LINKED-FN-CALL . DREVERSE)
TOPREPLACE
(NIL)
(LINKED-FN-CALL . MKPROGN)
(NIL)
(LINKED-FN-CALL . NCONC)
RETURN
(VARIABLE-VALUE-CELL INASOME . 0)
(T VARIABLE-VALUE-CELL CHECKINGLENGTH . 0)
$
--
=
==
'
SUBPAT
~
*ANY*
!
$=
@
FASTINASOME
&
OLD
NIL
NIL
(NIL VARIABLE-VALUE-CELL ZLENFLG . 796)
(0 VARIABLE-VALUE-CELL SKIPEDLEN . 1536)
NIL
"INASOME mismatch"
"Two $ or -- patterns in a row, ambiguous"
1
(NIL VARIABLE-VALUE-CELL CHECKINGLENGTH . 0)
CDR
((& $ --) . 0)
((= == ') . 0)
DUMMY
((EQ EQUAL EQP STREQUAL) . 0)
EQ
ASSOC
SASSOC
"INASOME mismatch"
INASOME
(VARIABLE-VALUE-CELL INASOME . 0)
(VARIABLE-VALUE-CELL WATCHPOSTPONELST . 0)
NIL
NIL
NIL
NIL
"bad pattern tail"
((INASOME FASTINASOME NIL) . 0)
FOUND
"Invalid '!'"
((TAILVAR VAR TEMVAR ONVAR FINALLY) . 0)
((PROG NIL (SETQ TEMVAR ONVAR) (SETQ TAILVAR VAR) $$LP (COND ((NLISTP TEMVAR) (
RETURN FINALLY)) ((OR (NLISTP TAILVAR) (NOT (EQUAL (CAR TEMVAR) (CAR TAILVAR)))
) (RETURN))) (SETQ TAILVAR (CDR TAILVAR)) (SETQ TEMVAR (CDR TEMVAR)) (GO $$LP))
 . 0)
(NIL)
(LINKED-FN-CALL . SUBPAIR)
(T VARIABLE-VALUE-CELL CHECKLENGTH . 0)
!AT
(NIL)
(LINKED-FN-CALL . LAST)
(T VARIABLE-VALUE-CELL CHECKLENGTH . 0)
*GLITCH
"Invalid use of ! in pattern"
(0 VARIABLE-VALUE-CELL SKIPEDLEN . 0)
NIL
NIL
NIL
((= == ' *ANY* @ SUBPAT) . 0)
(($1 &) . 0)
QUOTE
"MATCHELT invalid pattern"
<-
_
%
"MATCH FUNARG MISMATCH"
(NIL)
(LINKED-FN-CALL . RPLACA)
WATCH
*
(NIL)
(LINKED-FN-CALL . EQUAL)
CONS
LIST
CAR
RPLACA
RPLACD
LDIFF
RPLNODE2
0
(NIL)
(LINKED-FN-CALL . LENGTH)
$>
$<
"PATLEN invalid pattern"
((& NIL T) . 0)
((& NIL $ --) . 0)
((MAYBE, MAYBE NOT) . 0)
CLISPCLASS
(NIL)
(LINKED-FN-CALL . GETP)
((+ * ^ RPLACA RPLACD / - +-) . 0)
"CANMATCHNIL invalid pattern"
"CANMATCHNIL invalid pattern"
"Invalid pattern REPLACEIN"
CROPS
((CAR CDR) . 0)
(NIL)
(LINKED-FN-CALL . GENSYM)
LAMBDA
(VARIABLE-VALUE-CELL SUBLIST . 0)
NIL
PROG
REPLACE
NARGS
(NIL)
(LINKED-FN-CALL . NARGS)
NLEFT
LAST
(NIL)
(LINKED-FN-CALL . REVERSE)
NCONC1
NCONC
NOT
NULL
"NULL check of T or NIL; possibly a bad pattern"
NEQ
LISTP
NLISTP
NTH
FNTH
OR
IPLUS
SETQ
AND
ZEROP
EQLENGTH
EQP
STREQUAL
EQUAL
(NIL)
(LINKED-FN-CALL . SUBST)
*QPROG*
((UNBOXED-NUM . 1) VARIABLE-VALUE-CELL VARS . 0)
" a SOME with null terminator"
BACKTRACK
MEMB
MEMBER
SOME
FUNCTION
2
(NIL)
(LINKED-FN-CALL . EQLENGTH)
3
$$SOMELP
COND
((GO $$SOMELP) . 0)
((RETURN) . 0)
"This pattern contains an empty test after a -- or $"
CLISP
"The pattern matcher is confused by what it thinks is CLISP
within a pattern - please recode this pattern"
BADNOT
"Cannot negate a non-element pattern"
TWO!
"Two !'s in a row"
BAD*
"invalid *"
BAD#
"invalid #"
BADELT
"Pattern item not atom or list "
"no WITH"
AMBIG
"ambiguous pattern"
"!atom in middle of pattern"
"bad pattern"
(NIL)
(LINKED-FN-CALL . LISPXPRIN1)
(NIL)
(LINKED-FN-CALL . LISPXTERPRI)
" at:    "
(NIL)
(LINKED-FN-CALL . LISPXPRINT)
" in:    "
(NIL)
(LINKED-FN-CALL . ERROR!)
"error in Pattern Match"
VALUE
(NIL)
(LINKED-FN-CALL . CLISPLOOKUP0)
LISPFN
CLISPCLASSDEF
PROGN
(NIL)
(LINKED-FN-CALL . LDIFF)
FLAST
FMEMB
FASSOC
IEQP
"bad input"
(NIL VARIABLE-VALUE-CELL DEFAULTLST . 0)
%.
(NIL)
(LINKED-FN-CALL . GETCOMMENT)
"*ANY*/*EVERY* construct too compicated"
(NIL)
(LINKED-FN-CALL . /RPLNODE)
(NIL)
(LINKED-FN-CALL . PACK)
(NIL)
(LINKED-FN-CALL . /RPLACA)
&@
$$
$1
$2
$3
$4
$5
$6
$7
$8
$9
(NIL)
(LINKED-FN-CALL . NTHCHAR)
"#"
(NIL)
(LINKED-FN-CALL . STRPOS)
(NIL)
(LINKED-FN-CALL . NCHARS)
-1
(NIL)
(LINKED-FN-CALL . SUBSTRING)
(NIL)
(LINKED-FN-CALL . MKATOM)
(NIL)
(LINKED-FN-CALL . STRPOSL)
"MAKEDEFAULT"
"#"
(NIL)
(LINKED-FN-CALL . DUNPACK)
"*"
SET
APPLY*
$1@
"invalid PATTERNVARDEFAULT"
?
(NIL)
(LINKED-FN-CALL . /RPLNODE2)
NOBIND
"NOT A VARIABLE"
(NIL)
(LINKED-FN-CALL . ERROR)
GETD
"missing an expression"
((_ @ = < >) . 0)
(NIL)
(LINKED-FN-CALL . RPLNODE)
((--) . 0)
(($) . 0)
"Cannot negate this type of pattern"
(NIL)
(LINKED-FN-CALL . NLEFT)
(SKNLA SKNA URET6 KNOB URET7 SKSTP SMALLT SKLA SKNSTP URET1 SKNNM URET2 IUNBOX 
COLLCT ALIST URET4 LIST3 FMEMB MKN SKNM ASZ ALIST2 CONS21 CONSS1 SKNLST URET5 
URET3 LIST2 CONSNL ALIST3 BHC CONS SKLST LIST4 KNIL KT SKNAR BINDB BLKENT 
ENTER1)SC~T5HK $mzPVN]PJPhj
)TL@	.JiBOgLHg#% okh+eb(NY@SRHhLhdL8bKp-5H*10
0 
/h
|.8
h,P
_)0
I(p
E'
&$(
 #0
"
!0
	!
 (	xx	r	m0	NP	H@	A	8	.X	+:{*XL0
P!dS"!p|0fp\8WPL82hhm(fl8ZiXJh=fp4f.dx%dc0``v]@j\xe\(_[HYZXSY GWp1PhP0~O8k28
X)`	^X	U8	Q`-hzwH8v`5v(,u$sHppnPqmp8	!x
ApS(M(mh@gP9f*cXbXL aKP}`eQhBp;/U()TH HcxW
IDX*T Q zNpmHPA[(g|XGuXjk Af8'd 
cP^X;UhW
\^Jpp4H0h
7&@
X	0|wVj0$: K8Xc(`MTb`bJC.x=w05ephTP!x	P	o@5(v,pBJ}8j|`GT@gKH8C\-PpVx
S`_kh0] <@96382K 1Fx40"hKVhKb0MY(7VH/SHM@x&X!"0Yp7QmBP;HV756 /4h-0
L'H	y8	dp	B@wXq(jZ`H(x86+x.(J@SG0E!!h q@Q07@*!d(\HxFG4F(y= `;p14Xif02<H}pjz@3l0^f+e\pUU#t0c
[zH'y8Ppt`}`o$}0HhZhEXRhd*='3ya`_>W@R {NppK82D B8
s-h
V*
D(	l	Xr0]e[Sl@(=.m(=&Idi ?a0{]cRX7F(DBP[8x96(15010/(F01pzrxb `AHx8@$0izxYU8 Sp<[*!P8N 2I8-__@@V(CH8`
Z&POPPq
m hlXekXGhHBh>gH:g7f@0ep.e`)dp&d`ca`aP^k\he\0_[WZ IYAW@3V(-UH+TH SxS0S R	QOXzN pNjL^KHWJIH@<G03E@$CPAX
@H?Xw>Xq=pn=8c<W:0Q9HI7H65'4P"4 3h2X0p+P'`;' 2% #h#H#8#(#"!8ch\pLxCP90.
`8HxtxnXiHa
xQ	HF=h6X*)p p|8\{ WzXRyXJx8v/u`)tH#spq`p@vnPllxgk@HhX>g`,dH`h|_0r^pZ(PX8@V00U@+ThS@RxQx
PxP(~NxvN0nM(gLP^K0XJ`TJ0QIpHIAFx4Eh+EBhA@~?@{?0s<pb;hS9PB7(46@05h.5@)4 !3x21@1(0H/p
|-x
l*x
V*X
S*
J(
='
7&H
.%H
&$H
"
 X
 	~
	v 	qx	n 	i(	ax	^0	L	*	#	x	0}@{`u8nPkdS
0M	HJ	>@1x,%
`(}z`Oy(Hx@@w07ux.u0
qHqxlX_kVj8Lh;g6f@/dH aP_P|_ t]Hk\Xc[`WZ8IY9VX5VH*U$R0RPpLQI@:FH2E %CB@@`?h|?8w>hh<ha:hR98F7`;7 ,4h3(1h/p{.0m-Hi,Pc,\* F(@='86%p+%'$h#"  (nx] VPFp@pp@zwPsdh[
hV	H=H3(IV8wNXqM``IGHp9= X&h 7@`@
x}KpPK]QOXhLpfA(W: 3H+p
M'
+$X
!`

p	pX	bX	Cx	*x	hFP8x @0~@j{8Iw@5tnl MgX5dX!_`x]XdY(XE(&C ?xc6p2Xh,`<$8p \xP{
X3 xk`(

MAKEMATCH BINARY
-.,<,~(VARIABLE-VALUE-CELL MATCHEXPRESSION . 0)
(PATTERN . 1)
MAKEMATCH
(NIL)
(LINKED-FN-CALL . MATCHBLOCK)
(ENTERF)
(PRETTYCOMPRINT MATCHCOMS)
(RPAQQ MATCHCOMS ((FNS MAKEMATCH QMATCHSUBPAT QMATCHWM QMATCH$ QMATCH! QMATCH$=
 QMATCHELT1 QMATCHELT SIMPLEFN DOSIDE CHECKSETQ DOREPLACE DOREPLACE1) (FNS 
PATLEN $? ELT? SIMPLELT? ARB? NULLPAT? NILPAT CANMATCHNIL CANMATCHNILLIST 
REPLACEIN) (FNS EASYTORECOMPUTE GENSYML MAKESUBST DOSUBST DOSUBST1 SUBSTVAR 
BINDVAR SELFQUOTEABLE FINDIN0 FINDIN1 DOWATCH PATNARGS) (FNS QNLEFT QNOT QNULL 
QNOT1 QNOTLESSPLENGTH QNTH QOR QPLUS QREPLACE QSETQ MKAND QCAR QCDR QEQ 
QEQLENGTH QEQUAL QLAST QAPPLY* QLDIFF QPROG QFOR QLISTP QNCONC) (FNS PATERR 
PATHELP LOOKLIST VALUELOOKUP LOOK) (FNS MKAND2 CHECKSLISTP EQUALUNCROP) (FNS 
PATPARSE PATPARSE1 PATUNPACKINFIX1 PARSEDEFAULT VARCHECK PATUNPACK 
PATUNPACKINFIX PATGETFNNAME PATGETEXPR PATPARSEAT MAKE!PAT MAKESUBPAT NEGATEPAT
 PACKLDIFF) (VARS PATCHARS PATTERNINFIXES PATTERNINFIXES1 PATTERNREPLACEOPRS 
PATTERNITEMS NEVERNILFUNCTIONS PATNONNILFUNCTIONS (PATTERNCHARRAY (MAKEBITTABLE
 (NCONC (MAPCAR PATCHARS (QUOTE CAAR)) (MAPCAR PATTERNITEMS (QUOTE CAR))))) 
PATGENSYMVARS (PATVARDEFAULT (QUOTE =)) MAXCDDDDRS (PATCHECKLENGTH T) (
PATLISTPCHECK NIL) (PATVARSMIGHTBENIL T)) (VARS PATCHARS PATTERNINFIXES 
PATTERNINFIXES1 PATTERNREPLACEOPRS PATTERNITEMS NEVERNILFUNCTIONS 
PATNONNILFUNCTIONS SIMPLE.PREDICATES (PATTERNCHARRAY (MAKEBITTABLE (NCONC (
MAPCAR PATCHARS (QUOTE CAAR)) (MAPCAR PATTERNITEMS (QUOTE CAR))))) 
PATGENSYMVARS) (P (OR (NEQ (CAR (QUOTE MATCHSTATS)) (QUOTE NOBIND)) (SETQ 
MATCHSTATS))) (VARS PATVARDEFAULT MAXCDDDDRS (PATCHECKLENGTH T) (PATLISTPCHECK 
NIL) (PATVARSMIGHTBENIL T)) (BLOCKS * MATCHBLOCKS)))
(RPAQQ PATCHARS ((($ <) T $<) (($ >) T $>) (($ =) T $=) ((') T ') ((!) T !) ((=
 =) T ==) ((=) T =) ((~) T ~) ((< -) NIL <-) ((@) NIL @) ((_) NIL _) (($) T $))
)
(RPAQQ PATTERNINFIXES (((_) T _) ((< -) T <-) ((@) T @)))
(RPAQQ PATTERNINFIXES1 (((_) NIL _) ((< -) NIL <-) ((@) NIL @)))
(RPAQQ PATTERNREPLACEOPRS ((_ _ %) (__ <- ->) (_!!_!_ _ %) (<- <- ->)))
(RPAQQ PATTERNITEMS ((&) (--) ($$ --) (T) (NIL) (&) (--) ($) ($1 &) ($2 ($= . 2
)) ($3 ($= . 3)) ($4 ($= . 4)) ($5 ($= . 5)) ($6 ($= . 6))))
(RPAQQ NEVERNILFUNCTIONS (CONS LIST QUOTE ABS ADD1 SUB1 CONCAT REMAINDER 
FREMAINDER IREMAINDER LOGOR LOGAND LOGXOR))
(RPAQQ PATNONNILFUNCTIONS (GETD NUMBERP STRINGP ZEROP LISTP SMALLP))
(RPAQ PATTERNCHARRAY (MAKEBITTABLE (NCONC (MAPCAR PATCHARS (QUOTE CAAR)) (
MAPCAR PATTERNITEMS (QUOTE CAR)))))
(RPAQQ PATGENSYMVARS (GENSYMVARS: $$1 $$2 $$3 $$4 $$5 $$6 $$7 $$8 $$9 $$10 $$11
 $$12 $$13 $$14 $$15 $$16 $$17))
(RPAQQ PATVARDEFAULT =)
(RPAQQ MAXCDDDDRS 5)
(RPAQ PATCHECKLENGTH T)
(RPAQ PATLISTPCHECK NIL)
(RPAQ PATVARSMIGHTBENIL T)
(RPAQQ PATCHARS ((($ <) T $<) (($ >) T $>) (($ =) T $=) ((') T ') ((!) T !) ((=
 =) T ==) ((=) T =) ((~) T ~) ((< -) NIL <-) ((@) NIL @) ((_) NIL _) (($) T $))
)
(RPAQQ PATTERNINFIXES (((_) T _) ((< -) T <-) ((@) T @)))
(RPAQQ PATTERNINFIXES1 (((_) NIL _) ((< -) NIL <-) ((@) NIL @)))
(RPAQQ PATTERNREPLACEOPRS ((_ _ %) (__ <- ->) (_!!_!_ _ %) (<- <- ->)))
(RPAQQ PATTERNITEMS ((&) (--) ($$ --) (T) (NIL) (&) (--) ($) ($1 &) ($2 ($= . 2
)) ($3 ($= . 3)) ($4 ($= . 4)) ($5 ($= . 5)) ($6 ($= . 6))))
(RPAQQ NEVERNILFUNCTIONS (CONS LIST QUOTE ABS ADD1 SUB1 CONCAT REMAINDER 
FREMAINDER IREMAINDER LOGOR LOGAND LOGXOR))
(RPAQQ PATNONNILFUNCTIONS (GETD NUMBERP STRINGP ZEROP LISTP SMALLP))
(RPAQQ SIMPLE.PREDICATES (LISTP LITATOM NLISTP CAR CDR NULL))
(RPAQ PATTERNCHARRAY (MAKEBITTABLE (NCONC (MAPCAR PATCHARS (QUOTE CAAR)) (
MAPCAR PATTERNITEMS (QUOTE CAR)))))
(RPAQQ PATGENSYMVARS (GENSYMVARS: $$1 $$2 $$3 $$4 $$5 $$6 $$7 $$8 $$9 $$10 $$11
 $$12 $$13 $$14 $$15 $$16 $$17))
(OR (NEQ (CAR (QUOTE MATCHSTATS)) (QUOTE NOBIND)) (SETQ MATCHSTATS))
(RPAQQ PATVARDEFAULT ')
(RPAQQ MAXCDDDDRS 5)
(RPAQ PATCHECKLENGTH T)
(RPAQ PATLISTPCHECK NIL)
(RPAQ PATVARSMIGHTBENIL T)
(RPAQQ MATCHBLOCKS ((MATCHBLOCK (ENTRIES MAKEMATCH) (GLOBALVARS PATCHARS 
MAXCDDDDRS PATNONNILFUNCTIONS PATGENSYMVARS PATTERNREPLACEOPRS PATTERNINFIXES1 
PATTERNCHARRAY NEVERNILFUNCTIONS MATCHSTATS SIMPLE.PREDICATES SKORLST3 
USERWORDS SPELLINGS2 CLISPCHARRAY NORMALCOMMENTSFLG COMMENTFLG) (LOCALFREEVARS 
WATCHPOSTPONELST SUBLIST INASOME CHECKINGLENGTH WMLST LASTEFFECTCANBENIL 
POSTPONEDSETQS MUSTRETURN BINDINGS GENSYMVARLIST SKIPEDLEN ZLENFLG 
LOCALDECLARATION MATCHEXPRESSION MATCHEFFECTS CHECKLENGTH #LIST #LISTUSED 
PATVARSNIL POSTPONEDRPLACS LISTPCHECK DEFAULTLST VARDEFAULT) (SPECVARS EXPR 
FAULTFN VARS CLISPCHANGE) MAKEMATCH QMATCHSUBPAT QMATCHWM QMATCH$ QMATCH! 
QMATCH$= QMATCHELT1 QMATCHELT SIMPLEFN DOSIDE CHECKSETQ DOREPLACE DOREPLACE1 
PATLEN $? ELT? SIMPLELT? ARB? NULLPAT? NILPAT CANMATCHNIL CANMATCHNILLIST 
REPLACEIN EASYTORECOMPUTE GENSYML MAKESUBST DOSUBST DOSUBST1 SUBSTVAR BINDVAR 
SELFQUOTEABLE FINDIN0 FINDIN1 DOWATCH PATNARGS QNLEFT QNCONC QNOT QNULL QNOT1 
QNOTLESSPLENGTH QNTH QOR QPLUS QREPLACE QSETQ MKAND QCAR QCDR QEQ QEQLENGTH 
QEQUAL QLAST QAPPLY* QLDIFF QPROG QFOR QLISTP PATERR PATHELP LOOKLIST 
VALUELOOKUP LOOK MKAND2 CHECKSLISTP EQUALUNCROP PATPARSE PATPARSE1 
PATUNPACKINFIX1 PARSEDEFAULT VARCHECK PATUNPACK PATUNPACKINFIX PATGETFNNAME 
PATGETEXPR PATPARSEAT MAKE!PAT MAKESUBPAT NEGATEPAT PACKLDIFF)))
NIL
PROP MACRO SCRATCHASH)) (LOCALVARS . T) (BLOCKS (
NIL MSOUTPUT MSCLOSEFILES MSNOTICEFILE MSDIFF MSERASE MSERASE1 MSERASE2 
PARSERELATION GETRELATION MAPRELATION TESTRELATION GETRELATIONQ TESTRELATIONQ 
GETRELS MSWORDNAME PARSERELATION1 ADDHASH SUBHASH MAKETABLE GLOBALVARP MSUNION 
MSREHASH GETWORDTYPE MSHELP MSMSG MSMSG1 MSINIT DUMPDATABASE DUMPDATABASE1 
TEMPLATE GETTEMPLATE SETTEMPLATE) (MSANALYZEBLOCK (ENTRIES UPDATEFN 
UPDATECHANGED CALLS FREEVARS VARS READATABASE MSSHOWUSE MSGETDEF MSUPDATEFN1 
ALLCALLS UPDATECHANGED1) (SPECVARS SHOWTYPE SHOWSET SHOWEDIT PARENT ANYFOUND) (
LOCALFREEVARS FNNAME CALLSFLG VARS ERRORS FNDEF INCLISP ONLYRELS PARENTCONTEXT 
TOPVARS) ALLCALLS UPDATEFN MSCOLLECTDATA MSUPDATEFN1 MSGETDEF MSVIRGINFN 
MSUPDATE MSINITFNDATA MSPRGE MSPRGCALL MSBINDVAR MSPRGDWIM MSPRGRECORD MSPRGERR
 MSPRGTEMPLATE1 MSPRGTEMPLATE MSPRGLAMBDA MSPRGLST UPDATECHANGED UPDATECHANGED1
 MSSHOWUSE MSFIND ADDTO CALLS CALLS3 COLLECTFNDATA FREEVARS VARS READATABASE (
NOLINKFNS . T) TESTRELS GETRELS MSNLAMBDACHECK NLAMBDAFNP) (MSCHECKBLOCKS 
MSCHECKBLOCKS MSCHECKBLOCK PRINTERROR MSCHECKVARS1 UNECCSPEC NECCSPEC SPECVARP 
SHORTLST DOERROR (LOCALFREEVARS SEEN BLKFNS SEEN V ERRORS SFLG LF 
BLKAPPLYCALLERS U LF1 SHOULDBESPECVARS NOVARSFLG) (NOLINKFNS . T) (SPECVARS 
SPECVARS LOCALVARS RETFNS BLKLIBRARY NOLINKFNS LINKFNS LOCALFREEVARS 
DONTCOMPILEFNS BLKAPPLYFNS ENTRIES) TESTRELS GETRELS) (MSPATHSBLOCK MSPATHS 
MSPATHS1 MSPATHS2 MSPATHS3 MSPATHS4 DASHES DOTABS BELOWMARKER MSPATHSPRINTFN (
ENTRIES MSPATHS MSPATHS3) (LOCALFREEVARS TABS NAMED LINENUM BELOWCNT LL SEEN TO
 NOTRACE MARKING SEPARATE INVERTED AVOIDING) (GLOBALVARS MSCRATCHASH) TESTRELS)
 (MASTERSCOPEBLOCK (ENTRIES MASTERSCOPE MASTERSCOPEXEC MSINTERPRET MSMEMBSET 
MSHASHLIST MSHASHLIST1 MSLISTSET MSDESCRIBE MSSETUP SETSYNONYM MSINTERPA 
MSTRYSPELL %.) (GLOBALVARS INITWORDLIST) (RETFNS MASTERSCOPE1 MSTRYPARSE) (
SPECVARS LISPXVALUE SETTYPE SETDET BADMARKS PREVVALUE V OTHERSET SHOWSET 
NEEDUPDATE SPELLING) (LOCALFREEVARS CONJUNCTIONS LASTADVERB LASTPARSED NEXTWORD
 PARSED RESETS S SEEKING SENTENCE) (BLKAPPLYFNS COMMAND SETPHRASE SETREP VERB 
VERBED PREDICATE PATHOPTIONS DOESPHRASE BLOCKER) (NOLINKFNS . T) MASTERSCOPE 
MASTERSCOPEXEC MASTERSCOPE1 MSPARSE SEEK MSSEEKPHRASE EATWORD GETNEXTWORD 
CHECKSYNONYM SEEKWORD SEEKTYPE MSTRYPARSE FAIL CAN'T MSTRYSPELL TRYSPELLTYPE 
MSRESPELL COMMAND SETPHRASE SETREP VERB VERBED BLOCKER PREDICATE DOESPHRASE 
PATHOPTIONS KNOWNSET FIXUPTYPES FIXVERBSETTYPE VERBTYPE SETKNOWN SETSETTYPE 
NEGATESET MSJOINSET MATCHRATING SIMPLESET SUBJTYPE OBJTYPE JOINDETS JOINTYPES 
TYPEMATCHRATING SETSYNONYM MSWORD? SETWORDTYPE MSSETUP GETWORDTYPE 
MSINTERPRETSET MSINTERPA MSGETBLOCKDEC GETVERBTABLES LISTHARD MSMEMBSET 
MSLISTSET CHECKPATHS ONFILE MSDESCRIBE MSDESCRIBE1 FMAPRINT MSINTERPRET 
MSCHECKEMPTY CHECKFORCHANGED MSSOLVE MSHASHLIST MSHASHLIST1 MSPRINTHELPFILE 
QUOTEDWORD MSSPLST %. VERBNOTICELIST TESTRELS GETRELS) (NIL NEWFILE?USERFN 
MARKCHANGED CHANGERECORD CHANGEMACRO CHANGEI.S. NEEDUNSAVE UNSAVEFNS)) (
DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDVARS (NLAMA %. 
SEEKWORD SEEK) (NLAML TESTRELATIONQ GETRELATIONQ)))))
(RPAQ MSDBEMPTY T)
(RPAQQ MSDATABASEINIT ((CALL 25 . 50) (BIND 10 . 10) (NLAMBDA 10 . 10) (NOBIND 
10) (RECORD 20 . 10) (CREATE 2 . 2) (FETCH 10 . 10) (REPLACE 10 . 10) (REFFREE 
10 . 1) (REF 10 . 25) (SETFREE 1 . 1) (SET 20 . 30) (SMASHFREE 1 . 1) (SMASH 1 
. 1) (PROP 1 . 1) (TEST 1 . 1) (TESTFREE 1 . 1) (PREDICATE 10 . 10) (EFFECT 10 
. 10) (CLISP 10 . 10) (SPECVARS 10 . 10) (LOCALVARS 10 . 10) (APPLY 10 . 10) (
ERROR 10 . 10) (LOCALFREEVARS 10 . 10) (0 2 . 2) (1 2 . 2) (2 2 . 2) (3 2 . 2) 
(USERTEMPLATES NIL . T)))
(RPAQQ INITIALTEMPLATES (((CALL (REMOTE (IF LITATOM CALL LAMBDA)) (IF LITATOM 
EVAL NIL)) FUNCTION) ((IF (EQ (CADR EXPR) (QUOTE ASSERT:)) (NIL NIL .. (IF 
LISTP (@ (CDR EXPR) (LIST (QUOTE ..) (MSWORDNAME (CAR EXPR))))))) *) ((NIL (
BOTH (.. (IF LISTP (NIL EVAL .. EFFECT) NIL)) (.. (IF LISTP (BIND) BIND))) .. (
IF LISTP EFFECT)) PROG RESETVARS) ((CALL EVAL) XNLSETQ NLSETQ ERSETQ) ((CALL 
EVAL EVAL . PPE) RESETFORM) ((CALL EVAL EVAL FUNCTIONAL FUNCTIONAL . PPE) MAP2C
) ((CALL EVAL EVAL SMASH . PPE) /DSUBST DSUBST) ((CALL EVAL FUNCTION FUNCTION .
 PPE) MAPCAR MAPCON MAPCONC MAPLIST SUBSET EVERY NOTEVERY ANY NOTANY SOME MAPC 
MAP) ((CALL EVAL FUNCTIONAL . PPE) MAPHASH) ((CALL EVAL PROP . PPE) GETP GETLIS
 GET GETPROP LISTGET LISTGET1 FGETP) ((CALL EVAL PROP EVAL . PPE) PUT /PUT 
PUTPROP /PUTPROP LISTPUT LISTPUT1 FPUTPROP FPUT) ((CALL EVAL SMASH . PPE) 
/ATTACH ATTACH) ((CALL FUNCTIONAL . PPE) MAPATOMS) ((CALL FUNCTIONAL .. EVAL) 
APPLY* BLKAPPLY* APPLY BLKAPPLY ENVAPPLY) ((CALL NIL .. (@ EXPR (SELECTQ (CAR 
EXPR) ((CQ CQ2 CV CV2) (QUOTE (NIL .. EVAL))) (VAR (QUOTE (NIL (.. NIL EVAL))))
 (SETQ (QUOTE (NIL SET))) NIL))) ASSEMBLE) ((CALL EVAL SMASH . PPE) DREMOVE 
/DREMOVE) ((CALL SET EVAL EVAL . PPE) RESETVAR) ((CALL SET EVAL . PPE) SETN) ((
CALL SMASH . PPE) DREVERSE) ((CALL SMASH EVAL . PPE) RPLACD /RPLACD RPLACA 
/RPLACA RPLNODE2 /RPLNODE2 FRPLACD FRPLNODE2 TCONC /TCONC LCONC /LCONC NCONC1 
/NCONC1 FRPLACA) ((CALL SMASH EVAL EVAL . PPE) RPLNODE FRPLNODE /RPLNODE) ((
CALL SMASH FUNCTIONAL . PPE) SORT) ((CALL (BOTH SET EVAL) . PPE) ADD1VAR 
SUB1VAR) ((CALL (IF NULL NIL (IF ATOM SET EVAL)) EVAL . PPE) RESETSAVE) ((CALL 
(IF (EQ (CAR EXPR) (QUOTE QUOTE)) (NIL SET) EVAL) .. EVAL) SET SAVESET 
SETTOPVAL /SETTOPVAL SETATOMVAL /SETATOMVAL) ((CALL (IF (EQ (CAR EXPR) (QUOTE 
QUOTE)) (NIL EVAL) EVAL) .. EVAL) GETATOMVAL EVAL EVALV) ((NIL .. TESTRETURN 
RETURN) OR) ((NIL .. TEST RETURN) AND) ((NIL .. EFFECT RETURN) PROGN) ((NIL .. 
(IF CDR (TEST .. EFFECT RETURN) (TESTRETURN . PPE))) COND) ((NIL .. (IF (EQ (
CAR EXPR) (QUOTE LOCALVARS)) (NIL .. LOCALVARS) (IF (EQ (CAR EXPR) (QUOTE 
SPECVARS)) (NIL .. SPECVARS)))) DECLARE) ((NIL RETURN) CLISP% ) ((NIL EVAL . 
PPE) LISTP NLISTP RETURN) ((NIL TEST . PPE) NOT NULL) ((NIL EVAL .. (NIL .. 
EFFECT RETURN) RETURN) SELECTQ) ((NIL EVAL EVAL . PPE) EQ NEQ) ((NIL NIL . PPE)
 QUOTE GO) ((NIL EVAL . PPE) CAR CDR CAAR CADR CDAR CDDR CAAAR CAADR CADAR 
CDAAR CADDR CDADR CDDAR CDDDR CAAAAR CAAADR CAADAR CAADDR CADAAR CADADR CADDAR 
CADDDR CDAAAR CDAADR CDADAR CDADDR CDDAAR CDDADR CDDDAR CDDDDR) ((NIL RETURN ..
 EFFECT) PROG1) ((NIL SET NIL . PPE) SETQQ) ((NIL SET EVAL . PPE) SETQ ADV-SETQ
) ((CALL EVAL (BOTH (@ (QUOTE RPTN) (QUOTE BIND)) RETURN) . PPE) RPTQ)))
(RPAQ MSTEMPLATES (LIST (HARRAY 160)))
(RPAQ USERTEMPLATES (LIST (HARRAY 10)))
(MAPC INITIALTEMPLATES (FUNCTION (LAMBDA (X) (MAPC (CDR X) (FUNCTION (LAMBDA (Y
) (PUTHASH Y (CAR X) MSTEMPLATES)))))))
(AND (EQ LDFLG (QUOTE SYSLOAD)) (SETQQ INITIALTEMPLATES NOBIND))
(PRETTYDEFMACROS (TEMPLATES X (P * (MAPCAR (QUOTE X) (FUNCTION (LAMBDA (FN) (
LIST (QUOTE SETTEMPLATE) (KWOTE FN) (KWOTE (GETTEMPLATE FN)))))))))
(ADDTOVAR PRETTYTYPELST (CHANGEDTEMPLATESLST TEMPLATES "masterscope templates")
)
(ADDTOVAR PRETTYCOMSPLST TEMPLATES)
(ADDTOVAR CHANGEDTEMPLATESLST)
(PUTPROPS TEMPLATES PRETTYTYPE NILL)
(RPAQ MASTERSCOPEDATE "10-AUG-78")
(ADDTOVAR HISTORYCOMS %.)
(RPAQQ CONJUNCTABLE (SETPHRASE PREDICATE DOESPHRASE VERB))
(RPAQQ INITWORDLIST (((CONTAIN CONTAINS CONTAINING CONTAINED) (BIND BINDS 
BINDING BOUND) (CALL CALLS CALLING CALLED) (SET SETS SETTING SET) (SMASH 
SMASHES SMASHING SMASHED) (TEST TESTS TESTING TESTED) (USE USES USING USED) (
REFERENCE REFERENCES REFERENCING REFERENCED) (CREATE CREATES CREATING CREATED) 
(FETCH FETCHES FETCHING FETCHED) (REPLACE REPLACES REPLACING REPLACED) (DECLARE
 DECLARES DECLARING DECLARED)) (((FREELY FREE) USE SET SMASH) ((LOCALLY LOCAL) 
USE SET SMASH BIND DECLARE REFERENCE) ((SOMEHOW) CALL) ((DIRECTLY) CALL) ((
INDIRECTLY) CALL USE)) (((LOCALVARS LOCALVAR) DECLARE) ((SPECVARS SPECVAR) 
DECLARE) ((RECORDS RECORD) USE) ((FIELDS FIELD) USE SET SMASH REFERENCE) ((
PROPERTIES PROPERTY PROP PROPS) USE) ((I.S.OPRS I.S.OPR CLISPWORD CLISPWORDS) 
USE) ((PREDICATE) CALL USE) ((TYPES TYPE) USE)) (((VALUE) CALL USE) ((TESTING) 
CALL USE) ((EFFECT) CALL)) (((RECORD FIELD *) FIELD) ((RECORD FIELDS) FIELDS) (
(FIELD *) FIELD) ((RECORD *) RECORD) ((CLISP WORD) CLISPWORD) ((CLISP WORDS) 
CLISPWORD) ((PROP *) PROPERTY) ((PROPERTY *) PROPERTY) ((ON PATH) ONPATH) ((ON 
THE PATH) ONPATH) ((ON A PATH) ONPATH) ((IN THE WORLD) WORLD) ((IN WORLD) WORLD
) (WORLD ((FUNCTIONS (ON ANY IN FILELST) OR (IN CHANGEDFNSLST)))) ((LOOK AT) 
ANALYZE) (LOOKAT ANALYZE) ((CHANGED ON &) (IN (PROGN (UPDATEFILES) (CDR (
GETPROP (QUOTE 1) (QUOTE FILE)))))) (AMONG (AVOIDING NOT)) (DOESN'T (DOES NOT))
 (DON'T (DO NOT)) (ISN'T (IS NOT)) (AREN'T (ARE NOT)) (FIND SHOW) ((ALL PATHS) 
PATHS) (SOME ANY) (SOMEONE ANY) (ALL ANY) (ANYONE ANY) ((ALL PATHS) PATHS) (
UNDEFINED (FUNCTIONS NOT @ GETD))) ((FUNCTIONS FN FNS FUNCTION) (VARIABLES VAR 
VARS VARIABLE) (RECORDS RECORD) (FILES FILE) (I.S.OPRS I.S.OPR CLISPWORD 
CLISPWORDS) (FIELDS FIELD)) ((FROM PATH) (TO PATH) (AVOIDING PATH) (NOTRACE 
PATH) (MARKING PATH) (OUTPUT PATH) (LINELENGTH PATH) (DOES X DO) (DO X) (IS X) 
(ARE X IS) (AND C) (OR C) (SEPARATE PATH) (LOCALFREEVARS BLOCKS) (SPECVARS 
BLOCKS) (LOCALVARS BLOCKS) (GLOBALVARS BLOCKS) (BLOCKS BLOCKS BLKFNS) (BLOCK 
BLOCKS BLKFNS) (ENTRY BLOCKS ENTRIES) (ENTRIES BLOCKS) (BLKAPPLYFNS BLOCKS) (
BLKLIBRARY BLOCKS) (BLKFNS BLOCKS)) T))
(APPLY (QUOTE MSSETUP) INITWORDLIST)
(AND (EQ LDFLG (QUOTE SYSLOAD)) (SETQQ INITWORDLIST NOBIND))
(RPAQQ MSHELPFILE <LISP>MASTERSCOPE.SYNTAX)
(RPAQ MSFILELST NIL)
(RPAQ MSOPENFILES NIL)
(RPAQQ DATABASECOMS ((E (DUMPDATABASE))))
(RPAQQ INVISIBLEVARS ($$1 $$2 $$3 $$4 $$5 $$6 $$7 $$8 $$9 $$10 $$11 $$12 $$13 
$$14 $$15 $$16 $$17 $$VAL $$TEM $$TEM1 $$TEM2 $$LST1 $$LST2 $$LST3 $$LST4 
$$LST5 $$LST6))
(AND (NEQ LDFLG (QUOTE SYSLOAD)) (MAPC (QUOTE (LTEMPLATE GETRELQ TESTRELQ 
NOTICELIST GETTABLE TESTTABLE PUTTABLE ADDTABLE SUBTABLE MAPTABLE SCRATCHASH 
INCLISP)) (FUNCTION (LAMBDA (X) (PUTHASH X (QUOTE MACRO) USERTEMPLATES)))))
(AND (EQ (GETATOMVAL (QUOTE SWAPPEDTABLES)) (QUOTE NOBIND)) (SETQ SWAPPEDTABLES
))
(RPAQQ MSBLIP "sysout and inform Masinter@PARC")
(RPAQQ MSERRORFN ppe)
(RPAQQ MSFNDATA ((BIND) (CALL) (EFFECT) (PREDICATE) (CLISP) (PROP) (SETFREE) (
SET) (SMASHFREE) (SMASH) (REFFREE) (REF) (FETCH) (REPLACE) (RECORD) (ERROR) (
ARG) (CREATE) (LOCALVARS) (SPECVARS) (APPLY) (TESTFREE) (TEST) (LOCALFREEVARS) 
(NLAMBDA) (TYPE)))
(RPAQ MSDATABASELST NIL)
(RPAQ MSDATABASE NIL)
(RPAQQ MSPRINTFLG %.)
(RPAQ MSPRINTCNT 0)
(RPAQ NOPACKCALLSFLG NIL)
(RPAQQ MSRECORDTRANFLG NIL)
(RPAQQ CHECKUNSAVEFLG T)
(RPAQ NEEDUNSAVE NIL)
(RPAQ MSCRATCHASH NIL)
(RPAQQ VERB.TO.TABLE ((BIND (NIL BIND REF SET SMASH TEST)) (CALL (DIRECTLY CALL
 EFFECT PREDICATE NLAMBDA) (EFFECT EFFECT) (INDIRECTLY APPLY) (NIL APPLY CALL 
EFFECT ERROR PREDICATE NLAMBDA) (NOTERROR APPLY CALL EFFECT PREDICATE) (
PREDICATE PREDICATE) (TESTING PREDICATE) (VALUE CALL) (NLAMBDA NLAMBDA)) (
CREATE (NIL CREATE)) (DECLARE (LOCALLY LOCALVARS) (LOCALVARS LOCALVARS) (NIL 
LOCALVARS SPECVARS) (SPECVARS SPECVARS)) (FETCH (NIL FETCH)) (IS (FIELDS (FETCH
) (REPLACE)) (FUNCTIONS CALL NOBIND REF (CALL) (APPLY)) (KNOWN CALL NOBIND REF)
 (NIL CALL NOBIND REF (CALL) (BIND) (REFFREE) (REF) (SETFREE) (SET) (SMASHFREE)
 (SMASH) (RECORDS) (FETCH) (REPLACE) (PROP) (APPLY) (TEST) (TESTFREE)) (PROPS (
PROP)) (RECORDS (RECORD) (CREATE)) (VARIABLES (BIND) (REFFREE) (REF) (SETFREE) 
(SET) (SMASHFREE) (SMASH) (TEST) (TESTFREE)) (TYPE (0))) (KNOWN (NIL CALL 
NOBIND REF)) (PROG (NIL PROG)) (REFERENCE (FIELDS FETCH) (FREELY REFFREE) (
LOCALLY REF) (NIL REF REFFREE)) (REPLACE (NIL REPLACE)) (SET (FIELDS REPLACE) (
FREELY SETFREE) (LOCALLY SET) (NIL SET SETFREE)) (SMASH (FIELDS REPLACE) (
FREELY SMASHFREE) (LOCALLY SMASH) (NIL SMASH SMASHFREE)) (TEST (FREELY TESTFREE
) (LOCALLY TEST) (NIL TEST TESTFREE)) (USE (FIELDS FETCH REPLACE) (FREELY 
REFFREE SETFREE SMASHFREE TESTFREE) (I.S.OPRS CLISP) (INDIRECTLY LOCALFREEVARS)
 (LOCALLY REF SET SMASH TEST) (NIL REF REFFREE SET SETFREE SMASH SMASHFREE TEST
 TESTFREE) (PREDICATE TEST TESTFREE) (PROPERTIES PROP) (RECORDS CREATE RECORD) 
(TESTING TEST TESTFREE) (VALUE REF REFFREE SMASH SMASHFREE) (TYPE 0))))
(RPAQQ VERB.TO.NOTICED ((BIND (NIL BIND ARG)) (CALL (DIRECTLY CALL EFFECT 
PREDICATE) (EFFECT EFFECT) (INDIRECTLY APPLY) (NIL CALL ERROR APPLY EFFECT 
PREDICATE) (NOTERROR CALL APPLY EFFECT PREDICATE) (PREDICATE PREDICATE) (
TESTING PREDICATE) (VALUE CALL) (NLAMBDA NLAMBDA)) (CREATE (NIL CREATE)) (
DECLARE (LOCALVARS LOCALVARS) (NIL LOCALVARS SPECVARS) (SPECVARS SPECVARS)) (
FETCH (NIL FETCH)) (REFERENCE (FIELDS FETCH) (FREELY REFFREE) (LOCALLY REF) (
NIL REFFREE REF)) (REPLACE (NIL REPLACE)) (SET (FIELDS FETCH REPLACE) (FREELY 
SETFREE) (LOCALLY SET) (NIL SETFREE SET)) (SMASH (FIELDS FETCH REPLACE) (FREELY
 SMASHFREE) (LOCALLY SMASH) (NIL SMASHFREE SMASH)) (TEST (FREELY TESTFREE) (
LOCALLY TEST) (NIL TESTFREE TEST)) (USE (FIELDS FETCH REPLACE) (FREELY SETFREE 
SMASHFREE REFFREE TESTFREE) (I.S.OPRS CLISP) (INDIRECTLY LOCALFREEVARS) (
LOCALLY SET SMASH REF TEST) (NIL SETFREE SET SMASHFREE SMASH REFFREE REF 
TESTFREE TEST) (PREDICATE TEST TESTFREE) (PROPERTIES PROP) (RECORDS RECORD 
CREATE) (TESTING TEST TESTFREE) (VALUE SMASH SMASHFREE REF REFFREE) (TYPE TYPE)
)))
(RPAQQ TABLE.TO.NOTICED ((BIND (- (- (- (- (+ BIND ARG) REF) SMASH) SET) TEST))
 (REFFREE (- (- (- REFFREE SETFREE) SMASHFREE) TESTFREE)) (REF (- (- (- REF SET
) SMASH) TEST)) (PREDICATE (- PREDICATE CALL)) (EFFECT (- (- EFFECT CALL) 
PREDICATE)) (CALL (- CALL NLAMBDA)) (0 TYPE)))
(ADDTOVAR GAINSPACEFORMS (MSDATABASELST "erase current Masterscope database" (
MSERASE T)))
(PUTPROPS SCRATCHASH MACRO ((ARRAYNAME . FORMS) ((LAMBDA (ARRAYNAME) (SETQ 
MSCRATCHASH) (PROG1 (PROGN . FORMS) (SETQ MSCRATCHASH ARRAYNAME))) (COND (
MSCRATCHASH (CLRHASH MSCRATCHASH) MSCRATCHASH) (T (CONS (HARRAY 20) (QUOTE 
MSREHASH)))))))
NIL
OPS RPLNODE2 CLISPCLASS RPLNODE2)
(PUTPROPS SETA CLISPCLASS SETA)
(PUTPROPS STANDARD CLISPCLASS (ACCESS . 1))
(PUTPROPS UNDOABLE CLISPCLASS (ACCESS . 2))
(PUTPROPS FETCHFIELD CLISPCLASSDEF (ACCESS FETCHFIELD NIL FFETCHFIELD)
)
(PUTPROPS REPLACEFIELD CLISPCLASSDEF (ACCESS REPLACEFIELD 
/REPLACEFIELD FREPLACEFIELD))
(PUTPROPS ASSOC CLISPCLASSDEF (ACCESS ASSOC NIL FASSOC))
(PUTPROPS LAST CLISPCLASSDEF (ACCESS LAST NIL FLAST))
(PUTPROPS LISTPUT CLISPCLASSDEF (ACCESS LISTPUT /LISTPUT))
(PUTPROPS LISTPUT1 CLISPCLASSDEF (ACCESS LISTPUT1 /LISTPUT1))
(PUTPROPS MAPCON CLISPCLASSDEF (ACCESS MAPCON /MAPCON))
(PUTPROPS MAPCONC CLISPCLASSDEF (ACCESS MAPCONC /MAPCONC))
(PUTPROPS MEMB CLISPCLASSDEF (ACCESS MEMB NIL FMEMB))
(PUTPROPS NCONC CLISPCLASSDEF (ACCESS NCONC /NCONC))
(PUTPROPS NCONC1 CLISPCLASSDEF (ACCESS NCONC1 /NCONC1))
(PUTPROPS NTH CLISPCLASSDEF (ACCESS NTH NIL FNTH))
(PUTPROPS PUT CLISPCLASSDEF (ACCESS PUT /PUT))
(PUTPROPS PUTASSOC CLISPCLASSDEF (ACCESS PUTASSOC /PUTASSOC))
(PUTPROPS PUTHASH CLISPCLASSDEF (ACCESS PUTHASH /PUTHASH))
(PUTPROPS PUTPROP CLISPCLASSDEF (ACCESS PUTPROP /PUTPROP))
(PUTPROPS RPLACA CLISPCLASSDEF (ACCESS RPLACA /RPLACA FRPLACA))
(PUTPROPS RPLACD CLISPCLASSDEF (ACCESS RPLACD /RPLACD FRPLACD))
(PUTPROPS RPLNODE CLISPCLASSDEF (ACCESS RPLNODE /RPLNODE FRPLNODE))
(PUTPROPS RPLNODE2 CLISPCLASSDEF (ACCESS RPLNODE2 /RPLNODE2 FRPLNODE2)
)
(PUTPROPS SETA CLISPCLASSDEF (ACCESS SETA /SETA))
(PUTPROPS FMEMB CLISPNEG ~FMEMB)
(PUTPROPS MEMB CLISPNEG ~MEMB)
(PUTPROPS FMEMB BROADSCOPE T)
(PUTPROPS MEMB BROADSCOPE T)
(PUTPROPS LT CLISPTYPE -20)
(PUTPROPS lt CLISPTYPE -20)
(PUTPROPS GT CLISPTYPE -20)
(PUTPROPS gt CLISPTYPE -20)
(PUTPROPS LE CLISPTYPE -20)
(PUTPROPS le CLISPTYPE -20)
(PUTPROPS GE CLISPTYPE -20)
(PUTPROPS ge CLISPTYPE -20)
(PUTPROPS LEQ CLISPTYPE -20)
(PUTPROPS leq CLISPTYPE -20)
(PUTPROPS GEQ CLISPTYPE -20)
(PUTPROPS geq CLISPTYPE -20)
(PUTPROPS EQ CLISPTYPE -20)
(PUTPROPS NEQ CLISPTYPE -20)
(PUTPROPS EQP CLISPTYPE -20)
(PUTPROPS EQUAL CLISPTYPE -20)
(PUTPROPS EQUALS CLISPTYPE -20)
(PUTPROPS AND CLISPTYPE -25)
(PUTPROPS OR CLISPTYPE -26)
(PUTPROPS and CLISPTYPE -25)
(PUTPROPS or CLISPTYPE -26)
(PUTPROPS NOR CLISPTYPE -25)
(PUTPROPS nor CLISPTYPE -25)
(PUTPROPS MEMBER CLISPTYPE -20)
(PUTPROPS CONS CLISPTYPE -8)
(PUTPROPS ILESSP CLISPTYPE -20)
(PUTPROPS IGREATERP CLISPTYPE -20)
(PUTPROPS FGTP CLISPTYPE -20)
(PUTPROPS MINUS CLISPTYPE 8)
(PUTPROPS LESSP CLISPTYPE -20)
(PUTPROPS GREATERP CLISPTYPE -20)
(PUTPROPS -> CLISPTYPE 7)
(PUTPROPS => CLISPTYPE 7)
(PUTPROPS LT LISPFN ILESSP)
(PUTPROPS lt LISPFN ILESSP)
(PUTPROPS GT LISPFN IGREATERP)
(PUTPROPS gt LISPFN IGREATERP)
(PUTPROPS EQUALS LISPFN EQUAL)
(PUTPROPS AND LISPFN AND)
(PUTPROPS OR LISPFN OR)
(PUTPROPS and LISPFN AND)
(PUTPROPS or LISPFN OR)
(PUTPROPS NOR LISPFN AND)
(PUTPROPS nor LISPFN AND)
(PUTPROPS NOT UNARYOP T)
(PUTPROPS MINUS UNARYOP T)
(PUTPROPS EQ CLISPINFIX =)
(PUTPROPS NOT CLISPINFIX ~)
(PUTPROPS AND CLISPINFIX and)
(PUTPROPS OR CLISPINFIX or)
(PUTPROPS SETQ CLISPINFIX _)
(PUTPROPS QUOTE CLISPINFIX ')
(PUTPROPS IPLUS CLISPINFIX +)
(PUTPROPS IMINUS CLISPINFIX -)
(PUTPROPS IDIFFERENCE CLISPINFIX +-)
(PUTPROPS ITIMES CLISPINFIX *)
(PUTPROPS IQUOTIENT CLISPINFIX /)
(PUTPROPS ILESSP CLISPINFIX lt)
(PUTPROPS IGREATERP CLISPINFIX gt)
(PUTPROPS EXPT CLISPINFIX ^)
(PUTPROPS LT CLISPCLASS LT)
(PUTPROPS lt CLISPCLASS LT)
(PUTPROPS GT CLISPCLASS GT)
(PUTPROPS gt CLISPCLASS GT)
(PUTPROPS IPLUS CLISPCLASS +)
(PUTPROPS IMINUS CLISPCLASS -)
(PUTPROPS IDIFFERENCE CLISPCLASS +-)
(PUTPROPS ITIMES CLISPCLASS *)
(PUTPROPS IQUOTIENT CLISPCLASS /)
(PUTPROPS ILESSP CLISPCLASS LT)
(PUTPROPS IGREATERP CLISPCLASS GT)
(PUTPROPS FPLUS CLISPCLASS +)
(PUTPROPS FMINUS CLISPCLASS -)
(PUTPROPS FDIFFERENCE CLISPCLASS +-)
(PUTPROPS FTIMES CLISPCLASS *)
(PUTPROPS FQUOTIENT CLISPCLASS /)
(PUTPROPS FGTP CLISPCLASS GT)
(PUTPROPS PLUS CLISPCLASS +)
(PUTPROPS MINUS CLISPCLASS -)
(PUTPROPS DIFFERENCE CLISPCLASS +-)
(PUTPROPS TIMES CLISPCLASS *)
(PUTPROPS QUOTIENT CLISPCLASS /)
(PUTPROPS LESSP CLISPCLASS LT)
(PUTPROPS GREATERP CLISPCLASS GT)
(PUTPROPS LT CLISPCLASSDEF (ARITH ILESSP LESSP LESSP))
(PUTPROPS GT CLISPCLASSDEF (ARITH IGREATERP FGTP GREATERP))
(PUTPROPS LT CLISPNEG GEQ)
(PUTPROPS GT CLISPNEG LEQ)
(PUTPROPS EQUALS CLISPNEG ~EQUAL)
(PUTPROPS MEMBER CLISPNEG ~MEMBER)
(PUTPROPS LT BROADSCOPE T)
(PUTPROPS lt BROADSCOPE T)
(PUTPROPS GT BROADSCOPE T)
(PUTPROPS gt BROADSCOPE T)
(PUTPROPS LE BROADSCOPE T)
(PUTPROPS le BROADSCOPE T)
(PUTPROPS GE BROADSCOPE T)
(PUTPROPS ge BROADSCOPE T)
(PUTPROPS LEQ BROADSCOPE T)
(PUTPROPS leq BROADSCOPE T)
(PUTPROPS GEQ BROADSCOPE T)
(PUTPROPS geq BROADSCOPE T)
(PUTPROPS EQ BROADSCOPE T)
(PUTPROPS NEQ BROADSCOPE T)
(PUTPROPS EQP BROADSCOPE T)
(PUTPROPS EQUAL BROADSCOPE T)
(PUTPROPS EQUALS BROADSCOPE T)
(PUTPROPS NOT BROADSCOPE T)
(PUTPROPS AND BROADSCOPE T)
(PUTPROPS OR BROADSCOPE T)
(PUTPROPS and BROADSCOPE T)
(PUTPROPS or BROADSCOPE T)
(PUTPROPS NOR BROADSCOPE T)
(PUTPROPS nor BROADSCOPE T)
(PUTPROPS MEMBER BROADSCOPE T)
(PUTPROPS ILESSP BROADSCOPE T)
(PUTPROPS IGREATERP BROADSCOPE T)
(PUTPROPS FGTP BROADSCOPE T)
(PUTPROPS LESSP BROADSCOPE T)
(PUTPROPS GREATERP BROADSCOPE T)
(PUTPROPS IS CLISPTYPE -22)
(PUTPROPS ISN'T CLISPTYPE -22)
(PUTPROPS is CLISPTYPE -22)
(PUTPROPS isn't CLISPTYPE -22)
(PUTPROPS ARE CLISPTYPE (-30 . -22))
(PUTPROPS AREN'T CLISPTYPE (-30 . -22))
(PUTPROPS are CLISPTYPE (-30 . -22))
(PUTPROPS aren't CLISPTYPE (-30 . -22))
(PUTPROPS HAS CLISPTYPE -22)
(PUTPROPS HASN'T CLISPTYPE -22)
(PUTPROPS has CLISPTYPE -22)
(PUTPROPS hasn't CLISPTYPE -22)
(PUTPROPS HAVE CLISPTYPE (-30 . -22))
(PUTPROPS HAVEN'T CLISPTYPE (-30 . -22))
(PUTPROPS have CLISPTYPE (-30 . -22))
(PUTPROPS haven't CLISPTYPE (-30 . -22))
(PUTPROPS DOES CLISPTYPE -22)
(PUTPROPS DOESN'T CLISPTYPE -22)
(PUTPROPS does CLISPTYPE -22)
(PUTPROPS doesn't CLISPTYPE -22)
(PUTPROPS DO CLISPTYPE (-30 . -22))
(PUTPROPS DON'T CLISPTYPE (-30 . -22))
(PUTPROPS do CLISPTYPE (-30 . -22))
(PUTPROPS don't CLISPTYPE (-30 . -22))
(PUTPROPS IS CLISPCLASS (ISWORD SING))
(PUTPROPS ISN'T CLISPCLASS (ISWORD SING NEG))
(PUTPROPS is CLISPCLASS (ISWORD SING))
(PUTPROPS isn't CLISPCLASS (ISWORD SING NEG))
(PUTPROPS ARE CLISPCLASS (ISWORD PLURAL))
(PUTPROPS AREN'T CLISPCLASS (ISWORD PLURAL NEG))
(PUTPROPS are CLISPCLASS (ISWORD PLURAL))
(PUTPROPS aren't CLISPCLASS (ISWORD PLURAL NEG))
(PUTPROPS HAS CLISPCLASS (ISWORD SING))
(PUTPROPS HASN'T CLISPCLASS (ISWORD SING NEG))
(PUTPROPS has CLISPCLASS (ISWORD SING))
(PUTPROPS hasn't CLISPCLASS (ISWORD SING NEG))
(PUTPROPS HAVE CLISPCLASS (ISWORD PLURAL))
(PUTPROPS HAVEN'T CLISPCLASS (ISWORD PLURAL NEG))
(PUTPROPS have CLISPCLASS (ISWORD PLURAL))
(PUTPROPS haven't CLISPCLASS (ISWORD PLURAL NEG))
(PUTPROPS DOES CLISPCLASS (ISWORD SING))
(PUTPROPS DOESN'T CLISPCLASS (ISWORD SING NEG))
(PUTPROPS does CLISPCLASS (ISWORD SING))
(PUTPROPS doesn't CLISPCLASS (ISWORD SING NEG))
(PUTPROPS DO CLISPCLASS (ISWORD PLURAL))
(PUTPROPS DON'T CLISPCLASS (ISWORD PLURAL NEG))
(PUTPROPS do CLISPCLASS (ISWORD PLURAL))
(PUTPROPS don't CLISPCLASS (ISWORD PLURAL NEG))
(PUTPROPS IS BROADSCOPE T)
(PUTPROPS ISN'T BROADSCOPE T)
(PUTPROPS is BROADSCOPE T)
(PUTPROPS isn't BROADSCOPE T)
(PUTPROPS ARE BROADSCOPE T)
(PUTPROPS AREN'T BROADSCOPE T)
(PUTPROPS are BROADSCOPE T)
(PUTPROPS aren't BROADSCOPE T)
(PUTPROPS HAS BROADSCOPE T)
(PUTPROPS HASN'T BROADSCOPE T)
(PUTPROPS has BROADSCOPE T)
(PUTPROPS hasn't BROADSCOPE T)
(PUTPROPS HAVE BROADSCOPE T)
(PUTPROPS HAVEN'T BROADSCOPE T)
(PUTPROPS have BROADSCOPE T)
(PUTPROPS haven't BROADSCOPE T)
(PUTPROPS DOES BROADSCOPE T)
(PUTPROPS DOESN'T BROADSCOPE T)
(PUTPROPS does BROADSCOPE T)
(PUTPROPS doesn't BROADSCOPE T)
(PUTPROPS DO BROADSCOPE T)
(PUTPROPS DON'T BROADSCOPE T)
(PUTPROPS do BROADSCOPE T)
(PUTPROPS don't BROADSCOPE T)
(PUTPROPS IS CLISPISPROP (is ARE are))
(PUTPROPS HAS CLISPISPROP (has HAVE have DOES NOT HAVE))
(PUTPROPS HAVE CLISPISPROP (have))
(PUTPROPS have CLISPISPROP T)
(PUTPROPS DOES CLISPISPROP (does DO do))
(* CLISPISPROP property is used for two purposes: (1) to identify is 
words so they wont be dwimified, e.g. MEMBER, NUMBER, etc., and (2) 
for specifying lower case and plural forms for clispifying. 
CLISPISVERBS do not need the CLISPISPROP property when they are in the
 operatr position, since the CLISPTYPE property identifies them. 
However, CLISPISVERBS that also can appear interior to the is phrase 
do need a CLISPISPROP, e.g. HAVE as in (X DOESN'T HAVE --) 
CLISPISVERBS that appear in the clisp patterns need CLISPISPROP 
properties for clispifying, e.g. IS, HAS, and DOES)
(PUTPROPS A CLISPISPROP (a NIL NIL))
(PUTPROPS AN CLISPISPROP (an NIL NIL))
(PUTPROPS THE CLISPISPROP (the))
(PUTPROPS EITHER CLISPISPROP (either))
(PUTPROPS NEITHER CLISPISPROP (neither))
(PUTPROPS a CLISPISPROP A)
(PUTPROPS an CLISPISPROP AN)
(PUTPROPS the CLISPISPROP THE)
(PUTPROPS either CLISPISPROP EITHER)
(PUTPROPS neither CLISPISPROP NEITHER)
(PUTPROPS ARRAY CLISPISPROP (array ARRAYS arrays))
(PUTPROPS ARRAYS CLISPISPROP ARRAY)
(PUTPROPS ATOM CLISPISPROP (atom ATOMS atoms))
(PUTPROPS ATOMIC CLISPISPROP (atomic))
(PUTPROPS ATOMS CLISPISPROP ATOM)
(PUTPROPS EQ CLISPISPROP (eq))
(PUTPROPS EQUAL CLISPISPROP (equal))
(PUTPROPS FLOATING CLISPISPROP (floating))
(PUTPROPS GEQ CLISPISPROP (geq))
(PUTPROPS GREATER CLISPISPROP (greater))
(PUTPROPS GT CLISPISPROP (gt))
(PUTPROPS INTEGER CLISPISPROP (integer INTEGERS integers))
(PUTPROPS INTEGERS CLISPISPROP INTEGER)
(PUTPROPS LEQ CLISPISPROP (leq))
(PUTPROPS LESS CLISPISPROP (less))
(PUTPROPS LIST CLISPISPROP (list LISTS lists))
(PUTPROPS LISTS CLISPISPROP LIST)
(PUTPROPS LITATOM CLISPISPROP (litatom LITATOMS litatoms))
(PUTPROPS LITATOMS CLISPISPROP LITATOM)
(PUTPROPS LITERAL CLISPISPROP (literal))
(PUTPROPS LT CLISPISPROP (lt))
(PUTPROPS MEMB CLISPISPROP (memb))
(PUTPROPS MEMBER CLISPISPROP (member MEMBERS members))
(PUTPROPS MEMBERS CLISPISPROP MEMBER)
(PUTPROPS NEGATIVE CLISPISPROP (negative))
(PUTPROPS NILL CLISPISPROP T)
(PUTPROPS NOT CLISPISPROP (not))
(PUTPROPS NULL CLISPISPROP (null))
(PUTPROPS NUMBER CLISPISPROP (number NUMBERS numbers))
(PUTPROPS NUMBERS CLISPISPROP NUMBER)
(PUTPROPS OF CLISPISPROP (of))
(PUTPROPS POINT CLISPISPROP (point))
(PUTPROPS SMALL CLISPISPROP (small))
(PUTPROPS STRING CLISPISPROP (string STRINGS strings))
(PUTPROPS STRINGS CLISPISPROP STRING)
(PUTPROPS TAIL CLISPISPROP (tail TAILS tails))
(PUTPROPS THAN CLISPISPROP (than))
(PUTPROPS TO CLISPISPROP (to))
(PUTPROPS array CLISPISPROP ARRAY)
(PUTPROPS arrays CLISPISPROP ARRAY)
(PUTPROPS atom CLISPISPROP ATOM)
(PUTPROPS atomic CLISPISPROP ATOMIC)
(PUTPROPS atoms CLISPISPROP ATOM)
(PUTPROPS eq CLISPISPROP EQ)
(PUTPROPS equal CLISPISPROP EQUAL)
(PUTPROPS floating CLISPISPROP FLOATING)
(PUTPROPS geq CLISPISPROP GEQ)
(PUTPROPS greater CLISPISPROP GREATER)
(PUTPROPS gt CLISPISPROP GT)
(PUTPROPS integer CLISPISPROP INTEGER)
(PUTPROPS integers CLISPISPROP INTEGER)
(PUTPROPS leq CLISPISPROP LEQ)
(PUTPROPS less CLISPISPROP LESS)
(PUTPROPS list CLISPISPROP LIST)
(PUTPROPS lists CLISPISPROP LIST)
(PUTPROPS litatom CLISPISPROP LITATOM)
(PUTPROPS literal CLISPISPROP LITERAL)
(PUTPROPS lt CLISPISPROP LT)
(PUTPROPS memb CLISPISPROP MEMB)
(PUTPROPS member CLISPISPROP MEMBER)
(PUTPROPS members CLISPISPROP MEMBER)
(PUTPROPS negative CLISPISPROP NEGATIVE)
(PUTPROPS not CLISPISPROP NOT)
(PUTPROPS null CLISPISPROP NULL)
(PUTPROPS number CLISPISPROP NUMBER)
(PUTPROPS numbers CLISPISPROP NUMBER)
(PUTPROPS of CLISPISPROP OF)
(PUTPROPS point CLISPISPROP POINT)
(PUTPROPS small CLISPISPROP SMALL)
(PUTPROPS string CLISPISPROP STRING)
(PUTPROPS strings CLISPISPROP STRING)
(PUTPROPS tail CLISPISPROP TAIL)
(PUTPROPS than CLISPISPROP THAN)
(PUTPROPS to CLISPISPROP TO)
(PUTPROPS ~ CLISPISPROP ~)
(PUTPROPS ARRAY CLISPISFORM ((X) (X IS AN ARRAY) (ARRAYP X)))
(PUTPROPS ATOM CLISPISFORM ((X) (X IS AN ATOM) (ATOM X)))
(PUTPROPS ATOMIC CLISPISFORM ((X) (X IS ATOMIC) (ATOM X)))
(PUTPROPS EQ CLISPISFORM ((X Y) (X IS EQ TO Y) (X = Y)))
(PUTPROPS EQUAL CLISPISFORM ((X Y) (X IS EQUAL TO Y) (EQUAL X Y)))
(PUTPROPS FLOATING CLISPISFORM ((X) (X IS A FLOATING POINT NUMBER) (
FLOATP X)))
(PUTPROPS GEQ CLISPISFORM ((X Y) (X IS GEQ Y) (X GEQ Y)))
(PUTPROPS GREATER CLISPISFORM ((X Y) (X IS GREATER THAN Y) (X GT Y)))
(PUTPROPS GT CLISPISFORM ((X Y) (X IS GT Y) (X GT Y)))
(PUTPROPS LEQ CLISPISFORM ((X Y) (X IS LEQ Y) (X LEQ Y)))
(PUTPROPS LESS CLISPISFORM ((X Y) (X IS LESS THAN Y) (X LT Y)))
(PUTPROPS LIST CLISPISFORM ((X) (X IS A LIST) (LISTP X) (X) (X IS NOT 
A LIST) (NLISTP X)))
(PUTPROPS LITATOM CLISPISFORM ((X) (X IS A LITATOM) (LITATOM X)))
(PUTPROPS LITERAL CLISPISFORM ((X) (X IS A LITERAL ATOM) (LITATOM X)))
(PUTPROPS LT CLISPISFORM ((X Y) (X IS LT Y) (X LT Y)))
(PUTPROPS MEMB CLISPISFORM ((X Y) (X IS A MEMB OF Y) (MEMB X Y)))
(PUTPROPS MEMBER CLISPISFORM ((X Y) (X IS A MEMBER OF Y) (MEMBER X Y))
)
(PUTPROPS NEGATIVE CLISPISFORM ((X) (X IS NEGATIVE) (MINUSP X)))
(PUTPROPS NILL CLISPISFORM ((X) (X IS NIL) (NULL X)))
(PUTPROPS NULL CLISPISFORM ((X) (X IS NULL) (NULL X)))
(PUTPROPS NUMBER CLISPISFORM ((X) (X IS A NUMBER) (NUMBERP X)))
(PUTPROPS SMALL CLISPISFORM ((X) (X IS A SMALL INTEGER) (SMALLP X) (X)
 (X IS A SMALL NUMBER) (SMALLP X)))
(PUTPROPS STRING CLISPISFORM ((X) (X IS A STRING) (STRINGP X)))
(PUTPROPS TAIL CLISPISFORM ((X Y) (X IS A TAIL OF Y) (TAILP X Y)))
(PUTPROPS ELT SETFN SETA)
(PUTPROPS SETA SETFN (ELT))
(RPAQQ EITHER NOBIND)
(RPAQQ either NOBIND)
(PRETTYCOMPRINT DWIMIFYCOMS)
(RPAQQ DWIMIFYCOMS ((FNS * DWIMIFYFNS) (VARS (DWIMIFYFLG (QUOTE EVAL))
 (DWIMCHECK#ARGSFLG T) (DWIMCHECKPROGLABELSFLG T) (!) (!!) (
COMPILEUSERFN (QUOTE COMPILEUSERFN)) (#CLISPARRAY 250) (RECORDHASHFLG 
T) (CLISPTRANFLG (QUOTE CLISP% )) (CLISPRETRANFLG)) (PROP CLISPWORD 
AND OR and or ! !! CREATE USING COPYING FETCH REPLACE create using 
copying fetch replace with of WITH OF CLISP clisp MATCH match) (COMS *
 IFCOMS) (COMS * I.S.COMS) (DECLARE: DONTCOPY (BLOCKS * DWIMBLOCKS)) (
P (PUTPROP (QUOTE CLISP% ) (QUOTE MACRO) (QUOTE (X (CAR X))))) (PROP 
FILEGROUP DWIMIFY) (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY 
COMPILERVARS (ADDVARS (NLAMA USEDFREE DWIMIFYFNS) (NLAML BREAK1)))))
(RPAQQ DWIMIFYFNS (DWIMIFYFNS DWIMIFY DWIMIFY0 DWIMIFY0? DWMFY0 
DWIMIFY1 DWIMIFY1? DWMFY1 DWIMIFY1A DWIMIFY1B DWIMIFY2 DWIMIFY2? 
DWMFY2 DWIMIFY2A CLISPANGLEBRACKETS SHRIEKER CLISPRESPELL 
COMPILEUSERFN USEDFREE CLISPTRAN))
(RPAQQ DWIMIFYFLG EVAL)
(RPAQ DWIMCHECK#ARGSFLG T)
(RPAQ DWIMCHECKPROGLABELSFLG T)
(RPAQ ! NIL)
(RPAQ !! NIL)
(RPAQQ COMPILEUSERFN COMPILEUSERFN)
(RPAQ #CLISPARRAY 250)
(RPAQ RECORDHASHFLG T)
(RPAQQ CLISPTRANFLG CLISP% )
(RPAQ CLISPRETRANFLG NIL)
(PUTPROPS AND CLISPWORD T)
(PUTPROPS OR CLISPWORD T)
(PUTPROPS and CLISPWORD T)
(PUTPROPS or CLISPWORD T)
(PUTPROPS ! CLISPWORD T)
(PUTPROPS !! CLISPWORD T)
(PUTPROPS CREATE CLISPWORD (RECORDWORD . create))
(PUTPROPS USING CLISPWORD (RECORDWORD . using))
(PUTPROPS COPYING CLISPWORD (RECORDWORD . copying))
(PUTPROPS FETCH CLISPWORD (RECORDWORD . fetch))
(PUTPROPS REPLACE CLISPWORD (RECORDWORD . replace))
(PUTPROPS create CLISPWORD (RECORDWORD . create))
(PUTPROPS using CLISPWORD (RECORDWORD . using))
(PUTPROPS copying CLISPWORD (RECORDWORD . copying))
(PUTPROPS fetch CLISPWORD (RECORDWORD . fetch))
(PUTPROPS replace CLISPWORD (RECORDWORD . replace))
(PUTPROPS with CLISPWORD (RECORDWORD . with))
(PUTPROPS of CLISPWORD (RECORDWORD . of))
(PUTPROPS WITH CLISPWORD (RECORDWORD . with))
(PUTPROPS OF CLISPWORD (RECORDWORD . of))
(PUTPROPS CLISP CLISPWORD (PREFIXFN . clisp))
(PUTPROPS clisp CLISPWORD (PREFIXFN . clisp))
(PUTPROPS MATCH CLISPWORD (MATCHWORD . match))
(PUTPROPS match CLISPWORD (MATCHWORD . match))
(RPAQQ IFCOMS ((FNS * IFFNS) (VARS CLISPIFWORDSPLST (CLISPIFTRANFLG)) 
(PROP CLISPWORD IF THEN ELSE ELSEIF if then else elseif)))
(RPAQQ IFFNS (CLISPIF CLISPIF0 CLISPIF1 CLISPIF2 CLISPIF3))
(RPAQQ CLISPIFWORDSPLST (THEN ELSE ELSEIF IF))
(RPAQ CLISPIFTRANFLG NIL)
(PUTPROPS IF CLISPWORD (IFWORD . if))
(PUTPROPS THEN CLISPWORD (IFWORD . then))
(PUTPROPS ELSE CLISPWORD (IFWORD . else))
(PUTPROPS ELSEIF CLISPWORD (IFWORD . elseif))
(PUTPROPS if CLISPWORD (IFWORD . if))
(PUTPROPS then CLISPWORD (IFWORD . then))
(PUTPROPS else CLISPWORD (IFWORD . else))
(PUTPROPS elseif CLISPWORD (IFWORD . elseif))
(RPAQQ I.S.COMS ((FNS * I.S.FNS) (VARS (CLISPI.S.GAG) (I.S.OPRLST (
QUOTE (ALWAYS AS BIND BY COLLECT COUNT DECLARE DECLARE: DO EACHTIME 
FCOLLECT FINALLY FIND FIRST FOR FROM IN INSIDE ISTHERE JOIN NEVER OLD 
ON ORIGINAL REPEATUNTIL REPEATWHILE SUCHTHAT SUM THEREIS THRU TO 
UNLESS UNTIL WHEN WHERE WHILE always as bind by collect count declare 
declare: do eachtime fcollect finally find first for from in inside 
isthere join never old on original repeatuntil repeatwhile suchthat 
sum thereis thru to unless until when where while))) (
CLISPFORWORDSPLST (QUOTE (ALWAYS AS BIND BY COLLECT COUNT DO EACHTIME 
FINALLY FIRST FOR FROM IN INSIDE JOIN NEVER OLD ON REPEATUNTIL 
REPEATWHILE SUCHTHAT SUM THEREIS TO UNLESS UNTIL WHEN WHERE WHILE)))) 
(PROP CLISPWORD * (PROGN I.S.OPRLST)) (IFPROP I.S.OPR * (PROGN 
I.S.OPRLST)) (PRETTYDEFMACROS I.S.OPRS) (ADDVARS (SYSLOCALVARS $$VAL 
$$TEM $$TEM1 $$TEM2 $$LST1 $$LST2 $$LST3 $$LST4 $$LST5 $$LST6)) (P (
MOVD (QUOTE I.S.OPR) (QUOTE I.S.TYPE)))))
(RPAQQ I.S.FNS (CLISPFOR CLISPFOR0 CLISPFOR0A CLISPFOR1 CLISPRPLNODE 
CLISPFOR2 CLISPFOR3 CLISPFORVARS CLISPFORVARS1 CLISPFOR4 CLISPFORF/L 
CLISPFORERR CLISPFORERR1 I.S.OPR CLISPDSUBST))
(RPAQ CLISPI.S.GAG NIL)
(RPAQQ I.S.OPRLST (ALWAYS AS BIND BY COLLECT COUNT DECLARE DECLARE: DO
 EACHTIME FCOLLECT FINALLY FIND FIRST FOR FROM IN INSIDE ISTHERE JOIN 
NEVER OLD ON ORIGINAL REPEATUNTIL REPEATWHILE SUCHTHAT SUM THEREIS 
THRU TO UNLESS UNTIL WHEN WHERE WHILE always as bind by collect count 
declare declare: do eachtime fcollect finally find first for from in 
inside isthere join never old on original repeatuntil repeatwhile 
suchthat sum thereis thru to unless until when where while))
(RPAQQ CLISPFORWORDSPLST (ALWAYS AS BIND BY COLLECT COUNT DO EACHTIME 
FINALLY FIRST FOR FROM IN INSIDE JOIN NEVER OLD ON REPEATUNTIL 
REPEATWHILE SUCHTHAT SUM THEREIS TO UNLESS UNTIL WHEN WHERE WHILE))
(PUTPROPS ALWAYS CLISPWORD (FORWORD . always))
(PUTPROPS AS CLISPWORD (FORWORD . as))
(PUTPROPS BIND CLISPWORD (FORWORD . bind))
(PUTPROPS BY CLISPWORD (FORWORD . by))
(PUTPROPS COLLECT CLISPWORD (FORWORD . collect))
(PUTPROPS COUNT CLISPWORD (FORWORD . count))
(PUTPROPS DECLARE CLISPWORD (FORWORD . declare))
(PUTPROPS DECLARE: CLISPWORD (FORWORD declare: DECLARE))
(PUTPROPS DO CLISPWORD (FORWORD . do))
(PUTPROPS EACHTIME CLISPWORD (FORWORD . eachtime))
(PUTPROPS FCOLLECT CLISPWORD (FORWORD . fcollect))
(PUTPROPS FINALLY CLISPWORD (FORWORD . finally))
(PUTPROPS FIND CLISPWORD (FORWORD find FOR))
(PUTPROPS FIRST CLISPWORD (FORWORD . first))
(PUTPROPS FOR CLISPWORD (FORWORD . for))
(PUTPROPS FROM CLISPWORD (FORWORD . from))
(PUTPROPS IN CLISPWORD (FORWORD . in))
(PUTPROPS INSIDE CLISPWORD (FORWORD . inside))
(PUTPROPS ISTHERE CLISPWORD (FORWORD isthere THEREIS))
(PUTPROPS JOIN CLISPWORD (FORWORD . join))
(PUTPROPS NEVER CLISPWORD (FORWORD . never))
(PUTPROPS OLD CLISPWORD (FORWORD . old))
(PUTPROPS ON CLISPWORD (FORWORD . on))
(PUTPROPS ORIGINAL CLISPWORD (FORWORD . original))
(PUTPROPS REPEATUNTIL CLISPWORD (FORWORD . repeatuntil))
(PUTPROPS REPEATWHILE CLISPWORD (FORWORD . repeatwhile))
(PUTPROPS SUCHTHAT CLISPWORD (FORWORD suchthat THEREIS))
(PUTPROPS SUM CLISPWORD (FORWORD . sum))
(PUTPROPS THEREIS CLISPWORD (FORWORD . thereis))
(PUTPROPS THRU CLISPWORD (FORWORD thru TO))
(PUTPROPS TO CLISPWORD (FORWORD . to))
(PUTPROPS UNLESS CLISPWORD (FORWORD . unless))
(PUTPROPS UNTIL CLISPWORD (FORWORD . until))
(PUTPROPS WHEN CLISPWORD (FORWORD . when))
(PUTPROPS WHERE CLISPWORD (FORWORD where WHEN))
(PUTPROPS WHILE CLISPWORD (FORWORD . while))
(PUTPROPS always CLISPWORD (FORWORD . always))
(PUTPROPS as CLISPWORD (FORWORD . as))
(PUTPROPS bind CLISPWORD (FORWORD . bind))
(PUTPROPS by CLISPWORD (FORWORD . by))
(PUTPROPS collect CLISPWORD (FORWORD . collect))
(PUTPROPS count CLISPWORD (FORWORD . count))
(PUTPROPS declare CLISPWORD (FORWORD . declare))
(PUTPROPS declare: CLISPWORD (FORWORD declare: DECLARE))
(PUTPROPS do CLISPWORD (FORWORD . do))
(PUTPROPS eachtime CLISPWORD (FORWORD . eachtime))
(PUTPROPS fcollect CLISPWORD (FORWORD . fcollect))
(PUTPROPS finally CLISPWORD (FORWORD . finally))
(PUTPROPS find CLISPWORD (FORWORD find FOR))
(PUTPROPS first CLISPWORD (FORWORD . first))
(PUTPROPS for CLISPWORD (FORWORD . for))
(PUTPROPS from CLISPWORD (FORWORD . from))
(PUTPROPS in CLISPWORD (FORWORD . in))
(PUTPROPS inside CLISPWORD (FORWORD . inside))
(PUTPROPS isthere CLISPWORD (FORWORD isthere thereis))
(PUTPROPS join CLISPWORD (FORWORD . join))
(PUTPROPS never CLISPWORD (FORWORD . never))
(PUTPROPS old CLISPWORD (FORWORD . old))
(PUTPROPS on CLISPWORD (FORWORD . on))
(PUTPROPS original CLISPWORD (FORWORD . original))
(PUTPROPS repeatuntil CLISPWORD (FORWORD . repeatuntil))
(PUTPROPS repeatwhile CLISPWORD (FORWORD . repeatwhile))
(PUTPROPS suchthat CLISPWORD (FORWORD suchthat THEREIS))
(PUTPROPS sum CLISPWORD (FORWORD . sum))
(PUTPROPS thereis CLISPWORD (FORWORD . thereis))
(PUTPROPS thru CLISPWORD (FORWORD thru TO))
(PUTPROPS to CLISPWORD (FORWORD . to))
(PUTPROPS unless CLISPWORD (FORWORD . unless))
(PUTPROPS until CLISPWORD (FORWORD . until))
(PUTPROPS when CLISPWORD (FORWORD . when))
(PUTPROPS where CLISPWORD (FORWORD where WHEN))
(PUTPROPS while CLISPWORD (FORWORD . while))
(PUTPROPS always I.S.OPR ((COND ((NULL BODY) (SETQ $$VAL NIL) (GO 
$$OUT))) BIND ($$VAL _ T)))
(PUTPROPS collect I.S.OPR ((SETQ $$VAL (NCONC1 $$VAL BODY))))
(PUTPROPS count I.S.OPR ((AND BODY (SETQ $$VAL (ADD1 $$VAL))) BIND (
$$VAL _ 0)))
(PUTPROPS do I.S.OPR (BODY))
(PUTPROPS fcollect I.S.OPR ((PROGN (SETQ $$TEM1 BODY) (COND ($$TEM2 (
FRPLACD $$TEM2 (SETQ $$TEM2 (LIST $$TEM1)))) (T (SETQ $$VAL (SETQ 
$$TEM2 (LIST $$TEM1)))))) BIND ($$TEM1 $$TEM2)))
(PUTPROPS inside I.S.OPR (NIL = SUBST (OR (PROG1 (CAR LSTVARS) (SETQ 
LSTVARS (CDR LSTVARS))) (GENSYM)) (QUOTE $$LST) (QUOTE (bind (SETQ 
$$LST BODY) eachtime (COND ((NULL $$LST) (GO $$OUT)) ((NLISTP $$LST) (
SETQ I.V. $$LST) (SETQ $$LST NIL)) (T (SETQ I.V. (CAR $$LST)) (SETQ 
$$LST (CDR $$LST))))))))
(PUTPROPS join I.S.OPR ((SETQ $$VAL (< !! $$VAL !! BODY>))))
(PUTPROPS never I.S.OPR ((COND (BODY (SETQ $$VAL NIL) (GO $$OUT))) 
BIND ($$VAL _ T)))
(PUTPROPS old I.S.OPR MODIFIER)
(PUTPROPS sum I.S.OPR ((SETQ $$VAL ($$VAL + BODY)) BIND ($$VAL _ 0)))
(PUTPROPS thereis I.S.OPR ((COND (BODY (SETQ $$VAL I.V.) (GO $$OUT))))
)
(PUTPROPS to I.S.OPR (NIL BIND $$END FIRST (SETQ $$END BODY) ORIGINAL 
TO $$END))
(PRETTYDEFMACROS (I.S.OPRS X (P * (DUMPI.S.OPRS . X))))
(ADDTOVAR PRETTYTYPELST (CHANGEDI.S.OPRLST I.S.OPRS "i.s. operators"))
(ADDTOVAR PRETTYCOMSPLST I.S.OPRS)
(ADDTOVAR CHANGEDI.S.OPRLST)
(PUTPROPS I.S.OPRS PRETTYTYPE NILL)
(ADDTOVAR SYSLOCALVARS $$VAL $$TEM $$TEM1 $$TEM2 $$LST1 $$LST2 $$LST3 
$$LST4 $$LST5 $$LST6)
(MOVD (QUOTE I.S.OPR) (QUOTE I.S.TYPE))
(PUTPROP (QUOTE CLISP% ) (QUOTE MACRO) (QUOTE (X (CAR X))))
(PUTPROPS DWIMIFY FILEGROUP (DWIM WTFIX CLISP DWIMIFY))
(PRETTYCOMPRINT DWIMIFYCOMS)
(RPAQQ DWIMIFYCOMS ((FNS * DWIMIFYFNS) (VARS (DWIMIFYFLG (QUOTE EVAL))
 (DWIMCHECK#ARGSFLG T) (DWIMCHECKPROGLABELSFLG T) (!) (!!) (
COMPILEUSERFN (QUOTE COMPILEUSERFN)) (#CLISPARRAY 250) (RECORDHASHFLG 
T) (CLISPTRANFLG (QUOTE CLISP% )) (CLISPRETRANFLG)) (PROP CLISPWORD 
AND OR and or ! !! CREATE USING COPYING FETCH REPLACE create using 
copying fetch replace with of WITH OF CLISP clisp MATCH match) (COMS *
 IFCOMS) (COMS * I.S.COMS) (DECLARE: DONTCOPY (BLOCKS * DWIMBLOCKS)) (
P (PUTPROP (QUOTE CLISP% ) (QUOTE MACRO) (QUOTE (X (CAR X))))) (PROP 
FILEGROUP DWIMIFY) (DECLARE: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY 
COMPILERVARS (ADDVARS (NLAMA USEDFREE DWIMIFYFNS) (NLAML)))))
NIL
