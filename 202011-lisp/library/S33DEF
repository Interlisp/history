(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE (DEFPACKAGE "S33" (USE "LISP" "XCL" "RPC2")))
(il:filecreated "19-Sep-88 18:53:12" il:|{HULK:PARC:XEROX}<VANMELLE>LISP>S33DEF.;1| 5354   

      il:|changes| il:|to:|  (il:vars il:s33defcoms)

      il:|previous| il:|date:| "22-Apr-88 19:27:18" il:{eris}<vanmelle>system33>s33def.\;1)


; Copyright (c) 1988 by Xerox Corporation.  All rights reserved.

(il:prettycomprint il:s33defcoms)

(il:rpaqq il:s33defcoms ((il:* il:\; "Definition of System33 RPC program") (il:p (unless (il:getd (quote rpc2::xdr-read-array)) (il:filesload (il:sysload) il:rpcextension))) (il:structures file-loc-filter file-location id-loc locate-args locate-more-args locate-result op-handle progress-report) (il:variables *doc-id-size* *time-limit-origin*) (il:functions init-s33) (eval-when (il:load) (il:p (il:* il:\; "Declare program") (init-s33))) (il:prop (il:filetype il:makefile-environment) il:s33def)))



(il:* il:\; "Definition of System33 RPC program")


(unless (il:getd (quote rpc2::xdr-read-array)) (il:filesload (il:sysload) il:rpcextension))

(defstruct (file-loc-filter (:type list)) servers formats time-limit)

(defstruct file-location full-name (il:* il:\; "Full file name derived from FILE-SERVER & FILE-NAME") file-server file-name file-format start-byte nbytes time-limit)

(defstruct id-loc doc-id file-loc)

(defstruct (locate-args (:type list)) username locate-spec doc-id loc-filter buffer-size result-type)

(defstruct (locate-more-args (:type list)) handle buffer-size result-type)

(defstruct locate-result progress nmatches handle id-locs)

(defstruct (op-handle (:type list)) handle-id sequence-id)

(defstruct (progress-report (:type list)) work-done work-pending time-pending time-wait)

(defconstant *doc-id-size* 32 "Number of bytes in a document handle")

(defconstant *time-limit-origin* (il:idate "1-Jan-1970 00:00:00 GMT"))

(defun init-s33 nil (il:nill) (il:* il:\; "This is to keep the stupid DEFINE-REMOTE-PROGRAM expander from declaring the program N times") (define-remote-program (il:* il:\; "System 33 RPC spec") (quote system-33) 300003 3 (quote udp) (il:* il:\; "Program 300003 version 3 uses UDP protocol") :types (il:bquote ((doc-id (:opaque (il:\\\, *doc-id-size*) (unsigned-byte 8))) (file-location (:struct file-location (file-server :string) (il:* il:\; "Protocol[char] + server name") (file-name :string) (il:* il:\; "Server-relative file name") (file-format :string) (il:* il:\; "File format name (null if unknown)") (start-byte :unsigned) (il:* il:\; "Starting byte position in file") (nbytes :integer) (il:* il:\; "number of bytes or -1.  This is officially unsigned, but let's make it easy to read -1.") (time-limit :unsigned) (il:* il:\; "file valid until this = secs since 1-Jan-1970 GMT"))) (op-handle (:struct op-handle (il:* il:\; "Operation handle for LocateMore") (handle-id :unsigned) (sequence-id :unsigned))) (progress-report (:struct progress-report (il:* il:\; "Guess about how long operation will take.  values are -1 if unknown") (work-done :integer) (work-pending :integer) (il:* il:\; "Done = 0") (time-pending :integer) (il:* il:\; "est. seconds until completion") (time-wait :integer))) (il:* il:\; "est. seconds until next result") (file-loc-filter (:struct file-loc-filter (servers (:list-of :string)) (il:* il:\; "Desired protocols/servers (empty = any)") (formats (:list-of :string)) (il:* il:\; "Desired formats (empty = any)") (time-limit :unsigned) (il:* il:\; "File wanted until = secs since 1-Jan-1970 GMT"))) (locate-args (:struct locate-args (il:* il:\; "Argument for Locate procedure") (username :string) (il:* il:\; "user/client id") (locate-spec (:list-of :string)) (il:* il:\; "(program . args)") (doc-id doc-id) (il:* il:\; "Doc handle if applicable") (loc-filter file-loc-filter) (il:* il:\; "file location/format constraints") (buffer-size :integer) (il:* il:\; "Maximum result bytes") (result-type :integer) (il:* il:\; "Encodes what info to return"))) (locate-more-args (il:* il:\; "Args to LocateMore procedure") (:struct locate-more-args (handle op-handle) (il:* il:\; "Operation handle from Locate") (buffer-size :integer) (result-type :integer))) (id-loc (:struct id-loc (il:* il:\; "Part of Locate result") (doc-id doc-id) (il:* il:\; "Doc handle") (file-loc (:list-of file-location)))) (locate-result-struct (:struct locate-result (progress progress-report) (il:* il:\; "Completion status") (nmatches :integer) (il:* il:\; "Number of additional matches found") (handle op-handle) (il:* il:\; "Handle for LocateMore") (id-locs (:list-of id-loc)) (il:* il:\; "List of doc handles and/or file locations"))) (locate-result (il:* il:\; "Result of Locate: if successful a LOCATE-RESULT-STRUCT, else an error string") (:union :integer (0 locate-result-struct) (il:* il:\; "Successful result") (otherwise :string) (il:* il:\; "Error string"))))) :procedures (quote ((locate 1 (locate-args) (locate-result)) (locate-more 2 (locate-more-args) (locate-result)) (release-op 3 (op-handle) nil)))))
(eval-when (il:load)

(il:* il:\; "Declare program")

(init-s33)
)

(il:putprops il:s33def il:filetype :compile-file)

(il:putprops il:s33def il:makefile-environment (:readtable "XCL" :package (defpackage "S33" (:use "LISP" "XCL" "RPC2"))))
(il:putprops il:s33def il:copyright ("Xerox Corporation" 1988))
(il:declare\: il:dontcopy
  (il:filemap (nil)))
il:stop
