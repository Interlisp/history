(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "RPC2")
(il:filecreated "15-Nov-88 14:31:18" il:|{NB:PARC:XEROX}<NFS>SOURCES>RPCPORTMAPPER.;2| 2519   

      il:|changes| il:|to:|  (il:vars il:rpcportmappercoms)

      il:|previous| il:|date:| "16-Sep-88 18:38:56" il:|{NB:PARC:XEROX}<NFS>SOURCES>RPCPORTMAPPER.;1|
)


; Copyright (c) 1987, 1988 by Stanford University and Xerox Corporation.  All rights reserved.

(il:prettycomprint il:rpcportmappercoms)

(il:rpaqq il:rpcportmappercoms ((il:props (il:rpcportmapper il:makefile-environment il:filetype)) (eval-when (compile load eval) (il:structures mapsequence)) (il:functions portmapperdef) (eval-when (load) (il:p (portmapperdef)))))

(il:putprops il:rpcportmapper il:makefile-environment (:readtable "XCL" :package "RPC2"))

(il:putprops il:rpcportmapper il:filetype :compile-file)
(eval-when (compile load eval)

(defstruct mapsequence program vers protocol port)
)

(defun portmapperdef nil (il:* il:|;;| "Program that maps from programs to ports") (il:nill) (il:* il:\; "Keep DEFUN from expanding the DEFINE-REMOTE-PROGRAM macro any more than necessary") (when nil (il:* il:\; "This is what the result type of the DUMP protocol is formally specified as, but there's really no excuse for using this recursive definition in practice. ") (quote (mapstruct (:union :boolean (nil :void) (t (:struct mapstruct (program :unsigned) (vers :unsigned) (prot :unsigned) (port :unsigned) (therest mapstruct))))))) (define-remote-program (quote portmapper) 100000 2 (quote udp) :types (quote ((mapsequence (:sequence (:struct mapsequence (program :unsigned) (vers :unsigned) (protocol :unsigned) (port :unsigned)))))) :procedures (quote ((null 0 nil nil) (lookup 3 (:unsigned :unsigned :unsigned :unsigned) (:unsigned)) (dump 4 nil (mapsequence)) (indirect 5 (:unsigned :unsigned :unsigned :string) (:unsigned :string))))) (il:* il:|;;| "TCP version of same.  Sad that we need this redundancy.") (define-remote-program (quote tcpportmapper) 100000 2 (quote tcp) :types (quote ((mapsequence (:sequence (:struct mapsequence (program :unsigned) (vers :unsigned) (protocol :unsigned) (port :unsigned)))))) :procedures (quote ((null 0 nil nil) (lookup 3 (:unsigned :unsigned :unsigned :unsigned) (:unsigned)) (dump 4 nil (mapsequence)) (indirect 5 (:unsigned :unsigned :unsigned :string) (:unsigned :string))))))
(eval-when (load)

(portmapperdef)
)
(il:putprops il:rpcportmapper il:copyright ("Stanford University and Xerox Corporation" 1987 1988))
(il:declare\: il:dontcopy
  (il:filemap (nil)))
il:stop
