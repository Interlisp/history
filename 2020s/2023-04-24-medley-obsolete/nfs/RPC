(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE (DEFPACKAGE "RPC2" (USE "LISP" "XCL")))
(il:filecreated "27-Mar-89 14:51:07" il:{piglet/n}<piglet>nfs>sources>rpc\;4 5021   

      il:|changes| il:|to:|  (il:vars il:rpccoms) (il:variables *use-os-networking*) (il:functions rpc-around-exit)

      il:|previous| il:|date:| "13-Mar-89 14:36:20" il:{piglet/n}<piglet>nfs>sources>rpc\;3)


; Copyright (c) 1987, 1988, 1989 by Stanford University and Xerox Corporation.  All rights reserved.

(il:prettycomprint il:rpccoms)

(il:rpaqq il:rpccoms ((il:* il:|;;;;| "SUN REMOTE PROCEDURE CALLS") (il:* il:|;;;;| "Originally written by Jeff Finger at the SUMEX-AIM Computing Resource at Stanford University under support from National Institutes of Health Grant NIH 5P41 RR00785.") (il:* il:|;;;;| "Modified to work under Medley 1.0-S by Atty Mullins & Doug Cutting.") (il:* il:|;;;;| "Extensively revised by Bill van Melle") (il:props (il:rpc il:makefile-environment il:filetype)) (il:p (export (quote (define-remote-program undefine-remote-program remote-procedure-call call-via-portmapper create-unix-authentication setup-rpc perform-rpc open-rpcstream close-rpcstream list-remote-programs find-rpc-program find-rpc-procedure find-rpc-host xdr-make-opaque cache-socket clear-cache))) (export (quote (xdr-codegen xdr-codegen-1 xdr-read-boolean xdr-read-integer xdr-read-unsigned xdr-read-float xdr-read-string xdr-write-boolean xdr-write-integer xdr-write-unsigned xdr-write-float xdr-write-string xdr-gencode-inline))) (export (quote (udp tcp))) (export (quote (*debug* *compile-xdr-code* *xdr-primitive-types* *xdr-constructed-types* *rpc-programs* *msec-until-timeout* *msec-between-tries* *rpc-ok-to-cache* *rpc-socket-cache* *rpc-well-known-sockets* *rpc-protocol-types* *use-os-networking*)))) (il:variables *use-os-networking*) (il:functions rpc-around-exit) (eval-when (load) (il:appendvars (il:aroundexitfns rpc-around-exit)) (il:* il:\; "This is an APPENDVARS so that RPC-AROUND-EXIT runs FIRST at startup, before GREET in particular") (il:files (il:sysload) il:rpcstruct il:rpcrpc il:rpcxdr) (il:p (il:* il:\; "Load the appropriate transport.") (cond ((rpc-around-exit) (il:* il:\; "On Maiko") (il:filesload (il:sysload) il:rpcos)) (t (il:* il:\; "Load only UDP.  If you want to use RPC over TCP, you must load TCP yourself") (il:filesload (il:sysload) il:tcpllip il:tcpudp il:rpcudp)))) (il:files (il:sysload) il:rpcportmapper))))



(il:* il:|;;;;| "SUN REMOTE PROCEDURE CALLS")




(il:* il:|;;;;| 
"Originally written by Jeff Finger at the SUMEX-AIM Computing Resource at Stanford University under support from National Institutes of Health Grant NIH 5P41 RR00785."
)




(il:* il:|;;;;| "Modified to work under Medley 1.0-S by Atty Mullins & Doug Cutting.")




(il:* il:|;;;;| "Extensively revised by Bill van Melle")


(il:putprops il:rpc il:makefile-environment (:readtable "XCL" :package (defpackage "RPC2" (:use "LISP" "XCL"))))

(il:putprops il:rpc il:filetype :compile-file)

(export (quote (define-remote-program undefine-remote-program remote-procedure-call call-via-portmapper create-unix-authentication setup-rpc perform-rpc open-rpcstream close-rpcstream list-remote-programs find-rpc-program find-rpc-procedure find-rpc-host xdr-make-opaque cache-socket clear-cache)))

(export (quote (xdr-codegen xdr-codegen-1 xdr-read-boolean xdr-read-integer xdr-read-unsigned xdr-read-float xdr-read-string xdr-write-boolean xdr-write-integer xdr-write-unsigned xdr-write-float xdr-write-string xdr-gencode-inline)))

(export (quote (udp tcp)))

(export (quote (*debug* *compile-xdr-code* *xdr-primitive-types* *xdr-constructed-types* *rpc-programs* *msec-until-timeout* *msec-between-tries* *rpc-ok-to-cache* *rpc-socket-cache* *rpc-well-known-sockets* *rpc-protocol-types* *use-os-networking*)))

(defglobalparameter *use-os-networking* nil "If false, RPC will use Interlisp-D TCP/IP, if true RPC will use the host operating system's IPC mechanism.")

(defun rpc-around-exit (&optional event) (il:* il:|;;| "Set flag so when we wake up on Maiko we know to use RPCOS.  User still has to have loaded it, though.") (case event ((il:afterlogout il:aftersysout il:aftersavevm il:aftermakesys nil) (setq *use-os-networking* (eq (il:machinetype) (quote il:maiko)))) (t nil)))
(eval-when (load)

(il:appendtovar il:aroundexitfns rpc-around-exit)




(il:* il:\; 
"This is an APPENDVARS so that RPC-AROUND-EXIT runs FIRST at startup, before GREET in particular")



(il:filesload (il:sysload) il:rpcstruct il:rpcrpc il:rpcxdr)


(il:* il:\; "Load the appropriate transport.")

(cond ((rpc-around-exit) (il:* il:\; "On Maiko") (il:filesload (il:sysload) il:rpcos)) (t (il:* il:\; "Load only UDP.  If you want to use RPC over TCP, you must load TCP yourself") (il:filesload (il:sysload) il:tcpllip il:tcpudp il:rpcudp)))


(il:filesload (il:sysload) il:rpcportmapper)
)
(il:putprops il:rpc il:copyright ("Stanford University and Xerox Corporation" 1987 1988 1989))
(il:declare\: il:dontcopy
  (il:filemap (nil)))
il:stop
