(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)(FILECREATED "16-May-90 21:00:51" |{DSK}<usr>local>lde>lispcore>sources>PAINTW.;2| 15664        |changes| |to:|  (VARS PAINTWCOMS)      |previous| |date:| " 6-Dec-86 02:48:36" |{DSK}<usr>local>lde>lispcore>sources>PAINTW.;1|); Copyright (c) 1986, 1990 by Venue & Xerox Corporation.  All rights reserved.(PRETTYCOMPRINT PAINTWCOMS)(RPAQQ PAINTWCOMS       ((FNS PAINTW PAINTW.READMODE PAINTW.READBRUSHSHAPE PAINTW.READBRUSHSIZE PAINTW.READBRUSHSHADE             PAINTW.READBRUSHTEXTURE PAINTW.READ.AND.SAVE.SHADE PAINTW.CACHE.SHADE PAINTW.SHADE.LABEL             PAINTW.READCOMMAND)        (COMS (INITVARS (PAINTW.SHADES))              (GLOBALVARS PAINTW.SHADES))        (DECLARE\: DONTEVAL@LOAD DOCOPY (P (PAINTW.CACHE.SHADE BLACKSHADE)                                           (PAINTW.CACHE.SHADE GRAYSHADE)                                           (PAINTW.CACHE.SHADE HIGHLIGHTSHADE)))        (INITVARS (PAINTCOMMANDBRUSH '(ROUND 2))               (PAINTCOMMANDMODE 'PAINT)               (PAINTCOMMANDMENU)               (PAINTCOMMANDSHADE BLACKSHADE)               (PAINTSIZEMENU)               (PAINTSHAPEMENU)               (PAINTSHADEMENU)               (PAINTMODEMENU)               (PAINTWCURSOR))))(DEFINEQ(paintw  (lambda (window)                                           (* \; "Edited  4-Dec-86 23:19 by lmm")(* |;;;| "allows the user to paint with the cursor")(* |;;;| "should make sure cursor has moved or a button has change before proceeding with the inner loop.")(* |;;;| "has some of the stuff to allow the brush to be an arbitrary bitmap but not all.")    (setq window (\\insurewindow window))    (|printout| promptwindow "Left button paints;  Middle button erases.Right button pops up a command menu.To stop, select the QUIT command.")    (resetlst (resetsave nil (list 'cursor (cursor)))           (prog (ds bitsperpixel maskshade brush mask hotx hoty)                 (totopw window)                             (* \;                                                              "look for a previously stored brush.")                 (cond                    ((setq brush (windowprop window 'paintbrush))                     (setq paintcommandmode (car brush))                     (setq paintcommandshade (cadr brush))                     (setq paintcommandbrush (caddr brush))))                 (setq ds (|fetch| (window dsp) |of| window))                 (setq bitsperpixel (|fetch| (bitmap bitmapbitsperpixel) |of| (dspdestination nil ds)                                           ))                 (setq maskshade (selectq bitsperpixel                                     (1 blackshade)                                     (mask.1\'s 0 bitsperpixel)))             brushlp                 (setq brush (cond                                ((bitmapp paintcommandbrush))                                (t (\\getbrush paintcommandbrush))))                 (setq hotx (half (|fetch| (bitmap bitmapwidth) |of| brush)))                 (setq hoty (half (|fetch| (bitmap bitmapheight) |of| brush)))                 (setq paintwcursor                  (|create| cursor                         cuimage _ brush                         cumask _ brush                         cuhotspotx _ hotx                         cuhotspoty _ hoty                         cudata _ nil |using| paintwcursor))                 (cursor paintwcursor)                 (cond                    ((not (eq bitsperpixel 1))                     (cursorcolor paintcommandshade)))       (* \;                                                   "BRUSH can change if PAINTW is to color screen.  *")                 (setq brush (|fetch| (cursor cuimage) |of| paintwcursor))                 (setq mask (|fetch| (cursor cumask) |of| paintwcursor))             paintlp                 (getmousestate)                 (cond                    ((lastmousestate right)                     (cond                        ((or (inside? (dspclippingregion nil ds)                                    (lastmousex ds)                                    (lastmousey ds))                             (not (whichw lastmousex lastmousey)))                                                             (* \;                                                              "inside the interior, give command menu")                         (selectq (paintw.readcommand)                             (shade (setq paintcommandshade (or (paintw.readbrushtexture bitsperpixel                                                                       )                                                                paintcommandshade))                                    (go brushlp))                             (mode (setq paintcommandmode (or (paintw.readmode)                                                              paintcommandmode))                                   (go brushlp))                             (shape (rplaca paintcommandbrush (or (paintw.readbrushshape)                                                                  (car paintcommandbrush)))                                    (go brushlp))                             (size (rplaca (cdr paintcommandbrush)                                          (or (paintw.readbrushsize)                                              (cadr paintcommandbrush)))                                   (go brushlp))                             (quit (return))                             nil))                        (t                                   (* \; "do the window menu")                           (dowindowcom (whichw lastmousex lastmousey)))))                    ((and (lastmousestate left)                          (or (eq paintcommandmode 'replace)                              (not (eq paintcommandshade maskshade))))                                                             (* \;                                                              "painting in grey is slightly harder.")                     (cond                        ((eq paintcommandmode 'replace)      (* \; "erase what is there now")                         (bitblt mask 0 0 ds (idifference (lastmousex ds)                                                    hotx)                                (idifference (lastmousey ds)                                       hoty)                                nil nil 'input 'erase)       (* \; "put in grey")                         (bitblt brush 0 0 ds (idifference (lastmousex ds)                                                     hotx)                                (idifference (lastmousey ds)                                       hoty)                                nil nil 'merge 'paint paintcommandshade))                        (t (bitblt brush 0 0 ds (idifference (lastmousex ds)                                                       hotx)                                  (idifference (lastmousey ds)                                         hoty)                                  nil nil 'merge paintcommandmode paintcommandshade))))                    ((lastmousestate (or middle left))                     (bitblt brush 0 0 ds (idifference (lastmousex ds)                                                 hotx)                            (idifference (lastmousey ds)                                   hoty)                            nil nil 'input (cond                                              ((lastmousestate middle)                                               'erase)                                              (t paintcommandmode)))))                 (go paintlp))           (windowprop window 'paintbrush (list paintcommandmode paintcommandshade (copy                                                                                     paintcommandbrush                                                                                         ))))))(paintw.readmode  (lambda nil                                                (* |rrb| " 1-DEC-82 17:29")    (menu (cond             ((|type?| menu paintmodemenu)              paintmodemenu)             (t (setq paintmodemenu (|create| menu                                           items _ '((replace 'replace                                                      "the screen bits are replaced by the brush bits"                                                            )                                                     (invert 'invert                                                   "the screen bits inverted whereever brush bits are"                                                            )                                                     (add 'paint                                                  "the brush bits are added to the bits on the screen"                                                          )))))))))(paintw.readbrushshape  (lambda nil                                                (* |rrb| " 1-DEC-82 17:29")    (menu (cond             ((|type?| menu paintshapemenu)              paintshapemenu)             (t (setq paintshapemenu (|create| menu                                            items _ '(diagonal vertical horizontal square round))))))    ))(paintw.readbrushsize  (lambda nil                                                (* |rrb| " 1-DEC-82 17:30")    (menu (cond             ((|type?| menu paintsizemenu)              paintsizemenu)             (t (setq paintsizemenu (|create| menu                                           items _ '(16 8 4 2 1))))))))(paintw.readbrushshade  (lambda nil                                                (* |rrb| " 7-Oct-85 14:30")                                                             (* |reads| \a |shade|)    (prog (shade)                    (* i |removed| |the| 16\x16 |case| |because| paintw |uses| |merge| |mode| |and|           |the| |alignment| |of| 16\x16 |texture| |is| |off| |in| |that| |case.|          |When| |fixed| |at| |the| |menu| |item| ("16x16 shade"          (quote |16X16|) "Allows creation of a 16 bits by 16 bits shade"))          (selectq (setq shade (menu (|create| menu                                            centerflg _ t                                            title _ "Choose shade"                                            items _ (append (|for| fillpat |in| paintw.shades                                                               |collect| (list (car fillpat)                                                                               (kwote (cadr fillpat))                                                                                                                                                   "changes filling to this pattern"                                                                               ))                                                           '(("4 x 4 shade" '|4X4|                                                         "Allows creation of a 4 bits by 4 bits shade"                                                                    )))                                            menubordersize _ 1)))              (|4X4| (return (paintw.read.and.save.shade)))              (|16X16| (return (paintw.read.and.save.shade t)))              (return shade)))))(paintw.readbrushtexture  (lambda nil                                                (* |gbn:| "25-Jan-86 17:15")    (selectq (bitsperpixel \\cursordestination)        (1 (paintw.readbrushshade))        (menu (colormenu (bitsperpixel \\cursordestination))))))(paintw.read.and.save.shade  (lambda (16x16flg)                                         (* |rrb| " 4-Oct-85 11:34")                    (* |reads| \a |new| |filling,| |confirms| |it| |with| |the| |user| |and| |adds|           |it| |to| paintw.shades)    (prog (shade)          (cond             ((null (setq shade (editshade (cond                                              (16x16flg (bitmapcreate 16 16))))))                                                             (* |user| |aborted|)              (return nil)))          (paintw.cache.shade shade)          (return shade))))(paintw.cache.shade  (lambda (shade)                                            (* |rrb| " 4-Oct-85 11:32")                                                             (* |adds| \a |shade| |to| |the|                                                              |global| |cache.|)    (or (|for| entry |in| paintw.shades |when| (equal (cadr entry)                                                      shade) |do| (return t))        (cond           (paintw.shades (nconc1 paintw.shades (list (paintw.shade.label shade)                                                      shade)))           (t (setq paintw.shades (list (list (paintw.shade.label shade)                                              shade)))              'added)))))(paintw.shade.label  (lambda (filling)                                          (* |rrb| " 7-Oct-85 14:29")                    (* |creates| \a |bitmap| |label| |which| |fills| |it| |with| |the| |texture|           filling.)    (prog ((bm (bitmapcreate (plus 8 (stringwidth "4 x 4 shade" menufont))                      (fontprop menufont 'height))))          (bltshade filling bm)          (return bm))))(paintw.readcommand  (lambda nil                                                (* |gbn:| "25-Jan-86 16:35")    (menu (cond             ((|type?| menu paintcommandmenu)              paintcommandmenu)             (t (setq paintcommandmenu (|create| menu                                              items _ '((|SetMode| 'mode                                                     "Allows specification of how new bits are merged"                                                               )                                                        (|SetShade| 'shade                                                                "Allows specification of new shade.")                                                        (|SetShape| 'shape                                                                "Allows specification of brush shape")                                                        (|SetSize| 'size                                                              "Allows specification of the brush size"                                                               )                                                        (quit 'quit "Exits painting mode"))))))))))(RPAQ? PAINTW.SHADES )(DECLARE\: DOEVAL@COMPILE DONTCOPY(GLOBALVARS PAINTW.SHADES))(DECLARE\: DONTEVAL@LOAD DOCOPY (PAINTW.CACHE.SHADE BLACKSHADE)(PAINTW.CACHE.SHADE GRAYSHADE)(PAINTW.CACHE.SHADE HIGHLIGHTSHADE))(RPAQ? PAINTCOMMANDBRUSH '(ROUND 2))(RPAQ? PAINTCOMMANDMODE 'PAINT)(RPAQ? PAINTCOMMANDMENU )(RPAQ? PAINTCOMMANDSHADE BLACKSHADE)(RPAQ? PAINTSIZEMENU )(RPAQ? PAINTSHAPEMENU )(RPAQ? PAINTSHADEMENU )(RPAQ? PAINTMODEMENU )(RPAQ? PAINTWCURSOR )(PUTPROPS PAINTW COPYRIGHT ("Venue & Xerox Corporation" 1986 1990))(DECLARE\: DONTCOPY  (FILEMAP (NIL (1313 15038 (PAINTW 1323 . 8181) (PAINTW.READMODE 8183 . 9161) (PAINTW.READBRUSHSHAPE 9163 . 9545) (PAINTW.READBRUSHSIZE 9547 . 9888) (PAINTW.READBRUSHSHADE 9890 . 11695) (PAINTW.READBRUSHTEXTURE 11697 . 11976) (PAINTW.READ.AND.SAVE.SHADE 11978 . 12601) (PAINTW.CACHE.SHADE 12603 . 13386) (PAINTW.SHADE.LABEL 13388 . 13821) (PAINTW.READCOMMAND 13823 . 15036)))))STOP