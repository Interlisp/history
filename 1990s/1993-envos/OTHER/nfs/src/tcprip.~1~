(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "INTERLISP")(FILECREATED "27-Feb-90 12:23:59" "{piglet/n}<piglet>nfs>sources>TCPRIP;5" 27710        changes to%:  (FNS \IPINIT)      previous date%: " 6-Sep-89 16:22:28" "{piglet/n}<piglet>nfs>sources>TCPRIP;4")(* "Copyright (c) 1988, 1989, 1990 by Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT TCPRIPCOMS)(RPAQQ TCPRIPCOMS ((PROP MAKEFILE-ENVIRONMENT TCPRIP) (* ;; "Routing Information Protocol, RFC 1058") (DECLARE%: EVAL@COMPILE DONTCOPY (FILES (SOURCE) TCPEXPORTS (LOADCOMP) LLETHER TCPLLIP TCPLLAR) (LOCALVARS . T)) (COMS (* ; "ensure that IP is stopped before smashing the functions") (DECLARE%: FIRST DONTEVAL@LOAD DOCOPY (P (STOPIP)))) (COMS (* ;; "from TCPLLIP") (* ;; "changed: new gate listener process; new background process; new routing table structure.  The %"nosocket%" fn required modification because it checked a 255.255.255.255 address for address class and errored on discovering it was neither A, B, nor C class.  The raw IP handler needed modification to discard IP packets from net 0, something we have seen due to a bug in the Cisco Appletalk routing code.") (FNS \IPINIT \IP.RESTART.FROM.CONFIGURATION STOPIP \IP.ROUTE.PACKET \IP.DEFAULT.NOSOCKETFN \HANDLE.RAW.IP)) (COMS (* ;; "from LLETHER") (* ;; "changed: new protocol (IP), routing table ager modified to have %"different%" behaviour in an attempt to fix problem of NIL entries showing up in IP routing table (but, oddly, none of the other routing tables)") (FNS PRINTROUTINGTABLE \ROUTINGTABLE.INFOHOOK \AGE.ROUTING.TABLE)) (COMS (* ; "RIP handling functions") (FNS \HANDLE.IP.ROUTING.INFO \IPGATELISTENER \LOCATE.IPNET \ADD.IPROUTING.TABLE.ENTRY) (DECLARE%: EVAL@COMPILE DONTCOPY (* ; "constants") (CONSTANTS * RIPOPCONSTANTS) (CONSTANTS (\RIP.PORT 520) (\RIP.RIPINFO.WORDS 10) (\RIP.MIN.VERSION 1) (\RIP.FAMILY.IP 2)) (* ; "records") (RECORDS RIPINFO) (P (CL:PROCLAIM (QUOTE (CL:SPECIAL *IN-IP-BACKGROUND*))) (CL:PROCLAIM (QUOTE (GLOBAL BACKGROUNDFNS))))) (DECLARE%: DONTEVAL@LOAD DOCOPY (* ; "variables") (VARS (\IP.ROUTING.TABLE) (\IPROUTER.PROBETIMER (SETUPTIMER 0)) (\AR.WAKEUP.TIMER (SETUPTIMER 0)))) (GLOBALVARS \IP.ROUTING.TABLE \IPROUTER.PROBETIMER \AR.WAKEUP.TIMER) (INITVARS (\IP.ROUTING.TABLE.RADIUS 4) (\IPROUTER.PROBEINTERVAL 3000) (\IPROUTER.PROBECOUNT 0)) (GLOBALVARS \IP.ROUTING.TABLE.RADIUS \IPROUTER.PROBEINTERVAL \IPROUTER.PROBECOUNT)) (COMS (* ; "IP timer based processing ") (FNS \IPBACKGROUND) (VARS (*IN-IP-BACKGROUND*))) (COMS (* ; "restart IP handling with the new code") (DECLARE%: DONTEVAL@LOAD DOCOPY (P (\IPINIT))))))(PUTPROPS TCPRIP MAKEFILE-ENVIRONMENT (:PACKAGE "IL" :READTABLE "INTERLISP"))(* ;; "Routing Information Protocol, RFC 1058")(DECLARE%: EVAL@COMPILE DONTCOPY (FILESLOAD (SOURCE) TCPEXPORTS (LOADCOMP) LLETHER TCPLLIP TCPLLAR)(DECLARE%: DOEVAL@COMPILE DONTCOPY(LOCALVARS . T)))(* ; "ensure that IP is stopped before smashing the functions")(DECLARE%: FIRST DONTEVAL@LOAD DOCOPY (STOPIP))(* ;; "from TCPLLIP")(* ;; "changed: new gate listener process; new background process; new routing table structure.  The %"nosocket%" fn required modification because it checked a 255.255.255.255 address for address class and errored on discovering it was neither A, B, nor C class.  The raw IP handler needed modification to discard IP packets from net 0, something we have seen due to a bug in the Cisco Appletalk routing code.")(DEFINEQ(\IPINIT(LAMBDA (EVENT) (* ; "Edited  1-Sep-89 12:04 by bvm") (* ;; "Initialize IP protocol.  Called with EVENT NIL for explicit restart, RESTART from RESTART.ETHER, otherwise from usual around exit events via \ETHEREVENTFN and RESTARTETHERFNS after Pup and/or NS turned on.") (SELECTQ EVENT ((NIL RESTART AFTERSYSOUT AFTERMAKESYS AFTERLOGOUT AFTERSAVEVM) (if (AND (NULL \IPFLG) (NOT (NULL EVENT))) then (* ; "Nothing to do.  Only turn IP on for explicit call to \IPINIT") NIL else (* ; "Get fresh config info.  Note that even if we have woken up on the same machine as last time, the network could have changed.") (SETQ \IP.DEFAULT.CONFIGURATION NIL) (SETQ \IP.LOCAL.ADDRESSES NIL) (SETQ \IP.LOCAL.NETWORKS NIL) (SETQ \IP.SUBNET.MASKS NIL) (SETQ \AR.IP.TO.10MB.ALIST NIL) (if (FMEMB (QUOTE \IPBACKGROUND) BACKGROUNDFNS) then (SETQ BACKGROUNDFNS (REMOVE (QUOTE \IPBACKGROUND) BACKGROUNDFNS)) (LET ((P (FIND.PROCESS (QUOTE BACKGROUND)))) (if (AND P (PROCESS.EVALV P (QUOTE *IN-IP-BACKGROUND*))) then (* ; "Caught it in the middle of hacking arps.  Kill it off") (RESTART.PROCESS (QUOTE BACKGROUND))))) (DEL.PROCESS (QUOTE \IPGATELISTENER)) (SELECTQ EVENT ((NIL RESTART) (* ; "Can do it here--explicit manual restart.  Otherwise spawn process, so that we can do arbitrary things like rely on other devices initialized later than ether") (\IP.REINITIALIZE.FROM.SCRATCH)) (ADD.PROCESS (BQUOTE (\IP.REINITIALIZE.FROM.SCRATCH (QUOTE (\, EVENT)))))))) NIL)))(\IP.RESTART.FROM.CONFIGURATION(LAMBDA (EVENT NEW.INIT) (* ; "Edited 29-Aug-88 14:45 by Briggs") (* ; "Edited 18-Mar-88 17:17 by bvm") (* ;; "Reinitialize IP after logout, etc, from the info in the default configuration.  This is the only place that sets \IP.READY true.") (PROG ((GATE (fetch (IPINIT DEFAULT.GATEWAY) of \IP.DEFAULT.CONFIGURATION)) (NETS (fetch (IPINIT LOCAL.NETWORKS) of \IP.DEFAULT.CONFIGURATION)) PROC NDB) (SETQ \IP.DEFAULT.GATEWAY (AND GATE (\IP.READ.STRING.ADDRESS GATE))) (SETQ \IP.ROUTING.TABLE (\CLEAR.ROUTING.TABLE \IP.ROUTING.TABLE)) (SETQ \AR.IP.TO.10MB.ALIST NIL) (COND ((EQLENGTH NETS (LENGTH \IP.LOCAL.ADDRESSES)) (* ;; "List tells net numbers of each directly connected net.  Each element = (%"net.number%" . type).") (SETQ \IP.LOCAL.NETWORKS (bind NDB for NET.AND.TYPE in NETS as ADDRESS in \IP.LOCAL.ADDRESSES collect (LET* ((TYPE (CDR NET.AND.TYPE)) (NET (\IPNETADDRESS (\IP.READ.STRING.ADDRESS (CAR NET.AND.TYPE)))) (NDB (SELECTQ TYPE (3 \3MBLOCALNDB) (10 \10MBLOCALNDB) (SHOULDNT)))) (replace (NDB NDBIPNET#) of NDB with NET) (replace (NDB NDBIPHOST#) of NDB with ADDRESS) (CONS NET NDB))))) ((NULL \IP.LOCAL.ADDRESSES) (RETURN (CL:WARN "Error in IP init file.  No local host address specified"))) ((AND (NULL (CDR \IP.LOCAL.ADDRESSES)) (NULL (fetch (NDB NDBNEXT) of \LOCALNDBS))) (* ; "Only one address, so it goes with our one net") (SETQ \IP.LOCAL.NETWORKS (LIST (CONS (\IPNETADDRESS (CAR \IP.LOCAL.ADDRESSES)) (SETQ NDB (OR \10MBLOCALNDB \3MBLOCALNDB))))) (replace (NDB NDBIPNET#) of NDB with (CAAR \IP.LOCAL.NETWORKS)) (replace (NDB NDBIPHOST#) of NDB with (CAR \IP.LOCAL.ADDRESSES))) (T (RETURN (CL:WARN "Error in IP init file.  Network list and local address list do not correlate.")))) (SETQ \IP.SUBNET.MASKS (for LOCALADDR in \IP.LOCAL.ADDRESSES as MASK in (fetch (IPINIT SUBNETMASK) of \IP.DEFAULT.CONFIGURATION) as NETADDRESS in NETS collect (CONS LOCALADDR (\IP.READ.STRING.ADDRESS (OR MASK (CAR NETADDRESS)))))) (COND ((BOUNDP (QUOTE \DOMAIN.NAMESERVERS)) (\DOMAIN.INIT EVENT))) (\ADD.PACKET.FILTER (FUNCTION \HANDLE.RAW.IP)) (\ADD.PACKET.FILTER (FUNCTION \HANDLE.RAW.AR)) (SETQ \IPFLG T) (\IP.ADD.PROTOCOL \ICMP.PROTOCOL (FUNCTION TRUE) (FUNCTION NILL) (FUNCTION \ICMP.INPUT)) (COND ((SETQ PROC (FIND.PROCESS (QUOTE \IPGATELISTENER))) (RESTART.PROCESS PROC)) (T (ADD.PROCESS (QUOTE (\IPGATELISTENER)) (QUOTE RESTARTABLE) (QUOTE SYSTEM) (QUOTE AFTEREXIT) \IP.READY.EVENT))) (COND ((NOT (FMEMB (QUOTE \IPBACKGROUND) BACKGROUNDFNS)) (push BACKGROUNDFNS (QUOTE \IPBACKGROUND)))) (if (NOT NEW.INIT) then (* ; "Finally, check for new hosts.txt file, but we can do this in background.  If NEW.INIT, the configuration code has already read it.") (ADD.PROCESS (QUOTE (\IP.MAYBE.READ.HOSTS.TXT T)) (QUOTE AFTEREXIT) (QUOTE DELETE))) (SETQ \IP.READY T) (NOTIFY.EVENT \IP.READY.EVENT) (\ICMP.REQUEST.ADDRESS.MASK) (RETURN T))))(STOPIP(LAMBDA NIL (* ; "Edited 29-Aug-88 14:42 by Briggs") (\DEL.PACKET.FILTER (FUNCTION \HANDLE.RAW.IP)) (\DEL.PACKET.FILTER (FUNCTION \HANDLE.RAW.AR)) (DEL.PROCESS (QUOTE \IPGATELISTENER)) (SETQ BACKGROUNDFNS (DREMOVE (QUOTE \IPBACKGROUND) BACKGROUNDFNS)) (SETQ \IPFLG (SETQ \IP.READY NIL))))(\IP.ROUTE.PACKET(LAMBDA (IP READONLY) (* ; "Edited 28-Feb-89 17:29 by bvm") (* ;; "Encapsulates IP choosing the right network and immediate destination host.  Returns an NDB for the transmission.  Unless READONLY is true, defaults source and destination nets if needed") (DECLARE (GLOBALVARS \10MBLOCALNDB \3MBLOCALNDB \IP.LOCAL.NETWORKS \IP.SUBNET.MASKS)) (PROG ((DESTADDRESS (fetch (IP IPDESTINATIONADDRESS) of IP)) DESTNET SUBNETMASK SOURCEHOSTADDRESS SUBNETINUSE PDH ROUTE NDB EPTYPE BROADCASTP) (SETQ DESTNET (\IPNETADDRESS DESTADDRESS)) (* ;; "Try to resolve a destination network of 0.0 If we have two attached networks, fail.") (COND ((AND (EQ 0 DESTADDRESS) \10MBLOCALNDB \3MBLOCALNDB) (RETURN)) ((OR (EQ 0 DESTADDRESS) (EQ -1 DESTADDRESS)) (SETQ DESTADDRESS (\IP.MAKE.BROADCAST.ADDRESS (fetch NDBIPHOST# of (OR \10MBLOCALNDB \3MBLOCALNDB)))) (SETQ BROADCASTP T) (SETQ DESTNET (\IPNETADDRESS DESTADDRESS)))) (* ;; "First see if the destination network is one of our local networks") (COND ((AND (SETQ NDB (CDR (SASSOC DESTNET \IP.LOCAL.NETWORKS))) (SETQ SUBNETMASK (CDR (SASSOC (SETQ SOURCEHOSTADDRESS (fetch (NDB NDBIPHOST#) of NDB)) \IP.SUBNET.MASKS))) (OR (if NIL then (AND (\IP.BROADCAST.ADDRESS DESTADDRESS) (SETQ BROADCASTP T)) else BROADCASTP) (EQP (LOGAND SOURCEHOSTADDRESS SUBNETMASK) (LOGAND DESTADDRESS SUBNETMASK)) (PROGN (SETQ SUBNETINUSE T) NIL))) (* ;; "A local net.  Try to find the Ethernet address of the host") (COND ((SETQ PDH (SELECTQ (fetch (NDB NETTYPE) of NDB) (10 (SETQ EPTYPE \EPT.IP) (COND (BROADCASTP BROADCASTNSHOSTNUMBER) (T (\AR.TRANSLATE.TO.10MB DESTADDRESS)))) (3 (SETQ EPTYPE \EET.IP) (\AR.TRANSLATE.TO.3MB DESTADDRESS)) (SHOULDNT)))) (T (* ; "Nope") (RETURN)))) (T (* ;; "The host is not on a local net.  See if we have a route to that net") (COND ((SETQ ROUTE (\LOCATE.IPNET (if SUBNETINUSE then (LOGAND SUBNETMASK DESTADDRESS) else (SELECTQ (\IPADDRESSCLASS DESTADDRESS) (\IP.CLASS.A (LOGAND DESTADDRESS (MASK.0'S 0 24))) (\IP.CLASS.B (LOGAND DESTADDRESS (MASK.0'S 0 16))) (\IP.CLASS.C (LOGAND DESTADDRESS (MASK.0'S 0 8))) NIL)))) (* ; "test is probably incorrect for case when subnetting is not in use.") (SETQ NDB (fetch RTNDB of ROUTE)) (SETQ ROUTE (fetch RTGATEWAY# of ROUTE)) (* ;; "We've got the IP address of the gateway - see if we can get the physical address") (COND ((NULL (SETQ PDH (SELECTQ (fetch (NDB NETTYPE) of NDB) (10 (SETQ EPTYPE \EPT.IP) (\AR.TRANSLATE.TO.10MB ROUTE)) (3 (SETQ EPTYPE \EET.IP) (\AR.TRANSLATE.TO.3MB ROUTE)) (SHOULDNT)))) (RETURN)))) (T (RETURN))))) (freplace EPNETWORK of IP with NDB) (ENCAPSULATE.ETHERPACKET NDB IP PDH (ffetch (IP IPTOTALLENGTH) of IP) EPTYPE) (replace EPTYPE of IP with EPTYPE) (COND ((NOT READONLY) (COND ((EQ 0 (fetch (IP IPDESTINATIONADDRESS) of IP)) (freplace (IP IPDESTINATIONADDRESS) of IP with DESTADDRESS))) (freplace (IP IPSOURCEADDRESS) of IP with (fetch NDBIPHOST# of NDB)))) (RETURN NDB))))(\IP.DEFAULT.NOSOCKETFN(LAMBDA (IP) (* ; "Edited 21-Dec-88 12:39 by Briggs") (COND ((\IP.BROADCAST.ADDRESS (fetch (IP IPDESTINATIONADDRESS) of IP)) (COND (IPTRACEFLG (PRIN1 "&" IPTRACEFILE))) (\RELEASE.ETHERPACKET IP)) (T (\ICMP.DEST.UNREACHABLE IP \ICMP.PORT.UNREACHABLE)))))(\HANDLE.RAW.IP(LAMBDA (IP TYPE) (* ; "Edited 30-Jan-89 18:28 by Briggs") (PROG ((NDB (ffetch (ETHERPACKET EPNETWORK) of IP))) (COND ((NOT (type? NDB NDB)) (ERROR "No NDB in ETHERPACKET!" IP))) (SELECTQ (ffetch (NDB NETTYPE) of NDB) (10 (COND ((NEQ TYPE \EPT.IP) (RETURN)))) (3 (COND ((NEQ TYPE \EET.IP) (RETURN)))) (ERROR "Unknown net type" (ffetch (NDB NETTYPE) of NDB))) (COND ((NOT \IP.READY) (\RELEASE.ETHERPACKET IP)) ((NOT (\IP.CHECKSUM.OK (\IPCHECKSUM IP (ffetch (IP IPBASE) of IP) (TIMES (ffetch (IP IPHEADERLENGTH) of IP) BYTESPERCELL)))) (AND IPTRACEFLG (PRINTPACKET IP (QUOTE GET) IPTRACEFILE "[Packet dropped--bad IP header checksum]")) (\RELEASE.ETHERPACKET IP)) ((EQP 0 (\IPNETADDRESS (fetch (IP IPDESTINATIONADDRESS) of IP))) (AND IPTRACEFLG (PRINTPACKET IP (QUOTE GET) IPTRACEFILE "[Packet dropped--zero source net]")) (\RELEASE.ETHERPACKET IP)) ((ZEROP (ffetch (IP IPTIMETOLIVE) of IP)) (AND \IP.GATEWAY.FLG (\ICMP.TIME.EXCEEDED IP \ICMP.TRANSIT.TIME.EXCEEDED)) (\RELEASE.ETHERPACKET IP)) ((\IP.PROCESS.OPTIONS IP) (COND ((NOT (\IP.LOCAL.DESTINATION IP)) (\FORWARD.IP IP)) ((\IP.FRAGMENTED.PACKET IP) (COND ((SETQ IP (\HANDLE.RAW.IP.FRAGMENT IP)) (COND (IPTRACEFLG (COND ((EQ IPTRACEFLG T) (PRINTIP IP (QUOTE GETFRAGMENT) IPTRACEFILE NIL T)) (T (PRIN1 "+" IPTRACEFILE))))) (\IP.HAND.TO.PROTOCOL IP)))) (T (COND (IPTRACEFLG (COND ((EQ IPTRACEFLG T) (PRINTIP IP (QUOTE GET) IPTRACEFILE NIL T)) (T (PRIN1 "+" IPTRACEFILE))))) (\IP.HAND.TO.PROTOCOL IP))))) (RETURN T)))))(* ;; "from LLETHER")(* ;; "changed: new protocol (IP), routing table ager modified to have %"different%" behaviour in an attempt to fix problem of NIL entries showing up in IP routing table (but, oddly, none of the other routing tables)")(DEFINEQ(PRINTROUTINGTABLE(LAMBDA (TABLE SORTFLG FILE) (* ; "Edited 29-Aug-88 11:26 by Briggs") (* ; "Edited 29-Aug-88 11:23 by Briggs") (* ; "Edited 29-Aug-88 11:20 by Briggs") (* ; "Edited 29-Aug-88 11:19 by Briggs") (* ; "Edited 29-Aug-88 11:17 by Briggs") (* ; "Edited 29-Aug-88 11:16 by Briggs") (* ; "Edited 29-Aug-88 11:15 by Briggs") (* ; "Edited 29-Aug-88 11:13 by Briggs") (* ; "Edited 29-Aug-88 11:06 by Briggs") (* ; "Edited 15-Jan-88 02:41 by bvm") (SELECTQ TABLE (IP (SETQ TABLE \IP.ROUTING.TABLE)) (NS (SETQ TABLE \NS.ROUTING.TABLE)) ((NIL PUP) (SETQ TABLE \PUP.ROUTING.TABLE)) NIL) (\CHECK.ROUTING.TABLE TABLE) (SETQ FILE (\GETSTREAM FILE (QUOTE OUTPUT))) (LET ((ENTRIES (for I from 0 to \ROUTING.TABLE.MASK as (BASE _ TABLE) by (\ADDBASE BASE WORDSPERCELL) join (APPEND (\GETBASEPTR BASE 0)))) (TB (if \10MBLOCALNDB then (* ;; "There is at least one 10mb net on this machine, so gateways can be ns addresses, so leave lots of space.  Longest ns address is 0#177777.177777.177777# = 23 chars") (CONSTANT (+ 7 2 (NCHARS "0#177777.177777.177777#") 2)) elseif (EQ TABLE \IP.ROUTING.TABLE) then (* ;; "both %"net%" and gateway addresses could be as long as 255.255.255.255 = 15 characters") (CONSTANT (+ 2 (ITIMES 2 (NCHARS "255.255.255.255")) 2)) else (* ; "Gateways are pup numbers, max 3 digits, but we'll be generous and use 5") (CONSTANT (+ 2 (NCHARS "   Net#  Gateway  "))))) (DECP (AND (EQ TABLE \NS.ROUTING.TABLE) (EQ *NSADDRESS-FORMAT* :DECIMAL))) GATE NET) (printout FILE "   Net#" .CENTER (- TB 2) "Gateway" .TAB (- TB 2) "#Hops  Recent?" T) (for ENTRY in (COND (SORTFLG (SORT ENTRIES (if (EQ SORTFLG :HOPS) then (* ; "Sort by hops") (FUNCTION (LAMBDA (X Y) (< (fetch RTHOPCOUNT of X) (fetch RTHOPCOUNT of Y)))) else (* ; "Sort by net, which is car") T))) (T ENTRIES)) do (SETQ NET (fetch RTNET# of ENTRY)) (if DECP then (SPACES (- 7 (IMAX 4 (NCHARS NET))) FILE) (* ; "Right-justify nets that are shorter than 7 chars in decimal rep.  Everything is at least as long as 0-nnn.") (\NSADDRESS.PRINT.DECIMAL NET FILE) elseif (EQ TABLE \IP.ROUTING.TABLE) then (\IP.PRINT.ADDRESS NET FILE) (SPACES (ADD1 (- (CONSTANT (NCHARS "255.255.255.255")) (NCHARS (\IP.ADDRESS.TO.STRING NET)))) FILE) else (printout FILE |.I7.8| NET)) (COND ((NOT (SETQ GATE (fetch RTGATEWAY# of ENTRY))) (SPACES 4 FILE) (PRIN1 "---" FILE)) ((EQ TABLE \IP.ROUTING.TABLE) (\IP.PRINT.ADDRESS GATE FILE)) ((FIXP GATE) (printout FILE |.I7.8| GATE)) (T (SPACES 2 FILE) (PRIN3 GATE FILE))) (printout FILE .TAB TB |.I2| (fetch RTHOPCOUNT of ENTRY) (COND ((fetch RTRECENT of ENTRY) "     Yes") ((TIMEREXPIRED? (fetch RTTIMER of ENTRY)) "  timed out") (T "     No")) T))) (TERPRI FILE)))(\ROUTINGTABLE.INFOHOOK(LAMBDA (PROC BUTTON) (* ; "Edited 29-Aug-88 11:34 by Briggs") (* ; "Edited 29-Aug-88 11:33 by Briggs") (* ; "Edited 29-Aug-88 11:32 by Briggs") (* ; "Edited 29-Aug-88 11:31 by Briggs") (* ; "Edited 15-Jan-88 03:08 by bvm") (* ;; "Info hook for gate listener processes.  Displays routing table in a window.  We keep track of the window so as to reuse it.") (LET ((TYPE (PROCESSPROP PROC :PROTOCOL)) (WINDOW (PROCESSPROP PROC :WINDOW)) (TEDITP (GETD (QUOTE OPENTEXTSTREAM))) (FONT (FONTCREATE (QUOTE GACHA) 8)) TABLE STREAM NUMENTRIES) (SETQ NUMENTRIES (if (SETQ TABLE (SELECTQ TYPE (NS \NS.ROUTING.TABLE) (PUP \PUP.ROUTING.TABLE) (IP \IP.ROUTING.TABLE) NIL)) then (\CHECK.ROUTING.TABLE TABLE) (for I from 0 to \ROUTING.TABLE.MASK as (BASE _ TABLE) by (\ADDBASE BASE WORDSPERCELL) sum (LENGTH (\GETBASEPTR BASE 0))) else (* ; "Some other protocol?") 99)) (if (NOT WINDOW) then (PROCESSPROP PROC :WINDOW (SETQ WINDOW (CREATEW (GETBOXREGION (WIDTHIFWINDOW (TIMES (CHARWIDTH (CHARCODE X) FONT) (if \10MBLOCALNDB then (* ; "Let it get wide--see PRINTROUTINGTABLE") 50 elseif (EQ TABLE \IP.ROUTING.TABLE) then (* ; "will be quite wide") 50 else 36))) (HEIGHTIFWINDOW (TIMES (FONTPROP FONT (QUOTE HEIGHT)) (IMIN (ADD1 NUMENTRIES) (if TEDITP then (* ; "Doesn't have to be very tall, since we can scroll") 30 else 40))) T)) (CONCAT TYPE " Routing Info")))) (WINDOWPROP WINDOW :NAME (PROCESSPROP PROC (QUOTE NAME))) (* ; "Save process by name to avoid worrying about circular links") (WINDOWADDPROP WINDOW (QUOTE CLOSEFN) (FUNCTION (LAMBDA (WINDOW) (* ; "Forget the window once it's closed") (PROCESSPROP (WINDOWPROP WINDOW :NAME) :WINDOW NIL)))) else (CLEARW WINDOW)) (PRINTROUTINGTABLE TYPE (EQ BUTTON (QUOTE MIDDLE)) (SETQ STREAM (if TEDITP then (* ; "Faster to write to a core file first") (OPENSTREAM (QUOTE {NODIRCORE}) (QUOTE BOTH)) else (* ; "Write straight to the window") (DSPFONT FONT WINDOW) (WINDOWPROP WINDOW (QUOTE DSP))))) (if TEDITP then (OPENTEXTSTREAM STREAM WINDOW NIL NIL (BQUOTE (FONT (\, FONT) READONLY T)))))))(\AGE.ROUTING.TABLE(LAMBDA (TABLE) (* ; "Edited  1-Mar-89 16:43 by bvm") (* ;; "Call this every now and then to age the entries in a routing table.") (LET (BUCKET) (\CHECK.ROUTING.TABLE TABLE) (for I from 0 to \ROUTING.TABLE.MASK bind BUCKET do (* ; "Walk down %"hash%" table, scanning each bucket for entries that have expired") (if (SETQ BUCKET (\GETBASEPTR TABLE 0)) then (bind (TAIL _ BUCKET) PREV ENTRY do (COND ((OR (EQ (fetch RTHOPCOUNT of (SETQ ENTRY (CAR TAIL))) 0) (NOT (TIMEREXPIRED? (fetch RTTIMER of ENTRY)))) (* ; "Local net or not timed out yet.") (SETQ PREV TAIL)) ((fetch RTRECENT of ENTRY) (* ; "New entry, make it old") (replace RTRECENT of ENTRY with NIL) (SETUPTIMER \RT.TIMEOUTINTERVAL (fetch RTTIMER of ENTRY)) (SETQ PREV TAIL)) (\RT.PURGEFLG (* ; "Purge old entry") (if PREV then (RPLACD PREV (CDR TAIL)) else (* ; "Head of list") (\RPLPTR TABLE 0 (CDR TAIL))))) repeatwhile (SETQ TAIL (CDR TAIL)))) (SETQ TABLE (\ADDBASE TABLE WORDSPERCELL)))))))(* ; "RIP handling functions")(DEFINEQ(\HANDLE.IP.ROUTING.INFO(LAMBDA (UDP) (* ; "Edited 13-Jan-89 00:48 by Briggs") (* ; "Processes a routing information protocol packet  (RIP)") (COND ((AND (EQ (\GETBASEBYTE (fetch UDPCONTENTS of UDP) 0) \RIP.OP.RESPONSE) (IGEQ (\GETBASEBYTE (fetch UDPCONTENTS of UDP) 1) \RIP.MIN.VERSION)) (* ; "We only handle responses") (PROG ((HOST (fetch (IP IPSOURCEADDRESS) of UDP)) (NDB (fetch EPNETWORK of UDP)) (LENGTH (- (FOLDLO (- (fetch (UDP UDPLENGTH) of UDP) \UDPOVLEN) BYTESPERWORD) 2)) (BASE (\ADDBASE (fetch UDPCONTENTS of UDP) 2)) (TABLE \IP.ROUTING.TABLE) (MASK \ROUTING.TABLE.MASK) (RADIUS \IP.ROUTING.TABLE.RADIUS) ENTRY ADDRESS HOPS OLDHOPS RN BUCKET NEWTIMER RTNET) (* ;; "may want to ensure that HOST contains unique ip address to avoid creating fixps") (SETQ \IPROUTER.PROBECOUNT 0) (* ; "We got info from somewhere, so can stop probing") (while (>= LENGTH \RIP.RIPINFO.WORDS) do (if (EQ (fetch (RIPINFO FAMILY) of BASE) \RIP.FAMILY.IP) then (* ;; "only process the IP family addresses in the packet (not that there's likely to be anything else, but we'll follow at least some of the suggestions of RFC 1058)") (SETQ HOPS (fetch (RIPINFO %#HOPS) of BASE)) (SETQ ADDRESS (fetch (RIPINFO ADDRESS.HI) of BASE)) (* ;; "Look up this address in the routing table.  If we don't have an entry, and it's not a nearby net that we'd want to know about anyway, skip it.") (* ;; "TABLE is a naked array containing buckets of routing entries hashed by the low bits of the top half of the address.") (* ;; "We guarantee that the address will be a FIXP (by brute force, since it can be 0 in some cases)") (* ;; "We hash on bits of the %"bb%" byte for an address [aa.bb.cc.dd]") (COND ((OR (AND (SETQ BUCKET (\GETBASEPTR TABLE (UNFOLD (LOGAND ADDRESS MASK) WORDSPERCELL))) (when (AND (EQ (TYPENAME (SETQ RN (fetch RTNET# of (SETQ ENTRY (CAR BUCKET))))) (QUOTE FIXP)) (EQ (fetch (FIXP HINUM) of RN) ADDRESS) (EQ (fetch (FIXP LONUM) of RN) (fetch (RIPINFO ADDRESS.LO) of BASE))) do (RETURN T) repeatwhile (SETQ BUCKET (CDR BUCKET)))) (COND ((<= HOPS RADIUS) (\ADD.IPROUTING.TABLE.ENTRY TABLE (SETQ ENTRY (create ROUTING RTNET# _ (create FIXP HINUM _ (fetch (RIPINFO ADDRESS.HI) of BASE) LONUM _ (fetch (RIPINFO ADDRESS.LO) of BASE)) RTTIMER _ (SETUPTIMER 0)))) T))) (* ;; "Have an entry for this net.  Shall we accept the new info?") (COND ((EQ (SETQ OLDHOPS (fetch RTHOPCOUNT of ENTRY)) 0) (* ; "Don't touch the directly connected net")) ((COND ((AND (EQ NDB (fetch RTNDB of ENTRY)) (EQ HOST (fetch RTGATEWAY# of ENTRY))) (* ;; "Same net and gateway, so we'll want to update the hop count") T) ((OR (NOT (fetch RTRECENT of ENTRY)) (< HOPS OLDHOPS)) (* ;; "Shorter route than we had, or the old route was getting out of date.  Note we only smash these fields on this arm of the cond, since they're unchanged on the other arm.  Smashing there would be slow, especially since NDB's tend to have overflowed ref counts.  Also note OLDHOPS is NIL for brand new entry, which is why we check RECENT first.") (replace RTGATEWAY# of ENTRY with HOST) (replace RTNDB of ENTRY with NDB) T)) (replace RTHOPCOUNT of ENTRY with HOPS) (COND ((< HOPS \RT.INFINITY) (* ; "Hops at infinity means inaccessible, so don't encourage this entry to stick around.") (replace RTRECENT of ENTRY with T) (COND (NEWTIMER (* ; "Save repeatedly calling the clock--everyone can get the same timer.") (\BLT (fetch RTTIMER of ENTRY) NEWTIMER WORDSPERCELL)) (T (SETQ NEWTIMER (SETUPTIMER \RT.TIMEOUTINTERVAL (fetch RTTIMER of ENTRY)))))))))))) (SETQ LENGTH (- LENGTH \RIP.RIPINFO.WORDS)) (SETQ BASE (\ADDBASE BASE \RIP.RIPINFO.WORDS)))))) (\RELEASE.ETHERPACKET UDP)))(\IPGATELISTENER(LAMBDA NIL (* ; "Edited 29-Aug-88 12:10 by Briggs") (* ; "Edited 29-Aug-88 11:57 by Briggs") (* ; "Edited 15-Jan-88 03:00 by bvm") (PROG ((RIPSOCKET (UDP.OPEN.SOCKET \RIP.PORT T)) (TIMER (SETUPTIMER 0)) EVENT UDP BASE) (PROCESSPROP (THIS.PROCESS) (QUOTE INFOHOOK) (FUNCTION \ROUTINGTABLE.INFOHOOK)) (* ; "For info, print our routing table") (PROCESSPROP (THIS.PROCESS) :PROTOCOL (QUOTE IP)) (SETQ EVENT (UDP.SOCKET.EVENT RIPSOCKET)) LP (COND ((SETQ UDP (UDP.GET RIPSOCKET)) (\HANDLE.IP.ROUTING.INFO UDP) (BLOCK)) ((EQ (AWAIT.EVENT EVENT (COND ((> \IPROUTER.PROBECOUNT 0) \IPROUTER.PROBETIMER) (T TIMER)) T) EVENT) (GO LP))) (COND ((TIMEREXPIRED? TIMER) (\AGE.ROUTING.TABLE \IP.ROUTING.TABLE) (SETUPTIMER \RT.AGEINTERVAL TIMER))) (COND ((AND (> \IPROUTER.PROBECOUNT 0) (TIMEREXPIRED? \IPROUTER.PROBETIMER)) (* ; "Routing info desired.  Broadcast a routing request on each directly-connected net") (SETQ UDP (\ALLOCATE.ETHERPACKET)) (UDP.SETUP UDP -1 \RIP.PORT NIL RIPSOCKET) (UDP.APPEND.BYTE UDP \RIP.OP.REQUEST) (UDP.APPEND.BYTE UDP \RIP.MIN.VERSION) (UDP.APPEND.WORD UDP 0) (* ; "MBZ pad") (UDP.APPEND.CELL UDP 0) (* ; "address family identifier, MBZ pad") (UDP.APPEND.CELL UDP 0) (* ; "IP address=0: all nets") (UDP.APPEND.CELL UDP 0) (* ; "MBZ pad") (UDP.APPEND.CELL UDP 0) (* ; "MBZ pad") (UDP.APPEND.CELL UDP \RT.INFINITY) (* ; "infinite distance: all nets") (UDP.SEND RIPSOCKET UDP) (SETUPTIMER \IPROUTER.PROBEINTERVAL \IPROUTER.PROBETIMER) (SETQ \IPROUTER.PROBECOUNT (SUB1 \IPROUTER.PROBECOUNT)))) (GO LP))))(\LOCATE.IPNET(LAMBDA (IPADDRESS DONTPROBE) (* ; "Edited  1-Mar-89 14:30 by Briggs") (LET ((BUCKET (\GETBASEPTR \IP.ROUTING.TABLE (UNFOLD (LOGAND (fetch (FIXP HINUM) of IPADDRESS) \ROUTING.TABLE.MASK) WORDSPERCELL)))) (for DATA in BUCKET when (= (fetch (ROUTING RTNET#) of DATA) IPADDRESS) do (RETURN (AND (< (fetch RTHOPCOUNT of DATA) \RT.INFINITY) DATA)) finally (COND ((NOT DONTPROBE) (* ; "Insert an entry for the net, to be purged in 30 sec if router process hasn't filled it by then") (\ADD.IPROUTING.TABLE.ENTRY \IP.ROUTING.TABLE (create ROUTING RTNET# _ IPADDRESS RTHOPCOUNT _ \RT.INFINITY RTTIMER _ (SETUPTIMER 30000))) (SETQ \IPROUTER.PROBECOUNT 5) (SETQ \IPROUTER.PROBETIMER (SETUPTIMER 0 \IPROUTER.PROBETIMER)) (WAKE.PROCESS (QUOTE \IPGATELISTENER)) (BLOCK)))))))(\ADD.IPROUTING.TABLE.ENTRY(LAMBDA (TABLE ENTRY) (* ; "Edited  1-Sep-88 12:47 by Briggs") (* ;; "Add a new ENTRY to routing table TABLE.  TABLE is a naked pointer array whose elements (%"buckets%") are lists of routing entries.  Hash from the low bits of the TOP half of net number to one of these buckets.") (\CHECK.ROUTING.TABLE TABLE) (SETQ TABLE (\ADDBASE TABLE (UNFOLD (LOGAND (fetch (FIXP HINUM) of (fetch RTNET# of ENTRY)) \ROUTING.TABLE.MASK) WORDSPERCELL))) (* ; "Compute bucket location") (\RPLPTR TABLE 0 (CONS ENTRY (\GETBASEPTR TABLE 0))) ENTRY)))(DECLARE%: EVAL@COMPILE DONTCOPY (RPAQQ RIPOPCONSTANTS ((\RIP.OP.REQUEST 1) (\RIP.OP.RESPONSE 2) (\RIP.OP.TRACEON 3) (\RIP.OP.TRACEOFF 4) (\RIP.OP.SUNMICROSYSTEMS 5)))(DECLARE%: EVAL@COMPILE (RPAQQ \RIP.OP.REQUEST 1)(RPAQQ \RIP.OP.RESPONSE 2)(RPAQQ \RIP.OP.TRACEON 3)(RPAQQ \RIP.OP.TRACEOFF 4)(RPAQQ \RIP.OP.SUNMICROSYSTEMS 5)(CONSTANTS (\RIP.OP.REQUEST 1) (\RIP.OP.RESPONSE 2) (\RIP.OP.TRACEON 3) (\RIP.OP.TRACEOFF 4) (\RIP.OP.SUNMICROSYSTEMS 5)))(DECLARE%: EVAL@COMPILE (RPAQQ \RIP.PORT 520)(RPAQQ \RIP.RIPINFO.WORDS 10)(RPAQQ \RIP.MIN.VERSION 1)(RPAQQ \RIP.FAMILY.IP 2)(CONSTANTS (\RIP.PORT 520) (\RIP.RIPINFO.WORDS 10) (\RIP.MIN.VERSION 1) (\RIP.FAMILY.IP 2)))(DECLARE%: EVAL@COMPILE(BLOCKRECORD RIPINFO ((* ; "Format of each entry in an IP routing info packet") (FAMILY WORD) (NIL WORD) (ADDRESS FIXP) (NIL 4 WORD) (NIL WORD) (* ; "metric is actually a 32 bit word - we reduce fixp usage by taking only lower 16 bits since infinity = 16") (%#HOPS WORD)) (BLOCKRECORD RIPINFO ((NIL 2 WORD) (ADDRESS.HI WORD) (ADDRESS.LO WORD)))))(CL:PROCLAIM (QUOTE (CL:SPECIAL *IN-IP-BACKGROUND*)))(CL:PROCLAIM (QUOTE (GLOBAL BACKGROUNDFNS))))(DECLARE%: DONTEVAL@LOAD DOCOPY (RPAQQ \IP.ROUTING.TABLE NIL)(RPAQ \IPROUTER.PROBETIMER (SETUPTIMER 0))(RPAQ \AR.WAKEUP.TIMER (SETUPTIMER 0)))(DECLARE%: DOEVAL@COMPILE DONTCOPY(GLOBALVARS \IP.ROUTING.TABLE \IPROUTER.PROBETIMER \AR.WAKEUP.TIMER))(RPAQ? \IP.ROUTING.TABLE.RADIUS 4)(RPAQ? \IPROUTER.PROBEINTERVAL 3000)(RPAQ? \IPROUTER.PROBECOUNT 0)(DECLARE%: DOEVAL@COMPILE DONTCOPY(GLOBALVARS \IP.ROUTING.TABLE.RADIUS \IPROUTER.PROBEINTERVAL \IPROUTER.PROBECOUNT))(* ; "IP timer based processing ")(DEFINEQ(\IPBACKGROUND(LAMBDA NIL (* ; "Edited  1-Sep-89 12:04 by bvm") (COND ((TIMEREXPIRED? \AR.WAKEUP.TIMER) (LET ((*IN-IP-BACKGROUND* T)) (AND \IP.READY (\AR.DAEMON)) (SETQ \AR.WAKEUP.TIMER (SETUPTIMER (CONSTANT (IQUOTIENT \AR.SEARCH.TIMEOUT.INTERVAL 4)) \AR.WAKEUP.TIMER)))) ((TIMEREXPIRED? \IP.WAKEUP.TIMER) (\IP.CHECK.REASSEMBLY.TIMEOUTS) (SETQ \IP.WAKEUP.TIMER (SETUPTIMER \IP.WAKEUP.INTERVAL \IP.WAKEUP.TIMER)))))))(RPAQQ *IN-IP-BACKGROUND* NIL)(* ; "restart IP handling with the new code")(DECLARE%: DONTEVAL@LOAD DOCOPY (\IPINIT))(PUTPROPS TCPRIP COPYRIGHT ("Xerox Corporation" 1988 1989 1990))(DECLARE%: DONTCOPY  (FILEMAP (NIL (3475 12812 (\IPINIT 3485 . 4942) (\IP.RESTART.FROM.CONFIGURATION 4944 . 7817) (STOPIP 7819 . 8120) (\IP.ROUTE.PACKET 8122 . 11034) (\IP.DEFAULT.NOSOCKETFN 11036 . 11318) (\HANDLE.RAW.IP 11320 . 12810)) (13072 18782 (PRINTROUTINGTABLE 13082 . 15747) (\ROUTINGTABLE.INFOHOOK 15749 . 17802) (\AGE.ROUTING.TABLE 17804 . 18780)) (18822 25350 (\HANDLE.IP.ROUTING.INFO 18832 . 22458) (\IPGATELISTENER 22460 . 23998) (\LOCATE.IPNET 24000 .24781) (\ADD.IPROUTING.TABLE.ENTRY 24783 . 25348)) (27057 27490 (\IPBACKGROUND 27067 . 27488)))))STOP