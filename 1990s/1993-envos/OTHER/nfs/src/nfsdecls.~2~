(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "NFS")(IL:FILECREATED "17-Jul-90 16:33:01" IL:{DSK}<LISPFILES>ETHERNET>TCP>NFS>NFSDECLS.\;2 17369        IL:|previous| IL:|date:| "12-Oct-89 17:18:40" IL:{DSK}<LISPFILES>ETHERNET>TCP>NFS>NFSDECLS.\;1); Copyright (c) 1989, 1990 by Xerox Corporation.  All rights reserved.(IL:PRETTYCOMPRINT IL:NFSDECLSCOMS)(IL:RPAQQ IL:NFSDECLSCOMS           ((IL:PROP (IL:MAKEFILE-ENVIRONMENT IL:FILETYPE)                  IL:NFSDECLS)           (IL:VARIABLES BYTESPERPAGE LOGBYTESPERPAGE)           (IL:FUNCTIONS FIX-THIS)           (IL:COMS                                          (IL:* IL:\; "Protocol constants.  At least the ADDVARS has to be here, lest NFSCOMS be unloadable due to missing package")                  (IL:ADDVARS (RPC2:*XDR-PRIMITIVE-TYPES* (RFD-LIST READ-RFD-LIST . IL:SHOULDNT)                                     (INPUT-BUFFER READ-INPUT-BUFFER . IL:SHOULDNT)))                  (IL:VARIABLES *FATTR-SIZE* *COOKIE-SIZE*))           (IL:COMS                                          (IL:* IL:\; "Macros")                  (IL:FUNCTIONS NFS-RPC-CALL STRING-CONCAT STRING-FROM-INTEGER FATTR-BINARYP                          COPY-PATHNAME EVALCASE PROMPT-FORMAT GET-META-TIMESTAMP MOUNT-NAME)                  (IL:ADDVARS (IL:PRETTYEQUIVLST (EVALCASE . CASE)))                                                             (IL:* IL:\;                                                            "Some common record accessors")                  (IL:FUNCTIONS STREAM-DEVICE STREAM-EPAGE STREAM-EOFFSET STREAM-INFO                          STREAM-VALIDATION))           (IL:P (PROCLAIM '(SPECIAL IL:DEFAULTFILETYPE IL:FILING.ENUMERATION.DEPTH IL:FILELINELENGTH                                   IL:\\STREAM.DEFAULT.MAXBUFFERS IL:PROMPTWINDOW *READ-BUFFER*))                 (PROCLAIM '(GLOBAL IL:\\NOIMAGEOPS IL:\\IP.DEFAULT.CONFIGURATION                                    IL:*MAXIMUM-PACKET-SIZE* IL:\\FILEDEVICES)))           (IL:COMS                                          (IL:* IL:\; "NFS protocol enumeration values.  This lets us avoid converting to silly literals every time we read/write something")                  (IL:VARIABLES *NFS-STATUS-CODES* *NFS-FILE-TYPES* *NFS-MODE-BITS*)                  (IL:P                         (IL:* IL:|;;| "Define a constant for each of those.  By putting these here in the decls file, I assume compiler will compile them all away")                                                (IL:* IL:|;;| "Blecch.  I really should just do `(defconstant ,@trip) here, but I don't want the silly File Manager confused about where all those constants \"live\"")                        (IL:APPLY 'IL:CONSTANTS (MAPCAN #'(LAMBDA (TRIP)                                                                 (COND ((FIRST TRIP)                                                                        (SET (FIRST TRIP)                                                                             (SECOND TRIP))                                                                        (LIST (LIST (FIRST TRIP)                                                                                    (SECOND TRIP)))))                                                                 )                                                       (IF (BOUNDP '*NFS-STATUS-CODES*)                                                           *NFS-STATUS-CODES*                                                           (LET ((IL:DFNFLG T))                                                                                                                             (IL:* IL:\;                                                            "Stupid File Manager PROP...")                                                                (EVAL (IL:GETDEF '*NFS-STATUS-CODES*                                                                             'IL:VARIABLES)))))))                  (IL:CONSTANTS IL:* (PROGN *NFS-FILE-TYPES*))                  (IL:CONSTANTS IL:* (PROGN *NFS-MODE-BITS*)))           (IL:COMS                                          (IL:* IL:\; "More stuff to accelerate rpc calls.  A more thorough rpc compiler would save us some of this grief")                  (IL:FUNCTIONS MAKE-PROC-VECTOR)                  (IL:VARIABLES *NFS-PROC-INDICES* *MOUNT-PROC-INDICES*)                  (IL:CONSTANTS IL:* (PROGN *NFS-PROC-INDICES*))                  (IL:CONSTANTS IL:* (PROGN *MOUNT-PROC-INDICES*))                  (IL:P (PROCLAIM '(GLOBAL *MOUNT-PROGRAM* *MOUNT-PROC-VECTOR* *NFS-PROGRAM*                                           *NFS-PROC-VECTOR*))))           (IL:COMS                                          (IL:* IL:\; "Debugging stuff")                  (IL:VARIABLES *NFSDEVICEFNS*)                  (IL:COMMANDS IL:WHONOT))))(IL:PUTPROPS IL:NFSDECLS IL:MAKEFILE-ENVIRONMENT (:READTABLE "XCL" :PACKAGE "NFS"))(IL:PUTPROPS IL:NFSDECLS IL:FILETYPE :COMPILE-FILE)(DEFCONSTANT BYTESPERPAGE 512   "Number of bytes per 1100 memory page")(DEFCONSTANT LOGBYTESPERPAGE 9   "Bit shift of byte offset to get page offset")(DEFMACRO FIX-THIS (&BODY CODE)   `(PROGN ,@CODE))(IL:* IL:\; "Protocol constants.  At least the ADDVARS has to be here, lest NFSCOMS be unloadable due to missing package")(IL:ADDTOVAR RPC2:*XDR-PRIMITIVE-TYPES* (RFD-LIST READ-RFD-LIST . IL:SHOULDNT)                                            (INPUT-BUFFER READ-INPUT-BUFFER . IL:SHOULDNT))(DEFCONSTANT *FATTR-SIZE* 68   "Size of FATTR in bytes")(DEFCONSTANT *COOKIE-SIZE* 4   "Size of ReadFromDirectory cookie in bytes")(IL:* IL:\; "Macros")(DEFMACRO NFS-RPC-CALL (DINFO PROG PROC ARGLIST)   `(LET ((RPC2:*MSEC-UNTIL-TIMEOUT* *NFS-DEFAULT-TIMEOUT*))         (RPC2:PERFORM-RPC NIL ,PROG ,PROG ,PROC (OR (DEVICEINFO-RPCSTREAM ,DINFO)                                                     (SETF (DEVICEINFO-RPCSTREAM ,DINFO)                                                           (MAKE-NFS-RPC-STREAM (DEVICEINFO-HOST                                                                                 ,DINFO)                                                                  (DEVICEINFO-DESTADDR ,DINFO))))                ,ARGLIST                (NFSCREDENTIALS-CREDENTIALS (DINFO-CREDENTIALS ,DINFO)))))(DEFMACRO STRING-CONCAT (&BODY ARGS)   `(CONCATENATE 'STRING ,@ARGS))(DEFMACRO STRING-FROM-INTEGER (N)   `(WRITE-TO-STRING ,N :RADIX NIL :BASE 10))(DEFMACRO FATTR-BINARYP (FATTR)   `(NOT (EQL 0 (LOGAND (FATTR-MODE ,FATTR)                       *MODE-BINARY-P*))))(DEFMACRO COPY-PATHNAME (PATH)   `(IL:NCREATE 'PATHNAME ,PATH))(DEFMACRO EVALCASE (KEYFORM &REST CLAUSES)   (IL:* IL:|;;| "Version of CASE that uses the values of the keys instead of the keys themselves")   `(CASE ,KEYFORM        ,@(MAPCAR #'(LAMBDA (C)                           (CONS (COND                                    ((LISTP (FIRST C))                                     (MAPCAR #'EVAL (FIRST C)))                                    ((EQ (FIRST C)                                         'OTHERWISE)                                     'OTHERWISE)                                    (T (EVAL (FIRST C))))                                 (REST C)))                 CLAUSES)))(DEFMACRO PROMPT-FORMAT (&REST ARGS)   `(FORMAT IL:PROMPTWINDOW ,@ARGS))(DEFMACRO GET-META-TIMESTAMP ()   (IL:* IL:|;;| "Return a number that reflects \"now\" in seconds, for comparison purposes.  Portable way is get-universal-time")   '(IL:IDATE))(DEFMACRO MOUNT-NAME (UNIXPATH)   (IL:* IL:|;;| "Return a string to give to a mount/unmount call.  Really, this means turn the null string into \"/\"")   `(LET ((PATH ,UNIXPATH))         (IF (> (LENGTH PATH)                0)             PATH             "/")))(IL:ADDTOVAR IL:PRETTYEQUIVLST (EVALCASE . CASE))(IL:* IL:\; "Some common record accessors")(DEFMACRO STREAM-DEVICE (S)   `(IL:FETCH (STREAM IL:DEVICE) IL:OF ,S))(DEFMACRO STREAM-EPAGE (S)   `(IL:FETCH (STREAM IL:EPAGE) IL:OF ,S))(DEFMACRO STREAM-EOFFSET (S)   `(IL:FETCH (STREAM IL:EOFFSET) IL:OF ,S))(DEFMACRO STREAM-INFO (STREAM)   `(IL:FETCH (STREAM IL:F1) IL:OF ,STREAM))(DEFMACRO STREAM-VALIDATION (STREAM)   `(IL:FETCH (STREAM IL:VALIDATION) IL:OF ,STREAM))(PROCLAIM '(SPECIAL IL:DEFAULTFILETYPE IL:FILING.ENUMERATION.DEPTH IL:FILELINELENGTH                   IL:\\STREAM.DEFAULT.MAXBUFFERS IL:PROMPTWINDOW *READ-BUFFER*))(PROCLAIM '(GLOBAL IL:\\NOIMAGEOPS IL:\\IP.DEFAULT.CONFIGURATION IL:*MAXIMUM-PACKET-SIZE*                   IL:\\FILEDEVICES))(IL:* IL:\; "NFS protocol enumeration values.  This lets us avoid converting to silly literals every time we read/write something")(DEFGLOBALPARAMETER *NFS-STATUS-CODES*   '((NFS-OK 0 "Success")     (NIL 1 "Caller does not have ownership rights")     (NFS-ERR-NOENT 2 "No such file or directory")     (NIL 5 "I/O Error")     (NIL 6 "No such device or address")     (NFS-ERR-ACCES 13 "Permission denied")     (NFS-ERR-EXIST 17 "File already exists")     (NFS-ERR-CROSSDEV 18 "Operation crosses device boundaries")     (NIL 19 "No such device")     (NFS-ERR-NOTDIR 20 "Not a directory")     (NIL 21 "Is a directory")     (NIL 22 "Invalid argument")     (NIL 27 "File too large")     (NIL 28 "No space left on device")     (NIL 30 "File system is read-only")     (NIL 63 "File name is too long")     (NIL 66 "Directory is not empty")     (NFS-ERR-DQUOT 69 "Disk quota exceeded")     (NFS-ERR-STALE 70 "File handle is stale")     (NIL 71 "File system is not local to this server")     (NIL 99 "Write cache flushed"))   "Possible status replies from NFS protocol")(DEFGLOBALPARAMETER *NFS-FILE-TYPES*   '((NFNON 0)     (NFREG 1)     (NFDIR 2)     (NFBLK 3)     (NFCHR 4)     (NFLNK 5))   "Codes for the TYPE field of a fattr.")(DEFGLOBALPARAMETER *NFS-MODE-BITS*   '((*MODE-DIRECTORY* 16384)     (*MODE-REGULAR* 32768)     (*MODE-SET-GID* 1024)     (*MODE-INHERITABLE* 2047)                               (IL:* IL:\;                                 "Mask for the inheritable mode bits = #o3777 i.e., up thru set-gid")     (*MODE-PROTECTION* 4095)                                (IL:* IL:\;                                               "Mask for the bits that indicate protection = #o7777")     (*MODE-BINARY* 64)                                      (IL:* IL:\;                                         "The bit we set to indicate binary = #o100 = owner execute")     (*MODE-BINARY-P* 3657)                                  (IL:* IL:\;                    "Any of these imply binary.  #o7111 = Set-u, set-g, sticky plus executable bits")     (*MODE-NOT-BINARY* 438)                                 (IL:* IL:\;                                                            "All but the executable bits")     ))(IL:* IL:|;;| "Define a constant for each of those.  By putting these here in the decls file, I assume compiler will compile them all away")(IL:* IL:|;;| "Blecch.  I really should just do `(defconstant ,@trip) here, but I don't want the silly File Manager confused about where all those constants \"live\"")(IL:APPLY 'IL:CONSTANTS (MAPCAN #'(LAMBDA (TRIP)                                         (COND                                            ((FIRST TRIP)                                             (SET (FIRST TRIP)                                                  (SECOND TRIP))                                             (LIST (LIST (FIRST TRIP)                                                         (SECOND TRIP))))))                               (IF (BOUNDP '*NFS-STATUS-CODES*)                                   *NFS-STATUS-CODES*                                   (LET ((IL:DFNFLG T))      (IL:* IL:\;                                                            "Stupid File Manager PROP...")                                        (EVAL (IL:GETDEF '*NFS-STATUS-CODES* 'IL:VARIABLES))))))(IL:DECLARE\: IL:EVAL@COMPILE (IL:RPAQQ NFNON 0)(IL:RPAQQ NFREG 1)(IL:RPAQQ NFDIR 2)(IL:RPAQQ NFBLK 3)(IL:RPAQQ NFCHR 4)(IL:RPAQQ NFLNK 5)(IL:CONSTANTS (NFNON 0)       (NFREG 1)       (NFDIR 2)       (NFBLK 3)       (NFCHR 4)       (NFLNK 5)))(IL:DECLARE\: IL:EVAL@COMPILE (IL:RPAQQ *MODE-DIRECTORY* 16384)(IL:RPAQQ *MODE-REGULAR* 32768)(IL:RPAQQ *MODE-SET-GID* 1024)(IL:RPAQQ *MODE-INHERITABLE* 2047)(IL:RPAQQ *MODE-PROTECTION* 4095)(IL:RPAQQ *MODE-BINARY* 64)(IL:RPAQQ *MODE-BINARY-P* 3657)(IL:RPAQQ *MODE-NOT-BINARY* 438)(IL:CONSTANTS (*MODE-DIRECTORY* 16384)       (*MODE-REGULAR* 32768)       (*MODE-SET-GID* 1024)       (*MODE-INHERITABLE* 2047)       (*MODE-PROTECTION* 4095)       (*MODE-BINARY* 64)       (*MODE-BINARY-P* 3657)       (*MODE-NOT-BINARY* 438)))(IL:* IL:\; "More stuff to accelerate rpc calls.  A more thorough rpc compiler would save us some of this grief")(DEFMACRO MAKE-PROC-VECTOR (PROGNAME VECNAME INDICES)   (LET    ((INDICES (EVAL INDICES)))    `(PROGN      (SETQ ,VECNAME (MAKE-ARRAY ,(LENGTH INDICES)))         (IL:* IL:\;                    "Now for each index, set that slot of vecname to be the actual procedure object")      ,@(MAPCAR         #'(LAMBDA (INDEXPAIR)                               (IL:* IL:\;    "INDEXPAIR = (*procname* index).  Strip the *'s off the first element to get the procedure name")                  (LET ((CONST (SYMBOL-NAME (FIRST INDEXPAIR))))                       `(SETF (AREF ,VECNAME ,(SECOND INDEXPAIR))                              (RPC2:FIND-RPC-PROCEDURE                               ,PROGNAME                               ',(INTERN (SUBSEQ CONST 1 (1- (LENGTH CONST))))))))         INDICES))))(DEFGLOBALPARAMETER *NFS-PROC-INDICES*   '((*GET-FILE-ATTRIBUTES* 0)     (*SET-FILE-ATTRIBUTES* 1)     (*LOOKUP-FILE-NAME* 2)     (*READ-FROM-SYMBOLIC-LINK* 3)     (*FAST-READ-FROM-FILE* 4)     (*NULL-READ-FROM-FILE* 5)     (*FAST-WRITE-TO-FILE* 6)     (*CREATE-FILE* 7)     (*REMOVE-FILE* 8)     (*RENAME-FILE* 9)     (*CREATE-LINK-TO-FILE* 10)     (*CREATE-SYMBOLIC-LINK* 11)     (*CREATE-DIRECTORY* 12)     (*REMOVE-DIRECTORY* 13)     (*READ-FROM-DIRECTORY* 14))   "Procedures I want to access quickly with arbitrarily assigned indices")(DEFGLOBALPARAMETER *MOUNT-PROC-INDICES* '((*ADD-MOUNT-ENTRY* 0)                                               (*REMOVE-MOUNT-ENTRY* 1)                                               (*RETURN-EXPORT-LIST* 2))                                                                           "Procedures I want to access quickly with arbitrarily assigned indices")(IL:DECLARE\: IL:EVAL@COMPILE (IL:RPAQQ *GET-FILE-ATTRIBUTES* 0)(IL:RPAQQ *SET-FILE-ATTRIBUTES* 1)(IL:RPAQQ *LOOKUP-FILE-NAME* 2)(IL:RPAQQ *READ-FROM-SYMBOLIC-LINK* 3)(IL:RPAQQ *FAST-READ-FROM-FILE* 4)(IL:RPAQQ *NULL-READ-FROM-FILE* 5)(IL:RPAQQ *FAST-WRITE-TO-FILE* 6)(IL:RPAQQ *CREATE-FILE* 7)(IL:RPAQQ *REMOVE-FILE* 8)(IL:RPAQQ *RENAME-FILE* 9)(IL:RPAQQ *CREATE-LINK-TO-FILE* 10)(IL:RPAQQ *CREATE-SYMBOLIC-LINK* 11)(IL:RPAQQ *CREATE-DIRECTORY* 12)(IL:RPAQQ *REMOVE-DIRECTORY* 13)(IL:RPAQQ *READ-FROM-DIRECTORY* 14)(IL:CONSTANTS (*GET-FILE-ATTRIBUTES* 0)       (*SET-FILE-ATTRIBUTES* 1)       (*LOOKUP-FILE-NAME* 2)       (*READ-FROM-SYMBOLIC-LINK* 3)       (*FAST-READ-FROM-FILE* 4)       (*NULL-READ-FROM-FILE* 5)       (*FAST-WRITE-TO-FILE* 6)       (*CREATE-FILE* 7)       (*REMOVE-FILE* 8)       (*RENAME-FILE* 9)       (*CREATE-LINK-TO-FILE* 10)       (*CREATE-SYMBOLIC-LINK* 11)       (*CREATE-DIRECTORY* 12)       (*REMOVE-DIRECTORY* 13)       (*READ-FROM-DIRECTORY* 14)))(IL:DECLARE\: IL:EVAL@COMPILE (IL:RPAQQ *ADD-MOUNT-ENTRY* 0)(IL:RPAQQ *REMOVE-MOUNT-ENTRY* 1)(IL:RPAQQ *RETURN-EXPORT-LIST* 2)(IL:CONSTANTS (*ADD-MOUNT-ENTRY* 0)       (*REMOVE-MOUNT-ENTRY* 1)       (*RETURN-EXPORT-LIST* 2)))(PROCLAIM '(GLOBAL *MOUNT-PROGRAM* *MOUNT-PROC-VECTOR* *NFS-PROGRAM* *NFS-PROC-VECTOR*))(IL:* IL:\; "Debugging stuff")(DEFGLOBALPARAMETER *NFSDEVICEFNS*   '(CLEAR-SERVER-CACHE NFS-BREAKCONNECTION NFS-CLOSEFILE NFS-DELETEFILE NFS-DIRECTORYNAMEP            NFS-EVENTFN NFS-FILEINFOFN NFS-GENERATEFILES NFS-GETFILEINFO NFS-GETFILENAME NFS-HOSTNAMEP           NFS-NEXTFILEFN NFS-OPENFILE NFS-OPENP NFS-READPAGES NFS-RENAMEFILE NFS-UNREGISTERFILE            NFS-WRITEPAGES PRINT-DEVICEINFO PRINT-DIRINFO PRINT-FILEINFO PRINT-NFSPATH            RESET-NFS-CACHE-VARS RESET-NFSCREDENTIALS-CACHE)   "Functions called from 'literals' or otherwise undetected by Masterscope--for development.")(DEFCOMMAND IL:WHONOT ()   (SET-DIFFERENCE (IL:\. IL:WHO IL:IN (IL:FILECOMSLST 'IL:NFSDEVICE 'IL:FUNCTIONS)                          IL:IS NOT IL:CALLED)          *NFSDEVICEFNS*))(IL:PUTPROPS IL:NFSDECLS IL:COPYRIGHT ("Xerox Corporation" 1989 1990))(IL:DECLARE\: IL:DONTCOPY  (IL:FILEMAP (NIL)))IL:STOP