h12057s 00017/00013/00081d D 1.17 93/03/25 12:16:19 sybalsky 17 16c es 00001/00001/00093d D 1.16 92/07/24 10:44:18 sybalsky 16 15c retrofit of SGI & DEC OSF1 changes \nes 00000/00000/00094d D 1.15 92/05/26 13:45:04 sybalsky 15 14c fixing SCCS headers \nes 00031/00031/00063d D 1.14 92/04/22 10:17:47 sybalsky 14 13c shortening file names for DOS \nes 00001/00001/00093d D 1.13 92/03/06 18:17:44 sybalsky 13 12c Add -ldld to LDFLAGSes 00002/00002/00092d D 1.12 91/07/21 13:26:37 sybalsky 12 11c Change compile options from -g to -O2 for release.es 00000/00000/00094d D 1.11 91/03/07 19:54:16 sybalsky 11 10c Add -DBIGATOMS for 3 byte atom emulator.es 00023/00004/00071d D 1.10 91/02/20 17:30:01 sybalsky 10 9c co makefile-sunos4.sparces 00001/00001/00074d D 1.9 90/10/10 15:45:53 sybalsky 9 8c make it create the right defaults.es 00001/00001/00074d D 1.8 90/07/26 18:50:55 mitani 8 7c add -DNEW_STORAGE flages 00004/00002/00071d D 1.7 90/07/04 01:37:20 sybalsky 7 6c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00007/00012/00066d D 1.6 90/05/09 18:50:26 fuji 6 5c Takeshi: Color emulator put into ldemulti.es 00009/00009/00069d D 1.5 90/04/20 02:13:42 sybalsky 5 4c AIX:  shortening file names, bulk change.es 00002/00002/00076d D 1.4 90/04/18 11:39:30 sybalsky 4 3c Posix:  shorten tosfuncallmacro to tosfuncalles 00001/00001/00077d D 1.3 90/03/01 14:35:00 osamu 3 2c Mitsunori Matsuda adds -DSUNDISPLAY in DFLAGS. c -DSUNDISPLAY means lde uses Frame buffer. c Maiko-X codes need codes in -DDISPLAYBUFFER. So he adds new compile option.es 00002/00002/00076d D 1.2 90/02/06 18:29:04 osamu 2 1c chage DFLAGS CG6 -> DISPLAYBUFFERes 00078/00000/00000d D 1.1 90/02/06 18:10:37 osamu 1 0c date and time created 90/02/06 18:10:37 by osamueuUf e 0tTI 1# makefile-sunos4.sparc-multiI 6D 7#  %Z% %M% Version %I% (%G%). E 7I 7#  @(#) makefile-sunos4.sparc-multi Version 1.6 (5/9/90). E 7#E 6# Options for SunOS4 and SPARC for CG3 or CG6 D 2# Add -DCG6 in DFLAGSE 2I 2# Add -DDISPLAYBUFFER in DFLAGSE 2# ${RELEASENAME} is "sunos4.sparc-multi"# This is to make the %$#@! Apollo cc happyOEXT = .o# OPTFLAGS is normally -O2.D 6OPTFLAGS = -gE 6I 6D 10OPTFLAGS = -O2E 10I 10D 12OPTFLAGS = -gDISPOPTFLAGS = -gE 12I 12D 17OPTFLAGS = -O2DISPOPTFLAGS = -O2E 17I 17OPTFLAGS = -gDISPOPTFLAGS = -gE 17E 12E 10E 6FPFLAGS =D 2DFLAGS = -DKBINT -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DCG6E 2I 2D 3DFLAGS = -DKBINT -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DDISPLAYBUFFERE 3I 3D 6DFLAGS = -DKBINT -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DDISPLAYBUFFERE 6I 6# Now share the same ldemulti for Mono-Medley & Color-Medley# If you load MAIKOCOLOR.LCOM etc., you can use color functionsD 10D 7DFLAGS = -DKBINT -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DCOLOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DDISPLAYBUFFERE 7I 7D 8DFLAGS = -DKBINT -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DCOLOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DDISPLAYBUFFER -DFORKCOMME 8I 8DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DCOLOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DDISPLAYBUFFER -DFORKCOMME 10I 10## Removed for debug:  -DSPARCDISP -DSUN4_OS4_IL # Added for debug: -DFNSTKCHECK -DMYOPTRACE -DOPTRACE -DNOASM#D 16DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DOS4 -DOS4_TYPE4BUG -DCOLOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DSPARCDISP -DSUN4_OS4_IL -DBIGATOMS -DFORKCOMME 16I 16D 17DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DOS4 -DOS4_TYPE4BUG -DCOLOR -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DSPARCDISP -DSUN4_OS4_IL -DBIGATOMS -DFORKCOMM E 17I 17DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DOS4 -DOS4_TYPE4BUG -DCOLOR \	 -DDISPLAYBUFFER -DNEWBITBLT -DLOGINT -DSUNDISPLAY -DSPARCDISP \	 -DSUN4_OS4_IL -DBIGATOMS -DFORKCOMM -DBIGVM -DNEWCDRCODINGE 17E 16E 10E 8D 13LDFLAGS = -lsuntool -lsunwindow -lpixrect -lc -lmE 13I 13LDFLAGS = -lsuntool -lsunwindow -lpixrect -ldld -lc -lmE 13E 7E 6E 3E 2#-Dsparc?D 14INLINE = $(SRCDIR)dispSPARC.ilBITBLTFILE = $(OBJECTDIR)bitbltSPARC.oE 14I 14INLINE = $(SRCDIR)dspSPARC.ilBITBLTFILE = $(OBJECTDIR)bbtSPARC.oE 14OBJECTDIR = ../$(RELEASENAME)/I 7D 14COLORFILES = $(OBJECTDIR)colorbltfns.oE 14I 14COLORFILES = $(OBJECTDIR)rawcolor.oE 14E 7D 9default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeetherE 9I 9D 10default	: ../$(OSARCHNAME)lde ../$(OSARCHNAME)ldeetherE 10I 10default	: ../$(OSARCHNAME)/lde ../$(OSARCHNAME)/ldeetherE 10E 9# Special rules to create xc.c on Sun4#run cpp to expand macrosD 14$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \E 14I 14$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \E 14	 $(INCDIR)arith.h $(INCDIR)stream.h \D 14	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \D 4	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.hE 4I 4D 5	 $(INCDIR)tosfuncall.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)inlinedefs68K.hE 5I 5	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.hE 14I 14	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inln68k.hE 14E 5E 4	cc -Qproduce .i $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.i#run c compiler to produce first pass assembly$(OBJECTDIR)xc.s1:	$(OBJECTDIR)xc.i	rm -f $(OBJECTDIR)xc.s1	/lib/ccom - $(FPFLAGS) <$(OBJECTDIR)xc.i >$(OBJECTDIR)xc.s1#generate C program to remove dispatch loop, optimizeD 14$(OBJECTDIR)disphack.c: $(SRCDIR)disphack.lex	rm -f $(OBJECTDIR)disphack.c	lex -t $(SRCDIR)disphack.lex > $(OBJECTDIR)disphack.cE 14I 14$(OBJECTDIR)dsphack.c: $(SRCDIR)dsphack.lex	rm -f $(OBJECTDIR)dsphack.c	lex -t $(SRCDIR)dsphack.lex > $(OBJECTDIR)dsphack.cE 14#uses this program to find dispatchD 5$(OBJECTDIR)find-dispatch.c: $(SRCDIR)find-dispatch.lex	rm -f $(OBJECTDIR)find-dispatch.c	lex -t $(SRCDIR)find-dispatch.lex > $(OBJECTDIR)find-dispatch.cE 5I 5D 14$(OBJECTDIR)find-disp.c: $(SRCDIR)find-disp.lex	rm -f $(OBJECTDIR)find-disp.c	lex -t $(SRCDIR)find-disp.lex > $(OBJECTDIR)find-disp.cE 14I 14$(OBJECTDIR)find-dsp.c: $(SRCDIR)find-dsp.lex	rm -f $(OBJECTDIR)find-dsp.c	lex -t $(SRCDIR)find-dsp.lex > $(OBJECTDIR)find-dsp.cE 14E 5D 5$(OBJECTDIR)find-dispatch: $(OBJECTDIR)find-dispatch.c	cc -o $(OBJECTDIR)find-dispatch $(OBJECTDIR)find-dispatch.c -llE 5I 5D 14$(OBJECTDIR)find-disp: $(OBJECTDIR)find-disp.c	cc -o $(OBJECTDIR)find-disp $(OBJECTDIR)find-disp.c -llE 14I 14$(OBJECTDIR)find-dsp: $(OBJECTDIR)find-dsp.c	cc -o $(OBJECTDIR)find-dsp $(OBJECTDIR)find-dsp.c -llE 14E 5D 5$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-dispatch $(OBJECTDIR)xc.s1E 5I 5D 14$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-disp $(OBJECTDIR)xc.s1E 14I 14$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-dsp $(OBJECTDIR)xc.s1E 14E 5	rm -f $(OBJECTDIR)dispatch-label.cD 5	$(OBJECTDIR)find-dispatch < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 5I 5D 14	$(OBJECTDIR)find-disp < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 14I 14	$(OBJECTDIR)find-dsp < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 14E 5D 14$(OBJECTDIR)disphack: $(OBJECTDIR)disphack.c $(OBJECTDIR)dispatch-label.c	cc -o $(OBJECTDIR)disphack $(OBJECTDIR)dispatch-label.c $(OBJECTDIR)disphack.c -ll	rm -f $(OBJECTDIR)dispatch-label.o $(OBJECTDIR)disphack.oE 14I 14$(OBJECTDIR)dsphack: $(OBJECTDIR)dsphack.c $(OBJECTDIR)dispatch-label.c	cc -o $(OBJECTDIR)dsphack $(OBJECTDIR)dispatch-label.c $(OBJECTDIR)dsphack.c -ll	rm -f $(OBJECTDIR)dispatch-label.o $(OBJECTDIR)dsphack.oE 14D 14$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s1 $(OBJECTDIR)disphackE 14I 14$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s1 $(OBJECTDIR)dsphackE 14	rm -f $(OBJECTDIR)xc.s2D 14	$(OBJECTDIR)disphack < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)xc.s2E 14I 14	$(OBJECTDIR)dsphack < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)xc.s2E 14$(OBJECTDIR)xc.s3:	$(OBJECTDIR)xc.s2 $(INLINE)	rm -f $(OBJECTDIR)xc.s3	/usr/lib/inline -i $(INLINE) < $(OBJECTDIR)xc.s2 > $(OBJECTDIR)xc.s3D 17$(OBJECTDIR)xc.o: $(OBJECTDIR)xc.s3	/bin/as -o $(OBJECTDIR)xc.o -O1 $(OBJECTDIR)xc.s3E 17I 17#$(OBJECTDIR)xc.o: $(OBJECTDIR)xc.s3#	/bin/as -o $(OBJECTDIR)xc.o -O1 $(OBJECTDIR)xc.s3E 17I 10##############	SPECIAL xc.o  for debugging#############D 14#$(OBJECTDIR)xc.o:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h#  $(INCDIR)address.h \#	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \#	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \#	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \E 14I 14D 17#$(OBJECTDIR)xc.o:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h#  $(INCDIR)address.h \#	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \#	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \#	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \E 14#	 $(INCDIR)arith.h $(INCDIR)stream.h \D 14#	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \#	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   E 14I 14#	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \#	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   E 14#	cc $(DISPRFLAGS) $(SRCDIR)xc.c -I$(INCDIR) -o $(OBJECTDIR)xc.oE 17I 17$(OBJECTDIR)xc.o:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h \	 $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h \	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   	cc $(DISPRFLAGS) -UOPDISP -USPARCDISP  $(SRCDIR)xc.c -I$(INCDIR) -o $(OBJECTDIR)xc.oE 17E 10D 6E 6E 1