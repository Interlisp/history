h21569s 00002/00002/01029d D 1.72 93/03/25 12:17:24 sybalsky 72 71c es 00000/00005/01031d D 1.71 92/10/29 04:42:13 sybalsky 71 70c remove atom.c from build; no longer used (had atomcell op in it, now in inlineC)es 00006/00003/01030d D 1.70 92/07/24 10:44:35 sybalsky 70 69c retrofit of SGI & DEC OSF1 changes \nes 00003/00003/01030d D 1.69 92/05/26 16:45:11 root 69 68c Comment out long-file-name targets, to force new short names.es 00002/00002/01031d D 1.68 92/04/29 12:44:05 nilsson 68 67c es 00341/00341/00692d D 1.67 92/04/22 10:18:01 sybalsky 67 66c shortening file names for DOS \nes 00001/00001/01032d D 1.66 92/03/11 15:46:49 nilsson 66 65c fix of missplaced dldes 00012/00000/01021d D 1.65 92/03/04 19:07:11 nilsson 65 64c New files included to facilitate foreign function callses 00001/00001/01020d D 1.64 91/08/28 15:42:22 sybalsky 64 63c Use CFLAGS when compiling makevdate, so that SYSV dependencies can be allowed for.es 00008/00000/01013d D 1.63 91/08/26 14:59:05 sybalsky 63 62c Add CLX driver files for sockets.es 00002/00002/01011d D 1.62 91/08/16 18:19:38 sybalsky 62 61c es 00014/00001/00999d D 1.61 91/06/11 13:33:00 gadener 61 60c Added installation and medley scriptses 00019/00019/00981d D 1.60 91/04/16 17:48:37 sybalsky 60 59c Retrofit savoir changes - Make RSH ldeether work optional.es 00017/00010/00983d D 1.59 91/04/04 14:57:07 sybalsky 59 58c Make 'rsh python' in ldeether not stop the Make if it fails (so we can build on other platforms, where there's no python around...)es 00002/00002/00991d D 1.58 91/01/28 17:27:23 gadener 58 57c Only need 1 usermakefile per Sunos and architecturees 00028/00032/00965d D 1.57 91/01/28 17:24:57 sybalsky 57 56c retrofit HP9000 changes.,es 00003/00003/00994d D 1.56 90/09/18 23:59:37 sybalsky 56 55c Retrofit changes from RS/6000, DEC3100, PS/2es 00005/00001/00992d D 1.55 90/08/24 16:54:10 sybalsky 55 54c Add a target to 'release' set, so that lde gets made for release directories.es 00013/00002/00980d D 1.54 90/07/26 11:36:32 sybalsky 54 53c Add 'init' as a make targetes 00002/00002/00980d D 1.53 90/07/06 12:12:54 sybalsky 53 52c Add dependency for XWindowMgr & XKbdMouse on dbprint.hes 00145/00034/00837d D 1.52 90/07/04 01:37:46 sybalsky 52 51c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00001/00001/00870d D 1.51 90/06/15 17:03:26 mitani 51 50c gvar2.o depends on lisptypes.hes 00114/00114/00757d D 1.50 90/05/30 11:24:08 sybalsky 50 49c es 00008/00000/00863d D 1.49 90/05/14 12:07:30 fuji 49 48c add rules for llcolor.ces 00013/00000/00850d D 1.48 90/05/09 18:51:05 fuji 48 47c Takeshi: Color emulator put into ldesingle/ldemulti.es 00003/00001/00847d D 1.47 90/04/24 19:42:15 osamu 47 46c move INSDIR definition to makerightes 00029/00029/00819d D 1.46 90/04/20 02:14:13 sybalsky 46 45c AIX:  shortening file names, bulk change.es 00007/00005/00841d D 1.45 90/04/19 18:31:56 mitani 45 44c ufs.o dsk.o directory.o dependency changedes 00003/00003/00843d D 1.44 90/04/02 17:18:29 sybalsky 44 43c more dependencieses 00012/00012/00834d D 1.43 90/03/27 14:31:30 sybalsky 43 42c add dependency on fp.h where float-rounding can happen.es 00007/00001/00839d D 1.42 90/03/22 10:49:58 sybalsky 42 41c make inintdisplay.c depend on inline filees 00007/00007/00833d D 1.41 90/03/15 15:14:36 sybalsky 41 40c make files that use INLINE code depend on $(INLINE).es 00001/00001/00839d D 1.40 90/03/13 18:58:53 sybalsky 40 39c make byteswapfns.c use INLINE code in it.es 00000/00000/00840d D 1.39 90/03/05 13:09:17 sybalsky 39 38c more .h file dependencieses 00002/00001/00838d D 1.38 90/03/02 11:26:33 sybalsky 38 37c Added header-file dependencies for dspsubrs.ces 00001/00001/00838d D 1.37 90/02/08 16:17:04 osamu 37 36c add display.h in dependency of misc7.ces 00046/00020/00793d D 1.36 89/12/29 13:05:42 sybalsky 36 35c Savoir changes -- add inet, chardevice, loopsops, plus dbprint.h dependencies, testsysout & setsysout targets.es 00047/00048/00766d D 1.35 89/10/19 18:05:25 sybalsky 35 34c add loopsops, chardevice, misc7, testsysout and setsysout targets.es 00045/00008/00769d D 1.34 89/08/12 11:31:55 shih 34 33c better conditionals for colores 00007/00000/00770d D 1.33 89/05/15 17:28:52 sybalsky 33 32c added mvs.c to the build, to support VALUES opcode.es 00002/00002/00768d D 1.32 89/03/28 00:43:37 sybalsky 32 31c gcscan and lowlevel1 now rely on lisptypes.hes 00004/00004/00766d D 1.31 89/03/27 17:54:58 shih 31 30c added fp.h to rules for fp.c, ubf*.h (as needed)es 00002/00002/00768d D 1.30 89/03/27 13:19:44 sybalsky 30 29c cd ../srces 00001/00001/00769d D 1.29 89/03/24 02:04:09 shih 29 28c interruptcall.o depends on fp.c? mistake fixedes 00001/00001/00769d D 1.28 89/03/23 19:01:55 shih 28 27c added dbprint to timer.ces 00001/00001/00769d D 1.27 89/03/18 03:37:06 sybalsky 27 26c hardreturn depends on lisptypes now, for GETWORD.es 00001/00001/00769d D 1.26 89/03/16 12:06:56 sybalsky 26 25c Making things depend on lisptypes.h, for the byte-swapped accessors.es 00001/00001/00769d D 1.25 89/03/15 17:31:37 sybalsky 25 24c loadsysout.c now depends on lisptypes.h also.es 00006/00000/00764d D 1.24 89/03/13 14:52:27 snow 24 23c added instructions on making INIT ldees 00000/00006/00764d D 1.23 89/03/06 18:03:23 shih 23 22c duplicate entry for testdisplayes 00002/00002/00768d D 1.22 89/03/03 04:20:27 shih 22 21c added address68k.h to loadsysout.ces 00006/00000/00758d D 1.21 89/03/03 03:19:32 shih 21 20c no changeses 00006/00000/00758d D 1.20 89/03/03 03:19:28 shih 20 19c turn on debug flag for testdisplayes 00001/00001/00757d D 1.19 89/03/02 20:28:15 shih 19 18c added dbprint.h to loadsysout.ces 00001/00001/00757d D 1.18 89/03/02 20:20:25 shih 18 17c added dbprint to initdisplay.ces 00002/00000/00756d D 1.17 89/03/02 11:49:43 sybalsky 17 16c Added sxhash.c, with hashing opcodes in it.es 00008/00002/00748d D 1.16 89/02/17 18:40:50 sybalsky 16 15c ci subr.ces 00002/00002/00748d D 1.15 89/01/27 02:14:35 shih 15 14c disp68K.il should be $(INLINE)es 00004/00002/00746d D 1.14 89/01/12 19:48:19 shih 14 13c fixup of checksum files (copied, chmod 755)es 00028/00002/00720d D 1.13 89/01/12 19:42:56 shih 13 12c added rule to update checksumdires 00070/00070/00652d D 1.12 88/12/23 14:44:59 shih 12 11c previous rename incorrectes 00002/00003/00720d D 1.11 88/12/23 13:35:37 shih 11 10c renamed gcreclaimcodeblock, systemcallmessage (ar complains), removed loader.c (breaks 3.2 make)es 00005/00002/00718d D 1.10 88/12/09 21:45:48 sybalsky 10 9c Added compile info for byteswap.c & byteswap fileses 00009/00009/00711d D 1.9 88/11/28 15:28:29 bane 9 8c vdate.{c,o} now lives in the object directory where it belongses 00002/00002/00718d D 1.8 88/11/17 11:23:56 bane 8 7c For some strange reason, Ctest.o didn't depend on Ctest.c...es 00001/00002/00719d D 1.7 88/11/15 12:35:32 shih 7 6c changed name of release install directoryes 00089/00089/00632d D 1.6 88/11/10 16:01:06 bane 6 5c Added OEXT to all cc ... foo.o commands to make Apollo happyes 00001/00001/00720d D 1.5 88/11/09 16:58:57 bane 5 4c removed loader.c (dynamic native code) from ldees 00003/00003/00718d D 1.4 88/11/09 11:08:08 bane 4 3c removed loader.c from system (native code dynamic loader)es 00026/00001/00695d D 1.3 88/11/07 18:13:38 krivacic 3 2c add miscn.ces 00002/00002/00694d D 1.2 88/11/03 18:02:39 shih 2 1c rule for keymaker program was incorrect (paths all wrong)es 00696/00000/00000d D 1.1 88/10/18 15:46:00 bane 1 0c date and time created 88/10/18 15:46:00 by baneeuUf e 0tTI 1# remainder of makefileD 60I 54D 59##***********************************************************************/##									*/##	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*/##									*/##	This file is work-product resulting from the Xerox/Venue	*/##	Agreement dated 18-August-1989 for support of Medley.		*/##									*/##***********************************************************************/E 59I 59/************************************************************************//*									*//*	(C) Copyright 1989, 1990, 1991 Venue. All Rights Reserved.	*//*	Manufactured in the United States of America.			*//*									*//*	The contents of this file are proprietary information 		*//*	belonging to Venue, and are provided to you under license.	*//*	They may not be further distributed or disclosed to third	*//*	parties without the specific permission of Venue.		*//*									*//************************************************************************/E 60I 60######***********************************************************************/##									*/##	(C) Copyright 1989, 1990, 1991 Venue. All Rights Reserved.	*/##	Manufactured in the United States of America.			*/##									*/##	The contents of this file are proprietary information 		*/##	belonging to Venue, and are provided to you under license.	*/##	They may not be further distributed or disclosed to third	*/##	parties without the specific permission of Venue.		*/##									*/##***********************************************************************/####E 60E 59E 54I 3# NOTE:  to add a NEW object file you must#		1.	Add the file.o to one of the object file lists,#			(i.e. OFILES, GCFILES, DEVICES, etc).#		2.	Add the "how to make" & dependency info such as:##	$(OBJECTDIR)<<file-name>>.o :  $(SRCDIR)<<file-name>>.c \#		 $(INCDIR)lispemul.h  \D 67#		 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \#		 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \E 67I 67#		 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \#		 $(INCDIR)stack.h  $(INCDIR)emlglob.h  $(INCDIR)lispmap.h \E 67D 12#		 $(INCDIR)gc.h E 12I 12#		 $(INCDIR)gc.hE 12D 50#		cc $(RFLAGS) $(SRCDIR)<<file-name>>.c $(INLINE) -o $(OBJECTDIR)<<file-name>>.oE 50I 50#		$(CC) $(RFLAGS) $(SRCDIR)<<file-name>>.c $(INLINE) -o $(OBJECTDIR)<<file-name>>.oE 50I 24# to build sysouts on the sun, you must do the following:#	1. setenv OPTFLAGS '-DINIT -g'#	2. rm objectdir/bitblt.c objectdir/dspsubrs.c objectdir/keyevent.c#	3. makeright -e init#	4. follow the instructions on {eris}<lispcore>sunloadup>howto-loadup-sunlisp.txtE 24D 7E 3INSDIR = $(RELDIR)install/E 7I 7D 13INSDIR = $(RELDIR)/install.$(RELEASENAME)/E 13I 13D 47INSDIR = $(RELDIR)install.$(RELEASENAME)/E 47I 47# '90/04/23 osamu: $INSDIR is defined in makeright ##INSDIR = $(RELDIR)install.$(RELEASENAME)/E 47CHKDIR = $(RELDIR)checksumdir/I 61SCRPTDIR = $(RELDIR)scripts/E 61E 13E 7NATDIR = $(RELDIR)usernative/I 52D 67# OSARCHDIR is the os/architecture directory, where executables all go.E 67I 67# OSARCHDIR is the os/architecture dir, where executables all go.E 67OSARCHDIR = ../$(OSARCHNAME)/E 52I 36##  The DISPxxx flags are for compiling files which rely on 'as' much#  more than the other files do.  For mc68020, it'll use optimization#  -O rather than -O2 which is good for the other files in the system#  [JDS 10-26-89] Files affected: xc, arith2, arith4, fvar.#E 36CFLAGS = $(OPTFLAGS) $(DFLAGS) $(FPFLAGS)I 36DISPCFLAGS = $(DISPOPTFLAGS) $(DFLAGS) $(FPGLAGS)E 36RFLAGS = -c $(CFLAGS) -I$(INCDIR)I 36DISPRFLAGS = -c $(DISPCFLAGS) -I$(INCDIR)E 36I 34D 35LFLAGS = -lsuntool -lsunwindow  -lpixrect -lc -lmE 35E 34D 67KEYON  = $(OBJECTDIR)keytester.oKEYOFF = $(OBJECTDIR)keytestno.oE 67I 67KEYON  = $(OBJECTDIR)keytst.oKEYOFF = $(OBJECTDIR)keytstno.oE 67OFILES = $(OBJECTDIR)arith2.o \	$(OBJECTDIR)arith3.o \	$(OBJECTDIR)arith4.o \	$(OBJECTDIR)array.o \	$(OBJECTDIR)array2.o \	$(OBJECTDIR)array3.o \	$(OBJECTDIR)array4.o \	$(OBJECTDIR)array5.o \	$(OBJECTDIR)array6.o \D 71	$(OBJECTDIR)atom.o \E 71	$(OBJECTDIR)bin.o \	$(OBJECTDIR)binds.o  \I 35	$(OBJECTDIR)bitblt.o  \D 67	$(OBJECTDIR)bitbltsub.o  \E 67I 67	$(OBJECTDIR)bbtsub.o  \E 67E 35D 34	$(OBJECTDIR)bitblt.o  \	$(OBJECTDIR)bitbltsub.o  \E 34	$(OBJECTDIR)blt.o \	$(OBJECTDIR)car-cdr.o \I 35D 67	$(OBJECTDIR)chardevice.o \E 67I 67	$(OBJECTDIR)chardev.o \E 67I 48D 52	$(OBJECTDIR)colorbltfns.o \E 52E 48E 35	$(OBJECTDIR)common.o \	$(OBJECTDIR)conspage.o \D 67	$(OBJECTDIR)createcell.o \E 67I 67	$(OBJECTDIR)mkcell.o \E 67	$(OBJECTDIR)draw.o \	$(OBJECTDIR)findkey.o \	$(OBJECTDIR)fvar.o \	$(OBJECTDIR)xc.o \	$(OBJECTDIR)gc.o \	$(OBJECTDIR)gc2.o \	$(OBJECTDIR)gvar2.o \D 67	$(OBJECTDIR)hardreturn.o \E 67I 67	$(OBJECTDIR)hardrtn.o \E 67I 36	$(OBJECTDIR)inet.o \E 36D 46	$(OBJECTDIR)interruptcall.o \E 46I 46	$(OBJECTDIR)intcall.o \E 46	$(OBJECTDIR)keylib.o \I 48	$(OBJECTDIR)lineblt8.o \E 48D 67	$(OBJECTDIR)listhandle.o \E 67I 67	$(OBJECTDIR)lsthandl.o \E 67I 49	$(OBJECTDIR)llcolor.o \E 49	$(OBJECTDIR)llstk.o \I 35	$(OBJECTDIR)loopsops.o \E 35D 67	$(OBJECTDIR)lowlevel1.o \	$(OBJECTDIR)lowlevel2.o \E 67I 67	$(OBJECTDIR)lowlev1.o \	$(OBJECTDIR)lowlev2.o \E 67I 35	$(OBJECTDIR)misc7.o \E 35I 33	$(OBJECTDIR)mvs.o \E 33	$(OBJECTDIR)return.o \	$(OBJECTDIR)rplcons.o \	$(OBJECTDIR)shift.o \	$(OBJECTDIR)subr.o \I 3	$(OBJECTDIR)miscn.o \E 3	$(OBJECTDIR)subr0374.o \	$(OBJECTDIR)timer.o \	$(OBJECTDIR)typeof.o \	$(OBJECTDIR)unwind.o \	$(OBJECTDIR)vars3.o \	$(OBJECTDIR)unixcomm.o \	$(OBJECTDIR)uraid.o \	$(OBJECTDIR)rpc.o \        $(OBJECTDIR)ufn.o \	$(OBJECTDIR)z2.o \	$(OBJECTDIR)eqf.o \	$(OBJECTDIR)fp.o \	$(OBJECTDIR)ubf1.o \	$(OBJECTDIR)ubf2.o \	$(OBJECTDIR)ubf3.o \D 67	$(OBJECTDIR)unix-utils.o \D 4	$(OBJECTDIR)loader.o \E 4I 4D 5#	$(OBJECTDIR)loader.o \E 5E 4D 11	$(OBJECTDIR)systemcallmessage.o \E 11I 11	$(OBJECTDIR)syscallmsg.o \E 67I 67	$(OBJECTDIR)uutils.o \	$(OBJECTDIR)perrno.o \E 67I 65	$(OBJECTDIR)foreign.o \	$(OBJECTDIR)lisp2c.o \	$(OBJECTDIR)hacks.o \E 65E 11D 67	$(OBJECTDIR)osmessage.oE 67I 67	$(OBJECTDIR)osmsg.oE 67I 5D 11#	$(OBJECTDIR)loader.o \E 11E 5GCFILES = $(OBJECTDIR)gcscan.o \D 46	$(OBJECTDIR)gcarraymaker.o \D 11	$(OBJECTDIR)gcreclaimcodeblock.o \E 11I 11	$(OBJECTDIR)gccodeblock.o \E 11	$(OBJECTDIR)gcfinalfuncs.o \	$(OBJECTDIR)gcreclaimcell.o \E 46I 46D 67	$(OBJECTDIR)gcarrayops.o \E 67I 67	$(OBJECTDIR)gcarray.o \E 67	$(OBJECTDIR)gccode.o \	$(OBJECTDIR)gcfinal.o \D 67	$(OBJECTDIR)gcreccell.o \E 67I 67	$(OBJECTDIR)gcrcell.o \E 67E 46	$(OBJECTDIR)gchtfind.o \	$(OBJECTDIR)gcmain3.o \D 67	$(OBJECTDIR)gcreclaim.o \D 12	$(OBJECTDIR)gchoverflow.o E 12I 12	$(OBJECTDIR)gchoverflow.oE 67I 67	$(OBJECTDIR)gcr.o \	$(OBJECTDIR)gcoflow.oE 67E 12I 34D 35MONO =  $(OBJECTDIR)bitblt.o  \	$(OBJECTDIR)bitbltsub.o  \	$(OBJECTDIR)keyevent.oCOLOR = $(OBJECTDIR)bitbltcolor.o  \	$(OBJECTDIR)bitbltsubcolor.o  \	$(OBJECTDIR)keyeventcolor.oE 35E 34DEVICES = $(OBJECTDIR)dspsubrs.o \I 35D 67	$(OBJECTDIR)initdisplay.o \E 67I 67	$(OBJECTDIR)initdsp.o \E 67E 35D 34	$(OBJECTDIR)initdisplay.o \E 34	$(OBJECTDIR)dsk.o \	$(OBJECTDIR)ufs.o \D 67	$(OBJECTDIR)directory.o \E 67I 67	$(OBJECTDIR)dir.o \E 67I 35	$(OBJECTDIR)keyevent.o \E 35D 34	$(OBJECTDIR)keyevent.o \E 34D 46	$(OBJECTDIR)keyboardsubrs.o \E 46I 46	$(OBJECTDIR)kbdsubrs.o \E 46	$(OBJECTDIR)ether.o \D 46	$(OBJECTDIR)initkeyboard.o \E 46I 46D 57	$(OBJECTDIR)initkbd.o \E 46I 34D 35	$(OBJECTDIR)initdisplay.o \E 35E 34	$(OBJECTDIR)rs232c.o \D 12	$(OBJECTDIR)tty.o E 12I 12	$(OBJECTDIR)tty.oE 57I 57	$(OBJECTDIR)initkbd.oE 57E 12D 46TESTFILES = $(OBJECTDIR)Kdebugtools.o \	$(OBJECTDIR)Ktesttool.o \E 46I 46D 67TESTFILES = $(OBJECTDIR)debugtools.o \E 67I 67TESTFILES = $(OBJECTDIR)dbgtool.o \E 67	$(OBJECTDIR)testtool.o \E 46	$(OBJECTDIR)Kprint.oD 56MAINFILES = $(OBJECTDIR)Ctest.o \E 56I 56MAINFILES = $(OBJECTDIR)main.o \E 56D 67	$(OBJECTDIR)initsysout.o \E 67I 67	$(OBJECTDIR)initsout.o \E 67	$(OBJECTDIR)storage.o \	$(OBJECTDIR)allocmds.o \	$(OBJECTDIR)vmemsave.o \D 67	$(OBJECTDIR)newmakeatom.o \	$(OBJECTDIR)loadsysout.oE 67I 67	$(OBJECTDIR)mkatom.o \	$(OBJECTDIR)ldsout.oE 67I 17SXHASHFILE = $(OBJECTDIR)sxhash.oE 17D 9VFILE = $(OBJECTDIR)vdate.cE 9I 9VFILE = $(OBJECTDIR)vdateE 9D 10DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 10I 10D 16DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 16I 16D 34DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE)E 34I 34D 35STDFILES = $(OFILES) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE)DEVFILES      = $(STDFILES) $(KEYOFF) $(MONO)LIBFILES      = $(STDFILES) $(KEYON)  $(MONO)DEVFILESCOLOR = $(STDFILES) $(KEYOFF) $(COLOR)LIBFILESCOLOR = $(STDFILES) $(KEYON)  $(COLOR)E 35I 35D 36DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE)E 36I 36D 52DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE) $(BITBLTFILE)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE) $(BITBLTFILE)E 52I 52DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) \	$(GCFILES) $(SXHASHFILE) $(BITBLTFILE) $(XFILES) $(COLORFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) \	$(GCFILES) $(SXHASHFILE) $(BITBLTFILE) $(XFILES) $(COLORFILES)E 52E 36E 35E 34E 16E 10D 67EXTFILES = $(OBJECTDIR)usersubrs.oE 67I 67EXTFILES = $(OBJECTDIR)usrsubr.oE 67# execute to make /tmp/vdate.c################################################################################# Development targets - copyprotect is OFF here################################################################################D 35default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeetherE 35I 35D 52default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeether $(OBJECTDIR)testsysout $(OBJECTDIR)setsysoutE 52I 52default	: $(OSARCHDIR)lde $(OSARCHDIR)$(LDENAME) $(OSARCHDIR)ldeether \D 67	$(OSARCHDIR)testsysout $(OSARCHDIR)setsysoutE 67I 67	$(OSARCHDIR)tstsout $(OSARCHDIR)setsoutE 67E 52E 35D 52$(OBJECTDIR)lde :       $(DEVFILES) $(EXTFILES) $(OBJECTDIR)makevdateE 52I 52$(OSARCHDIR)lde: $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c	$(CC) $(CFLAGS) -I$(INCDIR) $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c \D 62		$(LDFLAGS) -o $(OSARCHDIR)ldeE 62I 62		$(LDELDFLAGS) -o $(OSARCHDIR)ldeE 62D 54$(OSARCHDIR)$(LDENAME) :       $(DEVFILES) $(EXTFILES) $(OBJECTDIR)makevdateE 54I 54D 67$(OSARCHDIR)$(LDENAME) :       $(DEVFILES) $(EXTFILES) $(OSARCHDIR)makevdateE 67I 67$(OSARCHDIR)$(LDENAME) :       $(DEVFILES) $(EXTFILES) $(OSARCHDIR)mkvdateE 67E 54E 52D 9	/bin/rm -f $(VFILE)	$(OBJECTDIR)makevdate > $(VFILE)	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)ldeE 9I 9	/bin/rm -f $(VFILE).cD 54	$(OBJECTDIR)makevdate > $(VFILE).cE 54I 54D 67	$(OSARCHDIR)makevdate > $(VFILE).cE 67I 67	$(OSARCHDIR)mkvdate > $(VFILE).cE 67E 54D 34	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)ldeE 9	@ rm -f lispE 34I 34D 35	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c $(LFLAGS) -o $@E 35I 35D 50	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)ldeE 50I 50D 52	$(CC) $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)ldeE 50	@ rm -f lispE 52I 52	$(CC) $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c \		$(LDFLAGS) -o $(OSARCHDIR)$(LDENAME)E 52E 35E 34	@ echo ""D 52	@ echo "Executable is now named '$(OBJECTDIR)lde'"E 52I 52	@ echo "Executable is now named '$(OSARCHDIR)$(LDENAME)'"E 52I 34D 35$(OBJECTDIR)ldecolor :       $(DEVFILESCOLOR) $(EXTFILES) $(OBJECTDIR)makevdate	/bin/rm -f $(VFILE).c	$(OBJECTDIR)makevdate > $(VFILE).c	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c $(LFLAGS) -o $@	@ echo ""	@ echo "Executable is now named '$(OBJECTDIR)lde'"E 35E 34D 52$(OBJECTDIR)ldeether :  $(SRCDIR)ldeether.cD 50	cc $(CFLAGS) $(SRCDIR)ldeether.c -o $(OBJECTDIR)ldeetherE 50I 50	$(CC) $(CFLAGS) $(SRCDIR)ldeether.c -o $(OBJECTDIR)ldeetherE 52I 52$(OSARCHDIR)ldeether :  $(SRCDIR)ldeether.c	$(CC) $(CFLAGS) $(SRCDIR)ldeether.c -o $(OSARCHDIR)ldeetherE 52E 50D 57	@ rm -f startlispE 57	@ echo ""	@ echo "ethernet kickstart is now named 'ldeether'"D 57#	@ echo "Make ldeether a setuid root program to use PUP/XNS Ethernet"E 57	@ echo "Now making ldeether setuid root"D 52	rsh python "(cd `pwd`;/users/maiko/bin/suid $(OBJECTDIR)ldeether)"	ls -l $(OBJECTDIR)ldeetherE 52I 52D 59	rsh python "(cd `pwd`;/users/maiko/bin/suid $(OSARCHDIR)ldeether)"E 59I 59	- rsh python "(cd `pwd`;/users/maiko/bin/suid $(OSARCHDIR)ldeether)"E 59	ls -l $(OSARCHDIR)ldeetherE 52D 52$(OBJECTDIR)makevdate	: $(SRCDIR)makevdate.cD 50	cc $(SRCDIR)makevdate.c -o $(OBJECTDIR)makevdateE 50I 50	$(CC) $(SRCDIR)makevdate.c -o $(OBJECTDIR)makevdateE 52I 52D 67$(OSARCHDIR)makevdate	: $(SRCDIR)makevdate.cD 64	$(CC) $(SRCDIR)makevdate.c -o $(OSARCHDIR)makevdateE 64I 64	$(CC) $(CFLAGS) $(SRCDIR)makevdate.c -o $(OSARCHDIR)makevdateE 67I 67$(OSARCHDIR)mkvdate	: $(SRCDIR)mkvdate.c	$(CC) $(CFLAGS) $(SRCDIR)mkvdate.c -o $(OSARCHDIR)mkvdateE 67E 64E 52E 50I 35D 52$(OBJECTDIR)testsysout : $(OBJECTDIR)testsysout.oD 50	cc $(OBJECTDIR)testsysout.o -lc -lm -o $(OBJECTDIR)testsysoutE 50I 50	$(CC) $(OBJECTDIR)testsysout.o -lc -lm -o $(OBJECTDIR)testsysoutE 52I 52D 67$(OSARCHDIR)testsysout : $(OBJECTDIR)testsysout.o	$(CC) $(OBJECTDIR)testsysout.o -lc -lm -o $(OSARCHDIR)testsysoutE 67I 67$(OSARCHDIR)tstsout : $(OBJECTDIR)tstsout.o	$(CC) $(OBJECTDIR)tstsout.o -lc -lm -o $(OSARCHDIR)tstsoutE 67E 52E 50D 52$(OBJECTDIR)setsysout : $(OBJECTDIR)setsysout.oD 50	cc $(OBJECTDIR)setsysout.o -lc -lm -o $(OBJECTDIR)setsysoutE 50I 50	$(CC) $(OBJECTDIR)setsysout.o -lc -lm -o $(OBJECTDIR)setsysoutE 52I 52D 67$(OSARCHDIR)setsysout : $(OBJECTDIR)setsysout.o	$(CC) $(OBJECTDIR)setsysout.o -lc -lm -o $(OSARCHDIR)setsysoutE 67I 67$(OSARCHDIR)setsout : $(OBJECTDIR)setsout.o	$(CC) $(OBJECTDIR)setsout.o -lc -lm -o $(OSARCHDIR)setsoutE 67E 52E 50E 35I 21D 52$(OBJECTDIR)testdisplay :  $(SRCDIR)testdisplay.c $(INCDIR)lispemul.h  \E 52I 52D 67$(OSARCHDIR)testdisplay :  $(SRCDIR)testdisplay.c $(INCDIR)lispemul.h  \E 67I 67$(OSARCHDIR)testdsp :  $(SRCDIR)testdsp.c $(INCDIR)lispemul.h  \E 67E 52	 $(INCDIR)lispmap.h  $(INCDIR)address.h \D 67	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \E 67	 $(INCDIR)display.h $(INCDIR)dbprint.hD 50	cc $(CFLAGS) -DDEBUG -I$(INCDIR) $(SRCDIR)testdisplay.c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)testdisplayE 50I 50D 52	$(CC) $(CFLAGS) -DDEBUG -I$(INCDIR) $(SRCDIR)testdisplay.c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)testdisplayE 52I 52D 67	$(CC) $(CFLAGS) -DDEBUG -I$(INCDIR) $(SRCDIR)testdisplay.c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OSARCHDIR)testdisplayE 67I 67	$(CC) $(CFLAGS) -DDEBUG -I$(INCDIR) $(SRCDIR)testdsp.c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OSARCHDIR)testdspE 67E 52E 50E 21I 20D 23$(OBJECTDIR)testdisplay :  $(SRCDIR)testdisplay.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h $(INCDIR)dbprint.h	cc $(CFLAGS) -DDEBUG -I$(INCDIR) $(SRCDIR)testdisplay.c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)testdisplayE 23E 20#### Component files ######################################################I 10I 35D 41$(OBJECTDIR)testsysout.o: $(SRCDIR)testsysout.c	cc -c $(SRCDIR)testsysout.c -I../inc -o $(OBJECTDIR)testsysout$(OEXT)E 41I 41D 52$(OBJECTDIR)testsysout.o: $(SRCDIR)testsysout.c $(INLINE) D 50	cc -c $(SRCDIR)testsysout.c -I../inc $(INLINE) -o $(OBJECTDIR)testsysout$(OEXT)E 50I 50	$(CC) -c $(SRCDIR)testsysout.c -I../inc $(INLINE) -o $(OBJECTDIR)testsysout$(OEXT)E 52I 52D 67$(OBJECTDIR)testsysout.o: $(SRCDIR)testsysout.c	$(CC) -c $(SRCDIR)testsysout.c -I../inc  -o $(OBJECTDIR)testsysout$(OEXT)E 67I 67$(OBJECTDIR)tstsout.o: $(SRCDIR)tstsout.c	$(CC) -c $(SRCDIR)tstsout.c -I../inc  -o $(OBJECTDIR)tstsout$(OEXT)E 67E 52E 50E 41D 41$(OBJECTDIR)setsysout.o: $(SRCDIR)setsysout.c	cc -c $(SRCDIR)setsysout.c -I../inc -o $(OBJECTDIR)setsysout$(OEXT)E 41I 41D 52$(OBJECTDIR)setsysout.o: $(SRCDIR)setsysout.c $(INLINE)D 50	cc -c $(SRCDIR)setsysout.c -I../inc $(INLINE) -o $(OBJECTDIR)setsysout$(OEXT)E 50I 50	$(CC) -c $(SRCDIR)setsysout.c -I../inc $(INLINE) -o $(OBJECTDIR)setsysout$(OEXT)E 52I 52D 67$(OBJECTDIR)setsysout.o: $(SRCDIR)setsysout.c 	$(CC) -c $(SRCDIR)setsysout.c -I../inc  -o $(OBJECTDIR)setsysout$(OEXT)E 67I 67$(OBJECTDIR)setsout.o: $(SRCDIR)setsout.c 	$(CC) -c $(SRCDIR)setsout.c -I../inc  -o $(OBJECTDIR)setsout$(OEXT)E 67E 52E 50E 41E 35D 36$(OBJECTDIR)byteswapfns.o: $(SRCDIR)byteswapfns.c	cc $(RFLAGS) $(SRCDIR)byteswapfns.c -o $(OBJECTDIR)byteswapfns$(OEXT)E 10I 35$(OBJECTDIR)loopsops.o : $(SRCDIR)loopsops.c $(INCDIR)lispemul.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)debug.h $(INCDIR)profile.h	cc $(RFLAGS) $(SRCDIR)loopsops.c $(INLINE) -o $(OBJECTDIR)loopsops$(OEXT)E 36E 35D 8$(OBJECTDIR)Ctest.o : $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  \	 $(INCDIR)address.h \E 8I 8D 56$(OBJECTDIR)Ctest.o : $(SRCDIR)Ctest.c $(INCDIR)lispemul.h \E 56I 56$(OBJECTDIR)main.o : $(SRCDIR)main.c $(INCDIR)lispemul.h \E 56D 26	 $(INCDIR)emulglobal.h  $(INCDIR)address.h \E 26I 26D 67	 $(INCDIR)emulglobal.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \E 26E 8	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \E 67I 67	 $(INCDIR)emlglob.h  $(INCDIR)address.h $(INCDIR)lsptypes.h \	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \E 67	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)return.h $(INCDIR)debug.h $(INCDIR)profile.hD 6	cc $(RFLAGS) $(SRCDIR)Ctest.c $(INLINE) -o $(OBJECTDIR)Ctest.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)Ctest.c $(INLINE) -o $(OBJECTDIR)Ctest$(OEXT)E 50I 50D 56	$(CC) $(RFLAGS) $(SRCDIR)Ctest.c $(INLINE) -o $(OBJECTDIR)Ctest$(OEXT)E 56I 56	$(CC) $(RFLAGS) $(SRCDIR)main.c $(INLINE) -o $(OBJECTDIR)main$(OEXT)E 56E 50E 6D 46$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  \E 46I 46D 67$(OBJECTDIR)debugtools.o :  $(SRCDIR)debugtools.c $(INCDIR)lispemul.h  \E 46	 $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \E 67I 67$(OBJECTDIR)dbgtool.o :  $(SRCDIR)dbgtool.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)cell.h  $(INCDIR)stack.h E 12I 12	 $(INCDIR)cell.h  $(INCDIR)stack.hE 12D 6	cc $(RFLAGS) $(SRCDIR)Kdebugtools.c $(INLINE) -o $(OBJECTDIR)Kdebugtools.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)Kdebugtools.c $(INLINE) -o $(OBJECTDIR)Kdebugtools$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)debugtools.c $(INLINE) -o $(OBJECTDIR)debugtools$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)debugtools.c $(INLINE) -o $(OBJECTDIR)debugtools$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)dbgtool.c $(INLINE) -o $(OBJECTDIR)dbgtool$(OEXT)E 67E 50E 46E 6$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  \	 $(INCDIR)address.h  $(INCDIR)lispemul.h \D 67	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \D 12	 $(INCDIR)address68k.h E 12I 12	 $(INCDIR)address68k.hE 67I 67	 $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h  $(INCDIR)initatms.h \	 $(INCDIR)cell.h  $(INCDIR)emlglob.h  $(INCDIR)lispmap.h \	 $(INCDIR)adr68k.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)Kprint.c $(INLINE) -o $(OBJECTDIR)Kprint.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)Kprint.c $(INLINE) -o $(OBJECTDIR)Kprint$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)Kprint.c $(INLINE) -o $(OBJECTDIR)Kprint$(OEXT)E 50E 6D 46$(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  \E 46I 46$(OBJECTDIR)testtool.o :  $(SRCDIR)testtool.c $(INCDIR)lispemul.h  \E 46D 67	 $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h E 12I 12	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.hE 12D 6	cc $(RFLAGS) $(SRCDIR)Ktesttool.c $(INLINE) -o $(OBJECTDIR)Ktesttool.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)Ktesttool.c $(INLINE) -o $(OBJECTDIR)Ktesttool$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)testtool.c $(INLINE) -o $(OBJECTDIR)testtool$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)testtool.c $(INLINE) -o $(OBJECTDIR)testtool$(OEXT)E 50E 46E 6$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.hE 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatms.h  $(INCDIR)sysatms.h  $(INCDIR)lspglob.hE 67D 6	cc $(RFLAGS) $(SRCDIR)allocmds.c $(INLINE) -o $(OBJECTDIR)allocmds.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)allocmds.c $(INLINE) -o $(OBJECTDIR)allocmds$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)allocmds.c $(INLINE) -o $(OBJECTDIR)allocmds$(OEXT)E 50E 6$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \	 $(INCDIR)adr68k.h  $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h \E 67D 12	 $(INCDIR)arith.h E 12I 12D 43	 $(INCDIR)arith.hE 43I 43D 44	 $(INCDIR)arith.h $(INCDIR)fp.hE 44I 44	 $(INCDIR)arith.h $(INCDIR)fp.h $(INLINE)E 44E 43E 12D 6	cc $(RFLAGS) $(SRCDIR)arith2.c $(INLINE) -o $(OBJECTDIR)arith2.oE 6I 6D 36	cc $(RFLAGS) $(SRCDIR)arith2.c $(INLINE) -o $(OBJECTDIR)arith2$(OEXT)E 36I 36D 50	cc $(DISPRFLAGS) $(SRCDIR)arith2.c $(INLINE) -o $(OBJECTDIR)arith2$(OEXT)E 50I 50	$(CC) $(DISPRFLAGS) $(SRCDIR)arith2.c $(INLINE) -o $(OBJECTDIR)arith2$(OEXT)E 50E 36E 6$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  \D 44	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \E 44I 44D 67	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h  $(INLINE) \E 44	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \D 12	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h E 12I 12D 43	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.hE 43I 43	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(INCDIR)fp.hE 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.h  $(INLINE) \	 $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(INCDIR)fp.hE 67E 43E 12D 6	cc $(RFLAGS) $(SRCDIR)arith3.c $(INLINE) -o $(OBJECTDIR)arith3.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)arith3.c $(INLINE) -o $(OBJECTDIR)arith3$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)arith3.c $(INLINE) -o $(OBJECTDIR)arith3$(OEXT)E 50E 6$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  \D 44	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \E 44I 44D 67	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h $(INLINE) \E 44	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \D 12	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h E 12I 12D 43	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.hE 43I 43	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(INCDIR)fp.hE 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.h $(INLINE) \	 $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(INCDIR)fp.hE 67E 43E 12D 6	cc $(RFLAGS) $(SRCDIR)arith4.c $(INLINE) -o $(OBJECTDIR)arith4.oE 6I 6D 36	cc $(RFLAGS) $(SRCDIR)arith4.c $(INLINE) -o $(OBJECTDIR)arith4$(OEXT)E 36I 36D 50	cc $(DISPRFLAGS) $(SRCDIR)arith4.c $(INLINE) -o $(OBJECTDIR)arith4$(OEXT)E 50I 50	$(CC) $(DISPRFLAGS) $(SRCDIR)arith4.c $(INLINE) -o $(OBJECTDIR)arith4$(OEXT)E 50E 36E 6$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)arith.h  $(INCDIR)my.h   E 12I 12D 43	 $(INCDIR)arith.h  $(INCDIR)my.hE 43I 43	 $(INCDIR)arith.h $(INCDIR)fp.h $(INCDIR)my.hE 43E 12D 6	cc $(RFLAGS) $(SRCDIR)array.c $(INLINE) -o $(OBJECTDIR)array.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)array.c $(INLINE) -o $(OBJECTDIR)array$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)array.c $(INLINE) -o $(OBJECTDIR)array$(OEXT)E 50E 6$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)arith.h  $(INCDIR)my.h   E 12I 12D 43	 $(INCDIR)arith.h  $(INCDIR)my.hE 43I 43	 $(INCDIR)arith.h $(INCDIR)fp.h  $(INCDIR)my.hE 43E 12D 6	cc $(RFLAGS) $(SRCDIR)array3.c $(INLINE) -o $(OBJECTDIR)array3.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)array3.c $(INLINE) -o $(OBJECTDIR)array3$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)array3.c $(INLINE) -o $(OBJECTDIR)array3$(OEXT)E 50E 6$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)arith.h  $(INCDIR)my.h   E 12I 12D 43	 $(INCDIR)arith.h  $(INCDIR)my.hE 43I 43	 $(INCDIR)arith.h $(INCDIR)fp.h $(INCDIR)my.hE 43E 12D 6	cc $(RFLAGS) $(SRCDIR)array5.c $(INLINE) -o $(OBJECTDIR)array5.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)array5.c $(INLINE) -o $(OBJECTDIR)array5$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)array5.c $(INLINE) -o $(OBJECTDIR)array5$(OEXT)E 50E 6D 71$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  \D 12	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h E 12I 12D 67	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.hE 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)atom.c $(INLINE) -o $(OBJECTDIR)atom.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)atom.c $(INLINE) -o $(OBJECTDIR)atom$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)atom.c $(INLINE) -o $(OBJECTDIR)atom$(OEXT)E 71E 50E 6$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \D 12	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h E 12I 12	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.hE 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)stream.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)bin.c $(INLINE) -o $(OBJECTDIR)bin.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)bin.c $(INLINE) -o $(OBJECTDIR)bin$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)bin.c $(INLINE) -o $(OBJECTDIR)bin$(OEXT)E 50E 6$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  \D 12	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h E 12I 12D 67	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.hE 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)emlglob.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)binds.c $(INLINE) -o $(OBJECTDIR)binds.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)binds.c $(INLINE) -o $(OBJECTDIR)binds$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)binds.c $(INLINE) -o $(OBJECTDIR)binds$(OEXT)E 50E 6$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h \D 67	  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \E 67I 67	  $(INCDIR)lspglob.h  $(INCDIR)lispmap.h \	 $(INCDIR)emlglob.h  $(INCDIR)adr68k.h  $(INCDIR)address.h \E 67	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \	 $(INCDIR)bb.hD 6	cc $(RFLAGS) $(SRCDIR)bitblt.c $(INLINE) -o $(OBJECTDIR)bitblt.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)bitblt.c $(INLINE) -o $(OBJECTDIR)bitblt$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)bitblt.c $(INLINE) -o $(OBJECTDIR)bitblt$(OEXT)E 50E 6I 36D 67$(OBJECTDIR)bitblt68K.o :  $(OBJECTDIR)bitblt68K.i $(SRCDIR)bitblt68K.s	as -O $(OBJECTDIR)bitblt68K.i -o $(OBJECTDIR)bitblt68K$(OEXT)E 67I 67$(OBJECTDIR)bbt68k.o :  $(OBJECTDIR)bbt68k.i $(SRCDIR)bbt68k.s	as -O $(OBJECTDIR)bbt68k.i -o $(OBJECTDIR)bbt68k$(OEXT)E 67D 67$(OBJECTDIR)bitblt68K.i : $(SRCDIR)bitblt68K.s	/lib/cpp $(SRCDIR)bitblt68K.s $(OBJECTDIR)bitblt68K.iE 67I 67$(OBJECTDIR)bbt68k.i : $(SRCDIR)bbt68k.s	/lib/cpp $(SRCDIR)bbt68k.s $(OBJECTDIR)bbt68k.iE 67D 67$(OBJECTDIR)bitbltSPARC.o :  $(SRCDIR)bitbltSPARC.s	as -P $(SRCDIR)bitbltSPARC.s -o $(OBJECTDIR)bitbltSPARC$(OEXT)E 67I 67$(OBJECTDIR)bbtSPARC.o :  $(SRCDIR)bbtSPARC.s	as -P $(SRCDIR)bbtSPARC.s -o $(OBJECTDIR)bbtSPARC$(OEXT)E 67I 42D 67$(OBJECTDIR)bitblt386i.o :  $(SRCDIR)bitblt386i.s $(OBJECTDIR)bitblt386i.i	as $(OBJECTDIR)bitblt386i.i -o $(OBJECTDIR)bitblt386i$(OEXT)E 67I 67$(OBJECTDIR)bbt386i.o :  $(SRCDIR)bbt386i.s $(OBJECTDIR)bbt386i.i	as $(OBJECTDIR)bbt386i.i -o $(OBJECTDIR)bbt386i$(OEXT)E 67D 67$(OBJECTDIR)bitblt386i.i : $(SRCDIR)bitblt386i.s	/lib/cpp $(SRCDIR)bitblt386i.s $(OBJECTDIR)bitblt386i.iE 67I 67$(OBJECTDIR)bbt386i.i : $(SRCDIR)bbt386i.s	/lib/cpp $(SRCDIR)bbt386i.s $(OBJECTDIR)bbt386i.iE 67E 42E 36I 34D 35$(OBJECTDIR)bitbltcolor.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h \	  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \	 $(INCDIR)bb.h	cc $(RFLAGS) -DCOLOR $(SRCDIR)bitblt.c $(INLINE) -o $(OBJECTDIR)bitbltcolor$(OEXT)E 35E 34D 67$(OBJECTDIR)bitbltsub.o :  $(SRCDIR)bitbltsub.c $(INCDIR)lispemul.h  \D 36	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \E 36I 36	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \E 36	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)displaydata.h \E 67I 67$(OBJECTDIR)bbtsub.o :  $(SRCDIR)bbtsub.c $(INCDIR)lispemul.h  \	 $(INCDIR)lspglob.h  $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h \	 $(INCDIR)emlglob.h  $(INCDIR)adr68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)dspdata.h \E 67D 36	 $(INCDIR)bitblt.hE 36I 36	 $(INCDIR)bitblt.h $(INCDIR)bb.h $(INCDIR)dbprint.h \D 43	 $(INCDIR)stack.h $(INCDIR)cell.h $(INCDIR)gc.h $(INCDIR)arith.hE 43I 43	 $(INCDIR)stack.h $(INCDIR)cell.h $(INCDIR)gc.h $(INCDIR)arith.h $(INCDIR)fp.hE 43E 36D 6	cc $(RFLAGS) $(SRCDIR)bitbltsub.c $(INLINE) -o $(OBJECTDIR)bitbltsub.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)bitbltsub.c $(INLINE) -o $(OBJECTDIR)bitbltsub$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)bitbltsub.c $(INLINE) -o $(OBJECTDIR)bitbltsub$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)bbtsub.c $(INLINE) -o $(OBJECTDIR)bbtsub$(OEXT)E 67E 50E 6I 34D 35$(OBJECTDIR)bitbltsubcolor.o :  $(SRCDIR)bitbltsub.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)displaydata.h \	 $(INCDIR)bitblt.h	cc $(RFLAGS) -DCOLOR $(SRCDIR)bitbltsub.c $(INLINE) -o $(OBJECTDIR)bitbltsubcolor$(OEXT)E 35E 34$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \D 67	 $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \D 12	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h E 12I 12	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.hE 67I 67	 $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  $(INCDIR)cell.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)blt.c $(INLINE) -o $(OBJECTDIR)blt.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)blt.c $(INLINE) -o $(OBJECTDIR)blt$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)blt.c $(INLINE) -o $(OBJECTDIR)blt$(OEXT)E 50E 6I 36D 41$(OBJECTDIR)byteswapfns.o: $(SRCDIR)byteswapfns.cE 41I 41D 67$(OBJECTDIR)byteswapfns.o: $(SRCDIR)byteswapfns.c $(INLINE)E 41D 40	cc $(RFLAGS) $(SRCDIR)byteswapfns.c -o $(OBJECTDIR)byteswapfns$(OEXT)E 40I 40D 50	cc $(RFLAGS) $(SRCDIR)byteswapfns.c $(INLINE) -o $(OBJECTDIR)byteswapfns$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)byteswapfns.c $(INLINE) -o $(OBJECTDIR)byteswapfns$(OEXT)E 67I 67$(OBJECTDIR)byteswap.o: $(SRCDIR)byteswap.c $(INLINE)	$(CC) $(RFLAGS) $(SRCDIR)byteswap.c $(INLINE) -o $(OBJECTDIR)byteswap$(OEXT)E 67E 50E 40E 36$(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  \D 35	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \E 35I 35D 67	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  \E 35	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \E 67I 67	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \E 67D 12	 $(INCDIR)gc.h  $(INCDIR)cell.h E 12I 12	 $(INCDIR)gc.h  $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)car-cdr.c $(INLINE) -o $(OBJECTDIR)car-cdr.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)car-cdr.c $(INLINE) -o $(OBJECTDIR)car-cdr$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)car-cdr.c $(INLINE) -o $(OBJECTDIR)car-cdr$(OEXT)E 50E 6I 35D 67$(OBJECTDIR)chardevice.o :  $(SRCDIR)chardevice.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h $(INCDIR)stream.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)osmessage.h  $(INCDIR)arith.h $(INCDIR)localfile.hD 50	cc $(RFLAGS) $(SRCDIR)chardevice.c $(INLINE) -o $(OBJECTDIR)chardevice$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)chardevice.c $(INLINE) -o $(OBJECTDIR)chardevice$(OEXT)E 67I 67$(OBJECTDIR)chardev.o :  $(SRCDIR)chardev.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)lspglob.h $(INCDIR)stream.h \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \D 70	 $(INCDIR)osmsg.h  $(INCDIR)arith.h $(INCDIR)locfile.hE 70I 70	 $(INCDIR)arith.h $(INCDIR)locfile.h \	 $(INCDIR)sunerrno.h $(INCDIR)suntermios.h $(INCDIR)sunfilio.h \	 $(INCDIR)sunioccom.h $(INCDIR)sunttycom.h  $(INCDIR)sunttold.h \	 $(INCDIR)sunttydev.hE 70	$(CC) $(RFLAGS) $(SRCDIR)chardev.c $(INLINE) -o $(OBJECTDIR)chardev$(OEXT)E 67E 50I 48D 67$(OBJECTDIR)colorbltfns.o :  $(SRCDIR)colorbltfns.c $(INCDIR)lispemul.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h $(INCDIR)lisptypes.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \E 67I 67$(OBJECTDIR)rawcolor.o :  $(SRCDIR)rawcolor.c $(INCDIR)lispemul.h \	 $(INCDIR)lspglob.h  $(INCDIR)lispmap.h $(INCDIR)lsptypes.h \	 $(INCDIR)emlglob.h  $(INCDIR)adr68k.h  $(INCDIR)address.h \E 67	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \D 67	 $(INCDIR)arith.h $(INCDIR)displaydata.h $(INCDIR)debug.h \E 67I 67D 72	 $(INCDIR)arith.h $(INCDIR)dspdata.h $(INCDIR)debug.h \E 72I 72	 $(INCDIR)arith.h  $(INCDIR)cell.h $(INCDIR)dspdata.h $(INCDIR)debug.h \E 72E 67	 $(INCDIR)stream.hD 50	cc $(RFLAGS) $(SRCDIR)colorbltfns.c $(INLINE) -o $(OBJECTDIR)colorbltfns$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)colorbltfns.c $(INLINE) -o $(OBJECTDIR)colorbltfns$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)rawcolor.c $(INLINE) -o $(OBJECTDIR)rawcolor$(OEXT)E 67E 50I 49$(OBJECTDIR)llcolor.o : $(SRCDIR)llcolor.c $(INCDIR)lispemul.h $(INCDIR)lispmap.h \D 67	$(INCDIR)lisptypes.h $(INCDIR)address.h $(INCDIR)address68k.h \	$(INCDIR)lispglobal.h $(INCDIR)emulglobal.h $(INCDIR)display.h \	$(INCDIR)devconfig.h $(INCDIR)bb.h $(INCDIR)bitblt.h $(INCDIR)pilotbbt.h \E 67I 67	$(INCDIR)lsptypes.h $(INCDIR)address.h $(INCDIR)adr68k.h \	$(INCDIR)lspglob.h $(INCDIR)emlglob.h $(INCDIR)display.h \	$(INCDIR)devconf.h $(INCDIR)bb.h $(INCDIR)bitblt.h $(INCDIR)pilotbbt.h \E 67	$(INCDIR)dbprint.hD 50	cc $(RFLAGS) $(SRCDIR)llcolor.c $(INLINE) -o $(OBJECTDIR)llcolor$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)llcolor.c $(INLINE) -o $(OBJECTDIR)llcolor$(OEXT)E 50E 49$(OBJECTDIR)lineblt8.o :  $(SRCDIR)lineblt8.c $(INCDIR)lispemul.h D 50	cc $(RFLAGS) $(SRCDIR)lineblt8.c $(INLINE) -o $(OBJECTDIR)lineblt8$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)lineblt8.c $(INLINE) -o $(OBJECTDIR)lineblt8$(OEXT)E 50E 48E 35$(OBJECTDIR)common.o :  $(SRCDIR)common.c $(INCDIR)lispemul.h \D 67	 $(INCDIR)lispmap.h $(INCDIR)address68k.h $(INCDIR)lispglobal.h \	 $(INCDIR)emulglobal.hE 67I 67	 $(INCDIR)lispmap.h $(INCDIR)adr68k.h $(INCDIR)lspglob.h \	 $(INCDIR)emlglob.hE 67D 6	cc $(RFLAGS) $(SRCDIR)common.c $(INLINE) -o $(OBJECTDIR)common.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)common.c $(INLINE) -o $(OBJECTDIR)common$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)common.c $(INLINE) -o $(OBJECTDIR)common$(OEXT)E 50E 6$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \D 12	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h E 12I 12	 $(INCDIR)gc.h  $(INCDIR)lispglobal.hE 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lspglob.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)conspage.c $(INLINE) -o $(OBJECTDIR)conspage.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)conspage.c $(INLINE) -o $(OBJECTDIR)conspage$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)conspage.c $(INLINE) -o $(OBJECTDIR)conspage$(OEXT)E 50E 6D 67$(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \D 12	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h E 12I 12	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.hE 12D 6	cc $(RFLAGS) $(SRCDIR)createcell.c $(INLINE) -o $(OBJECTDIR)createcell.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)createcell.c $(INLINE) -o $(OBJECTDIR)createcell$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)createcell.c $(INLINE) -o $(OBJECTDIR)createcell$(OEXT)E 67I 67$(OBJECTDIR)mkcell.o :  $(SRCDIR)mkcell.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h	$(CC) $(RFLAGS) $(SRCDIR)mkcell.c $(INLINE) -o $(OBJECTDIR)mkcell$(OEXT)E 67E 50E 6$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)my.h E 12I 12	 $(INCDIR)my.hE 12D 6	cc $(RFLAGS) $(SRCDIR)draw.c $(INLINE) -o $(OBJECTDIR)draw.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)draw.c $(INLINE) -o $(OBJECTDIR)draw$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)draw.c $(INLINE) -o $(OBJECTDIR)draw$(OEXT)E 50E 6$(OBJECTDIR)z2.o :  $(SRCDIR)z2.c  \D 67	 $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67I 67	 $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67	 $(INCDIR)gc.h  $(INCDIR)my.hD 6	cc $(RFLAGS) $(SRCDIR)z2.c $(INLINE) -o $(OBJECTDIR)z2.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)z2.c $(INLINE) -o $(OBJECTDIR)z2$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)z2.c $(INLINE) -o $(OBJECTDIR)z2$(OEXT)E 50E 6D 43$(OBJECTDIR)eqf.o :  $(SRCDIR)eqf.c  \E 43I 43$(OBJECTDIR)eqf.o :  $(SRCDIR)eqf.c  $(INCDIR)fp.h \E 43D 67	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)my.hE 67I 67	 $(INCDIR)lispemul.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)my.hE 67D 6	cc $(RFLAGS) $(SRCDIR)eqf.c $(INLINE) -o $(OBJECTDIR)eqf.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)eqf.c $(INLINE) -o $(OBJECTDIR)eqf$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)eqf.c $(INLINE) -o $(OBJECTDIR)eqf$(OEXT)E 50E 6$(OBJECTDIR)fp.o :  $(SRCDIR)fp.c  \D 67	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h   \E 67I 67	 $(INCDIR)lispemul.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h   \E 67D 31	 $(INCDIR)my.hE 31I 31	 $(INCDIR)my.h $(INCDIR)fp.hE 31D 6	cc $(RFLAGS) $(SRCDIR)fp.c $(INLINE) -o $(OBJECTDIR)fp.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)fp.c $(INLINE) -o $(OBJECTDIR)fp$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)fp.c $(INLINE) -o $(OBJECTDIR)fp$(OEXT)E 50E 6D 29$(OBJECTDIR)interruptcall.o :  $(SRCDIR)fp.c $(INCDIR)lispemul.h  \E 29I 29D 46$(OBJECTDIR)interruptcall.o :  $(SRCDIR)interruptcall.c $(INCDIR)lispemul.h  \E 46I 46$(OBJECTDIR)intcall.o :  $(SRCDIR)intcall.c $(INCDIR)lispemul.h  \E 46E 29D 67	 $(INCDIR)address.h $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \E 67I 67	 $(INCDIR)address.h $(INCDIR)adr68k.h  $(INCDIR)lsptypes.h \E 67	 $(INCDIR)lispmap.h $(INCDIR)stack.h $(INCDIR)return.h \D 67	 $(INCDIR)emulglobal.h $(INCDIR)lispglobal.h $(INCDIR)initatoms.h \E 67I 67	 $(INCDIR)emlglob.h $(INCDIR)lspglob.h $(INCDIR)initatms.h \E 67	 $(INCDIR)cell.hD 6	cc $(RFLAGS) $(SRCDIR)interruptcall.c $(INLINE) -o $(OBJECTDIR)interruptcall.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)interruptcall.c $(INLINE) -o $(OBJECTDIR)interruptcall$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)intcall.c $(INLINE) -o $(OBJECTDIR)intcall$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)intcall.c $(INLINE) -o $(OBJECTDIR)intcall$(OEXT)E 50E 46E 6D 43$(OBJECTDIR)ubf1.o :  $(SRCDIR)ubf1.c  \E 43I 43$(OBJECTDIR)ubf1.o :  $(SRCDIR)ubf1.c $(INCDIR)fp.h \E 43D 67	 $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \D 31	 $(INCDIR)lisptypes.h $(INCDIR)lispmap.h  $(INCDIR)my.hE 31I 31	 $(INCDIR)lisptypes.h $(INCDIR)lispmap.h $(INCDIR)arith.h $(INCDIR)my.hE 67I 67	 $(INCDIR)lispemul.h  $(INCDIR)adr68k.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h $(INCDIR)lispmap.h $(INCDIR)arith.h $(INCDIR)my.hE 67E 31D 6	cc $(RFLAGS) $(SRCDIR)ubf1.c $(INLINE) -o $(OBJECTDIR)ubf1.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)ubf1.c $(INLINE) -o $(OBJECTDIR)ubf1$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)ubf1.c $(INLINE) -o $(OBJECTDIR)ubf1$(OEXT)E 50E 6$(OBJECTDIR)ubf2.o :  $(SRCDIR)ubf2.c  \D 31	 $(INCDIR)lispemul.hE 31I 31	 $(INCDIR)lispemul.h $(INCDIR)fp.hE 31D 6	cc $(RFLAGS) $(SRCDIR)ubf2.c $(INLINE) -o $(OBJECTDIR)ubf2.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)ubf2.c $(INLINE) -o $(OBJECTDIR)ubf2$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)ubf2.c $(INLINE) -o $(OBJECTDIR)ubf2$(OEXT)E 50E 6$(OBJECTDIR)ubf3.o :  $(SRCDIR)ubf3.c  \D 67	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \E 67I 67	 $(INCDIR)lispemul.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \E 67D 31	 $(INCDIR)lispmap.hE 31I 31	 $(INCDIR)lispmap.h $(INCDIR)fp.hE 31D 6	cc $(RFLAGS) $(SRCDIR)ubf3.c $(INLINE) -o $(OBJECTDIR)ubf3.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)ubf3.c $(INLINE) -o $(OBJECTDIR)ubf3$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)ubf3.c $(INLINE) -o $(OBJECTDIR)ubf3$(OEXT)E 50E 6D 67$(OBJECTDIR)unix-utils.o :  $(SRCDIR)unix-utils.c  \	 $(INCDIR)lisptypes.h $(INCDIR)keyboard.hD 6	cc $(RFLAGS) $(SRCDIR)unix-utils.c $(INLINE) -o $(OBJECTDIR)unix-utils.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)unix-utils.c $(INLINE) -o $(OBJECTDIR)unix-utils$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)unix-utils.c $(INLINE) -o $(OBJECTDIR)unix-utils$(OEXT)E 67I 67$(OBJECTDIR)uutils.o :  $(SRCDIR)uutils.c  \	 $(INCDIR)lsptypes.h $(INCDIR)keyboard.h	$(CC) $(RFLAGS) $(SRCDIR)uutils.c $(INLINE) -o $(OBJECTDIR)uutils$(OEXT)E 67E 50E 6$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  \D 12	 $(INCDIR)lispmap.h  $(INCDIR)display.h E 12I 12D 38	 $(INCDIR)lispmap.h  $(INCDIR)display.hE 38I 38D 67	 $(INCDIR)lispmap.h  $(INCDIR)display.h $(INCDIR)lisptypes.h \E 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)display.h $(INCDIR)lsptypes.h \E 67D 43	 $(INCDIR)arith.hE 43I 43	 $(INCDIR)arith.h $(INCDIR)fp.hE 43E 38E 12D 6	cc $(RFLAGS) $(SRCDIR)dspsubrs.c $(INLINE) -o $(OBJECTDIR)dspsubrs.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)dspsubrs.c $(INLINE) -o $(OBJECTDIR)dspsubrs$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)dspsubrs.c $(INLINE) -o $(OBJECTDIR)dspsubrs$(OEXT)E 50E 6$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \E 67D 12	 $(INCDIR)ether.h E 12I 12	 $(INCDIR)ether.hE 12D 6	cc $(RFLAGS) $(SRCDIR)ether.c $(INLINE) -o $(OBJECTDIR)ether.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)ether.c $(INLINE) -o $(OBJECTDIR)ether$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)ether.c $(INLINE) -o $(OBJECTDIR)ether$(OEXT)E 50E 6$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \D 12	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h E 12I 12	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.hE 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)stack.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)findkey.c $(INLINE) -o $(OBJECTDIR)findkey.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)findkey.c $(INLINE) -o $(OBJECTDIR)findkey$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)findkey.c $(INLINE) -o $(OBJECTDIR)findkey$(OEXT)E 50E 6$(OBJECTDIR)dsk.o :  $(SRCDIR)dsk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h \D 43	 $(INCDIR)address68k.h $(INCDIR)lisptypes.h  \E 43I 43D 45	 $(INCDIR)address68k.h $(INCDIR)lisptypes.h $(INCDIR)fp.h \E 43	 $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h \D 12	 $(INCDIR)localfile.h E 12I 12	 $(INCDIR)localfile.hE 45I 45D 67	 $(INCDIR)address68k.h $(INCDIR)lisptypes.h $(INCDIR)lispglobal.h \E 67I 67	 $(INCDIR)adr68k.h $(INCDIR)lsptypes.h $(INCDIR)lspglob.h \E 67	 $(INCDIR)fp.h $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h \D 67	 $(INCDIR)localfile.h $(INCDIR)osmessage.h $(INCDIR)dbprint.hE 67I 67	 $(INCDIR)locfile.h $(INCDIR)osmsg.h $(INCDIR)dbprint.hE 67E 45E 12D 6	cc $(RFLAGS) $(SRCDIR)dsk.c $(INLINE) -o $(OBJECTDIR)dsk.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)dsk.c $(INLINE) -o $(OBJECTDIR)dsk$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)dsk.c $(INLINE) -o $(OBJECTDIR)dsk$(OEXT)E 50E 6$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  \D 36	 $(INCDIR)address68k.h \E 36I 36D 41	 $(INCDIR)address68k.h $(INCDIR)dbprint.h \E 41I 41D 67	 $(INCDIR)address68k.h $(INCDIR)dbprint.h  $(INLINE)\E 41E 36D 45	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h $(INCDIR)stream.h  $(INCDIR)timeout.h $(INCDIR)localfile.hE 45I 45	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h $(INCDIR)arith.h \	 $(INCDIR)stream.h $(INCDIR)timeout.h $(INCDIR)localfile.h $(INCDIR)dbprint.hE 67I 67	 $(INCDIR)adr68k.h $(INCDIR)dbprint.h  $(INLINE)\	 $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h $(INCDIR)arith.h \	 $(INCDIR)stream.h $(INCDIR)timeout.h $(INCDIR)locfile.h $(INCDIR)dbprint.hE 67E 45D 6	cc $(RFLAGS) $(SRCDIR)ufs.c $(INLINE) -o $(OBJECTDIR)ufs.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)ufs.c $(INLINE) -o $(OBJECTDIR)ufs$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)ufs.c $(INLINE) -o $(OBJECTDIR)ufs$(OEXT)E 50E 6D 67$(OBJECTDIR)directory.o :  $(SRCDIR)directory.c $(INCDIR)lispemul.h  \D 45	 $(INCDIR)lispmap.h $(INCDIR)timeout.h $(INCDIR)localfile.hE 45I 45	 $(INCDIR)lispmap.h $(INCDIR)address68k.h $(INCDIR)lisptypes.h  \	 $(INCDIR)arith.h $(INCDIR)lispglobal.h $(INCDIR)timeout.h $(INCDIR)localfile.h	E 45D 6	cc $(RFLAGS) $(SRCDIR)directory.c $(INLINE) -o $(OBJECTDIR)directory.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)directory.c $(INLINE) -o $(OBJECTDIR)directory$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)directory.c $(INLINE) -o $(OBJECTDIR)directory$(OEXT)E 67I 67$(OBJECTDIR)dir.o :  $(SRCDIR)dir.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h $(INCDIR)adr68k.h $(INCDIR)lsptypes.h  \	 $(INCDIR)arith.h $(INCDIR)lspglob.h $(INCDIR)timeout.h $(INCDIR)locfile.h		$(CC) $(RFLAGS) $(SRCDIR)dir.c $(INLINE) -o $(OBJECTDIR)dir$(OEXT)E 67E 50E 6$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \D 12	 $(INCDIR)gc.h E 12I 12D 30	 $(INCDIR)gc.hE 30I 30	 $(INCDIR)gc.h $(INCDIR)lisptypes.hE 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)stack.h  $(INCDIR)emlglob.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h $(INCDIR)lsptypes.hE 67E 30E 12D 6	cc $(RFLAGS) $(SRCDIR)fvar.c $(INLINE) -o $(OBJECTDIR)fvar.oE 6I 6D 36	cc $(RFLAGS) $(SRCDIR)fvar.c $(INLINE) -o $(OBJECTDIR)fvar$(OEXT)E 36I 36D 50	cc $(DISPRFLAGS) $(SRCDIR)fvar.c $(INLINE) -o $(OBJECTDIR)fvar$(OEXT)E 50I 50	$(CC) $(DISPRFLAGS) $(SRCDIR)fvar.c $(INLINE) -o $(OBJECTDIR)fvar$(OEXT)E 50E 36E 6$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  \D 67	 $(INCDIR)lispglobal.h \D 12	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h E 12I 12	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.hE 67I 67	 $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)emlglob.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)gc.c $(INLINE) -o $(OBJECTDIR)gc.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gc.c $(INLINE) -o $(OBJECTDIR)gc$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gc.c $(INLINE) -o $(OBJECTDIR)gc$(OEXT)E 50E 6$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  \D 67	 $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \D 12	 $(INCDIR)address68k.h E 12I 12	 $(INCDIR)address68k.hE 67I 67	 $(INCDIR)lsptypes.h \	 $(INCDIR)lspglob.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)gc2.c $(INLINE) -o $(OBJECTDIR)gc2.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gc2.c $(INLINE) -o $(OBJECTDIR)gc2$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gc2.c $(INLINE) -o $(OBJECTDIR)gc2$(OEXT)E 50E 6D 46$(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  \E 46I 46D 67$(OBJECTDIR)gcarrayops.o :  $(SRCDIR)gcarrayops.c $(INCDIR)lispemul.h  \E 46	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \E 67I 67$(OBJECTDIR)gcarray.o :  $(SRCDIR)gcarray.c $(INCDIR)lispemul.h  \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)stack.h \E 67	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \D 12	 $(INCDIR)array.h E 12I 12	 $(INCDIR)array.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gcarraymaker.c $(INLINE) -o $(OBJECTDIR)gcarraymaker.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)gcarraymaker.c $(INLINE) -o $(OBJECTDIR)gcarraymaker$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)gcarrayops.c $(INLINE) -o $(OBJECTDIR)gcarrayops$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)gcarrayops.c $(INLINE) -o $(OBJECTDIR)gcarrayops$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)gcarray.c $(INLINE) -o $(OBJECTDIR)gcarray$(OEXT)E 67E 50E 46E 6D 46$(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  \E 46I 46$(OBJECTDIR)gcfinal.o :  $(SRCDIR)gcfinal.c $(INCDIR)lispemul.h  \E 46D 67	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \E 67I 67	 $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)stack.h \E 67	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \D 12	 $(INCDIR)array.h E 12I 12	 $(INCDIR)array.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gcfinalfuncs.c $(INLINE) -o $(OBJECTDIR)gcfinalfuncs.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)gcfinalfuncs.c $(INLINE) -o $(OBJECTDIR)gcfinalfuncs$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)gcfinal.c $(INLINE) -o $(OBJECTDIR)gcfinal$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gcfinal.c $(INLINE) -o $(OBJECTDIR)gcfinal$(OEXT)E 50E 46E 6D 67$(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \D 12	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h E 12I 12	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gchoverflow.c $(INLINE) -o $(OBJECTDIR)gchoverflow.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gchoverflow.c $(INLINE) -o $(OBJECTDIR)gchoverflow$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gchoverflow.c $(INLINE) -o $(OBJECTDIR)gchoverflow$(OEXT)E 67I 67$(OBJECTDIR)gcoflow.o :  $(SRCDIR)gcoflow.c $(INCDIR)lispemul.h  \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)gc.h	$(CC) $(RFLAGS) $(SRCDIR)gcoflow.c $(INLINE) -o $(OBJECTDIR)gcoflow$(OEXT)E 67E 50E 6$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \E 67I 67	 $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)gc.h \E 67D 12	 $(INCDIR)lispmap.h  $(INCDIR)cell.h E 12I 12	 $(INCDIR)lispmap.h  $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gchtfind.c $(INLINE) -o $(OBJECTDIR)gchtfind.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gchtfind.c $(INLINE) -o $(OBJECTDIR)gchtfind$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gchtfind.c $(INLINE) -o $(OBJECTDIR)gchtfind$(OEXT)E 50E 6$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \E 67	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \D 12	 $(INCDIR)gc.h E 12I 12	 $(INCDIR)gc.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gcmain3.c $(INLINE) -o $(OBJECTDIR)gcmain3.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gcmain3.c $(INLINE) -o $(OBJECTDIR)gcmain3$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gcmain3.c $(INLINE) -o $(OBJECTDIR)gcmain3$(OEXT)E 50E 6D 67$(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \E 67I 67$(OBJECTDIR)gcr.o :  $(SRCDIR)gcr.c $(INCDIR)lispemul.h  \	 $(INCDIR)emlglob.h  $(INCDIR)lsptypes.h \	 $(INCDIR)address.h  $(INCDIR)adr68k.h  $(INCDIR)lspglob.h \E 67D 12	 $(INCDIR)stack.h  $(INCDIR)gc.h E 12I 12	 $(INCDIR)stack.h  $(INCDIR)gc.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gcreclaim.c $(INLINE) -o $(OBJECTDIR)gcreclaim.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gcreclaim.c $(INLINE) -o $(OBJECTDIR)gcreclaim$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)gcreclaim.c $(INLINE) -o $(OBJECTDIR)gcreclaim$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)gcr.c $(INLINE) -o $(OBJECTDIR)gcr$(OEXT)E 67E 50E 6D 46$(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  \E 46I 46D 67$(OBJECTDIR)gcreccell.o :  $(SRCDIR)gcreccell.c $(INCDIR)lispemul.h  \E 46D 36	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \E 36I 36	 $(INCDIR)lisptypes.h  $(INCDIR)address.h $(INCDIR)dbprint.h \E 36	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \E 67I 67$(OBJECTDIR)gcrcell.o :  $(SRCDIR)gcrcell.c $(INCDIR)lispemul.h  \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h $(INCDIR)dbprint.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)stack.h \E 67D 12	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h E 12I 12	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.hE 12D 6	cc $(RFLAGS) $(SRCDIR)gcreclaimcell.c $(INLINE) -o $(OBJECTDIR)gcreclaimcell.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)gcreclaimcell.c $(INLINE) -o $(OBJECTDIR)gcreclaimcell$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)gcreccell.c $(INLINE) -o $(OBJECTDIR)gcreccell$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)gcreccell.c $(INLINE) -o $(OBJECTDIR)gcreccell$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)gcrcell.c $(INLINE) -o $(OBJECTDIR)gcrcell$(OEXT)E 67E 50E 46E 6D 12$(OBJECTDIR)gcreclaimcodeblock.o :  $(SRCDIR)gcreclaimcodeblock.c \E 12I 12D 46$(OBJECTDIR)gccodeblock.o :  $(SRCDIR)gccodeblock.c \E 46I 46$(OBJECTDIR)gccode.o :  $(SRCDIR)gccode.c \E 46E 12D 67	 $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \E 67I 67	 $(INCDIR)lispemul.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)lispmap.h \E 67	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \D 12	 $(INCDIR)gc.h  $(INCDIR)array.h D 6	cc $(RFLAGS) $(SRCDIR)gcreclaimcodeblock.c $(INLINE) -o $(OBJECTDIR)gcreclaimcodeblock.oE 6I 6	cc $(RFLAGS) $(SRCDIR)gcreclaimcodeblock.c $(INLINE) -o $(OBJECTDIR)gcreclaimcodeblock$(OEXT)E 12I 12	 $(INCDIR)gc.h  $(INCDIR)array.hD 46	cc $(RFLAGS) $(SRCDIR)gccodeblock.c $(INLINE) -o $(OBJECTDIR)gccodeblock$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)gccode.c $(INLINE) -o $(OBJECTDIR)gccode$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gccode.c $(INLINE) -o $(OBJECTDIR)gccode$(OEXT)E 50E 46E 12E 6$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  \D 12	 $(INCDIR)lispglobal.h  $(INCDIR)gc.h E 12I 12D 32	 $(INCDIR)lispglobal.h  $(INCDIR)gc.hE 32I 32D 67	 $(INCDIR)lispglobal.h  $(INCDIR)gc.h $(INCDIR)lisptypes.hE 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)gc.h $(INCDIR)lsptypes.hE 67E 32E 12D 6	cc $(RFLAGS) $(SRCDIR)gcscan.c $(INLINE) -o $(OBJECTDIR)gcscan.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gcscan.c $(INLINE) -o $(OBJECTDIR)gcscan$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gcscan.c $(INLINE) -o $(OBJECTDIR)gcscan$(OEXT)E 50E 6$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \D 12	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h E 12I 12D 30	 $(INCDIR)gc.h  $(INCDIR)emulglobal.hE 30I 30D 51	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h $(INCDIR)cell.hE 51I 51	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h $(INCDIR)cell.h $(INCDIR)lisptypes.hE 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)gc.h  $(INCDIR)emlglob.h $(INCDIR)cell.h $(INCDIR)lsptypes.hE 67E 51E 30E 12D 6	cc $(RFLAGS) $(SRCDIR)gvar2.c $(INLINE) -o $(OBJECTDIR)gvar2.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)gvar2.c $(INLINE) -o $(OBJECTDIR)gvar2$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)gvar2.c $(INLINE) -o $(OBJECTDIR)gvar2$(OEXT)E 50E 6D 67$(OBJECTDIR)hardreturn.o :  $(SRCDIR)hardreturn.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \E 67I 67$(OBJECTDIR)hardrtn.o :  $(SRCDIR)hardrtn.c $(INCDIR)lispemul.h  \	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \E 67	 $(INCDIR)cell.h $(INCDIR)stack.h  $(INCDIR)return.h \D 12	 $(INCDIR)emulglobal.h E 12I 12D 67	 $(INCDIR)emulglobal.hE 12D 6	cc $(RFLAGS) $(SRCDIR)hardreturn.c $(INLINE) -o $(OBJECTDIR)hardreturn.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)hardreturn.c $(INLINE) -o $(OBJECTDIR)hardreturn$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)hardreturn.c $(INLINE) -o $(OBJECTDIR)hardreturn$(OEXT)E 67I 67	 $(INCDIR)emlglob.h	$(CC) $(RFLAGS) $(SRCDIR)hardrtn.c $(INLINE) -o $(OBJECTDIR)hardrtn$(OEXT)E 67E 50E 6I 36$(OBJECTDIR)inet.o : $(SRCDIR)inet.c $(INCDIR)lispemul.h $(INCDIR)arith.h \D 67	 $(INCDIR)lispmap.h $(INCDIR)lisptypes.h $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h $(INCDIR)address68k.h $(INCDIR)ether.h \	 $(INCDIR)dbprint.h $(INCDIR)localfile.hE 67I 67	 $(INCDIR)lispmap.h $(INCDIR)lsptypes.h $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h $(INCDIR)adr68k.h $(INCDIR)ether.h \	 $(INCDIR)dbprint.h $(INCDIR)locfile.hE 67D 50	cc $(RFLAGS) $(SRCDIR)inet.c $(INLINE) -o $(OBJECTDIR)inet$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)inet.c $(INLINE) -o $(OBJECTDIR)inet$(OEXT)E 50E 36D 67$(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  \D 27	 $(INCDIR)lispmap.h  $(INCDIR)address.h \E 27I 27	 $(INCDIR)lispmap.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \E 27	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \E 67I 67$(OBJECTDIR)initdsp.o :  $(SRCDIR)initdsp.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)address.h $(INCDIR)lsptypes.h \	 $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)display.h E 12I 12D 18	 $(INCDIR)display.hE 18I 18D 42	 $(INCDIR)display.h $(INCDIR)dbprint.hE 42I 42	 $(INCDIR)display.h $(INCDIR)dbprint.h $(INLINE)E 42E 18E 12D 6	cc $(RFLAGS) $(SRCDIR)initdisplay.c $(INLINE) -o $(OBJECTDIR)initdisplay.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)initdisplay.c $(INLINE) -o $(OBJECTDIR)initdisplay$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)initdisplay.c $(INLINE) -o $(OBJECTDIR)initdisplay$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)initdsp.c $(INLINE) -o $(OBJECTDIR)initdsp$(OEXT)E 67E 50E 6D 46$(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  \E 46I 46$(OBJECTDIR)initkbd.o :  $(SRCDIR)initkbd.c $(INCDIR)lispemul.h  \E 46D 67	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \E 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)lspglob.h \	 $(INCDIR)adr68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \E 67D 12	 $(INCDIR)ifpage.h E 12I 12	 $(INCDIR)ifpage.hE 12D 6	cc $(RFLAGS) $(SRCDIR)initkeyboard.c $(INLINE) -o $(OBJECTDIR)initkeyboard.oE 6I 6D 46	cc $(RFLAGS) $(SRCDIR)initkeyboard.c $(INLINE) -o $(OBJECTDIR)initkeyboard$(OEXT)E 46I 46D 50	cc $(RFLAGS) $(SRCDIR)initkbd.c $(INLINE) -o $(OBJECTDIR)initkbd$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)initkbd.c $(INLINE) -o $(OBJECTDIR)initkbd$(OEXT)E 50E 46E 6D 46$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  \E 46I 46D 67$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)hdw_config.h  \E 46	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \E 67I 67$(OBJECTDIR)initsout.o :  $(SRCDIR)initsout.c $(INCDIR)hdw_conf.h  \	 $(INCDIR)lispemul.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \E 67	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \D 12	 $(INCDIR)systematoms.h E 12I 12D 67	 $(INCDIR)systematoms.hE 12D 6	cc $(RFLAGS) $(SRCDIR)initsysout.c $(INLINE) -o $(OBJECTDIR)initsysout.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)initsysout.c $(INLINE) -o $(OBJECTDIR)initsysout$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)initsysout.c $(INLINE) -o $(OBJECTDIR)initsysout$(OEXT)E 67I 67D 72	 $(INCDIR)sysatms.hE 72I 72	 $(INCDIR)gc.hE 72	$(CC) $(RFLAGS) $(SRCDIR)initsout.c $(INLINE) -o $(OBJECTDIR)initsout$(OEXT)E 67E 50E 6D 12$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h E 12I 12D 46$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.hE 12D 6	cc $(RFLAGS) $(SRCDIR)keyboardsubrs.c $(INLINE) -o $(OBJECTDIR)keyboardsubrs.oE 6I 6	cc $(RFLAGS) $(SRCDIR)keyboardsubrs.c $(INLINE) -o $(OBJECTDIR)keyboardsubrs$(OEXT)E 46I 46$(OBJECTDIR)kbdsubrs.o :  $(SRCDIR)kbdsubrs.c $(INCDIR)lispemul.hD 50	cc $(RFLAGS) $(SRCDIR)kbdsubrs.c $(INLINE) -o $(OBJECTDIR)kbdsubrs$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)kbdsubrs.c $(INLINE) -o $(OBJECTDIR)kbdsubrs$(OEXT)E 50E 46E 6$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \E 67	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \D 35	 $(INCDIR)ifpage.h $(INCDIR)keyboard.hE 35I 35	 $(INCDIR)ifpage.h $(INCDIR)keyboard.h $(INCDIR)display.h \	 $(INCDIR)pilotbbt.hE 35D 6	cc $(RFLAGS) $(SRCDIR)keyevent.c $(INLINE) -o $(OBJECTDIR)keyevent.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)keyevent.c $(INLINE) -o $(OBJECTDIR)keyevent$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)keyevent.c $(INLINE) -o $(OBJECTDIR)keyevent$(OEXT)E 50I 34D 35$(OBJECTDIR)keyeventcolor.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h $(INCDIR)keyboard.h	cc $(RFLAGS) -DCOLOR $(SRCDIR)keyevent.c $(INLINE) -o $(OBJECTDIR)keyeventcolor$(OEXT)E 34E 6E 35$(OBJECTDIR)keylib.o :  $(SRCDIR)keylib.cD 6	cc $(RFLAGS) $(SRCDIR)keylib.c $(INLINE) -o $(OBJECTDIR)keylib.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)keylib.c $(INLINE) -o $(OBJECTDIR)keylib$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)keylib.c $(INLINE) -o $(OBJECTDIR)keylib$(OEXT)E 50E 6D 67$(OBJECTDIR)keytester.o :  $(SRCDIR)keytester.cD 6	cc $(RFLAGS) $(SRCDIR)keytester.c $(INLINE) -o $(OBJECTDIR)keytester.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)keytester.c $(INLINE) -o $(OBJECTDIR)keytester$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)keytester.c $(INLINE) -o $(OBJECTDIR)keytester$(OEXT)E 67I 67$(OBJECTDIR)keytst.o :  $(SRCDIR)keytst.c	$(CC) $(RFLAGS) $(SRCDIR)keytst.c $(INLINE) -o $(OBJECTDIR)keytst$(OEXT)E 67E 50E 6D 67$(OBJECTDIR)keytestno.o :  $(SRCDIR)keytestno.cD 6	cc $(RFLAGS) $(SRCDIR)keytestno.c $(INLINE) -o $(OBJECTDIR)keytestno.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)keytestno.c $(INLINE) -o $(OBJECTDIR)keytestno$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)keytestno.c $(INLINE) -o $(OBJECTDIR)keytestno$(OEXT)E 67I 67$(OBJECTDIR)keytstno.o :  $(SRCDIR)keytstno.c	$(CC) $(RFLAGS) $(SRCDIR)keytstno.c $(INLINE) -o $(OBJECTDIR)keytstno$(OEXT)E 67E 50E 6D 67$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \E 67I 67$(OBJECTDIR)lsthandl.o :  $(SRCDIR)lsthandl.c $(INCDIR)lispemul.h  \	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \E 67D 12	 $(INCDIR)cell.h E 12I 12	 $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)listhandle.c $(INLINE) -o $(OBJECTDIR)listhandle.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)listhandle.c $(INLINE) -o $(OBJECTDIR)listhandle$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)listhandle.c $(INLINE) -o $(OBJECTDIR)listhandle$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)lsthandl.c $(INLINE) -o $(OBJECTDIR)lsthandl$(OEXT)E 67E 50E 6$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \E 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \	 $(INCDIR)address.h  $(INCDIR)lsptypes.h  $(INCDIR)initatms.h \	 $(INCDIR)lspglob.h  $(INCDIR)emlglob.h  $(INCDIR)cell.h \E 67D 12	 $(INCDIR)stack.h E 12I 12	 $(INCDIR)stack.hE 12D 6	cc $(RFLAGS) $(SRCDIR)llstk.c $(INLINE) -o $(OBJECTDIR)llstk.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)llstk.c $(INLINE) -o $(OBJECTDIR)llstk$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)llstk.c $(INLINE) -o $(OBJECTDIR)llstk$(OEXT)E 50E 6D 4$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c 	cc $(RFLAGS) $(SRCDIR)loader.c $(INLINE) -o $(OBJECTDIR)loader.oE 4I 4D 12#$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c E 12I 12#$(OBJECTDIR)loader.o :  $(SRCDIR)loader.cE 12D 6#	cc $(RFLAGS) $(SRCDIR)loader.c $(INLINE) -o $(OBJECTDIR)loader.oE 6I 6D 50#	cc $(RFLAGS) $(SRCDIR)loader.c $(INLINE) -o $(OBJECTDIR)loader$(OEXT)E 50I 50#	$(CC) $(RFLAGS) $(SRCDIR)loader.c $(INLINE) -o $(OBJECTDIR)loader$(OEXT)E 50E 6E 4D 22$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \E 22I 22D 67$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)address68k.h \	 $(INCDIR)lispemul.h $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \E 22D 12	 $(INCDIR)ifpage.h E 12I 12D 19	 $(INCDIR)ifpage.hE 19I 19D 25	 $(INCDIR)ifpage.h $(INCDIR)dbprint.hE 25I 25D 41	 $(INCDIR)ifpage.h $(INCDIR)dbprint.h $(INCDIR)lisptypes.hE 41I 41	 $(INCDIR)ifpage.h $(INCDIR)dbprint.h $(INCDIR)lisptypes.h $(INLINE)E 41E 25E 19E 12D 6	cc $(RFLAGS) $(SRCDIR)loadsysout.c $(INLINE) -o $(OBJECTDIR)loadsysout.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)loadsysout.c $(INLINE) -o $(OBJECTDIR)loadsysout$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)loadsysout.c $(INLINE) -o $(OBJECTDIR)loadsysout$(OEXT)E 67I 67$(OBJECTDIR)ldsout.o :  $(SRCDIR)ldsout.c $(INCDIR)adr68k.h \	 $(INCDIR)lispemul.h $(INCDIR)lispmap.h  $(INCDIR)lspglob.h \	 $(INCDIR)ifpage.h $(INCDIR)dbprint.h $(INCDIR)lsptypes.h $(INLINE)	$(CC) $(RFLAGS) $(SRCDIR)ldsout.c $(INLINE) -o $(OBJECTDIR)ldsout$(OEXT)E 67E 50E 6I 36$(OBJECTDIR)loopsops.o : $(SRCDIR)loopsops.c $(INCDIR)lispemul.h \D 67	 $(INCDIR)emulglobal.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)lispglobal.h \E 67I 67	 $(INCDIR)emlglob.h  $(INCDIR)address.h $(INCDIR)lsptypes.h \	 $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)lspglob.h \E 67	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)debug.h $(INCDIR)profile.hD 50	cc $(RFLAGS) $(SRCDIR)loopsops.c $(INLINE) -o $(OBJECTDIR)loopsops$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)loopsops.c $(INLINE) -o $(OBJECTDIR)loopsops$(OEXT)E 50E 36D 67$(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \D 12	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h E 12I 12D 32	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.hE 32I 32	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h $(INCDIR)lisptypes.hE 32E 12D 6	cc $(RFLAGS) $(SRCDIR)lowlevel1.c $(INLINE) -o $(OBJECTDIR)lowlevel1.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)lowlevel1.c $(INLINE) -o $(OBJECTDIR)lowlevel1$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)lowlevel1.c $(INLINE) -o $(OBJECTDIR)lowlevel1$(OEXT)E 67I 67$(OBJECTDIR)lowlev1.o :  $(SRCDIR)lowlev1.c $(INCDIR)lispemul.h  \	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emlglob.h $(INCDIR)lsptypes.h	$(CC) $(RFLAGS) $(SRCDIR)lowlev1.c $(INLINE) -o $(OBJECTDIR)lowlev1$(OEXT)E 67E 50E 6D 67$(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \D 12	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h E 12I 12	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.hE 12D 6	cc $(RFLAGS) $(SRCDIR)lowlevel2.c $(INLINE) -o $(OBJECTDIR)lowlevel2.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)lowlevel2.c $(INLINE) -o $(OBJECTDIR)lowlevel2$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)lowlevel2.c $(INLINE) -o $(OBJECTDIR)lowlevel2$(OEXT)E 67I 67$(OBJECTDIR)lowlev2.o :  $(SRCDIR)lowlev2.c $(INCDIR)lispemul.h  \	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h	$(CC) $(RFLAGS) $(SRCDIR)lowlev2.c $(INLINE) -o $(OBJECTDIR)lowlev2$(OEXT)E 67E 50I 35$(OBJECTDIR)misc7.o :  $(SRCDIR)misc7.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 37	 $(INCDIR)stack.h $(INCDIR)opcodes.hE 37I 37	 $(INCDIR)stack.h $(INCDIR)opcodes.h $(INCDIR)display.hE 37D 50	cc $(RFLAGS) $(SRCDIR)misc7.c $(INLINE) -o $(OBJECTDIR)misc7$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)misc7.c $(INLINE) -o $(OBJECTDIR)misc7$(OEXT)E 50E 35I 33$(OBJECTDIR)mvs.o :  $(SRCDIR)mvs.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67	 $(INCDIR)stack.h $(INCDIR)opcodes.hD 50	cc $(RFLAGS) $(SRCDIR)mvs.c $(INLINE) -o $(OBJECTDIR)mvs$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)mvs.c $(INLINE) -o $(OBJECTDIR)mvs$(OEXT)E 50E 33E 6D 67$(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  \	 $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \E 67I 67$(OBJECTDIR)mkatom.o :  $(SRCDIR)mkatom.c $(INCDIR)lispemul.h  \	 $(INCDIR)adr68k.h  $(INCDIR)lsptypes.h \E 67D 12	 $(INCDIR)lispmap.h  $(INCDIR)cell.h E 12I 12	 $(INCDIR)lispmap.h  $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)newmakeatom.c $(INLINE) -o $(OBJECTDIR)newmakeatom.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)newmakeatom.c $(INLINE) -o $(OBJECTDIR)newmakeatom$(OEXT)E 50I 50D 67	$(CC) $(RFLAGS) $(SRCDIR)newmakeatom.c $(INLINE) -o $(OBJECTDIR)newmakeatom$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)mkatom.c $(INLINE) -o $(OBJECTDIR)mkatom$(OEXT)E 67E 50E 6D 67$(OBJECTDIR)osmessage.o :  $(SRCDIR)osmessage.c $(INCDIR)lispemul.h \	 $(INCDIR)address68k.h  $(INCDIR)stream.h  $(INCDIR)arith.h \	 $(INCDIR)lispmap.h $(INCDIR)lisptypes.hD 6	cc $(RFLAGS) $(SRCDIR)osmessage.c $(INLINE) -o $(OBJECTDIR)osmessage.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)osmessage.c $(INLINE) -o $(OBJECTDIR)osmessage$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)osmessage.c $(INLINE) -o $(OBJECTDIR)osmessage$(OEXT)E 67I 67$(OBJECTDIR)osmsg.o :  $(SRCDIR)osmsg.c $(INCDIR)lispemul.h \	 $(INCDIR)adr68k.h  $(INCDIR)stream.h  $(INCDIR)arith.h \	 $(INCDIR)lispmap.h $(INCDIR)lsptypes.h	$(CC) $(RFLAGS) $(SRCDIR)osmsg.c $(INLINE) -o $(OBJECTDIR)osmsg$(OEXT)E 67E 50E 6$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \E 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  $(INCDIR)initatms.h \E 67D 12	 $(INCDIR)return.h $(INCDIR)cell.h E 12I 12	 $(INCDIR)return.h $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)return.c $(INLINE) -o $(OBJECTDIR)return.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)return.c $(INLINE) -o $(OBJECTDIR)return$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)return.c $(INLINE) -o $(OBJECTDIR)return$(OEXT)E 50E 6$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \E 67I 67	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \E 67D 12	 $(INCDIR)gc.h  $(INCDIR)cell.h E 12I 12	 $(INCDIR)gc.h  $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)rplcons.c $(INLINE) -o $(OBJECTDIR)rplcons.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)rplcons.c $(INLINE) -o $(OBJECTDIR)rplcons$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)rplcons.c $(INLINE) -o $(OBJECTDIR)rplcons$(OEXT)E 50E 6D 12$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h E 12I 12$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.hE 12D 6	cc $(RFLAGS) $(SRCDIR)rs232c.c $(INLINE) -o $(OBJECTDIR)rs232c.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)rs232c.c $(INLINE) -o $(OBJECTDIR)rs232c$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)rs232c.c $(INLINE) -o $(OBJECTDIR)rs232c$(OEXT)E 50E 6$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \	 $(INCDIR)adr68k.h  $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h \E 67D 12	 $(INCDIR)arith.h E 12I 12D 43	 $(INCDIR)arith.hE 43I 43	 $(INCDIR)arith.h $(INCDIR)fp.hE 43E 12D 6	cc $(RFLAGS) $(SRCDIR)shift.c $(INLINE) -o $(OBJECTDIR)shift.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)shift.c $(INLINE) -o $(OBJECTDIR)shift$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)shift.c $(INLINE) -o $(OBJECTDIR)shift$(OEXT)E 50E 6D 46$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  \E 46I 46D 67$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)hdw_config.h  \E 67I 67$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)hdw_conf.h  \E 67E 46	 $(INCDIR)lispemul.h  $(INCDIR)address.h \D 67	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \E 67I 67	 $(INCDIR)adr68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)lsptypes.h \E 67D 12	 $(INCDIR)ifpage.h E 12I 12	 $(INCDIR)ifpage.hE 12D 6	cc $(RFLAGS) $(SRCDIR)storage.c $(INLINE) -o $(OBJECTDIR)storage.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)storage.c $(INLINE) -o $(OBJECTDIR)storage$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)storage.c $(INLINE) -o $(OBJECTDIR)storage$(OEXT)E 50E 6D 3$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \E 3I 3$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c \	 $(INCDIR)lispemul.h  $(INCDIR)address.h  \E 3D 67	 $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67I 67	 $(INCDIR)adr68k.h $(INCDIR)subrs.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67	 $(INCDIR)arith.h $(INCDIR)profile.hD 6	cc $(RFLAGS) $(SRCDIR)subr.c $(INLINE) -o $(OBJECTDIR)subr.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)subr.c $(INLINE) -o $(OBJECTDIR)subr$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)subr.c $(INLINE) -o $(OBJECTDIR)subr$(OEXT)E 50E 6I 3$(OBJECTDIR)miscn.o : $(SRCDIR)miscn.c \	 $(INCDIR)lispemul.h  $(INCDIR)address.h  \D 67	 $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h   \E 67I 67	 $(INCDIR)adr68k.h $(INCDIR)subrs.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h   \E 67	 $(INCDIR)arith.h $(INCDIR)profile.hD 6	cc $(RFLAGS) $(SRCDIR)miscn.c $(INLINE) -o $(OBJECTDIR)miscn.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)miscn.c $(INLINE) -o $(OBJECTDIR)miscn$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)miscn.c $(INLINE) -o $(OBJECTDIR)miscn$(OEXT)E 50E 6E 3D 12$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h E 12I 12D 67$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.hE 67I 67$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)adr68k.h  $(INCDIR)lspglob.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)subr0374.c $(INLINE) -o $(OBJECTDIR)subr0374.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)subr0374.c $(INLINE) -o $(OBJECTDIR)subr0374$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)subr0374.c $(INLINE) -o $(OBJECTDIR)subr0374$(OEXT)E 50E 6D 12$(OBJECTDIR)systemcallmessage.o :  $(SRCDIR)systemcallmessage.c D 6	cc $(RFLAGS) $(SRCDIR)systemcallmessage.c $(INLINE) -o $(OBJECTDIR)systemcallmessage.oE 6I 6	cc $(RFLAGS) $(SRCDIR)systemcallmessage.c $(INLINE) -o $(OBJECTDIR)systemcallmessage$(OEXT)E 12I 12D 67$(OBJECTDIR)syscallmsg.o :  $(SRCDIR)syscallmsg.cD 50	cc $(RFLAGS) $(SRCDIR)syscallmsg.c $(INLINE) -o $(OBJECTDIR)syscallmsg$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)syscallmsg.c $(INLINE) -o $(OBJECTDIR)syscallmsg$(OEXT)E 67I 67$(OBJECTDIR)perrno.o :  $(SRCDIR)perrno.c	$(CC) $(RFLAGS) $(SRCDIR)perrno.c $(INLINE) -o $(OBJECTDIR)perrno$(OEXT)E 67E 50E 12E 6$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \D 12	 $(INCDIR)address68k.h E 12I 12D 28	 $(INCDIR)address68k.hE 28I 28	 $(INCDIR)address68k.h $(INCDIR)dbprint.hE 67I 67	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \	 $(INCDIR)adr68k.h $(INCDIR)dbprint.hE 67E 28E 12D 6	cc $(RFLAGS) $(SRCDIR)timer.c $(INLINE) -o $(OBJECTDIR)timer.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)timer.c $(INLINE) -o $(OBJECTDIR)timer$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)timer.c $(INLINE) -o $(OBJECTDIR)timer$(OEXT)E 50E 6D 12$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h E 12I 12$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.hE 12D 6	cc $(RFLAGS) $(SRCDIR)tty.c $(INLINE) -o $(OBJECTDIR)tty.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)tty.c $(INLINE) -o $(OBJECTDIR)tty$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)tty.c $(INLINE) -o $(OBJECTDIR)tty$(OEXT)E 50E 6$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h \E 67I 67	 $(INCDIR)lsptypes.h  $(INCDIR)cell.h \E 67D 12	 $(INCDIR)lispmap.h E 12I 12	 $(INCDIR)lispmap.hE 12D 6	cc $(RFLAGS) $(SRCDIR)typeof.c $(INLINE) -o $(OBJECTDIR)typeof.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)typeof.c $(INLINE) -o $(OBJECTDIR)typeof$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)typeof.c $(INLINE) -o $(OBJECTDIR)typeof$(OEXT)E 50E 6$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \D 67	 $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \E 67I 67	 $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  $(INCDIR)initatms.h \E 67D 12	 $(INCDIR)cell.h E 12I 12	 $(INCDIR)cell.hE 12D 6	cc $(RFLAGS) $(SRCDIR)ufn.c $(INLINE) -o $(OBJECTDIR)ufn.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)ufn.c $(INLINE) -o $(OBJECTDIR)ufn$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)ufn.c $(INLINE) -o $(OBJECTDIR)ufn$(OEXT)E 50E 6$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67	 $(INCDIR)arith.hD 6	cc $(RFLAGS) $(SRCDIR)unixcomm.c $(INLINE) -o $(OBJECTDIR)unixcomm.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)unixcomm.c $(INLINE) -o $(OBJECTDIR)unixcomm$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)unixcomm.c $(INLINE) -o $(OBJECTDIR)unixcomm$(OEXT)E 50E 6$(OBJECTDIR)uraid.o :  $(SRCDIR)uraid.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \E 67	 $(INCDIR)debug.hD 6	cc $(RFLAGS) $(SRCDIR)uraid.c $(INLINE) -o $(OBJECTDIR)uraid.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)uraid.c $(INLINE) -o $(OBJECTDIR)uraid$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)uraid.c $(INLINE) -o $(OBJECTDIR)uraid$(OEXT)E 50E 6$(OBJECTDIR)rpc.o :  $(SRCDIR)rpc.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \D 36	 $(INCDIR)arith.hE 36I 36	 $(INCDIR)arith.h $(INCDIR)localfile.hE 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \	 $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h $(INCDIR)locfile.hE 67E 36D 6	cc $(RFLAGS) $(SRCDIR)rpc.c $(INLINE) -o $(OBJECTDIR)rpc.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)rpc.c $(INLINE) -o $(OBJECTDIR)rpc$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)rpc.c $(INLINE) -o $(OBJECTDIR)rpc$(OEXT)E 50E 6$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \D 12	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h E 12I 12	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.hE 67I 67	 $(INCDIR)address.h  $(INCDIR)adr68k.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emlglob.h  $(INCDIR)lspglob.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)unwind.c $(INLINE) -o $(OBJECTDIR)unwind.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)unwind.c $(INLINE) -o $(OBJECTDIR)unwind$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)unwind.c $(INLINE) -o $(OBJECTDIR)unwind$(OEXT)E 50E 6$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \D 12	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h E 12I 12	 $(INCDIR)lisptypes.h  $(INCDIR)stack.hE 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)lispmap.h \	 $(INCDIR)adr68k.h  $(INCDIR)emlglob.h  $(INCDIR)cell.h \	 $(INCDIR)lsptypes.h  $(INCDIR)stack.hE 67E 12D 6	cc $(RFLAGS) $(SRCDIR)vars3.c $(INLINE) -o $(OBJECTDIR)vars3.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)vars3.c $(INLINE) -o $(OBJECTDIR)vars3$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)vars3.c $(INLINE) -o $(OBJECTDIR)vars3$(OEXT)E 50E 6$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \E 67I 67	 $(INCDIR)lispmap.h  $(INCDIR)lspglob.h \E 67D 12	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h E 12I 12	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.hE 12D 6	cc $(RFLAGS) $(SRCDIR)vmemsave.c $(INLINE) -o $(OBJECTDIR)vmemsave.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)vmemsave.c $(INLINE) -o $(OBJECTDIR)vmemsave$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)vmemsave.c $(INLINE) -o $(OBJECTDIR)vmemsave$(OEXT)E 50E 6$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)arith.h  $(INCDIR)my.h   E 12I 12	 $(INCDIR)arith.h  $(INCDIR)my.hE 12D 6	cc $(RFLAGS) $(SRCDIR)array2.c $(INLINE) -o $(OBJECTDIR)array2.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)array2.c $(INLINE) -o $(OBJECTDIR)array2$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)array2.c $(INLINE) -o $(OBJECTDIR)array2$(OEXT)E 50E 6$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)arith.h  $(INCDIR)my.h   E 12I 12	 $(INCDIR)arith.h  $(INCDIR)my.hE 12D 6	cc $(RFLAGS) $(SRCDIR)array4.c $(INLINE) -o $(OBJECTDIR)array4.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)array4.c $(INLINE) -o $(OBJECTDIR)array4$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)array4.c $(INLINE) -o $(OBJECTDIR)array4$(OEXT)E 50E 6$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67D 12	 $(INCDIR)arith.h  $(INCDIR)my.h   E 12I 12	 $(INCDIR)arith.h  $(INCDIR)my.hE 12D 6	cc $(RFLAGS) $(SRCDIR)array6.c $(INLINE) -o $(OBJECTDIR)array6.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)array6.c $(INLINE) -o $(OBJECTDIR)array6$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)array6.c $(INLINE) -o $(OBJECTDIR)array6$(OEXT)E 50I 16I 63$(OBJECTDIR)socket.o : $(SRCDIR)socket.c	cc $(RFLAGS) $(SRCDIR)socket.c -o $(OBJECTDIR)socket$(OEXT)D 67$(OBJECTDIR)socketdvr.o : $(SRCDIR)socketdvr.c $(INCDIR)lispemul.h \       $(INCDIR)address68k.h $(INCDIR)lisptypes.h $(INCDIR)lispmap.h \E 67I 67$(OBJECTDIR)socdvr.o : $(SRCDIR)socdvr.c $(INCDIR)lispemul.h \       $(INCDIR)adr68k.h $(INCDIR)lsptypes.h $(INCDIR)lispmap.h \E 67       $(INCDIR)arith.hD 67	cc $(RFLAGS) $(SRCDIR)socketdvr.c -o $(OBJECTDIR)socketdvr$(OEXT)E 67I 67	cc $(RFLAGS) $(SRCDIR)socdvr.c -o $(OBJECTDIR)socdvr$(OEXT)E 67E 63$(OBJECTDIR)sxhash.o : $(SRCDIR)sxhash.c $(INCDIR)lispemul.h  \D 67	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \E 67I 67	 $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \E 67	 $(INCDIR)arith.h D 50	cc $(RFLAGS) $(SRCDIR)sxhash.c $(INLINE) -o $(OBJECTDIR)sxhash$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)sxhash.c $(INLINE) -o $(OBJECTDIR)sxhash$(OEXT)E 50E 16E 6D 12$(OBJECTDIR)usersubrs.o : $(SRCDIR)usersubrs.c    E 12I 12D 67$(OBJECTDIR)usersubrs.o : $(SRCDIR)usersubrs.cE 12D 6	cc $(RFLAGS) $(SRCDIR)usersubrs.c $(INLINE) -o $(OBJECTDIR)usersubrs.oE 6I 6D 50	cc $(RFLAGS) $(SRCDIR)usersubrs.c $(INLINE) -o $(OBJECTDIR)usersubrs$(OEXT)E 50I 50	$(CC) $(RFLAGS) $(SRCDIR)usersubrs.c $(INLINE) -o $(OBJECTDIR)usersubrs$(OEXT)E 67I 67$(OBJECTDIR)usrsubr.o : $(SRCDIR)usrsubr.c	$(CC) $(RFLAGS) $(SRCDIR)usrsubr.c $(INLINE) -o $(OBJECTDIR)usrsubr$(OEXT)E 67E 50E 6D 52################################################################################E 52I 52$(OBJECTDIR)XClose.o : $(SRCDIR)XClose.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h D 57	cc $(RFLAGS) $(SRCDIR)XClose.c -o $(OBJECTDIR)XClose$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XClose.c -o $(OBJECTDIR)XClose$(OEXT)E 57$(OBJECTDIR)Cursor.o : $(SRCDIR)Cursor.c $(INCDIR)XVersion.h $(INCDIR)MyWindow.h \	$(INCDIR)lispemul.h $(INCDIR)display.h D 57	cc $(RFLAGS) $(SRCDIR)Cursor.c -o $(OBJECTDIR)Cursor$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)Cursor.c -o $(OBJECTDIR)Cursor$(OEXT)E 57$(OBJECTDIR)XWindow.o : $(SRCDIR)XWindow.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)lispemul.h $(INCDIR)address.h \D 67	$(INCDIR)address68k.h E 67I 67	$(INCDIR)adr68k.h E 67D 57	cc $(RFLAGS) $(SRCDIR)XWindow.c -o $(OBJECTDIR)XWindow$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XWindow.c -o $(OBJECTDIR)XWindow$(OEXT)E 57$(OBJECTDIR)DoRing.o : $(SRCDIR)DoRing.c $(INCDIR)lispemul.hD 57	cc $(RFLAGS) $(SRCDIR)DoRing.c -o $(OBJECTDIR)DoRing$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)DoRing.c -o $(OBJECTDIR)DoRing$(OEXT)E 57$(OBJECTDIR)DoScroll.o : $(SRCDIR)DoScroll.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Xbitblt.hD 57	cc $(RFLAGS) $(SRCDIR)DoScroll.c -o $(OBJECTDIR)DoScroll$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)DoScroll.c -o $(OBJECTDIR)DoScroll$(OEXT)E 57$(OBJECTDIR)XEvent.o : $(SRCDIR)XEvent.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Xbitblt.hD 57	cc $(RFLAGS) $(SRCDIR)XEvent.c -o $(OBJECTDIR)XEvent$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XEvent.c -o $(OBJECTDIR)XEvent$(OEXT)E 57$(OBJECTDIR)XGravity.o : $(SRCDIR)XGravity.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)XGravity.c -o $(OBJECTDIR)XGravity$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XGravity.c -o $(OBJECTDIR)XGravity$(OEXT)E 57$(OBJECTDIR)XInit.o : $(SRCDIR)XInit.cD 57	cc $(RFLAGS) $(SRCDIR)XInit.c -o $(OBJECTDIR)XInit$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XInit.c -o $(OBJECTDIR)XInit$(OEXT)E 57D 67$(OBJECTDIR)InitXevent.o : $(SRCDIR)InitXevent.c $(INCDIR)XVersion.h \E 67I 67D 70$(OBJECTDIR)Xinit.o : $(SRCDIR)Xinit.c $(INCDIR)XVersion.h \E 70I 70$(OBJECTDIR)Xevinit.o : $(SRCDIR)Xevinit.c $(INCDIR)XVersion.h \E 70E 67	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)InitXevent.c -o $(OBJECTDIR)InitXevent$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)InitXevent.c -o $(OBJECTDIR)InitXevent$(OEXT)E 67I 67D 70	$(CC) $(RFLAGS) $(SRCDIR)Xinit.c -o $(OBJECTDIR)Xinit$(OEXT)E 70I 70	$(CC) $(RFLAGS) $(SRCDIR)Xevinit.c -o $(OBJECTDIR)Xevinit$(OEXT)E 70E 67E 57D 67$(OBJECTDIR)XKbdMouse.o : $(SRCDIR)XKbdMouse.c $(INCDIR)lispemul.h \E 67I 67$(OBJECTDIR)Xkbdmus.o : $(SRCDIR)Xkbdmus.c $(INCDIR)lispemul.h \E 67D 53	$(INCDIR)XVersion.h $(INCDIR)MyWindow.hE 53I 53	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h $(INCDIR)dbprint.hE 53D 57	cc $(RFLAGS) $(SRCDIR)XKbdMouse.c -o $(OBJECTDIR)XKbdMouse$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)XKbdMouse.c -o $(OBJECTDIR)XKbdMouse$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xkbdmus.c -o $(OBJECTDIR)Xkbdmus$(OEXT)E 67E 57D 67$(OBJECTDIR)LispWindow.o : $(SRCDIR)LispWindow.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Xdefaults.hD 57	cc $(RFLAGS) $(SRCDIR)LispWindow.c -o $(OBJECTDIR)LispWindow$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)LispWindow.c -o $(OBJECTDIR)LispWindow$(OEXT)E 67I 67$(OBJECTDIR)Xlspwin.o : $(SRCDIR)Xlspwin.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Xdeflt.h	$(CC) $(RFLAGS) $(SRCDIR)Xlspwin.c -o $(OBJECTDIR)Xlspwin$(OEXT)E 67E 57D 67$(OBJECTDIR)LispXbitblt.o : $(SRCDIR)LispXbitblt.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xbbt.o : $(SRCDIR)Xbbt.c $(INCDIR)XVersion.h \E 67	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)LispXbitblt.c -o $(OBJECTDIR)LispXbitblt$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)LispXbitblt.c -o $(OBJECTDIR)LispXbitblt$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xbbt.c -o $(OBJECTDIR)Xbbt$(OEXT)E 67E 57$(OBJECTDIR)LispXdisplay.o : $(SRCDIR)LispXdisplay.c $(INCDIR)lispemul.h \D 67	$(INCDIR)address.h $(INCDIR)address68k.h $(INCDIR)pilotbbt.h \E 67I 67	$(INCDIR)address.h $(INCDIR)adr68k.h $(INCDIR)pilotbbt.h \E 67	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h $(INCDIR)Xbitblt.hD 57	cc $(RFLAGS) $(SRCDIR)LispXdisplay.c -o $(OBJECTDIR)LispXdisplay$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)LispXdisplay.c -o $(OBJECTDIR)LispXdisplay$(OEXT)E 57D 67$(OBJECTDIR)XKeyboard.o : $(SRCDIR)XKeyboard.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xkbd.o : $(SRCDIR)Xkbd.c $(INCDIR)XVersion.h \E 67	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)XKeyboard.c -o $(OBJECTDIR)XKeyboard$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)XKeyboard.c -o $(OBJECTDIR)XKeyboard$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xkbd.c -o $(OBJECTDIR)Xkbd$(OEXT)E 67E 57D 67$(OBJECTDIR)MakeXicon.o : $(SRCDIR)MakeXicon.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xmkicon.o : $(SRCDIR)Xmkicon.c $(INCDIR)XVersion.h \E 67	$(INCDIR)MyWindow.h $(INCDIR)Xicon.hD 57	cc $(RFLAGS) $(SRCDIR)MakeXicon.c -o $(OBJECTDIR)MakeXicon$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)MakeXicon.c -o $(OBJECTDIR)MakeXicon$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xmkicon.c -o $(OBJECTDIR)Xmkicon$(OEXT)E 67E 57D 67$(OBJECTDIR)OpenDisplay.o : $(SRCDIR)OpenDisplay.c $(INCDIR)lispemul.h \E 67I 67D 68$(OBJECTDIR)Xopnedsp.o : $(SRCDIR)Xopnedsp.c $(INCDIR)lispemul.h \E 68I 68$(OBJECTDIR)Xopendsp.o : $(SRCDIR)Xopendsp.c $(INCDIR)lispemul.h \E 68E 67	$(INCDIR)XVersion.h $(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)OpenDisplay.c -o $(OBJECTDIR)OpenDisplay$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)OpenDisplay.c -o $(OBJECTDIR)OpenDisplay$(OEXT)E 67I 67D 68	$(CC) $(RFLAGS) $(SRCDIR)Xopnedsp.c -o $(OBJECTDIR)Xopnedsp$(OEXT)E 68I 68	$(CC) $(RFLAGS) $(SRCDIR)Xopendsp.c -o $(OBJECTDIR)Xopendsp$(OEXT)E 68E 67E 57D 67$(OBJECTDIR)ReadXoption.o : $(SRCDIR)ReadXoption.c $(INCDIR)Xdefaults.hD 57	cc $(RFLAGS) $(SRCDIR)ReadXoption.c -o $(OBJECTDIR)ReadXoption$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)ReadXoption.c -o $(OBJECTDIR)ReadXoption$(OEXT)E 67I 67$(OBJECTDIR)Xrdopt.o : $(SRCDIR)Xrdopt.c $(INCDIR)Xdeflt.h	$(CC) $(RFLAGS) $(SRCDIR)Xrdopt.c -o $(OBJECTDIR)Xrdopt$(OEXT)E 67E 57D 67$(OBJECTDIR)XReconfig.o : $(SRCDIR)XReconfig.c \E 67I 67$(OBJECTDIR)Xreconf.o : $(SRCDIR)Xreconf.c \E 67	$(INCDIR)XVersion.h $(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)XReconfig.c -o $(OBJECTDIR)XReconfig$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)XReconfig.c -o $(OBJECTDIR)XReconfig$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xreconf.c -o $(OBJECTDIR)Xreconf$(OEXT)E 67E 57$(OBJECTDIR)XScroll.o : $(SRCDIR)XScroll.c $(INCDIR)XVersion.h \D 67	$(INCDIR)MyWindow.h $(INCDIR)Stipple.h $(INCDIR)XCursorDef.h \E 67I 67	$(INCDIR)MyWindow.h $(INCDIR)Stipple.h $(INCDIR)Xcursdef.h \E 67	$(INCDIR)XCursors.hD 57	cc $(RFLAGS) $(SRCDIR)XScroll.c -o $(OBJECTDIR)XScroll$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XScroll.c -o $(OBJECTDIR)XScroll$(OEXT)E 57D 67$(OBJECTDIR)Scrollbar.o : $(SRCDIR)Scrollbar.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xscrolb.o : $(SRCDIR)Xscrolb.c $(INCDIR)XVersion.h \E 67	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)Scrollbar.c -o $(OBJECTDIR)Scrollbar$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)Scrollbar.c -o $(OBJECTDIR)Scrollbar$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xscrolb.c -o $(OBJECTDIR)Xscrolb$(OEXT)E 67E 57$(OBJECTDIR)XCursor.o : $(SRCDIR)XCursor.c $(INCDIR)lispemul.h \	$(INCDIR)iopage.h $(INCDIR)XVersion.h $(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)XCursor.c -o $(OBJECTDIR)XCursor$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XCursor.c -o $(OBJECTDIR)XCursor$(OEXT)E 57$(OBJECTDIR)XMouse.o : $(SRCDIR)XMouse.c \	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h D 57	cc $(RFLAGS) $(SRCDIR)XMouse.c -o $(OBJECTDIR)XMouse$(OEXT)E 57I 57	$(CC) $(RFLAGS) $(SRCDIR)XMouse.c -o $(OBJECTDIR)XMouse$(OEXT)E 57D 67$(OBJECTDIR)Subwindows.o : $(SRCDIR)Subwindows.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xsubwin.o : $(SRCDIR)Xsubwin.c $(INCDIR)XVersion.h \E 67	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)Subwindows.c -o $(OBJECTDIR)Subwindows$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)Subwindows.c -o $(OBJECTDIR)Subwindows$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xsubwin.c -o $(OBJECTDIR)Xsubwin$(OEXT)E 67E 57D 67$(OBJECTDIR)VideoColor.o : $(SRCDIR)VideoColor.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xcolor.o : $(SRCDIR)Xcolor.c $(INCDIR)XVersion.h \E 67	$(INCDIR)MyWindow.hD 57	cc $(RFLAGS) $(SRCDIR)VideoColor.c -o $(OBJECTDIR)VideoColor$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)VideoColor.c -o $(OBJECTDIR)VideoColor$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xcolor.c -o $(OBJECTDIR)Xcolor$(OEXT)E 67E 57D 67$(OBJECTDIR)XWindowMgr.o : $(SRCDIR)XWindowMgr.c $(INCDIR)XVersion.h \E 67I 67$(OBJECTDIR)Xwinman.o : $(SRCDIR)Xwinman.c $(INCDIR)XVersion.h \E 67D 53	$(INCDIR)MyWindow.hE 53I 53	$(INCDIR)MyWindow.h $(INCDIR)dbprint.hE 53D 57	cc $(RFLAGS) $(SRCDIR)XWindowMgr.c -o $(OBJECTDIR)XWindowMgr$(OEXT)E 57I 57D 67	$(CC) $(RFLAGS) $(SRCDIR)XWindowMgr.c -o $(OBJECTDIR)XWindowMgr$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)Xwinman.c -o $(OBJECTDIR)Xwinman$(OEXT)E 67I 65$(OBJECTDIR)hacks.o : $(SRCDIR)hacks.c $(INCDIR)dld.h	$(CC) $(RFLAGS) $(SRCDIR)hacks.c -o $(OBJECTDIR)hacks$(OEXT)$(OBJECTDIR)foreign.o : $(SRCDIR)foreign.c $(INCDIR)dld.hD 66	$(CC) $(RFLAGS) $(SRCDIR)foreign.c -ldld -o $(OBJECTDIR)foreign$(OEXT)E 66I 66D 67	$(CC) $(RFLAGS) $(SRCDIR)foreign.c -o $(OBJECTDIR)foreign$(OEXT)E 67I 67	$(CC) $(RFLAGS) $(SRCDIR)foreign.c $(INLINE) -o $(OBJECTDIR)foreign$(OEXT)E 67E 66$(OBJECTDIR)lisp2c.o : $(SRCDIR)lisp2c.c $(INCDIR)dld.h	$(CC) $(RFLAGS) $(SRCDIR)lisp2c.c -o $(OBJECTDIR)lisp2c$(OEXT)E 65E 57################################################################################E 52# Installation targets - copyprotect is ON here# library, sysouts, fonts on release directories not handled here.# userfiles are separate target explicitly (can make w/o building lde)D 67#    $(NATDIR)nativeincludes.h $(NATDIR)disp68K.ilE 67I 67#    $(NATDIR)native.h $(NATDIR)disp68K.ilE 67################################################################################D 13release : $(INSDIR)lde.o userfiles $(INSDIR)lde $(INSDIR)ldeetherE 13I 13prerelease :	mkdir $(RELDIR)	mkdir $(INSDIR)	mkdir $(CHKDIR)I 61	mkdir $(SCRPTDIR)	E 61E 13I 13D 52release : $(INSDIR)lde.o userfiles $(INSDIR)lde $(INSDIR)ldeether csumfilesE 52I 52release : $(INSDIR)$(LDENAME).o userfiles $(INSDIR)$(LDENAME) \D 55	$(INSDIR)ldeether csumfilesE 55I 55D 61	$(INSDIR)ldeether $(INSDIR)lde csumfilesE 61I 61	$(INSDIR)ldeether $(INSDIR)lde csumfiles scriptfilesE 61E 55E 52E 13D 67userfiles : $(INSDIR)usersubrs.c $(INSDIR)makefile $(INSDIR)ldeether.cE 67I 67userfiles : $(INSDIR)usrsubr.c $(INSDIR)makefile $(INSDIR)ldeether.cE 67I 55$(INSDIR)lde: $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c	$(CC) $(CFLAGS) -I$(INCDIR) $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c \D 62		$(LDFLAGS) -o $(INSDIR)ldeE 62I 62		$(LDELDFLAGS) -o $(INSDIR)ldeE 62E 55D 52$(OBJECTDIR)lde.a :              $(LIBFILES) $(OBJECTDIR)makevdateE 52I 52D 57$(OBJECTDIR)$(LDENAME).a :              $(LIBFILES) $(OBJECTDIR)makevdateE 57I 57D 67$(OBJECTDIR)$(LDENAME).a :              $(LIBFILES) $(OSARCHDIR)makevdateE 67I 67$(OBJECTDIR)$(LDENAME).a :              $(LIBFILES) $(OSARCHDIR)mkvdateE 67E 57E 52D 9	/bin/rm -f $(VFILE)	$(OBJECTDIR)makevdate > $(VFILE)	cc -c $(VFILE)E 9I 9	/bin/rm -f $(VFILE).cD 57	$(OBJECTDIR)makevdate > $(VFILE).cE 57I 57D 67	$(OSARCHDIR)makevdate > $(VFILE).cE 67I 67	$(OSARCHDIR)mkvdate > $(VFILE).cE 67E 57D 50	cc -c $(VFILE).c -o $(VFILE).oE 50I 50	$(CC) -c $(VFILE).c -o $(VFILE).oE 50E 9D 52	rm -f lde.aD 9	ar rcv $(OBJECTDIR)lde.a $(LIBFILES) vdate.oE 9I 9	ar rcv $(OBJECTDIR)lde.a $(LIBFILES) $(VFILE).oE 9	ranlib $(OBJECTDIR)lde.aE 52I 52	rm -f $(LDENAME).aD 69	ar rcv $(OBJECTDIR)$(LDENAME).a $(LIBFILES) $(VFILE).o	ranlib $(OBJECTDIR)$(LDENAME).aE 69I 69	$(AR) $(OBJECTDIR)$(LDENAME).a $(LIBFILES) $(VFILE).o	$(RANLIB) $(OBJECTDIR)$(LDENAME).aE 69E 52D 9	rm -f vdate.oE 9I 9	rm -f $(VFILE).oE 9D 52$(INSDIR)lde.o :                         $(OBJECTDIR)lde.a	ld -o $(INSDIR)lde.o -r -u _main $(OBJECTDIR)lde.aE 52I 52$(INSDIR)$(LDENAME).o :                 $(OBJECTDIR)$(LDENAME).aD 69	ld -o $(INSDIR)$(LDENAME).o -r -u _main $(OBJECTDIR)$(LDENAME).aE 69I 69	ld -o $(INSDIR)$(LDENAME).o -r -u $(MAIN) $(OBJECTDIR)$(LDENAME).aE 69E 52D 52$(INSDIR)lde : $(INSDIR)lde.o $(INSDIR)usersubrs.oD 50	cc $(INSDIR)lde.o $(INSDIR)usersubrs.o $(FPFLAGS) -lsuntool -lsunwindow -lpixrect -lc -lm -o $(INSDIR)ldeE 50I 50	$(CC) $(INSDIR)lde.o $(INSDIR)usersubrs.o $(FPFLAGS) -lsuntool -lsunwindow -lpixrect -lc -lm -o $(INSDIR)ldeE 52I 52D 67$(INSDIR)$(LDENAME) : $(INSDIR)$(LDENAME).o $(INSDIR)usersubrs.o	$(CC) $(INSDIR)$(LDENAME).o $(INSDIR)usersubrs.o $(FPFLAGS) $(LDFLAGS)\E 67I 67$(INSDIR)$(LDENAME) : $(INSDIR)$(LDENAME).o $(INSDIR)usrsubr.o	$(CC) $(INSDIR)$(LDENAME).o $(INSDIR)usrsubr.o $(FPFLAGS) $(LDFLAGS)\E 67		 -o $(INSDIR)$(LDENAME)E 52E 50D 67	rm -f $(INSDIR)usersubrs.oE 67I 67	rm -f $(INSDIR)usrsubr.oE 67## ldeether from release - can't tar off with root permission.$(INSDIR)ldeether :  $(INSDIR)ldeether.cD 50	cc $(CFLAGS) $(INSDIR)ldeether.c -o $(INSDIR)ldeetherE 50I 50	$(CC) $(CFLAGS) $(INSDIR)ldeether.c -o $(INSDIR)ldeetherE 50D 59	rsh python "cd `pwd`; /users/maiko/bin/suid $(INSDIR)ldeether"E 59I 59	- rsh python "cd `pwd`; /users/maiko/bin/suid $(INSDIR)ldeether"E 59D 58$(INSDIR)makefile : $(BINDIR)usermakefile-$(RELEASENAME)E 58I 58$(INSDIR)makefile : $(BINDIR)usermakefile-$(OSARCHNAME)E 58	rm -f $(INSDIR)makefileD 58	ln $(BINDIR)usermakefile-$(RELEASENAME) $(INSDIR)makefileE 58I 58	ln $(BINDIR)usermakefile-$(OSARCHNAME) $(INSDIR)makefileE 58D 67$(INSDIR)usersubrs.c : $(SRCDIR)usersubrs.c	rm -f $(INSDIR)usersubrs.c	ln $(SRCDIR)usersubrs.c $(INSDIR)usersubrs.cE 67I 67$(INSDIR)usrsubr.c : $(SRCDIR)usrsubr.c	rm -f $(INSDIR)usrsubr.c	ln $(SRCDIR)usrsubr.c $(INSDIR)usrsubr.cE 67$(INSDIR)ldeether.c : $(SRCDIR)ldeether.c	rm -f $(INSDIR)ldeether.c	ln $(SRCDIR)ldeether.c $(INSDIR)ldeether.cI 13csumfiles : $(CHKDIR)checksum $(CHKDIR)ldechecksum $(CHKDIR)README$(CHKDIR)README : $(BINDIR)checksum-readme	rm -f $(CHKDIR)README	ln $(BINDIR)checksum-readme $(CHKDIR)README$(CHKDIR)checksum : $(BINDIR)checksum	rm -f $(CHKDIR)checksumD 14	ln $(BINDIR)checksum $(CHKDIR)checksumE 14I 14	cp -p $(BINDIR)checksum $(CHKDIR)checksum	chmod 755 $(CHKDIR)checksumE 14$(CHKDIR)ldechecksum : $(BINDIR)ldechecksum	rm -f $(CHKDIR)ldechecksumD 14	ln $(BINDIR)ldechecksum $(CHKDIR)ldechecksumE 14I 14	cp -p $(BINDIR)ldechecksum $(CHKDIR)ldechecksum	chmod 755 $(CHKDIR)ldechecksumE 14I 61scriptfiles : $(SCRPTDIR)install-medley $(SCRPTDIR)medleyE 61I 61$(SCRPTDIR)install-medley : $(BINDIR)install-medley	rm -f $(SCRPTDIR)install-medley	cp -p $(BINDIR)install-medley $(SCRPTDIR)install-medley	chmod 755 $(SCRPTDIR)install-medley$(SCRPTDIR)medley : $(BINDIR)medley	rm -f $(SCRPTDIR)medley	cp -p $(BINDIR)medley $(SCRPTDIR)medley	chmod 755 $(SCRPTDIR)medleyE 61################################################################################# Obsolete################################################################################E 13D 67$(NATDIR)nativeincludes.h : $(INCDIR)nativeincludes.h	rm -f $(NATDIR)nativeincludes.h	ln $(INCDIR)nativeincludes.h $(NATDIR)nativeincludes.hE 67I 67$(NATDIR)native.h : $(INCDIR)native.h	rm -f $(NATDIR)native.h	ln $(INCDIR)native.h $(NATDIR)native.hE 67$(NATDIR)disp68K.il : $(SRCDIR)disp68K.il	rm -f $(NATDIR)disp68K.il	ln $(SRCDIR)disp68K.il $(NATDIR)disp68K.il################################################################################# Miscellaneous targets#	 .c.s. should always have -O################################################################################cleanup :	rm  $(LIBFILES) $(EXTFILES) $(KEYOFF).c.o:D 15	cc $(RFLAGS) $*.c -o $@ $(SRCDIR)disp68K.ilE 15I 15D 50	cc $(RFLAGS) $*.c -o $@ $(INLINE)E 50I 50	$(CC) $(RFLAGS) $*.c -o $@ $(INLINE)E 50E 15.c.s:D 15	cc -S $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilE 15I 15D 50	cc -S $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(INLINE)E 50I 50	$(CC) -S $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(INLINE)E 50E 15D 2keymaker : ../src/keymaker.c ../src/keylib.o	cc $(CFLAGS) -I$(INCDIR) ../src/keymaker.c ../src/keylib.o -o keymakerE 2I 2$(OBJECTDIR)keymaker : ../src/keymaker.c $(OBJECTDIR)keylib.oD 50	cc $(CFLAGS) -I$(INCDIR) ../src/keymaker.c $(OBJECTDIR)keylib.o -o $(OBJECTDIR)keymakerE 50I 50	$(CC) $(CFLAGS) -I$(INCDIR) ../src/keymaker.c $(OBJECTDIR)keylib.o -o $(OBJECTDIR)keymakerE 50E 2cxref :	cxref -c  $(DFLAGS) -I$(INCDIR) $(SRCDIR)*.c -o ../all.cxrefE 1