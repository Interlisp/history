h53369s 00000/00000/00067d D 2.1 88/05/17 09:17:45 hayata 3 2c Version up to 2.1es 00001/00001/00066d D 1.2 88/03/13 13:19:41 hayata 2 1c Add SCCS key id (%Z%)es 00067/00000/00000d D 1.1 88/02/23 18:36:26 hayata 1 0c date and time created 88/02/23 18:36:26 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2/* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. * *	Auther	:	Hiroshi Hayata	 */#define	SkipHostName(cp)	{if(*cp == '{'){		\					 for(; *cp != '}'; ++cp);	\					 ++cp;			\				 } }#define	GetName(LAddress, Buff, Filep)  {	\	int	scratch;	\	LispPTR	*naddress;	\	char	*base;		\	scratch = GetTypeNumber(LAddress);	\	switch(scratch){				\	case TYPE_STRINGP:				\		naddress = (LispPTR *)(Addr68k_from_LADDR(LAddress));	\		base = (char *)(Addr68k_from_LADDR(((STRINGP *)naddress)->base));	\		Filep = setpathname(base, Buff, ((STRINGP *)naddress)->length); \		break;					\	case TYPE_ONED_ARRAY:				\	case TYPE_GENERAL_ARRAY:			\		naddress = (LispPTR *)(Addr68k_from_LADDR(LAddress));	\		base = (char *)(Addr68k_from_LADDR(((ONEDARRAAY *)naddress)->base));	\		Filep = setpathname(base, Buff, ((ONEDARRAAY *)naddress)->totalsize); \		break;					\	case TYPE_LITATOM:				\		naddress = (LispPTR *)(Addr68k_from_LADDR((PNP_OFFSET + ((0xFFFF & LAddress) << 1))));	\		base = (char *)(Addr68k_from_LADDR(0xFFFFFF & (*naddress)));	\		Filep = setpathname(base+1, Buff, (int)*base);	\		break;					\	default:					\		printf("Bad Type Number %d\n", scratch);	\		return(NIL);				\	} }#define	GetNameSize(LAddress, Size, Base)  {	\	int	scratch;	\	LispPTR	*naddress;	\	scratch = GetTypeNumber(LAddress);	\	switch(scratch){				\	case TYPE_STRINGP:				\		naddress = (LispPTR *)(Addr68k_from_LADDR(LAddress));	\		Base = (char *)(Addr68k_from_LADDR(((STRINGP *)naddress)->base));	\		Size = ((STRINGP *)naddress)->length;	\		break;					\	case TYPE_ONED_ARRAY:				\	case TYPE_GENERAL_ARRAY:			\		naddress = (LispPTR *)(Addr68k_from_LADDR(LAddress));	\		Base = (char *)(Addr68k_from_LADDR(((ONEDARRAAY *)naddress)->base));	\		Size = ((ONEDARRAAY *)naddress)->totalsize;		\		break;					\	case TYPE_LITATOM:				\		naddress = (LispPTR *)(Addr68k_from_LADDR((PNP_OFFSET + ((0xFFFF & LAddress) << 1))));	\		Base = (char *)(Addr68k_from_LADDR(0xFFFFFF & (*naddress)));	\		Size = (int)*Base;			\		++Base;					\		break;					\	default:					\		printf("Bad Type Number %d\n", scratch);	\		return(NIL);				\	} }  E 1