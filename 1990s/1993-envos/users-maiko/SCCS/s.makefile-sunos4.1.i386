h29935s 00000/00000/00044d D 1.4 93/03/25 12:10:32 sybalsky 4 3c es 00001/00001/00043d D 1.3 90/07/26 18:46:56 mitani 3 2c add -DNEW_STORAGE flages 00003/00001/00041d D 1.2 90/07/04 01:34:09 sybalsky 2 1c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00042/00000/00000d D 1.1 90/05/14 15:57:23 fuji 1 0c date and time created 90/05/14 15:57:23 by fujieuUf e 0tTI 1# Options for i386SUN# This is to make the %$#@! Apollo cc happyOEXT = .o#For debuggingOPTFLAGS = -gFPFLAGS = D 2DFLAGS = -DKBINT -DFSERROR -DFLTINT -DNOASM -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DSUNDISPLAYE 2I 2D 3DFLAGS = -DKBINT -DFSERROR -DFLTINT -DNOASM -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DSUNDISPLAY -DFORKCOMME 3I 3DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DFLTINT -DNOASM -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DSUNDISPLAY -DFORKCOMME 3LDFLAGS = -lsuntool -lsunwindow -lpixrect -lc -lmE 2INLINE = $(SRCDIR)disp386i.ilOBJECTDIR = ../sunos4.i386/BYTESWAPFILES = $(OBJECTDIR)byteswapfns.o I 2COLORFILES = $(OBJECTDIR)colorbltfns.oE 2default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeether# Special rules to create xc.c on 386i#run cpp to expand macros$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h  $(INCDIR)dbprint.h\	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlineC.h   \	 $(INCDIR)n_op_inlineC.h  $(SRCDIR)disp386i.il  \	 $(INCDIR)dummy_entries.h \	 $(INCDIR)inline386i.h  $(INCDIR)fast_disp.h  \	 $(INCDIR)fastinline68K.h $(INCDIR)profile.h	cc -c -O -Qproduce .s $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.s#run c compiler to produce first pass assembly#$(OBJECTDIR)xc.s1:	$(OBJECTDIR)xc.i#	rm -f $(OBJECTDIR)xc.s1#	/lib/ccom - $(FPFLAGS) <$(OBJECTDIR)xc.i >$(OBJECTDIR)xc.s1$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s $(INLINE)	rm -f $(OBJECTDIR)xc.s2	/usr/lib/inline -i $(INLINE) < $(OBJECTDIR)xc.s > $(OBJECTDIR)xc.s2$(OBJECTDIR)xc.o: $(OBJECTDIR)xc.s2	/bin/as -o $(OBJECTDIR)xc.o -O1 $(OBJECTDIR)xc.s2E 1