h26556s 00001/00001/00090d D 1.3 93/02/08 15:06:14 sybalsky 3 2c Big VM (and new CDR coding) changes for 3.0 \nes 00023/00006/00068d D 1.2 92/05/27 19:15:57 sybalsky 2 1c retrofit of 386 unix changes \nes 00074/00000/00000d D 1.1 92/04/21 15:31:44 sybalsky 1 0c date and time created 92/04/21 15:31:44 by sybalskyeuUf e 0tTI 1/* %Z% %M% Version %I% (%G%). copyright Venue & Fuji Xerox  */D 2/* %Z% %M% Version %I% (%G%). copyright Venue & Fuji Xerox  */E 2I 2/* @(#) tosretmacro.h Version 2.19 (12/7/90). copyright Venue & Fuji Xerox  */E 2I 2E 2/************************************************************************//*									*/D 2/*	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*/E 2I 2/*	(C) Copyright 1989, 1990, 1992 Venue. All Rights Reserved.	*//*	Manufactured in the United States of America.			*/E 2/*									*/D 2/*	This file is work-product resulting from the Xerox/Venue	*//*	Agreement dated 18-August-1989 for support of Medley.		*/E 2I 2/*	The contents of this file are proprietary information 		*//*	belonging to Venue, and are provided to you under license.	*//*	They may not be further distributed or disclosed to third	*//*	parties without the specific permission of Venue.		*/E 2/*									*//************************************************************************/I 2/************************************************************************//*									*//*			t o s r e t m a c r o . h			*//*									*//*	Implements RETURN for the inner evaluation loop.  There are	*//*	two versions--one for when hand optimization has been done,	*//*	and one for the naive case.  To use the hand-optimization	*//*	version, you'll need to define an inline function or macro	*//*	called opreturn().  It must fall thru if alink is odd, but	*//*	must handle all other cases.  You can rely on check_interrupt	*//*	being a defined label.						*//*									*//************************************************************************/E 2D 2E 2#ifdef NATIVETRAN#define RETD6 SaveD6 = 0x100#define RET_CHECK_NATIVE(x) if(x ->native) { RET_TO_NATIVE; }#else#define RETD6#define RET_CHECK_NATIVE(x)#endifD 2#if (defined(SUN3_OS3_OR_OS4_IL) &&  !(defined(NOASMFNCALL)) )E 2I 2#if ((defined(ISC) || defined(SUN3_OS3_OR_OS4_IL)) &&  !(defined(NOASMFNCALL)) )E 2#define OPRETURN							\{	opreturn();							\	EXT; if(slowreturn()) goto stackoverflow_help; RET;		\	Irq_Stk_Check = STK_END_COMPUTE(EndSTKP,FuncObj);		\	if (((int)(CSTKPTR) > Irq_Stk_Check) || (Irq_Stk_End <= 0))	\			{ RETD6; goto check_interrupt;	}		\	Irq_Stk_End = (int) EndSTKP;					\	RET_CHECK_NATIVE(BCE_CURRENTFX);				\ }#else#define OPRETURN	{						\ register struct frameex2 *returnFX ;					\ register int alink;							\ alink = ((struct frameex2 *) BCE_CURRENTFX)->alink;			\ FNTPRINT(("RETURN.\n"));						\ if (alink & 1) { EXT; if(slowreturn()) goto stackoverflow_help; RET;	\	Irq_Stk_Check = STK_END_COMPUTE(EndSTKP,FuncObj);		\	if (((int)(CSTKPTR) > Irq_Stk_Check) || (Irq_Stk_End <= 0))	\			{ RETD6; goto check_interrupt;	}		\	Irq_Stk_End = (int) EndSTKP;					\	RET_CHECK_NATIVE(BCE_CURRENTFX);				\	goto retxit;							\	};								\ CSTKPTRL = (LispPTR *) IVAR;						\ returnFX = (struct  frameex2 *)					\	((DLword *)							\	    (PVARL = (DLword *) Addr68k_from_StkOffset(alink))		\	    - FRAMESIZE);						\ IVARL = (DLword *)							\	    Addr68k_from_StkOffset(GETWORD((DLword *)returnFX -1));	\	/* Get PC from Retunee's pc slot in FX */			\ PCMACL = returnFX->pc  + (ByteCode *)					\	(FuncObj = (struct fnhead *)					\D 3	Addr68k_from_LADDR(SWAP_WORDS(returnFX->fnheader) & 0x0ffffff)) + 1;\E 3I 3	Addr68k_from_LADDR(SWAP_FNHEAD(returnFX->fnheader) & POINTERMASK)) + 1;\E 3 Irq_Stk_Check = STK_END_COMPUTE(EndSTKP,FuncObj);			\  FNCHECKER(if (quick_stack_check()) printf("In RETURN.\n"));	\ if (((int)(CSTKPTR) > Irq_Stk_Check) || (Irq_Stk_End <= 0))		\		{ RETD6; goto check_interrupt;	}		\ Irq_Stk_End = (int) EndSTKP;						\ RET_CHECK_NATIVE(returnFX);						\retxit:	 {}								\} /* OPRETURN end */#endifE 1