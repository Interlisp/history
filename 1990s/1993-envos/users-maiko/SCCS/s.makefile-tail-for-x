h06889s 00001/00001/00977d D 1.6 90/06/15 17:03:45 mitani 6 5c gvar2.o depends on lisptypes.hes 00008/00000/00970d D 1.5 90/06/12 17:52:12 fuji 5 4c Matsuda: add llcolor entryes 00003/00001/00967d D 1.4 90/04/24 19:42:52 osamu 4 3c move INSDIR definition to makerightes 00074/00077/00894d D 1.3 90/04/20 02:14:27 sybalsky 3 2c AIX:  shortening file names, bulk change.es 00009/00007/00962d D 1.2 90/04/19 18:32:59 mitani 2 1c ufs.o dsk.o directory.o dependency changedes 00969/00000/00000d D 1.1 90/03/01 12:54:16 osamu 1 0c date and time created 90/03/01 12:54:16 by osamueuUf e 0tTI 1# remainder of makefile# NOTE:  to add a NEW object file you must#		1.	Add the file.o to one of the object file lists,#			(i.e. OFILES, GCFILES, DEVICES, etc).#		2.	Add the "how to make" & dependency info such as:##	$(OBJECTDIR)<<file-name>>.o :  $(SRCDIR)<<file-name>>.c \#		 $(INCDIR)lispemul.h  \#		 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \#		 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \#		 $(INCDIR)gc.h#		cc $(RFLAGS) $(SRCDIR)<<file-name>>.c $(INLINE) -o $(OBJECTDIR)<<file-name>>.o# to build sysouts on the sun, you must do the following:#	1. setenv OPTFLAGS '-DINIT -g'#	2. rm objectdir/bitblt.c objectdir/dspsubrs.c objectdir/keyevent.c#	3. makeright -e init#	4. follow the instructions on {eris}<lispcore>sunloadup>howto-loadup-sunlisp.txtD 4INSDIR = $(RELDIR)install.$(RELEASENAME)/E 4I 4# '90/04/23 osamu: $INSDIR is defined in makeright ##INSDIR = $(RELDIR)install.$(RELEASENAME)/E 4CHKDIR = $(RELDIR)checksumdir/NATDIR = $(RELDIR)usernative/##  The DISPxxx flags are for compiling files which rely on 'as' much#  more than the other files do.  For mc68020, it'll use optimization#  -O rather than -O2 which is good for the other files in the system#  [JDS 10-26-89] Files affected: xc, arith2, arith4, fvar.#CFLAGS = $(OPTFLAGS) $(DFLAGS) $(FPFLAGS)DISPCFLAGS = $(DISPOPTFLAGS) $(DFLAGS) $(FPGLAGS)RFLAGS = -c $(CFLAGS) -I$(INCDIR)DISPRFLAGS = -c $(DISPCFLAGS) -I$(INCDIR)KEYON  = $(OBJECTDIR)keytester.oKEYOFF = $(OBJECTDIR)keytestno.oOFILES = $(OBJECTDIR)arith2.o \	$(OBJECTDIR)arith3.o \	$(OBJECTDIR)arith4.o \	$(OBJECTDIR)array.o \	$(OBJECTDIR)array2.o \	$(OBJECTDIR)array3.o \	$(OBJECTDIR)array4.o \	$(OBJECTDIR)array5.o \	$(OBJECTDIR)array6.o \	$(OBJECTDIR)atom.o \	$(OBJECTDIR)bin.o \	$(OBJECTDIR)binds.o  \	$(OBJECTDIR)bitblt.o  \	$(OBJECTDIR)bitbltsub.o  \	$(OBJECTDIR)blt.o \	$(OBJECTDIR)car-cdr.o \	$(OBJECTDIR)chardevice.o \	$(OBJECTDIR)common.o \	$(OBJECTDIR)conspage.o \	$(OBJECTDIR)createcell.o \	$(OBJECTDIR)draw.o \	$(OBJECTDIR)findkey.o \	$(OBJECTDIR)fvar.o \	$(OBJECTDIR)xc.o \	$(OBJECTDIR)gc.o \	$(OBJECTDIR)gc2.o \	$(OBJECTDIR)gvar2.o \	$(OBJECTDIR)hardreturn.o \	$(OBJECTDIR)inet.o \D 3	$(OBJECTDIR)interruptcall.o \E 3I 3	$(OBJECTDIR)intcall.o \E 3	$(OBJECTDIR)keylib.o \	$(OBJECTDIR)listhandle.o \I 5	$(OBJECTDIR)llcolor.o \E 5	$(OBJECTDIR)llstk.o \	$(OBJECTDIR)loopsops.o \	$(OBJECTDIR)lowlevel1.o \	$(OBJECTDIR)lowlevel2.o \	$(OBJECTDIR)misc7.o \	$(OBJECTDIR)mvs.o \	$(OBJECTDIR)return.o \	$(OBJECTDIR)rplcons.o \	$(OBJECTDIR)shift.o \	$(OBJECTDIR)subr.o \	$(OBJECTDIR)miscn.o \	$(OBJECTDIR)subr0374.o \	$(OBJECTDIR)timer.o \	$(OBJECTDIR)typeof.o \	$(OBJECTDIR)unwind.o \	$(OBJECTDIR)vars3.o \	$(OBJECTDIR)unixcomm.o \	$(OBJECTDIR)uraid.o \	$(OBJECTDIR)rpc.o \        $(OBJECTDIR)ufn.o \	$(OBJECTDIR)z2.o \	$(OBJECTDIR)eqf.o \	$(OBJECTDIR)fp.o \	$(OBJECTDIR)ubf1.o \	$(OBJECTDIR)ubf2.o \	$(OBJECTDIR)ubf3.o \	$(OBJECTDIR)unix-utils.o \	$(OBJECTDIR)syscallmsg.o \	$(OBJECTDIR)osmessage.oGCFILES = $(OBJECTDIR)gcscan.o \D 3	$(OBJECTDIR)gcarraymaker.o \	$(OBJECTDIR)gccodeblock.o \	$(OBJECTDIR)gcfinalfuncs.o \	$(OBJECTDIR)gcreclaimcell.o \E 3I 3	$(OBJECTDIR)gcarrayops.o \	$(OBJECTDIR)gccode.o \	$(OBJECTDIR)gcfinal.o \	$(OBJECTDIR)gcreccell.o \E 3	$(OBJECTDIR)gchtfind.o \	$(OBJECTDIR)gcmain3.o \	$(OBJECTDIR)gcreclaim.o \	$(OBJECTDIR)gchoverflow.oDEVICES = $(OBJECTDIR)dspsubrs.o \	$(OBJECTDIR)initdisplay.o \	$(OBJECTDIR)dsk.o \	$(OBJECTDIR)ufs.o \	$(OBJECTDIR)directory.o \	$(OBJECTDIR)keyevent.o \D 3	$(OBJECTDIR)keyboardsubrs.o \E 3I 3	$(OBJECTDIR)kbdsubrs.o \E 3	$(OBJECTDIR)ether.o \D 3	$(OBJECTDIR)initkeyboard.o \E 3I 3	$(OBJECTDIR)initkbd.o \E 3	$(OBJECTDIR)rs232c.o \	$(OBJECTDIR)tty.oD 3XFILES = $(OBJECTDIR)CloseDisplay.o \E 3I 3XFILES = $(OBJECTDIR)XClose.o \E 3	$(OBJECTDIR)Cursor.o \D 3	$(OBJECTDIR)DisplayWindow.o \E 3I 3	$(OBJECTDIR)XWindow.o \E 3	$(OBJECTDIR)DoRing.o \	$(OBJECTDIR)DoScroll.o \D 3	$(OBJECTDIR)EventHandler.o \	$(OBJECTDIR)GravityWindow.o \	$(OBJECTDIR)InitXdisplay.o \E 3I 3	$(OBJECTDIR)XEvent.o \	$(OBJECTDIR)XGravity.o \	$(OBJECTDIR)XInit.o \E 3	$(OBJECTDIR)InitXevent.o \D 3	$(OBJECTDIR)KeyboardMouse.o \E 3I 3	$(OBJECTDIR)XKbdMouse.o \E 3	$(OBJECTDIR)LispWindow.o \        $(OBJECTDIR)LispXbitblt.o \D 3	$(OBJECTDIR)LispXkeyboard.o \E 3I 3	$(OBJECTDIR)XKeyboard.o \E 3	$(OBJECTDIR)MakeXicon.o \	$(OBJECTDIR)OpenDisplay.o \	$(OBJECTDIR)ReadXoption.o \D 3	$(OBJECTDIR)ReconfDisplayRegion.o \	$(OBJECTDIR)ScrollWindow.o \E 3I 3	$(OBJECTDIR)XReconfig.o \	$(OBJECTDIR)XScroll.o \E 3	$(OBJECTDIR)Scrollbar.o \D 3	$(OBJECTDIR)DisplayCursor.o \	$(OBJECTDIR)SetXmouseposition.o \E 3I 3	$(OBJECTDIR)XCursor.o \	$(OBJECTDIR)XMouse.o \E 3	$(OBJECTDIR)Subwindows.o \	$(OBJECTDIR)VideoColor.o \D 3	$(OBJECTDIR)WindowManage.o  E 3I 3	$(OBJECTDIR)XWindowMgr.o  E 3D 3TESTFILES = $(OBJECTDIR)Kdebugtools.o \	$(OBJECTDIR)Ktesttool.o \E 3I 3TESTFILES = $(OBJECTDIR)debugtools.o \	$(OBJECTDIR)testtool.o \E 3	$(OBJECTDIR)Kprint.oMAINFILES = $(OBJECTDIR)Ctest.o \	$(OBJECTDIR)initsysout.o \	$(OBJECTDIR)storage.o \	$(OBJECTDIR)allocmds.o \	$(OBJECTDIR)vmemsave.o \	$(OBJECTDIR)newmakeatom.o \	$(OBJECTDIR)loadsysout.oSXHASHFILE = $(OBJECTDIR)sxhash.oVFILE = $(OBJECTDIR)vdateDEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE) $(BITBLTFILE) $(XFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(SXHASHFILE) $(BITBLTFILE) $(XFILES)EXTFILES = $(OBJECTDIR)usersubrs.o# execute to make /tmp/vdate.c################################################################################# Development targets - copyprotect is OFF here################################################################################default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeether $(OBJECTDIR)testsysout $(OBJECTDIR)setsysout$(OBJECTDIR)lde :       $(DEVFILES) $(EXTFILES) $(OBJECTDIR)makevdate	/bin/rm -f $(VFILE).c	$(OBJECTDIR)makevdate > $(VFILE).c	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE).c -lX11  -lpixrect -lc -lm -o $(OBJECTDIR)lde	@ rm -f lisp	@ echo ""	@ echo "Executable is now named '$(OBJECTDIR)lde'"$(OBJECTDIR)ldeether :  $(SRCDIR)ldeether.c	cc $(CFLAGS) $(SRCDIR)ldeether.c -o $(OBJECTDIR)ldeether	@ rm -f startlisp	@ echo ""	@ echo "ethernet kickstart is now named 'ldeether'"#	@ echo "Make ldeether a setuid root program to use PUP/XNS Ethernet"	@ echo "Now making ldeether setuid root"	rsh python "(cd `pwd`;/users/maiko/bin/suid $(OBJECTDIR)ldeether)"	ls -l $(OBJECTDIR)ldeether$(OBJECTDIR)makevdate	: $(SRCDIR)makevdate.c	cc $(SRCDIR)makevdate.c -o $(OBJECTDIR)makevdate$(OBJECTDIR)testsysout : $(OBJECTDIR)testsysout.o	cc $(OBJECTDIR)testsysout.o -lc -lm -o $(OBJECTDIR)testsysout$(OBJECTDIR)setsysout : $(OBJECTDIR)setsysout.o	cc $(OBJECTDIR)setsysout.o -lc -lm -o $(OBJECTDIR)setsysout$(OBJECTDIR)testdisplay :  $(SRCDIR)testdisplay.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h $(INCDIR)dbprint.h	cc $(CFLAGS) -DDEBUG -I$(INCDIR) $(SRCDIR)testdisplay.c -lsuntool -lsunwindow  -lpixrect -lc -lm -o $(OBJECTDIR)testdisplay#### Component files ######################################################$(OBJECTDIR)testsysout.o: $(SRCDIR)testsysout.c	cc -c $(SRCDIR)testsysout.c -I../inc -o $(OBJECTDIR)testsysout$(OEXT)$(OBJECTDIR)setsysout.o: $(SRCDIR)setsysout.c	cc -c $(SRCDIR)setsysout.c -I../inc -o $(OBJECTDIR)setsysout$(OEXT)$(OBJECTDIR)Ctest.o : $(SRCDIR)Ctest.c $(INCDIR)lispemul.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)return.h $(INCDIR)debug.h $(INCDIR)profile.h	cc $(RFLAGS) $(SRCDIR)Ctest.c $(INLINE) -o $(OBJECTDIR)Ctest$(OEXT)D 3$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)debugtools.o :  $(SRCDIR)debugtools.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.hD 3	cc $(RFLAGS) $(SRCDIR)Kdebugtools.c $(INLINE) -o $(OBJECTDIR)Kdebugtools$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)debugtools.c $(INLINE) -o $(OBJECTDIR)debugtools$(OEXT)E 3$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  \	 $(INCDIR)address.h  $(INCDIR)lispemul.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h	cc $(RFLAGS) $(SRCDIR)Kprint.c $(INLINE) -o $(OBJECTDIR)Kprint$(OEXT)D 3$(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)testtool.o :  $(SRCDIR)testtool.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.hD 3	cc $(RFLAGS) $(SRCDIR)Ktesttool.c $(INLINE) -o $(OBJECTDIR)Ktesttool$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)testtool.c $(INLINE) -o $(OBJECTDIR)testtool$(OEXT)E 3$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.h	cc $(RFLAGS) $(SRCDIR)allocmds.c $(INLINE) -o $(OBJECTDIR)allocmds$(OEXT)$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h	cc $(DISPRFLAGS) $(SRCDIR)arith2.c $(INLINE) -o $(OBJECTDIR)arith2$(OEXT)$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h	cc $(RFLAGS) $(SRCDIR)arith3.c $(INLINE) -o $(OBJECTDIR)arith3$(OEXT)$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h	cc $(DISPRFLAGS) $(SRCDIR)arith4.c $(INLINE) -o $(OBJECTDIR)arith4$(OEXT)$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)array.c $(INLINE) -o $(OBJECTDIR)array$(OEXT)$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)array3.c $(INLINE) -o $(OBJECTDIR)array3$(OEXT)$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)array5.c $(INLINE) -o $(OBJECTDIR)array5$(OEXT)$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h	cc $(RFLAGS) $(SRCDIR)atom.c $(INLINE) -o $(OBJECTDIR)atom$(OEXT)$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h	cc $(RFLAGS) $(SRCDIR)bin.c $(INLINE) -o $(OBJECTDIR)bin$(OEXT)$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h	cc $(RFLAGS) $(SRCDIR)binds.c $(INLINE) -o $(OBJECTDIR)binds$(OEXT)$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h \	  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \	 $(INCDIR)bb.h	cc $(RFLAGS) $(SRCDIR)bitblt.c $(INLINE) -o $(OBJECTDIR)bitblt$(OEXT)$(OBJECTDIR)bitblt68K.o :  $(OBJECTDIR)bitblt68K.i $(SRCDIR)bitblt68K.s	as -O $(OBJECTDIR)bitblt68K.i -o $(OBJECTDIR)bitblt68K$(OEXT)$(OBJECTDIR)bitblt68K.i : $(SRCDIR)bitblt68K.s	/lib/cpp $(SRCDIR)bitblt68K.s $(OBJECTDIR)bitblt68K.i$(OBJECTDIR)bitbltSPARC.o :  $(SRCDIR)bitbltSPARC.s	as -P $(SRCDIR)bitbltSPARC.s -o $(OBJECTDIR)bitbltSPARC$(OEXT)$(OBJECTDIR)bitbltsub.o :  $(SRCDIR)bitbltsub.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)displaydata.h \	 $(INCDIR)bitblt.h $(INCDIR)bb.h $(INCDIR)dbprint.h \	 $(INCDIR)stack.h $(INCDIR)cell.h $(INCDIR)gc.h $(INCDIR)arith.h	cc $(RFLAGS) $(SRCDIR)bitbltsub.c $(INLINE) -o $(OBJECTDIR)bitbltsub$(OEXT)$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \	 $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)blt.c $(INLINE) -o $(OBJECTDIR)blt$(OEXT)$(OBJECTDIR)byteswapfns.o: $(SRCDIR)byteswapfns.c	cc $(RFLAGS) $(SRCDIR)byteswapfns.c -o $(OBJECTDIR)byteswapfns$(OEXT)$(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)car-cdr.c $(INLINE) -o $(OBJECTDIR)car-cdr$(OEXT)$(OBJECTDIR)chardevice.o :  $(SRCDIR)chardevice.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h $(INCDIR)stream.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)osmessage.h  $(INCDIR)arith.h $(INCDIR)localfile.h	cc $(RFLAGS) $(SRCDIR)chardevice.c $(INLINE) -o $(OBJECTDIR)chardevice$(OEXT)$(OBJECTDIR)common.o :  $(SRCDIR)common.c $(INCDIR)lispemul.h \	 $(INCDIR)lispmap.h $(INCDIR)address68k.h $(INCDIR)lispglobal.h \	 $(INCDIR)emulglobal.h	cc $(RFLAGS) $(SRCDIR)common.c $(INLINE) -o $(OBJECTDIR)common$(OEXT)I 5$(OBJECTDIR)llcolor.o : $(SRCDIR)llcolor.c $(INCDIR)lispemul.h $(INCDIR)lispmap.h \	$(INCDIR)lisptypes.h $(INCDIR)address.h $(INCDIR)address68k.h \	$(INCDIR)lispglobal.h $(INCDIR)emulglobal.h $(INCDIR)display.h \	$(INCDIR)devconfig.h $(INCDIR)bb.h $(INCDIR)bitblt.h $(INCDIR)pilotbbt.h \	$(INCDIR)dbprint.h	$(CC) $(RFLAGS) $(SRCDIR)llcolor.c $(INLINE) -o $(OBJECTDIR)llcolor$(OEXT)E 5$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h	cc $(RFLAGS) $(SRCDIR)conspage.c $(INLINE) -o $(OBJECTDIR)conspage$(OEXT)$(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h	cc $(RFLAGS) $(SRCDIR)createcell.c $(INLINE) -o $(OBJECTDIR)createcell$(OEXT)$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)draw.c $(INLINE) -o $(OBJECTDIR)draw$(OEXT)$(OBJECTDIR)z2.o :  $(SRCDIR)z2.c  \	 $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)gc.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)z2.c $(INLINE) -o $(OBJECTDIR)z2$(OEXT)$(OBJECTDIR)eqf.o :  $(SRCDIR)eqf.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)eqf.c $(INLINE) -o $(OBJECTDIR)eqf$(OEXT)$(OBJECTDIR)fp.o :  $(SRCDIR)fp.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h   \	 $(INCDIR)my.h $(INCDIR)fp.h	cc $(RFLAGS) $(SRCDIR)fp.c $(INLINE) -o $(OBJECTDIR)fp$(OEXT)D 3$(OBJECTDIR)interruptcall.o :  $(SRCDIR)interruptcall.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)intcall.o :  $(SRCDIR)intcall.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)address.h $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h $(INCDIR)stack.h $(INCDIR)return.h \	 $(INCDIR)emulglobal.h $(INCDIR)lispglobal.h $(INCDIR)initatoms.h \	 $(INCDIR)cell.hD 3	cc $(RFLAGS) $(SRCDIR)interruptcall.c $(INLINE) -o $(OBJECTDIR)interruptcall$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)intcall.c $(INLINE) -o $(OBJECTDIR)intcall$(OEXT)E 3$(OBJECTDIR)ubf1.o :  $(SRCDIR)ubf1.c  \	 $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h $(INCDIR)lispmap.h $(INCDIR)arith.h $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)ubf1.c $(INLINE) -o $(OBJECTDIR)ubf1$(OEXT)$(OBJECTDIR)ubf2.o :  $(SRCDIR)ubf2.c  \	 $(INCDIR)lispemul.h $(INCDIR)fp.h	cc $(RFLAGS) $(SRCDIR)ubf2.c $(INLINE) -o $(OBJECTDIR)ubf2$(OEXT)$(OBJECTDIR)ubf3.o :  $(SRCDIR)ubf3.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h $(INCDIR)fp.h	cc $(RFLAGS) $(SRCDIR)ubf3.c $(INLINE) -o $(OBJECTDIR)ubf3$(OEXT)$(OBJECTDIR)unix-utils.o :  $(SRCDIR)unix-utils.c  \	 $(INCDIR)lisptypes.h $(INCDIR)keyboard.h	cc $(RFLAGS) $(SRCDIR)unix-utils.c $(INLINE) -o $(OBJECTDIR)unix-utils$(OEXT)$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)display.h	cc $(RFLAGS) $(SRCDIR)dspsubrs.c $(INLINE) -o $(OBJECTDIR)dspsubrs$(OEXT)$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)ether.h	cc $(RFLAGS) $(SRCDIR)ether.c $(INLINE) -o $(OBJECTDIR)ether$(OEXT)$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h	cc $(RFLAGS) $(SRCDIR)findkey.c $(INLINE) -o $(OBJECTDIR)findkey$(OEXT)$(OBJECTDIR)dsk.o :  $(SRCDIR)dsk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h \D 2	 $(INCDIR)address68k.h $(INCDIR)lisptypes.h  \	 $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h \	 $(INCDIR)localfile.hE 2I 2	 $(INCDIR)address68k.h $(INCDIR)lisptypes.h $(INCDIR)lispglobal.h \	 $(INCDIR)fp.h $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h \	 $(INCDIR)localfile.h $(INCDIR)osmessage.h $(INCDIR)dbprint.hE 2	cc $(RFLAGS) $(SRCDIR)dsk.c $(INLINE) -o $(OBJECTDIR)dsk$(OEXT)$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  \D 2	 $(INCDIR)address68k.h $(INCDIR)dbprint.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h $(INCDIR)stream.h  $(INCDIR)timeout.h $(INCDIR)localfile.hE 2I 2	 $(INCDIR)address68k.h $(INCDIR)dbprint.h  $(INLINE)\	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h $(INCDIR)arith.h \	 $(INCDIR)stream.h $(INCDIR)timeout.h $(INCDIR)localfile.h $(INCDIR)dbprint.hE 2	cc $(RFLAGS) $(SRCDIR)ufs.c $(INLINE) -o $(OBJECTDIR)ufs$(OEXT)$(OBJECTDIR)directory.o :  $(SRCDIR)directory.c $(INCDIR)lispemul.h  \D 2	 $(INCDIR)lispmap.h $(INCDIR)timeout.h $(INCDIR)localfile.hE 2I 2	 $(INCDIR)lispmap.h $(INCDIR)address68k.h $(INCDIR)lisptypes.h  \	 $(INCDIR)arith.h $(INCDIR)lispglobal.h $(INCDIR)timeout.h $(INCDIR)localfile.h	E 2	cc $(RFLAGS) $(SRCDIR)directory.c $(INLINE) -o $(OBJECTDIR)directory$(OEXT)$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h $(INCDIR)lisptypes.h	cc $(DISPRFLAGS) $(SRCDIR)fvar.c $(INLINE) -o $(OBJECTDIR)fvar$(OEXT)$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  \	 $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h	cc $(RFLAGS) $(SRCDIR)gc.c $(INLINE) -o $(OBJECTDIR)gc$(OEXT)$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  \	 $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h	cc $(RFLAGS) $(SRCDIR)gc2.c $(INLINE) -o $(OBJECTDIR)gc2$(OEXT)D 3$(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)gcarrayops.o :  $(SRCDIR)gcarrayops.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.hD 3	cc $(RFLAGS) $(SRCDIR)gcarraymaker.c $(INLINE) -o $(OBJECTDIR)gcarraymaker$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)gcarrayops.c $(INLINE) -o $(OBJECTDIR)gcarrayops$(OEXT)E 3D 3$(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)gcfinal.o :  $(SRCDIR)gcfinal.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.hD 3	cc $(RFLAGS) $(SRCDIR)gcfinalfuncs.c $(INLINE) -o $(OBJECTDIR)gcfinalfuncs$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)gcfinal.c $(INLINE) -o $(OBJECTDIR)gcfinal$(OEXT)E 3$(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h	cc $(RFLAGS) $(SRCDIR)gchoverflow.c $(INLINE) -o $(OBJECTDIR)gchoverflow$(OEXT)$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)gchtfind.c $(INLINE) -o $(OBJECTDIR)gchtfind$(OEXT)$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h	cc $(RFLAGS) $(SRCDIR)gcmain3.c $(INLINE) -o $(OBJECTDIR)gcmain3$(OEXT)$(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)stack.h  $(INCDIR)gc.h	cc $(RFLAGS) $(SRCDIR)gcreclaim.c $(INLINE) -o $(OBJECTDIR)gcreclaim$(OEXT)D 3$(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)gcreccell.o :  $(SRCDIR)gcreccell.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)lisptypes.h  $(INCDIR)address.h $(INCDIR)dbprint.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.hD 3	cc $(RFLAGS) $(SRCDIR)gcreclaimcell.c $(INLINE) -o $(OBJECTDIR)gcreclaimcell$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)gcreccell.c $(INLINE) -o $(OBJECTDIR)gcreccell$(OEXT)E 3D 3$(OBJECTDIR)gccodeblock.o :  $(SRCDIR)gccodeblock.c \E 3I 3$(OBJECTDIR)gccode.o :  $(SRCDIR)gccode.c \E 3	 $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h  $(INCDIR)array.hD 3	cc $(RFLAGS) $(SRCDIR)gccodeblock.c $(INLINE) -o $(OBJECTDIR)gccodeblock$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)gccode.c $(INLINE) -o $(OBJECTDIR)gccode$(OEXT)E 3$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)gc.h $(INCDIR)lisptypes.h	cc $(RFLAGS) $(SRCDIR)gcscan.c $(INLINE) -o $(OBJECTDIR)gcscan$(OEXT)$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \D 6	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h $(INCDIR)cell.hE 6I 6	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h $(INCDIR)cell.h $(INCDIR)lisptypes.hE 6	cc $(RFLAGS) $(SRCDIR)gvar2.c $(INLINE) -o $(OBJECTDIR)gvar2$(OEXT)$(OBJECTDIR)hardreturn.o :  $(SRCDIR)hardreturn.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h $(INCDIR)stack.h  $(INCDIR)return.h \	 $(INCDIR)emulglobal.h	cc $(RFLAGS) $(SRCDIR)hardreturn.c $(INLINE) -o $(OBJECTDIR)hardreturn$(OEXT)$(OBJECTDIR)inet.o : $(SRCDIR)inet.c $(INCDIR)lispemul.h $(INCDIR)arith.h \	 $(INCDIR)lispmap.h $(INCDIR)lisptypes.h $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h $(INCDIR)address68k.h $(INCDIR)ether.h \	 $(INCDIR)dbprint.h $(INCDIR)localfile.h	cc $(RFLAGS) $(SRCDIR)inet.c $(INLINE) -o $(OBJECTDIR)inet$(OEXT)$(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h $(INCDIR)dbprint.h	cc $(RFLAGS) $(SRCDIR)initdisplay.c $(INLINE) -o $(OBJECTDIR)initdisplay$(OEXT)D 3$(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  \E 3I 3$(OBJECTDIR)initkbd.o :  $(SRCDIR)initkbd.c $(INCDIR)lispemul.h  \E 3	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.hD 3	cc $(RFLAGS) $(SRCDIR)initkeyboard.c $(INLINE) -o $(OBJECTDIR)initkeyboard$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)initkbd.c $(INLINE) -o $(OBJECTDIR)initkbd$(OEXT)E 3D 3$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  \E 3I 3$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)hdw_config.h  \E 3	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \	 $(INCDIR)systematoms.h	cc $(RFLAGS) $(SRCDIR)initsysout.c $(INLINE) -o $(OBJECTDIR)initsysout$(OEXT)D 3$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h	cc $(RFLAGS) $(SRCDIR)keyboardsubrs.c $(INLINE) -o $(OBJECTDIR)keyboardsubrs$(OEXT)E 3I 3$(OBJECTDIR)kbdsubrs.o :  $(SRCDIR)kbdsubrs.c $(INCDIR)lispemul.h	cc $(RFLAGS) $(SRCDIR)kbdsubrs.c $(INLINE) -o $(OBJECTDIR)kbdsubrs$(OEXT)E 3$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h $(INCDIR)keyboard.h $(INCDIR)display.h \	 $(INCDIR)pilotbbt.h	cc $(RFLAGS) $(SRCDIR)keyevent.c $(INLINE) -o $(OBJECTDIR)keyevent$(OEXT)$(OBJECTDIR)keylib.o :  $(SRCDIR)keylib.c	cc $(RFLAGS) $(SRCDIR)keylib.c $(INLINE) -o $(OBJECTDIR)keylib$(OEXT)$(OBJECTDIR)keytester.o :  $(SRCDIR)keytester.c	cc $(RFLAGS) $(SRCDIR)keytester.c $(INLINE) -o $(OBJECTDIR)keytester$(OEXT)$(OBJECTDIR)keytestno.o :  $(SRCDIR)keytestno.c	cc $(RFLAGS) $(SRCDIR)keytestno.c $(INLINE) -o $(OBJECTDIR)keytestno$(OEXT)$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)listhandle.c $(INLINE) -o $(OBJECTDIR)listhandle$(OEXT)$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)stack.h	cc $(RFLAGS) $(SRCDIR)llstk.c $(INLINE) -o $(OBJECTDIR)llstk$(OEXT)#$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c#	cc $(RFLAGS) $(SRCDIR)loader.c $(INLINE) -o $(OBJECTDIR)loader$(OEXT)$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)address68k.h \	 $(INCDIR)lispemul.h $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h $(INCDIR)dbprint.h $(INCDIR)lisptypes.h	cc $(RFLAGS) $(SRCDIR)loadsysout.c $(INLINE) -o $(OBJECTDIR)loadsysout$(OEXT)$(OBJECTDIR)loopsops.o : $(SRCDIR)loopsops.c $(INCDIR)lispemul.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address.h $(INCDIR)lisptypes.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)debug.h $(INCDIR)profile.h	cc $(RFLAGS) $(SRCDIR)loopsops.c $(INLINE) -o $(OBJECTDIR)loopsops$(OEXT)$(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h $(INCDIR)lisptypes.h	cc $(RFLAGS) $(SRCDIR)lowlevel1.c $(INLINE) -o $(OBJECTDIR)lowlevel1$(OEXT)$(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h	cc $(RFLAGS) $(SRCDIR)lowlevel2.c $(INLINE) -o $(OBJECTDIR)lowlevel2$(OEXT)$(OBJECTDIR)misc7.o :  $(SRCDIR)misc7.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h $(INCDIR)opcodes.h $(INCDIR)display.h	cc $(RFLAGS) $(SRCDIR)misc7.c $(INLINE) -o $(OBJECTDIR)misc7$(OEXT)$(OBJECTDIR)mvs.o :  $(SRCDIR)mvs.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h $(INCDIR)opcodes.h	cc $(RFLAGS) $(SRCDIR)mvs.c $(INLINE) -o $(OBJECTDIR)mvs$(OEXT)$(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  \	 $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)newmakeatom.c $(INLINE) -o $(OBJECTDIR)newmakeatom$(OEXT)$(OBJECTDIR)osmessage.o :  $(SRCDIR)osmessage.c $(INCDIR)lispemul.h \	 $(INCDIR)address68k.h  $(INCDIR)stream.h  $(INCDIR)arith.h \	 $(INCDIR)lispmap.h $(INCDIR)lisptypes.h	cc $(RFLAGS) $(SRCDIR)osmessage.c $(INLINE) -o $(OBJECTDIR)osmessage$(OEXT)$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)return.h $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)return.c $(INLINE) -o $(OBJECTDIR)return$(OEXT)$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)rplcons.c $(INLINE) -o $(OBJECTDIR)rplcons$(OEXT)$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h	cc $(RFLAGS) $(SRCDIR)rs232c.c $(INLINE) -o $(OBJECTDIR)rs232c$(OEXT)$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h	cc $(RFLAGS) $(SRCDIR)shift.c $(INLINE) -o $(OBJECTDIR)shift$(OEXT)D 3$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  \E 3I 3$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)hdw_config.h  \E 3	 $(INCDIR)lispemul.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \	 $(INCDIR)ifpage.h	cc $(RFLAGS) $(SRCDIR)storage.c $(INLINE) -o $(OBJECTDIR)storage$(OEXT)D 2$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c \E 2I 2D 3$(OBJECTDIR)subr.1o :  $(SRCDIR)subr.c \E 3I 3$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c \E 3E 2	 $(INCDIR)lispemul.h  $(INCDIR)address.h  \	 $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h $(INCDIR)profile.h	cc $(RFLAGS) $(SRCDIR)subr.c $(INLINE) -o $(OBJECTDIR)subr$(OEXT)$(OBJECTDIR)miscn.o : $(SRCDIR)miscn.c \	 $(INCDIR)lispemul.h  $(INCDIR)address.h  \	 $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h   \	 $(INCDIR)arith.h $(INCDIR)profile.h	cc $(RFLAGS) $(SRCDIR)miscn.c $(INLINE) -o $(OBJECTDIR)miscn$(OEXT)$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h	cc $(RFLAGS) $(SRCDIR)subr0374.c $(INLINE) -o $(OBJECTDIR)subr0374$(OEXT)$(OBJECTDIR)syscallmsg.o :  $(SRCDIR)syscallmsg.c	cc $(RFLAGS) $(SRCDIR)syscallmsg.c $(INLINE) -o $(OBJECTDIR)syscallmsg$(OEXT)$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h $(INCDIR)dbprint.h	cc $(RFLAGS) $(SRCDIR)timer.c $(INLINE) -o $(OBJECTDIR)timer$(OEXT)$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h	cc $(RFLAGS) $(SRCDIR)tty.c $(INLINE) -o $(OBJECTDIR)tty$(OEXT)$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h \	 $(INCDIR)lispmap.h	cc $(RFLAGS) $(SRCDIR)typeof.c $(INLINE) -o $(OBJECTDIR)typeof$(OEXT)$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \	 $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h	cc $(RFLAGS) $(SRCDIR)ufn.c $(INLINE) -o $(OBJECTDIR)ufn$(OEXT)$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h	cc $(RFLAGS) $(SRCDIR)unixcomm.c $(INLINE) -o $(OBJECTDIR)unixcomm$(OEXT)$(OBJECTDIR)uraid.o :  $(SRCDIR)uraid.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)debug.h	cc $(RFLAGS) $(SRCDIR)uraid.c $(INLINE) -o $(OBJECTDIR)uraid$(OEXT)$(OBJECTDIR)rpc.o :  $(SRCDIR)rpc.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h $(INCDIR)localfile.h	cc $(RFLAGS) $(SRCDIR)rpc.c $(INLINE) -o $(OBJECTDIR)rpc$(OEXT)$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  \	 $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h	cc $(RFLAGS) $(SRCDIR)unwind.c $(INLINE) -o $(OBJECTDIR)unwind$(OEXT)$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h	cc $(RFLAGS) $(SRCDIR)vars3.c $(INLINE) -o $(OBJECTDIR)vars3$(OEXT)$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h	cc $(RFLAGS) $(SRCDIR)vmemsave.c $(INLINE) -o $(OBJECTDIR)vmemsave$(OEXT)$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)array2.c $(INLINE) -o $(OBJECTDIR)array2$(OEXT)$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)array4.c $(INLINE) -o $(OBJECTDIR)array4$(OEXT)$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h	cc $(RFLAGS) $(SRCDIR)array6.c $(INLINE) -o $(OBJECTDIR)array6$(OEXT)$(OBJECTDIR)sxhash.o : $(SRCDIR)sxhash.c $(INCDIR)lispemul.h  \	 $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h 	cc $(RFLAGS) $(SRCDIR)sxhash.c $(INLINE) -o $(OBJECTDIR)sxhash$(OEXT)$(OBJECTDIR)usersubrs.o : $(SRCDIR)usersubrs.c	cc $(RFLAGS) $(SRCDIR)usersubrs.c $(INLINE) -o $(OBJECTDIR)usersubrs$(OEXT)D 3$(OBJECTDIR)CloseDisplay.o : $(SRCDIR)CloseDisplay.c $(INCDIR)XVersion.h \E 3I 3$(OBJECTDIR)XClose.o : $(SRCDIR)XClose.c $(INCDIR)XVersion.h \E 3	$(INCDIR)MyWindow.h D 3	cc $(RFLAGS) $(SRCDIR)CloseDisplay.c -o $(OBJECTDIR)CloseDisplay$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XClose.c -o $(OBJECTDIR)XClose$(OEXT)E 3$(OBJECTDIR)Cursor.o : $(SRCDIR)Cursor.c $(INCDIR)XVersion.h $(INCDIR)MyWindow.h \	$(INCDIR)lispemul.h $(INCDIR)display.h 	cc $(RFLAGS) $(SRCDIR)Cursor.c -o $(OBJECTDIR)Cursor$(OEXT)D 3$(OBJECTDIR)DisplayWindow.o : $(SRCDIR)DisplayWindow.c $(INCDIR)XVersion.h \E 3I 3$(OBJECTDIR)XWindow.o : $(SRCDIR)XWindow.c $(INCDIR)XVersion.h \E 3	$(INCDIR)MyWindow.h $(INCDIR)lispemul.h $(INCDIR)address.h \	$(INCDIR)address68k.h D 3	cc $(RFLAGS) $(SRCDIR)DisplayWindow.c -o $(OBJECTDIR)DisplayWindow$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XWindow.c -o $(OBJECTDIR)XWindow$(OEXT)E 3$(OBJECTDIR)DoRing.o : $(SRCDIR)DoRing.c $(INCDIR)lispemul.h	cc $(RFLAGS) $(SRCDIR)DoRing.c -o $(OBJECTDIR)DoRing$(OEXT)$(OBJECTDIR)DoScroll.o : $(SRCDIR)DoScroll.c $(INCDIR)XVersion.h \D 3	$(INCDIR)MyWindow.h $(INCDIR)lispXbitblt.hE 3I 3	$(INCDIR)MyWindow.h $(INCDIR)Xbitblt.hE 3	cc $(RFLAGS) $(SRCDIR)DoScroll.c -o $(OBJECTDIR)DoScroll$(OEXT)D 3$(OBJECTDIR)EventHandler.o : $(SRCDIR)EventHandler.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)lispXbitblt.h	cc $(RFLAGS) $(SRCDIR)EventHandler.c -o $(OBJECTDIR)EventHandler$(OEXT)E 3I 3$(OBJECTDIR)XEvent.o : $(SRCDIR)XEvent.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Xbitblt.h	cc $(RFLAGS) $(SRCDIR)XEvent.c -o $(OBJECTDIR)XEvent$(OEXT)E 3D 3$(OBJECTDIR)GravityWindow.o : $(SRCDIR)GravityWindow.c $(INCDIR)XVersion.h \E 3I 3$(OBJECTDIR)XGravity.o : $(SRCDIR)XGravity.c $(INCDIR)XVersion.h \E 3	$(INCDIR)MyWindow.hD 3	cc $(RFLAGS) $(SRCDIR)GravityWindow.c -o $(OBJECTDIR)GravityWindow$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XGravity.c -o $(OBJECTDIR)XGravity$(OEXT)E 3D 3$(OBJECTDIR)InitXdisplay.o : $(SRCDIR)InitXdisplay.c	cc $(RFLAGS) $(SRCDIR)InitXdisplay.c -o $(OBJECTDIR)InitXdisplay$(OEXT)E 3I 3$(OBJECTDIR)XInit.o : $(SRCDIR)XInit.c	cc $(RFLAGS) $(SRCDIR)XInit.c -o $(OBJECTDIR)XInit$(OEXT)E 3$(OBJECTDIR)InitXevent.o : $(SRCDIR)InitXevent.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h	cc $(RFLAGS) $(SRCDIR)InitXevent.c -o $(OBJECTDIR)InitXevent$(OEXT)D 3$(OBJECTDIR)KeyboardMouse.o : $(SRCDIR)KeyboardMouse.c $(INCDIR)lispemul.h \E 3I 3$(OBJECTDIR)XKbdMouse.o : $(SRCDIR)XKbdMouse.c $(INCDIR)lispemul.h \E 3	$(INCDIR)XVersion.h $(INCDIR)MyWindow.hD 3	cc $(RFLAGS) $(SRCDIR)KeyboardMouse.c -o $(OBJECTDIR)KeyboardMouse$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XKbdMouse.c -o $(OBJECTDIR)XKbdMouse$(OEXT)E 3$(OBJECTDIR)LispWindow.o : $(SRCDIR)LispWindow.c $(INCDIR)XVersion.h \D 3	$(INCDIR)MyWindow.h $(INCDIR)lispXdefaults.hE 3I 3	$(INCDIR)MyWindow.h $(INCDIR)Xdefaults.hE 3	cc $(RFLAGS) $(SRCDIR)LispWindow.c -o $(OBJECTDIR)LispWindow$(OEXT)$(OBJECTDIR)LispXbitblt.o : $(SRCDIR)LispXbitblt.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h	cc $(RFLAGS) $(SRCDIR)LispXbitblt.c -o $(OBJECTDIR)LispXbitblt$(OEXT)$(OBJECTDIR)LispXdisplay.o : $(SRCDIR)LispXdisplay.c $(INCDIR)lispemul.h \	$(INCDIR)address.h $(INCDIR)address68k.h $(INCDIR)pilotbbt.h \D 3	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h $(INCDIR)lispXbitblt.hE 3I 3	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h $(INCDIR)Xbitblt.hE 3	cc $(RFLAGS) $(SRCDIR)LispXdisplay.c -o $(OBJECTDIR)LispXdisplay$(OEXT)D 3$(OBJECTDIR)LispXkeyboard.o : $(SRCDIR)LispXkeyboard.c $(INCDIR)XVersion.h \E 3I 3$(OBJECTDIR)XKeyboard.o : $(SRCDIR)XKeyboard.c $(INCDIR)XVersion.h \E 3	$(INCDIR)MyWindow.hD 3	cc $(RFLAGS) $(SRCDIR)LispXkeyboard.c -o $(OBJECTDIR)LispXkeyboard$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XKeyboard.c -o $(OBJECTDIR)XKeyboard$(OEXT)E 3$(OBJECTDIR)MakeXicon.o : $(SRCDIR)MakeXicon.c $(INCDIR)XVersion.h \D 3	$(INCDIR)MyWindow.h $(INCDIR)lispXicon.hE 3I 3	$(INCDIR)MyWindow.h $(INCDIR)Xicon.hE 3	cc $(RFLAGS) $(SRCDIR)MakeXicon.c -o $(OBJECTDIR)MakeXicon$(OEXT)$(OBJECTDIR)OpenDisplay.o : $(SRCDIR)OpenDisplay.c $(INCDIR)lispemul.h \	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h	cc $(RFLAGS) $(SRCDIR)OpenDisplay.c -o $(OBJECTDIR)OpenDisplay$(OEXT)D 3$(OBJECTDIR)ReadXoption.o : $(SRCDIR)ReadXoption.c $(INCDIR)lispXdefaults.hE 3I 3$(OBJECTDIR)ReadXoption.o : $(SRCDIR)ReadXoption.c $(INCDIR)Xdefaults.hE 3	cc $(RFLAGS) $(SRCDIR)ReadXoption.c -o $(OBJECTDIR)ReadXoption$(OEXT)D 3$(OBJECTDIR)ReconfDisplayRegion.o : $(SRCDIR)ReconfDisplayRegion.c \E 3I 3$(OBJECTDIR)XReconfig.o : $(SRCDIR)XReconfig.c \E 3	$(INCDIR)XVersion.h $(INCDIR)MyWindow.hD 3	cc $(RFLAGS) $(SRCDIR)ReconfDisplayRegion.c -o $(OBJECTDIR)ReconfDisplayRegion$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XReconfig.c -o $(OBJECTDIR)XReconfig$(OEXT)E 3D 3$(OBJECTDIR)ScrollWindow.o : $(SRCDIR)ScrollWindow.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Stipple.h $(INCDIR)LispCursorDef.h \	$(INCDIR)horizscrollcursor.h $(INCDIR)horizthumbcursor.h \	$(INCDIR)scrolldowncursor.h $(INCDIR)scrollleftcursor.h \	$(INCDIR)scrollrightcursor.h $(INCDIR)scrollupcursor.h \	$(INCDIR)vertthumbcursor.h $(INCDIR)vertscrollcursor.h	cc $(RFLAGS) $(SRCDIR)ScrollWindow.c -o $(OBJECTDIR)ScrollWindow$(OEXT)E 3I 3$(OBJECTDIR)XScroll.o : $(SRCDIR)XScroll.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h $(INCDIR)Stipple.h $(INCDIR)XCursorDef.h \	$(INCDIR)XCursors.h	cc $(RFLAGS) $(SRCDIR)XScroll.c -o $(OBJECTDIR)XScroll$(OEXT)E 3$(OBJECTDIR)Scrollbar.o : $(SRCDIR)Scrollbar.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h	cc $(RFLAGS) $(SRCDIR)Scrollbar.c -o $(OBJECTDIR)Scrollbar$(OEXT)D 3$(OBJECTDIR)DisplayCursor.o : $(SRCDIR)DisplayCursor.c $(INCDIR)lispemul.h \E 3I 3$(OBJECTDIR)XCursor.o : $(SRCDIR)XCursor.c $(INCDIR)lispemul.h \E 3	$(INCDIR)iopage.h $(INCDIR)XVersion.h $(INCDIR)MyWindow.hD 3	cc $(RFLAGS) $(SRCDIR)DisplayCursor.c -o $(OBJECTDIR)DisplayCursor$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XCursor.c -o $(OBJECTDIR)XCursor$(OEXT)E 3D 3$(OBJECTDIR)SetXmouseposition.o : $(SRCDIR)SetXmouseposition.c \E 3I 3$(OBJECTDIR)XMouse.o : $(SRCDIR)XMouse.c \E 3	$(INCDIR)XVersion.h $(INCDIR)MyWindow.h D 3	cc $(RFLAGS) $(SRCDIR)SetXmouseposition.c -o $(OBJECTDIR)SetXmouseposition$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XMouse.c -o $(OBJECTDIR)XMouse$(OEXT)E 3$(OBJECTDIR)Subwindows.o : $(SRCDIR)Subwindows.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h	cc $(RFLAGS) $(SRCDIR)Subwindows.c -o $(OBJECTDIR)Subwindows$(OEXT)$(OBJECTDIR)VideoColor.o : $(SRCDIR)VideoColor.c $(INCDIR)XVersion.h \	$(INCDIR)MyWindow.h	cc $(RFLAGS) $(SRCDIR)VideoColor.c -o $(OBJECTDIR)VideoColor$(OEXT)D 3$(OBJECTDIR)WindowManage.o : $(SRCDIR)WindowManage.c $(INCDIR)XVersion.h \E 3I 3$(OBJECTDIR)XWindowMgr.o : $(SRCDIR)XWindowMgr.c $(INCDIR)XVersion.h \E 3	$(INCDIR)MyWindow.hD 3	cc $(RFLAGS) $(SRCDIR)WindowManage.c -o $(OBJECTDIR)WindowManage$(OEXT)E 3I 3	cc $(RFLAGS) $(SRCDIR)XWindowMgr.c -o $(OBJECTDIR)XWindowMgr$(OEXT)E 3################################################################################# Installation targets - copyprotect is ON here# library, sysouts, fonts on release directories not handled here.# userfiles are separate target explicitly (can make w/o building lde)#    $(NATDIR)nativeincludes.h $(NATDIR)disp68K.il################################################################################prerelease :	mkdir $(RELDIR)	mkdir $(INSDIR)	mkdir $(CHKDIR)release : $(INSDIR)lde.o userfiles $(INSDIR)lde $(INSDIR)ldeether csumfilesuserfiles : $(INSDIR)usersubrs.c $(INSDIR)makefile $(INSDIR)ldeether.c$(OBJECTDIR)lde.a :              $(LIBFILES) $(OBJECTDIR)makevdate	/bin/rm -f $(VFILE).c	$(OBJECTDIR)makevdate > $(VFILE).c	cc -c $(VFILE).c -o $(VFILE).o	rm -f lde.a	ar rcv $(OBJECTDIR)lde.a $(LIBFILES) $(VFILE).o	ranlib $(OBJECTDIR)lde.a	rm -f $(VFILE).o$(INSDIR)lde.o :                         $(OBJECTDIR)lde.a	ld -o $(INSDIR)lde.o -r -u _main $(OBJECTDIR)lde.a$(INSDIR)lde : $(INSDIR)lde.o $(INSDIR)usersubrs.o	cc $(INSDIR)lde.o $(INSDIR)usersubrs.o $(FPFLAGS) -lX11 -lpixrect -lc -lm -o $(INSDIR)lde	rm -f $(INSDIR)usersubrs.o## ldeether from release - can't tar off with root permission.$(INSDIR)ldeether :  $(INSDIR)ldeether.c	cc $(CFLAGS) $(INSDIR)ldeether.c -o $(INSDIR)ldeether	rsh python "cd `pwd`; /users/maiko/bin/suid $(INSDIR)ldeether"$(INSDIR)makefile : $(BINDIR)usermakefile-$(RELEASENAME)	rm -f $(INSDIR)makefile	ln $(BINDIR)usermakefile-$(RELEASENAME) $(INSDIR)makefile$(INSDIR)usersubrs.c : $(SRCDIR)usersubrs.c	rm -f $(INSDIR)usersubrs.c	ln $(SRCDIR)usersubrs.c $(INSDIR)usersubrs.c$(INSDIR)ldeether.c : $(SRCDIR)ldeether.c	rm -f $(INSDIR)ldeether.c	ln $(SRCDIR)ldeether.c $(INSDIR)ldeether.ccsumfiles : $(CHKDIR)checksum $(CHKDIR)ldechecksum $(CHKDIR)README$(CHKDIR)README : $(BINDIR)checksum-readme	rm -f $(CHKDIR)README	ln $(BINDIR)checksum-readme $(CHKDIR)README$(CHKDIR)checksum : $(BINDIR)checksum	rm -f $(CHKDIR)checksum	cp -p $(BINDIR)checksum $(CHKDIR)checksum	chmod 755 $(CHKDIR)checksum$(CHKDIR)ldechecksum : $(BINDIR)ldechecksum	rm -f $(CHKDIR)ldechecksum	cp -p $(BINDIR)ldechecksum $(CHKDIR)ldechecksum	chmod 755 $(CHKDIR)ldechecksum################################################################################# Obsolete################################################################################$(NATDIR)nativeincludes.h : $(INCDIR)nativeincludes.h	rm -f $(NATDIR)nativeincludes.h	ln $(INCDIR)nativeincludes.h $(NATDIR)nativeincludes.h$(NATDIR)disp68K.il : $(SRCDIR)disp68K.il	rm -f $(NATDIR)disp68K.il	ln $(SRCDIR)disp68K.il $(NATDIR)disp68K.il################################################################################# Miscellaneous targets#	 .c.s. should always have -O################################################################################cleanup :	rm  $(LIBFILES) $(EXTFILES) $(KEYOFF).c.o:	cc $(RFLAGS) $*.c -o $@ $(INLINE).c.s:	cc -S $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(INLINE)$(OBJECTDIR)keymaker : ../src/keymaker.c $(OBJECTDIR)keylib.o	cc $(CFLAGS) -I$(INCDIR) ../src/keymaker.c $(OBJECTDIR)keylib.o -o $(OBJECTDIR)keymakercxref :	cxref -c  $(DFLAGS) -I$(INCDIR) $(SRCDIR)*.c -o ../all.cxrefE 1