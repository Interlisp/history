h42124s 00001/00001/00074d D 1.2 88/03/13 13:29:30 hayata 2 1c Add SCCS key id (%Z%)es 00075/00000/00000d D 1.1 88/02/23 18:37:32 hayata 1 0c date and time created 88/02/23 18:37:32 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2/***************************************************************//*	File name:	typeofmacro.h	By Takeshi Shimizu	Date: 23-Dec-87 ADOPTED NEW VERSION*//***************************************************************/#define OPLISTP	{\  if( (unsigned int)GetTypeNumber(TOPOFSTACK) != TYPE_LISTP) \     TOPOFSTACK = (LispPTR)NIL_PTR; \  PCMAC++ ; \}#define OPNTYPEX	{\  TOPOFSTACK = (LispPTR)(S_POSITIVE | (unsigned int)(GetTypeNumber(TOPOFSTACK))); \  PCMAC++; \} #define OPTYPEP	{ \  /* This OPcode takes 1 argument that contains type number */\  if((DLword)GetTypeNumber(TOPOFSTACK) != Get_BYTE(PCMAC+1)) \     TOPOFSTACK =NIL_PTR ; \  PCMAC+=2; \}#define OPTYPEMASK	{ \  /* This OPcode takes 1 argument that contains type number */ \  if(( ((DLword)GetTypeEntry(TOPOFSTACK))  & ((DLword)(Get_BYTE(PCMAC+1)) << 8)) == 0) \    TOPOFSTACK = NIL_PTR; \  PCMAC+=2 ; \}#define OPDTEST	{ \ /* This OPcode takes 2 arguments that is atom index. */ \  /** register unsigned int scratch;-> result */ \ /** register struct dtd *dtd68k ; ->wordp **/ \ result=Get_DLword(PCMAC +1); \ for(wordp=(DLword *) GetDTD(GetTypeNumber(TOPOFSTACK));  \	result != ((struct dtd *)wordp)->dtd_name ;  \	wordp=(DLword *) GetDTD(((struct dtd *)wordp)->dtd_supertype) )\	{ \		if(((struct dtd *)wordp)->dtd_supertype == 0) { \			UFN(06); \			NEXTOPCODE ; } \	} \ PCMAC += 3; \} /* OP_DTEST END */#define OPINSTANCEP	{ \ /* This OPcode takes 2 arguments that is atom index. */ \ /* register unsigned int type ;-> arg1 */ \ /*register unsigned int scratch; -> result */ \ /* register struct dtd *dtd68k ; -> wordp */ \ result = Get_DLword(PCMAC+1); \ for(  wordp=(DLword *)GetDTD(GetTypeNumber(TOPOFSTACK)); \	result != ((struct dtd *)wordp)->dtd_name ; \	wordp=(DLword *)GetDTD( ((struct dtd *)wordp)->dtd_supertype ) )\	{ \		if( ((struct dtd *)wordp)->dtd_supertype== 0) { \			TOPOFSTACK = NIL; \			PCMAC += 3; \			NEXTOPCODE ; } \	} \ TOPOFSTACK = ATOM_T ; \ PCMAC += 3;  \} /* OP_instancep END */E 1