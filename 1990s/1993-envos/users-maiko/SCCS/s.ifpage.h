h26582s 00197/00020/00165d D 2.10 93/02/08 15:04:18 sybalsky 17 16c Big VM (and new CDR coding) changes for 3.0 \nes 00000/00000/00185d D 2.9 92/04/21 16:28:23 sybalsky 16 15c shortening file names for DOSes 00012/00001/00173d D 2.8 90/06/04 10:38:18 sybalsky 15 14c reformat, copyrightes 00015/00003/00159d D 2.7 90/05/31 14:53:07 fuji 14 13c  Add NEW storage futures.(various process size)es 00004/00004/00158d D 2.6 89/01/09 17:51:48 shih 13 12c spellinges 00002/00002/00160d D 2.5 88/12/09 20:26:54 sybalsky 12 11c ci stack.hes 00077/00001/00085d D 2.4 88/12/09 18:08:46 sybalsky 11 10c co stack.hes 00001/00001/00085d D 2.3 88/10/17 19:54:18 shimizu 10 9c Add devconfig fieldes 00001/00000/00085d D 2.2 88/06/21 09:05:52 bane 9 8c Added IFPAGE_KEYVAL symbol for ifpage key checkes 00000/00000/00085d D 2.1 88/05/17 09:17:52 hayata 8 7c Version up to 2.1es 00003/00003/00082d D 1.7 88/05/13 14:16:12 krivacic 7 6c remove native code referenceses 00002/00002/00083d D 1.6 88/05/07 18:49:04 masinter 6 5c Krivacic's rename of native constantses 00002/00002/00083d D 1.5 88/05/07 04:32:24 shih 5 4c shortened names of native_*, to match usage in vmemsave.hes 00003/00003/00082d D 1.4 88/05/06 11:40:53 krivacic 4 3c add native page offsetes 00003/00001/00082d D 1.3 88/04/22 19:20:41 krivacic 3 2c inlinedefs re-arrangement & ni removales 00001/00001/00082d D 1.2 88/03/13 13:20:49 hayata 2 1c Add SCCS key id (%Z%)es 00083/00000/00000d D 1.1 88/02/23 18:36:34 hayata 1 0c date and time created 88/02/23 18:36:34 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2D 13/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 13I 13D 15/* %Z% %M% Version %I% (%G%). copyright envos & Fuji Xerox  */E 15I 15D 17/* %Z% %M% Version %I% (%G%). copyright Venue & Fuji Xerox  */E 17I 17/* %Z% %M% Version %I% (%G%). copyright Venue  */E 17E 15E 13E 2D 17/* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. *D 13 *	Auther	:	Osamu NakamuraE 13I 13 *	Author	:	Osamu NakamuraE 13 *//**************************************************************** *								* *	ifpage.h		July 6, 1987 by Osamu Nakamura	*I 11D 13 *        			12/9/88 JDS for byte swapped    *E 13I 13 *				12/9/88 JDS for byte swapped    *E 13 *					    (reverse bytes & wr)*E 11 *								* ****************************************************************/E 17I 15I 17E 17/************************************************************************//*									*/D 17/*	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*/E 17I 17/*	(C) Copyright 1989-92 Venue. All Rights Reserved.		*//*	Manufactured in the United States of America.			*/E 17/*									*/D 17/*	This file is work-product resulting from the Xerox/Venue	*//*	Agreement dated 18-August-1989 for support of Medley.		*/E 17I 17/*	The contents of this file are proprietary information 		*//*	belonging to Venue, and are provided to you under license.	*//*	They may not be further distributed or disclosed to third	*//*	parties without the specific permission of Venue.		*/E 17/*									*//************************************************************************/E 15D 17E 17#ifndef IFPAGE_DEFINED#define IFPAGE_DEFINED	(1)I 9#define IFPAGE_KEYVAL 0x15e3I 11#ifndef BYTESWAPI 17#ifdef BIGVM	/* Normal definition, for big-indian BIGVM machines */typedef struct ifpage {	DLword    currentfxp;	DLword    resetfxp;	DLword    subovfxp;	DLword    kbdfxp;	DLword    hardreturnfxp;	DLword    gcfxp;	DLword    faultfxp;	DLword    endofstack;	DLword    lversion;	DLword    minrversion;	DLword    minbversion;	DLword    rversion;	DLword    bversion;	DLword    machinetype;	DLword    miscfxp;	DLword    key;	DLword    serialnumber;	DLword    emulatorspace;	DLword    screenwidth;	DLword    nxtpmaddr;	DLword    ex_nactivepages;	DLword    ex_ndirtypages;	DLword    filepnpmp0;	DLword    filepnpmt0;	DLword    teleraidfxp;	DLword    filler1;	DLword    filler2;	DLword    filler3;	DLword    usernameaddr;	DLword    userpswdaddr;	DLword    stackbase;	DLword    faulthi;	DLword    faultlo;	DLword    devconfig;/*wasrealpagetable;*/	DLword    rptsize;	DLword    rpoffset;	DLword    wasrptlast;	DLword    embufvp;	DLword    nshost0;	DLword    nshost1;	DLword    nshost2;	DLword    mdszone;	DLword    mdszonelength;	DLword    emubuffers;	DLword    emubuflength;#ifdef NEW_STORAGE	DLword    ex_process_size; /* was lastnumchars */	DLword    storagefullstate;  /* was sysdisk */#else 	DLword    lastnumchars; 	DLword    sysdisk;  #endif /* NEW_STORAGE */	DLword    isfmap;	/* these are for \miscapply	 * -- note that they are not ref counted, so don't pass the only pointer	 * to something this way */	LispPTR   miscstackfn;	LispPTR   miscstackarg1;	LispPTR   miscstackarg2;	LispPTR   miscstackresult;	DLword    nrealpages;	DLword    lastlockedfilepage;	DLword    lastdominofilepage;	DLword    fptovpstart;	DLword    fakemousebits;	DLword    dl24bitaddressable;	LispPTR   realpagetableptr;	DLword    ex_dllastvmempage;	DLword    fullspaceused;	DLword    fakekbdad4;	DLword    fakekbdad5;	DLword	d1nil1;	DLword	dlnil2;	DLword	dlnil3;	DLword	dlnil4;	DLword	dlnil5;	DLword	dlnil6;	LispPTR	dlnilp1;	LispPTR	dlnilp2;	LispPTR	dlnilp3;	int    dllastvmempage;	int	    nactivepages;	int    ndirtypages;	int    process_size; /* was lastnumchars */} IFPAGE;#elseE 17/* Normal definition, for big-indian machines */E 11E 9typedef struct ifpage {	DLword    currentfxp;	DLword    resetfxp;	DLword    subovfxp;	DLword    kbdfxp;	DLword    hardreturnfxp;	DLword    gcfxp;	DLword    faultfxp;	DLword    endofstack;	DLword    lversion;	DLword    minrversion;	DLword    minbversion;	DLword    rversion;	DLword    bversion;	DLword    machinetype;	DLword    miscfxp;	DLword    key;	DLword    serialnumber;	DLword    emulatorspace;	DLword    screenwidth;	DLword    nxtpmaddr;	DLword    nactivepages;	DLword    ndirtypages;	DLword    filepnpmp0;	DLword    filepnpmt0;	DLword    teleraidfxp;D 3	DLword    dummy[3];E 3I 3D 4	DLword    native_start_addr;	DLword    native_length;	DLword    dummy;E 4I 4D 5	DLword    native_start_addr_mem_page;	DLword    native_length_page;E 5I 5D 6	DLword    native_start_addr;	DLword    native_length;E 6I 6D 7	DLword    native_start_addr_mem_page;	DLword    native_length_page;E 6E 5	DLword    native_page_offset;E 7I 7	DLword    filler1;	DLword    filler2;	DLword    filler3;E 7E 4E 3	DLword    usernameaddr;	DLword    userpswdaddr;	DLword    stackbase;	DLword    faulthi;	DLword    faultlo;D 10	DLword    wasrealpagetable;E 10I 10	DLword    devconfig;/*wasrealpagetable;*/E 10	DLword    rptsize;	DLword    rpoffset;	DLword    wasrptlast;	DLword    embufvp;	DLword    nshost0;	DLword    nshost1;	DLword    nshost2;	DLword    mdszone;	DLword    mdszonelength;	DLword    emubuffers;	DLword    emubuflength;D 14	DLword    lastnumchars;	DLword    sysdisk;E 14I 14#ifdef NEW_STORAGE	DLword    process_size; /* was lastnumchars */	DLword    storagefullstate;  /* was sysdisk */#else 	DLword    lastnumchars; 	DLword    sysdisk;  D 17#endif NEW_STORAGEE 17I 17#endif /* NEW_STORAGE */E 17E 14	DLword    isfmap;	/* these are for \miscapply	 * -- note that they are not ref counted, so don't pass the only pointer	 * to something this way */	LispPTR   miscstackfn;	LispPTR   miscstackarg1;	LispPTR   miscstackarg2;	LispPTR   miscstackresult;	DLword    nrealpages;	DLword    lastlockedfilepage;	DLword    lastdominofilepage;	DLword    fptovpstart;	DLword    fakemousebits;	DLword    dl24bitaddressable;	LispPTR   realpagetableptr;	DLword    dllastvmempage;	DLword    fullspaceused;	DLword    fakekbdad4;	DLword    fakekbdad5;} IFPAGE;I 17#endif /* BIGVM */E 17D 11E 11I 11#elseI 17#ifdef BIGVME 17	/***********************************************************/I 17	/*       Byte-swapped/word-swapped BIGVM version	       */	/***********************************************************/typedef struct ifpage {	DLword    resetfxp;	DLword    currentfxp;  /* hi word */	DLword    kbdfxp;	DLword    subovfxp;  /* hi word */	DLword    gcfxp;	DLword    hardreturnfxp;  /* hi word */	DLword    endofstack;	DLword    faultfxp;  /* hi word */	DLword    minrversion;	DLword    lversion;  /* hi word */	DLword    rversion;	DLword    minbversion;  /* hi word */	DLword    machinetype;	DLword    bversion;  /* hi word */	DLword    key;	DLword    miscfxp;  /* hi word */	DLword    emulatorspace;	DLword    serialnumber;  /* hi word */	DLword    nxtpmaddr;	DLword    screenwidth;  /* hi word */	DLword    ex_ndirtypages;	DLword    ex_nactivepages;  /* hi word */	DLword    filepnpmt0;	DLword    filepnpmp0;  /* hi word */	DLword    filler1;	DLword    teleraidfxp;  /* hi word */	DLword    filler3;	DLword    filler2;  /* hi word */	DLword    userpswdaddr;	DLword    usernameaddr;  /* hi word */	DLword    faulthi;	DLword    stackbase;  /* hi word */	DLword    devconfig;/*wasrealpagetable;*/	DLword    faultlo;  /* hi word */	DLword    rpoffset;	DLword    rptsize;  /* hi word */	DLword    embufvp;	DLword    wasrptlast;  /* hi word */	DLword    nshost1;	DLword    nshost0;  /* hi word */	DLword    mdszone;	DLword    nshost2;  /* hi word */	DLword    emubuffers;	DLword    mdszonelength;  /* hi word */#ifdef NEW_STORAGE	DLword    ex_process_size;	DLword    emubuflength;  /* hi word */	DLword    isfmap;	DLword    storagefullstate;  /* hi word */#else	DLword    lastnumchars;	DLword    emubuflength;  /* hi word */	DLword    isfmap;	DLword    sys_disk;  /* hi word */#endif /* NEW_STORAGE */	/* these are for \miscapply	 * -- note that they are not ref counted, so don't pass the only pointer	 * to something this way */	LispPTR   miscstackfn;	LispPTR   miscstackarg1;	LispPTR   miscstackarg2;	LispPTR   miscstackresult;	DLword    lastlockedfilepage;	DLword    nrealpages; /* hi word */	DLword    fptovpstart;	DLword    lastdominofilepage; /* hi word */	DLword    dl24bitaddressable;	DLword    fakemousebits; /* hi word */	LispPTR   realpagetableptr;	DLword    fullspaceused;	DLword    ex_dllastvmempage; /* hi word */	DLword    fakekbdad5;	DLword    fakekbdad4; /* hi word */	DLword	d1nil1;	DLword	dlnil2;	DLword	dlnil3;	DLword	dlnil4;	DLword	dlnil5;	DLword	dlnil6;	LispPTR	dlnilp1;	LispPTR	dlnilp2;	LispPTR	dlnilp3;	int    dllastvmempage;	int	    nactivepages;	int    ndirtypages;	int    process_size; /* was lastnumchars */} IFPAGE;#else	/***********************************************************/E 17	/*       Byte-swapped/word-swapped version, for 386i       */	/***********************************************************/typedef struct ifpage {	DLword    resetfxp;	DLword    currentfxp;  /* hi word */	DLword    kbdfxp;	DLword    subovfxp;  /* hi word */	DLword    gcfxp;	DLword    hardreturnfxp;  /* hi word */	DLword    endofstack;	DLword    faultfxp;  /* hi word */	DLword    minrversion;	DLword    lversion;  /* hi word */	DLword    rversion;	DLword    minbversion;  /* hi word */	DLword    machinetype;	DLword    bversion;  /* hi word */	DLword    key;	DLword    miscfxp;  /* hi word */	DLword    emulatorspace;	DLword    serialnumber;  /* hi word */	DLword    nxtpmaddr;	DLword    screenwidth;  /* hi word */	DLword    ndirtypages;	DLword    nactivepages;  /* hi word */	DLword    filepnpmt0;	DLword    filepnpmp0;  /* hi word */	DLword    filler1;	DLword    teleraidfxp;  /* hi word */	DLword    filler3;	DLword    filler2;  /* hi word */	DLword    userpswdaddr;	DLword    usernameaddr;  /* hi word */	DLword    faulthi;	DLword    stackbase;  /* hi word */	DLword    devconfig;/*wasrealpagetable;*/	DLword    faultlo;  /* hi word */	DLword    rpoffset;	DLword    rptsize;  /* hi word */	DLword    embufvp;	DLword    wasrptlast;  /* hi word */	DLword    nshost1;	DLword    nshost0;  /* hi word */	DLword    mdszone;	DLword    nshost2;  /* hi word */	DLword    emubuffers;	DLword    mdszonelength;  /* hi word */I 14#ifdef NEW_STORAGE	DLword    process_size;	DLword    emubuflength;  /* hi word */	DLword    isfmap;	DLword    storagefullstate;  /* hi word */#elseE 14	DLword    lastnumchars;	DLword    emubuflength;  /* hi word */	DLword    isfmap;D 14	DLword    sysdisk;  /* hi word */E 14I 14	DLword    sys_disk;  /* hi word */D 17#endif NEW_STORAGEE 17I 17#endif /* NEW_STORAGE */E 17E 14	/* these are for \miscapply	 * -- note that they are not ref counted, so don't pass the only pointer	 * to something this way */	LispPTR   miscstackfn;	LispPTR   miscstackarg1;	LispPTR   miscstackarg2;	LispPTR   miscstackresult;	DLword    lastlockedfilepage;	DLword    nrealpages; /* hi word */	DLword    fptovpstart;	DLword    lastdominofilepage; /* hi word */	DLword    dl24bitaddressable;	DLword    fakemousebits; /* hi word */	LispPTR   realpagetableptr;D 13	DLword    fullspaceused; E 13I 13	DLword    fullspaceused;E 13	DLword    dllastvmempage; /* hi word */	DLword    fakekbdad5;D 12	DLword    fakekbdad4; /* hi word *E 12I 12	DLword    fakekbdad4; /* hi word */E 12} IFPAGE;D 12#endifE 12I 12D 17#endif BYTESWAPE 17I 17#endif /* BIGVM */#endif /* BYTESWAP */E 17E 12E 11#endifE 1