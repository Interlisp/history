h28099s 00030/00024/00051d D 1.5 92/07/28 16:50:16 sybalsky 5 4c Next round at MIPS; includes new X files.es 00014/00005/00061d D 1.4 91/08/28 15:43:29 sybalsky 4 3c Add CLX files/flags, more gcc -f... optimization flags.es 00001/00001/00065d D 1.3 91/08/16 18:19:15 sybalsky 3 2c es 00001/00001/00065d D 1.2 91/06/10 12:56:06 sybalsky 2 1c Add SISVSIGNALS flag, used with RISCOSes 00066/00000/00000d D 1.1 91/04/09 17:54:29 sybalsky 1 0c date and time created 91/04/09 17:54:29 by sybalskyeuUf e 0tTI 1D 5# Options for Ultrix, DECStation 3100, and X-WindowE 5I 5# Options for Ultrix, RISCStation, and X-WindowE 5D 5CC = gccE 5I 5# CC = gccE 5I 4D 5CLXFLAGS = -DCLX -DTCP_NODELAYE 5I 5# CLXFLAGS = -DCLX -DTCP_NODELAYE 5D 5CLXFILES = $(OBJECTDIR)socket.o \           $(OBJECTDIR)socketdvr.oE 5I 5# CLXFILES = $(OBJECTDIR)socket.o \#           $(OBJECTDIR)socketdvr.oE 5E 4XFILES = $(OBJECTDIR)XClose.o \	$(OBJECTDIR)Cursor.o \	$(OBJECTDIR)XWindow.o \	$(OBJECTDIR)DoRing.o \	$(OBJECTDIR)DoScroll.o \	$(OBJECTDIR)XEvent.o \	$(OBJECTDIR)XGravity.o \	$(OBJECTDIR)XInit.o \D 5	$(OBJECTDIR)InitXevent.o \	$(OBJECTDIR)XKbdMouse.o \	$(OBJECTDIR)LispWindow.o \        $(OBJECTDIR)LispXbitblt.o \	$(OBJECTDIR)XKeyboard.o \	$(OBJECTDIR)MakeXicon.o \	$(OBJECTDIR)OpenDisplay.o \	$(OBJECTDIR)ReadXoption.o \	$(OBJECTDIR)XReconfig.o \E 5I 5	$(OBJECTDIR)Xinit.o \	$(OBJECTDIR)Xkbdmus.o \	$(OBJECTDIR)Xlspwin.o \        $(OBJECTDIR)Xbbt.o \	$(OBJECTDIR)Xkbd.o \	$(OBJECTDIR)Xmkicon.o \	$(OBJECTDIR)Xopendsp.o \	$(OBJECTDIR)Xrdopt.o \	$(OBJECTDIR)Xreconf.o \E 5	$(OBJECTDIR)XScroll.o \D 5	$(OBJECTDIR)Scrollbar.o \E 5I 5	$(OBJECTDIR)Xscrolb.o \E 5	$(OBJECTDIR)XCursor.o \	$(OBJECTDIR)XMouse.o \D 5	$(OBJECTDIR)Subwindows.o \	$(OBJECTDIR)VideoColor.o \D 4	$(OBJECTDIR)XWindowMgr.o  E 4I 4	$(OBJECTDIR)XWindowMgr.o \E 5I 5	$(OBJECTDIR)Xsubwin.o \	$(OBJECTDIR)Xcolor.o \	$(OBJECTDIR)Xwinman.o \E 5	$(CLXFILES)  E 4D 5BYTESWAPFILES = $(OBJECTDIR)byteswapfns.oE 5I 5BYTESWAPFILES = $(OBJECTDIR)byteswap.oE 5XVERSION = XV11R4D 4XFLAGS = -DXWINDOW -D$(XVERSION)E 4I 4XFLAGS = -DXWINDOW -D$(XVERSION) $(CLXFLAGS)E 4# This is to make the %$#@! Apollo cc happyOEXT = .oD 5# OPTFLAGS is normally -O2.OPTFLAGS = -ODISPOPTFLAGS = -O E 5I 5# OPTFLAGS is normally -O; the Olimit lets us optimize the BIG files#                          (i.e., bitblt* and xc).OPTFLAGS = -O -Olimit 1000DISPOPTFLAGS = -O -Olimit 1000 E 5FPFLAGS =D 2DFLAGS =  -DFSERROR -DNEW_STORAGE -DAIX -DOLD_CURSOR -DNOPIXRECT -DRISCOS  \E 2I 2D 3DFLAGS =  -DFSERROR -DNEW_STORAGE -DAIX -DOLD_CURSOR -DNOPIXRECT -DRISCOS -DSYSVSIGNALS  \E 3I 3D 4DFLAGS =  -DFSERROR -DNEW_STORAGE -DAIX -DOLD_CURSOR -DNOPIXRECT -DRISCOS -DSYSVSIGNALS -DSYSVONLY  \E 4I 4D 5DFLAGS =  -finline-functions -fdelayed-branch -DFSERROR -DNEW_STORAGE -DAIX -DOLD_CURSOR -DNOPIXRECT -DRISCOS -DSYSVSIGNALS -DSYSVONLY  \E 4E 3E 2	-DBIGATOMS -DFORKCOMM -DLOGINT -DSYS5 -DNOETHER $(XFLAGS) -I/usr/include -I/usr/include/bsd E 5I 5DFLAGS =   -DFSERROR \	-DNEW_STORAGE -DAIX -DOLD_CURSOR -DNOPIXRECT -DRISCOS \	-DSYSVSIGNALS -DSYSVONLY  \	-DBIGATOMS -DFORKCOMM -DLOGINT -DSYS5 -DNOETHER -DNOFORN \	$(XFLAGS) -I/usr/include -I/usr/include/bsd E 5LDFLAGS = -lX11 -lc -lm -lbsdI 4LDELDFLAGS = $(LDFLAGS)I 5MAIN = mainE 5E 4# -Dsparc?INLINE = OBJECTDIR = ../$(RELEASENAME)/default	: ../$(OSARCHNAME)/lde ../$(OSARCHNAME)/ldeetherD 4# Special rules to create xc.c on Sun4E 4I 4# Special rules to create xc.c on MIPS RISCstation.E 4#run cpp to expand macros$(OBJECTDIR)xc.o:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h \	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.hD 4	$(CC) -c   $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o  $(OBJECTDIR)xc.oE 4I 4	$(CC) -c $(DISPOPTFLAGS)  $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o  $(OBJECTDIR)xc.oE 4E 1