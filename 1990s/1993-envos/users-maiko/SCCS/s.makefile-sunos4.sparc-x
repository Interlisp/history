h50938s 00003/00003/00101d D 1.15 93/03/25 12:17:09 sybalsky 15 14c es 00000/00000/00104d D 1.14 92/04/24 13:21:49 nilsson 14 13c es 00039/00039/00065d D 1.13 92/04/23 16:03:42 sybalsky 13 12c fix names for DOSes 00001/00001/00103d D 1.12 92/03/19 10:25:09 sybalsky 12 11c es 00001/00001/00103d D 1.11 92/01/29 14:49:34 sybalsky 11 10c ??es 00002/00001/00102d D 1.10 91/09/03 18:38:48 sybalsky 10 9c Add LDELDFLAGS to make lde with X libs static.es 00009/00002/00094d D 1.9 91/08/26 14:59:23 sybalsky 9 8c Add CLX source files and flagses 00001/00001/00095d D 1.8 91/03/07 19:51:03 sybalsky 8 7c Add -DBIGATOMS for 3 byte atom emulator.es 00000/00000/00096d D 1.7 91/02/28 09:18:28 sybalsky 7 6c es 00003/00002/00093d D 1.6 90/09/18 23:59:18 sybalsky 6 5c Change opt to -O2es 00001/00001/00094d D 1.5 90/07/26 18:51:08 mitani 5 4c add -DNEW_STORAGE flages 00029/00002/00066d D 1.4 90/07/04 01:37:33 sybalsky 4 3c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00009/00009/00059d D 1.3 90/04/20 02:13:55 sybalsky 3 2c AIX:  shortening file names, bulk change.es 00002/00002/00066d D 1.2 90/04/18 11:39:38 sybalsky 2 1c Posix:  shorten tosfuncallmacro to tosfuncalles 00068/00000/00000d D 1.1 90/03/01 12:54:14 osamu 1 0c date and time created 90/03/01 12:54:14 by osamueuUf e 0tTI 1# Options for SunOS4, SPARC and X-WindowI 9CLXFLAGS = -DCLX -DTCP_NODELAYCLXFILES = $(OBJECTDIR)socket.o \D 13           $(OBJECTDIR)socketdvr.o E 13I 13           $(OBJECTDIR)socdvr.o E 13E 9I 4XFILES = $(OBJECTDIR)XClose.o \	$(OBJECTDIR)Cursor.o \	$(OBJECTDIR)XWindow.o \	$(OBJECTDIR)DoRing.o \	$(OBJECTDIR)DoScroll.o \	$(OBJECTDIR)XEvent.o \	$(OBJECTDIR)XGravity.o \	$(OBJECTDIR)XInit.o \D 13	$(OBJECTDIR)InitXevent.o \	$(OBJECTDIR)XKbdMouse.o \	$(OBJECTDIR)LispWindow.o \        $(OBJECTDIR)LispXbitblt.o \	$(OBJECTDIR)XKeyboard.o \	$(OBJECTDIR)MakeXicon.o \	$(OBJECTDIR)OpenDisplay.o \	$(OBJECTDIR)ReadXoption.o \	$(OBJECTDIR)XReconfig.o \E 13I 13D 15	$(OBJECTDIR)Xinit.o \E 15I 15	$(OBJECTDIR)Xevinit.o \E 15	$(OBJECTDIR)Xkbdmus.o \	$(OBJECTDIR)Xlspwin.o \        $(OBJECTDIR)Xbbt.o \	$(OBJECTDIR)Xkbd.o \	$(OBJECTDIR)Xmkicon.o \D 15	$(OBJECTDIR)Xopnedsp.o \E 15I 15	$(OBJECTDIR)Xopendsp.o \E 15	$(OBJECTDIR)Xrdopt.o \	$(OBJECTDIR)Xreconf.o \E 13	$(OBJECTDIR)XScroll.o \D 13	$(OBJECTDIR)Scrollbar.o \E 13I 13	$(OBJECTDIR)Xscrolb.o \E 13	$(OBJECTDIR)XCursor.o \	$(OBJECTDIR)XMouse.o \D 13	$(OBJECTDIR)Subwindows.o \	$(OBJECTDIR)VideoColor.o \D 9	$(OBJECTDIR)XWindowMgr.o  E 9I 9	$(OBJECTDIR)XWindowMgr.o  \E 13I 13	$(OBJECTDIR)Xsubwin.o \	$(OBJECTDIR)Xcolor.o \	$(OBJECTDIR)Xwinman.o  \E 13	$(CLXFILES)E 9E 4XVERSION = XV11R4D 9XFLAGS = -DXWINDOW -D$(XVERSION)E 9I 9D 11XFLAGS = -DXWINDOW -D$(XVERSION) $(CLXFLAGS)E 11I 11XFLAGS = -DXWINDOW -DNOPIXRECT -D$(XVERSION) $(CLXFLAGS)E 11E 9# This is to make the %$#@! Apollo cc happyOEXT = .o# OPTFLAGS is normally -O2.D 6OPTFLAGS = -gE 6I 6OPTFLAGS = -O2E 6FPFLAGS =D 4DFLAGS = -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS)#-Dsparc?E 4I 4D 5DFLAGS = -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR \E 5I 5DFLAGS = -DFSERROR -DNEW_STORAGE -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR \E 5D 8	-DFORKCOMM -DNEWBITBLT -DLOGINT $(XFLAGS)E 8I 8D 15	-DFORKCOMM -DNEWBITBLT -DLOGINT -DBIGATOMS $(XFLAGS)E 15I 15	-DFORKCOMM -DNEWBITBLT -DLOGINT -DBIGATOMS $(XFLAGS) -DBIGVM -DNEWCDRCODINGE 15E 8D 12LDFLAGS = -lX11 -lpixrect -lc -lmE 12I 12LDFLAGS = -lX11 -lpixrect -ldld -lc -lmE 12D 10# -Dsparc?E 10I 10LDELDFLAGS = -Bstatic -lX11 -lpixrect -Bdynamic -lc -lmE 10E 4D 13INLINE = $(SRCDIR)dispSPARC.ilBITBLTFILE = $(OBJECTDIR)bitbltSPARC.oI 6BYTESWAPFILES = $(OBJECTDIR)byteswapfns.oE 13I 13INLINE = $(SRCDIR)dspSPARC.ilBITBLTFILE = $(OBJECTDIR)bbtSPARC.oBYTESWAPFILES = $(OBJECTDIR)byteswap.oE 13E 6OBJECTDIR = ../$(RELEASENAME)/D 6default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeetherE 6I 6default	: ../$(OSARCHNAME)/lde ../$(OSARCHNAME)/ldeetherE 6# Special rules to create xc.c on Sun4#run cpp to expand macrosD 13$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \E 13I 13$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \E 13	 $(INCDIR)arith.h $(INCDIR)stream.h \D 13	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \D 2	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.hE 2I 2D 3	 $(INCDIR)tosfuncall.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)inlinedefs68K.hE 3I 3	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.hE 13I 13	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inln68k.hE 13E 3E 2	cc -Qproduce .i $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.i#run c compiler to produce first pass assembly$(OBJECTDIR)xc.s1:	$(OBJECTDIR)xc.i	rm -f $(OBJECTDIR)xc.s1	/lib/ccom - $(FPFLAGS) <$(OBJECTDIR)xc.i >$(OBJECTDIR)xc.s1#generate C program to remove dispatch loop, optimizeD 13$(OBJECTDIR)disphack.c: $(SRCDIR)disphack.lex	rm -f $(OBJECTDIR)disphack.c	lex -t $(SRCDIR)disphack.lex > $(OBJECTDIR)disphack.cE 13I 13$(OBJECTDIR)dsphack.c: $(SRCDIR)dsphack.lex	rm -f $(OBJECTDIR)dsphack.c	lex -t $(SRCDIR)dsphack.lex > $(OBJECTDIR)dsphack.cE 13#uses this program to find dispatchD 3$(OBJECTDIR)find-dispatch.c: $(SRCDIR)find-dispatch.lex	rm -f $(OBJECTDIR)find-dispatch.c	lex -t $(SRCDIR)find-dispatch.lex > $(OBJECTDIR)find-dispatch.cE 3I 3D 13$(OBJECTDIR)find-disp.c: $(SRCDIR)find-disp.lex	rm -f $(OBJECTDIR)find-disp.c	lex -t $(SRCDIR)find-disp.lex > $(OBJECTDIR)find-disp.cE 13I 13$(OBJECTDIR)find-dsp.c: $(SRCDIR)find-dsp.lex	rm -f $(OBJECTDIR)find-dsp.c	lex -t $(SRCDIR)find-dsp.lex > $(OBJECTDIR)find-dsp.cE 13E 3D 3$(OBJECTDIR)find-dispatch: $(OBJECTDIR)find-dispatch.c	cc -o $(OBJECTDIR)find-dispatch $(OBJECTDIR)find-dispatch.c -llE 3I 3D 13$(OBJECTDIR)find-disp: $(OBJECTDIR)find-disp.c	cc -o $(OBJECTDIR)find-disp $(OBJECTDIR)find-disp.c -llE 13I 13$(OBJECTDIR)find-dsp: $(OBJECTDIR)find-dsp.c	cc -o $(OBJECTDIR)find-dsp $(OBJECTDIR)find-dsp.c -llE 13E 3D 3$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-dispatch $(OBJECTDIR)xc.s1E 3I 3D 13$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-disp $(OBJECTDIR)xc.s1E 13I 13$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-dsp $(OBJECTDIR)xc.s1E 13E 3	rm -f $(OBJECTDIR)dispatch-label.cD 3	$(OBJECTDIR)find-dispatch < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 3I 3D 13	$(OBJECTDIR)find-disp < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 13I 13	$(OBJECTDIR)find-dsp < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 13E 3D 13$(OBJECTDIR)disphack: $(OBJECTDIR)disphack.c $(OBJECTDIR)dispatch-label.c	cc -o $(OBJECTDIR)disphack $(OBJECTDIR)dispatch-label.c $(OBJECTDIR)disphack.c -ll	rm -f $(OBJECTDIR)dispatch-label.o $(OBJECTDIR)disphack.oE 13I 13$(OBJECTDIR)dsphack: $(OBJECTDIR)dsphack.c $(OBJECTDIR)dispatch-label.c	cc -o $(OBJECTDIR)dsphack $(OBJECTDIR)dispatch-label.c $(OBJECTDIR)dsphack.c -ll	rm -f $(OBJECTDIR)dispatch-label.o $(OBJECTDIR)dsphack.oE 13D 13$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s1 $(OBJECTDIR)disphackE 13I 13$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s1 $(OBJECTDIR)dsphackE 13	rm -f $(OBJECTDIR)xc.s2D 13	$(OBJECTDIR)disphack < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)xc.s2E 13I 13	$(OBJECTDIR)dsphack < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)xc.s2E 13$(OBJECTDIR)xc.s3:	$(OBJECTDIR)xc.s2 $(INLINE)	rm -f $(OBJECTDIR)xc.s3	/usr/lib/inline -i $(INLINE) < $(OBJECTDIR)xc.s2 > $(OBJECTDIR)xc.s3$(OBJECTDIR)xc.o: $(OBJECTDIR)xc.s3	/bin/as -o $(OBJECTDIR)xc.o -O1 $(OBJECTDIR)xc.s3E 1