Mouse: The interrupt level handler. It will rearrange the stackso that all following processing will take place in the extender.(1) When we enter Mouse the stack will look like this:[address for R][R ...        ][ ... ](2) Push all the R regs on the stack.[ Regs for R  ][address for R][ ... ](3) Push the PostAmbler address on the stack.[adderss for PA][ Regs for R   ][address for R ][ ... ](4) Push the argument(s) for the Handler on the stack.[args for H    ][adderss for PA][ Regs for R   ][address for R ][ ... ](5) Make a long JMP to HandlerThe stack now looks like Handler was called from PA and PA was called from R.#################PostAmbler: This code will act as the postamble to a real function call.When this code returns it will look like it normal executionresumed in R.When Handler returns we will end up in PA.(1) When we enter PA the stack will look like this:[ Regs for R  ][address for R][ ... ](2) Restore all registers.[address for R][ ... ](3) RETurn from PA.Normal execution will now take place just like theexception had been an ordinary call.