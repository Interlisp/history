/* This is the display interface  */#include <stdio.h>#include "dbprint.h"#include "dspif.h"#include "lispemul.h"DspInterfaceRec _curdsp, _coldsp;DspInterface currentdsp = &_curdsp;DspInterface colordsp = &_coldsp;#ifdef XWINDOWextern int LispDisplayRequestedWidth;extern int LispDisplayRequestedHeight;#endif /* XWINDOW */#ifdef DOSextern int dosdisplaymode;#endif /* DOS */make_dsp_instance( dsp, lispbitmap, width_hint, height_hint, depth_hint )     DspInterface dsp;     char *lispbitmap;     int width_hint, height_hint, depth_hint;{#ifdef DOS  TPRINT(("Enter make_dsp_instance, dosdisplaymode is: %d\n", dosdisplaymode));  if (depth_hint == 0) depth_hint = 1;  switch(dosdisplaymode) {  case 1:    VGA_init( dsp ,0, 0, 0, depth_hint );    break;  case 0x102:  case 0x104:    VESA_init( dsp ,0, 0, 0, depth_hint );    break;  default:    if (VESA_p()) {      VESA_init( dsp ,0, 0, 0, depth_hint );    } else if (VGA_p()){          VGA_init( dsp ,0, 0, 0, depth_hint );    } else {			/* Can't set *ANY* video mode! */      (void)fprintf(stderr, "No portable graphics mode supported by this host.\n");      (void)fprintf(stderr, "\n-Expected VESA or VGA.\n");      exit(1);    }    break;  }#elif XWINDOW  /* lispbitmap is 0 when we call X_init the first time. */  if ( !X_init( dsp, 0, LispDisplayRequestedWidth, LispDisplayRequestedHeight, 0, depth_hint )) {    fprintf(stderr, "Can't open display.");    exit(-1);  }#endif				/* DOS | XWINDOW */}				/* Now we know the Maxi-MooM capabillities of the hardware. */#ifdef DOSVESA_p(){  /* Magic. Do a vesa call to determine the current mode. */  return(VESA_call( 3 , 0 ));}VGA_p(){  return( TRUE );}#endif /* DOS *//*********************************************************************//*                                                                   *//*		     G e n e r i c R e t u r n T                     *//*                                                                   *//* Utility function that just returns T                              *//*                                                                   *//*********************************************************************/unsigned longGenericReturnT(){  TPRINT(("Enter GenericReturnT\n"));  TPRINT(("Exit GenericReturnT\n"));  return(T);}void GenericPanic( dsp )     DspInterface dsp;{  TPRINT(("Enter GenericPanic\n"));  fprintf( stderr, "Panic! Call to uninitialized display slot!" );  exit(0);}