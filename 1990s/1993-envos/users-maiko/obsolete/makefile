# G-file @(#) makefile Version 2.59 (10/13/88).  Copyright Xerox & Fuji Xerox##	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved.##	makefile for lde with SYSOUT### the makefile for the product should say "-O" for OPTFLAGS. If you# want to compile with -g, do #     setenv OPTFLAGS -g#     make -e# instead# L = load flags, R = relocate flags, C = compile flags# NO_C_HARDRET is ON,it prevents to call hardreturn();OPTFLAGS = -OFPFLAGS = -f68881DFLAGS = -DFSERROR -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINC -DKBINT -DSUN3_OS3_ILCFLAGS = $(OPTFLAGS) $(DFLAGS) $(FPFLAGS)RFLAGS = -c $(CFLAGS) -I$(INCDIR)# OLD OPTIONS: -DTRADSTACKOVER  -DNO_C_HARDRETOBJECTDIR = ../src/SRCDIR = ../src/INCDIR = ../inc/BINDIR = ./RELDIR = ../RELEASE/INSDIR = $(RELDIR)install/NATDIR = $(RELDIR)usernative/KEYON  = $(OBJECTDIR)keytester.oKEYOFF = $(OBJECTDIR)keytestno.oOFILES = $(OBJECTDIR)arith2.o \	$(OBJECTDIR)arith3.o \	$(OBJECTDIR)arith4.o \	$(OBJECTDIR)array.o \	$(OBJECTDIR)array2.o \	$(OBJECTDIR)array3.o \	$(OBJECTDIR)array4.o \	$(OBJECTDIR)array5.o \	$(OBJECTDIR)array6.o \	$(OBJECTDIR)atom.o \	$(OBJECTDIR)bin.o \	$(OBJECTDIR)binds.o  \	$(OBJECTDIR)bitblt.o  \	$(OBJECTDIR)bitbltsub.o  \	$(OBJECTDIR)blt.o \	$(OBJECTDIR)car-cdr.o \	$(OBJECTDIR)common.o \	$(OBJECTDIR)conspage.o \	$(OBJECTDIR)createcell.o \	$(OBJECTDIR)draw.o \	$(OBJECTDIR)findkey.o \	$(OBJECTDIR)fvar.o \	$(OBJECTDIR)xc.o \	$(OBJECTDIR)gc.o \	$(OBJECTDIR)gc2.o \	$(OBJECTDIR)gvar2.o \	$(OBJECTDIR)hardreturn.o \	$(OBJECTDIR)interruptcall.o \	$(OBJECTDIR)keylib.o \	$(OBJECTDIR)listhandle.o \	$(OBJECTDIR)llstk.o \	$(OBJECTDIR)lowlevel1.o \	$(OBJECTDIR)lowlevel2.o \	$(OBJECTDIR)return.o \	$(OBJECTDIR)rplcons.o \	$(OBJECTDIR)shift.o \	$(OBJECTDIR)subr.o \	$(OBJECTDIR)subr0374.o \	$(OBJECTDIR)timer.o \	$(OBJECTDIR)typeof.o \	$(OBJECTDIR)unwind.o \	$(OBJECTDIR)vars3.o \	$(OBJECTDIR)unixcomm.o \	$(OBJECTDIR)uraid.o \	$(OBJECTDIR)rpc.o \        $(OBJECTDIR)ufn.o \	$(OBJECTDIR)z2.o \	$(OBJECTDIR)eqf.o \	$(OBJECTDIR)fp.o \	$(OBJECTDIR)ubf1.o \	$(OBJECTDIR)ubf2.o \	$(OBJECTDIR)ubf3.o \	$(OBJECTDIR)unix-utils.o \	$(OBJECTDIR)loader.o \	$(OBJECTDIR)systemcallmessage.o \	$(OBJECTDIR)osmessage.oGCFILES = $(OBJECTDIR)gcscan.o \	$(OBJECTDIR)gcarraymaker.o \	$(OBJECTDIR)gcreclaimcodeblock.o \	$(OBJECTDIR)gcfinalfuncs.o \	$(OBJECTDIR)gcreclaimcell.o \	$(OBJECTDIR)gchtfind.o \	$(OBJECTDIR)gcmain3.o \	$(OBJECTDIR)gcreclaim.o \	$(OBJECTDIR)gchoverflow.o DEVICES = $(OBJECTDIR)dspsubrs.o \	$(OBJECTDIR)initdisplay.o \	$(OBJECTDIR)dsk.o \	$(OBJECTDIR)ufs.o \	$(OBJECTDIR)directory.o \	$(OBJECTDIR)keyevent.o \	$(OBJECTDIR)keyboardsubrs.o \	$(OBJECTDIR)ether.o \	$(OBJECTDIR)initkeyboard.o \	$(OBJECTDIR)rs232c.o \	$(OBJECTDIR)tty.o TESTFILES = $(OBJECTDIR)Kdebugtools.o \	$(OBJECTDIR)Ktesttool.o \	$(OBJECTDIR)Kprint.oMAINFILES = $(OBJECTDIR)Ctest.o \	$(OBJECTDIR)initsysout.o \	$(OBJECTDIR)storage.o \	$(OBJECTDIR)allocmds.o \	$(OBJECTDIR)vmemsave.o \	$(OBJECTDIR)newmakeatom.o \	$(OBJECTDIR)loadsysout.oVFILE = $(OBJECTDIR)vdate.cDEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)EXTFILES = $(OBJECTDIR)usersubrs.o# execute to make /tmp/vdate.c################################################################################# Development targets - copyprotect is OFF here################################################################################default	: $(BINDIR)lde $(BINDIR)ldeether$(BINDIR)lde :       $(DEVFILES) $(EXTFILES) $(BINDIR)makevdate	$(BINDIR)makevdate > $(OBJECTDIR)vdate.c	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)lde	@ rm -f lisp	@ echo ""	@ echo "Executable is now named 'lde'"$(BINDIR)ldeether :  $(SRCDIR)ldeether.c	cc $(CFLAGS) $(SRCDIR)ldeether.c -o ldeether	@ rm -f startlisp	@ echo ""	@ echo "ethernet kickstart is now named 'ldeether'"#	@ echo "Make ldeether a setuid root program to use PUP/XNS Ethernet"	@ echo "Now making ldeether setuid root"	rsh python "/users/maiko/bin/suid `pwd`/ldeether"	ls -l ldeether$(BINDIR)makevdate	: $(SRCDIR)makevdate.c	cc $(SRCDIR)makevdate.c -o makevdate#### Component files ######################################################$(OBJECTDIR)Ctest.o : $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)return.h $(INCDIR)debug.h $(INCDIR)profile.h$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h $(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  $(INCDIR)address.h  $(INCDIR)lispemul.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h $(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h $(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.h$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h $(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   $(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   $(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   $(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h $(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h $(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h $(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \	 $(INCDIR)bb.h$(OBJECTDIR)bitbltsub.o :  $(SRCDIR)bitbltsub.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)displaydata.h \	 $(INCDIR)bitblt.h$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h $(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h $(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h $(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h $(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)my.h $(OBJECTDIR)z2.o :  $(SRCDIR)z2.c  \	 $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)gc.h  $(INCDIR)my.h$(OBJECTDIR)eqf.o :  $(SRCDIR)eqf.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)my.h$(OBJECTDIR)fp.o :  $(SRCDIR)fp.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h   \	 $(INCDIR)my.h$(OBJECTDIR)ubf1.o :  $(SRCDIR)ubf1.c  \	 $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h $(INCDIR)lispmap.h  $(INCDIR)my.h$(OBJECTDIR)ubf2.o :  $(SRCDIR)ubf2.c  \	 $(INCDIR)lispemul.h$(OBJECTDIR)ubf3.o :  $(SRCDIR)ubf3.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h$(OBJECTDIR)unix-utils.o :  $(SRCDIR)unix-utils.c  \	 $(INCDIR)lisptypes.h $(INCDIR)keyboard.h$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)display.h $(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)ether.h $(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h $(OBJECTDIR)dsk.o :  $(SRCDIR)dsk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h $(INCDIR)localfile.h $(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h $(INCDIR)stream.h  $(INCDIR)timeout.h $(INCDIR)localfile.h$(OBJECTDIR)directory.o :  $(SRCDIR)directory.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h $(INCDIR)timeout.h $(INCDIR)localfile.h$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h $(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h $(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h $(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h $(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h $(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h $(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h $(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h $(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)stack.h  $(INCDIR)gc.h $(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h $(OBJECTDIR)gcreclaimcodeblock.o :  $(SRCDIR)gcreclaimcodeblock.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h  $(INCDIR)array.h $(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h $(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h $(OBJECTDIR)hardreturn.o :  $(SRCDIR)hardreturn.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h $(INCDIR)stack.h  $(INCDIR)return.h $(INCDIR)emulglobal.h $(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h $(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h $(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \	 $(INCDIR)systematoms.h $(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h $(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h $(INCDIR)keyboard.h$(OBJECTDIR)keylib.o :  $(SRCDIR)keylib.c$(OBJECTDIR)keytester.o :  $(SRCDIR)keytester.c$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h $(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)stack.h $(OBJECTDIR)loader.o :  $(SRCDIR)loader.c $(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h $(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h $(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h $(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h $(OBJECTDIR)osmessage.o :  $(SRCDIR)osmessage.c $(INCDIR)lispemul.h \	 $(INCDIR)address68k.h  $(INCDIR)stream.h  $(INCDIR)arith.h \	 $(INCDIR)lispmap.h $(INCDIR)lisptypes.h$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)return.h $(INCDIR)cell.h $(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h $(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h $(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h $(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \	 $(INCDIR)ifpage.h $(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h $(INCDIR)profile.h$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h $(OBJECTDIR)systemcallmessage.o :  $(SRCDIR)systemcallmessage.c $(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h $(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h $(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)cell.h \	 $(INCDIR)lispmap.h $(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h $(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h$(OBJECTDIR)uraid.o :  $(SRCDIR)uraid.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)debug.h$(OBJECTDIR)rpc.o :  $(SRCDIR)rpc.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h $(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h $(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h $(OBJECTDIR)xc.o :  $(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h \	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.h  $(INCDIR)dummy_entries.h \	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h $(INCDIR)profile.h$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   $(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   $(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   $(OBJECTDIR)usersubrs.o : $(SRCDIR)usersubrs.c    ################################################################################# Installation targets - copyprotect is ON here# library, sysouts, fonts on release directories not handled here.# userfiles are separate target explicitly (can make w/o building lde)#    $(NATDIR)nativeincludes.h $(NATDIR)disp68K.il################################################################################release : $(INSDIR)lde.o userfiles $(INSDIR)lde $(INSDIR)ldeetheruserfiles : $(INSDIR)usersubrs.c $(INSDIR)makefile $(INSDIR)ldeether.c$(OBJECTDIR)lde.a :              $(LIBFILES) $(BINDIR)makevdate	$(BINDIR)makevdate	cc -c $(VFILE)	rm -f lde.a	ar rcv $(OBJECTDIR)lde.a $(LIBFILES) vdate.o	ranlib $(OBJECTDIR)lde.a	rm -f vdate.o$(INSDIR)lde.o :                         $(OBJECTDIR)lde.a	ld -o $(INSDIR)lde.o -r -u _main $(OBJECTDIR)lde.a$(INSDIR)lde : $(INSDIR)lde.o $(INSDIR)usersubrs.o	cc $(INSDIR)lde.o $(INSDIR)usersubrs.o -f68881 -lsuntool -lsunwindow -lpixrect -lc -o $(INSDIR)lde	rm -f $(INSDIR)usersubrs.o## ldeether from release - can't tar off with root permission.$(INSDIR)ldeether :  $(INSDIR)ldeether.c	cc $(CFLAGS) $(INSDIR)ldeether.c -o $(INSDIR)ldeether	rsh python "cd `pwd`; /users/maiko/bin/suid $(INSDIR)ldeether"$(INSDIR)makefile : $(BINDIR)usermakefile	rm -f $(INSDIR)makefile	ln $(BINDIR)usermakefile $(INSDIR)makefile$(INSDIR)usersubrs.c : $(SRCDIR)usersubrs.c	rm -f $(INSDIR)usersubrs.c	ln $(SRCDIR)usersubrs.c $(INSDIR)usersubrs.c$(INSDIR)ldeether.c : $(SRCDIR)ldeether.c	rm -f $(INSDIR)ldeether.c	ln $(SRCDIR)ldeether.c $(INSDIR)ldeether.c$(NATDIR)nativeincludes.h : $(INCDIR)nativeincludes.h	rm -f $(NATDIR)nativeincludes.h	ln $(INCDIR)nativeincludes.h $(NATDIR)nativeincludes.h$(NATDIR)disp68K.il : $(SRCDIR)disp68K.il	rm -f $(NATDIR)disp68K.il	ln $(SRCDIR)disp68K.il $(NATDIR)disp68K.il################################################################################# Miscellaneous targets#	 .c.s. should always have -O################################################################################cleanup :	rm  $(LIBFILES) $(EXTFILES) $(KEYOFF).c.o:	cc $(RFLAGS) $*.c -o $@ $(SRCDIR)disp68K.il.c.s:	cc -S $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilkeymaker : ../src/keymaker.c ../src/keylib.o	cc $(CFLAGS) -I$(INCDIR) ../src/keymaker.c ../src/keylib.o -o keymakercxref :	cxref -c  $(DFLAGS) -I$(INCDIR) $(SRCDIR)*.c -o ../all.cxref