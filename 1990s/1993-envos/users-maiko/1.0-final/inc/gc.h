/* This is G-file @(#) gc.h Version 2.6 (7/5/88). copyright Xerox & Fuji Xerox  *//* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. * *	Author	:	Takeshi Shimizu *			Hiroshi Hayata	 *//**********************************************************************//* 		File Name :  	gc.h		Define  for garbage collector	 *//**********************************************************************/#define	ADDREF	0	/* for gclookup routine. */#define	DELREF	1	/* for gclookup routine. */#define	STKREF	2	/* for gclookup routine. */#define UNSTKREF	3	/* for htfind function. (T.T.) */#define MAX_GCCOUNT	0x3F 	/* = 63 *//* IncAllocCnt(n) decrements reclaim countdown by N and signals interrupt   if GC should happen soon */#define IncAllocCnt(n) {if ((*Reclaim_cnt_word != NIL) && ((*Reclaim_cnt_word -= n) <= S_POSITIVE))  { /* time for GC */ Irq_Stk_Check = Irq_Stk_End = 0; *Reclaim_cnt_word = S_POSITIVE; };}#define RECLAIMPENDING  (*Reclaim_cnt_word == S_POSITIVE)#define INVOKE_GC  {*Reclaim_cnt_word == S_POSITIVE | 3000; contextsw(GCFXP , 0 , 0);}#define GCLOOKUP(bitset,code,addr) if (addr > 0x120000) htfind(addr,code)#define GCLOOKUPV(bitset,code,addr) htfind(addr,code)struct	 hashentry{		unsigned	count		:6;		unsigned	stackref	:1;		unsigned	segnum		:8;		unsigned	collision	:1;};struct  htlinkptr{			/* overlay access method */		DLword		contents;};struct	htcoll {		DLword		free_ptr ;		DLword		next_free ;};struct	gc_ovfl {		LispPTR		ovfl_ptr ;		unsigned int	ovfl_cnt ;};struct  htoverflow {	/* July-23-1987 by TT */		unsigned	pcase	:8;		unsigned	ptr	:24;};extern	DLword	GcLov;extern	DLword	GcZero;