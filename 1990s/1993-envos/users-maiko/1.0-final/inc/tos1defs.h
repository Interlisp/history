/* This is G-file @(#) tos1defs.h Version 2.4 (7/29/88). copyright Xerox & Fuji Xerox  *//* tos1defs.h definitions	tos assumptions:		TOPOFSTACK	cached top of stack value.		CSTKPTR		points to where TOPOFSTACK should be stored.*//* These are the TOS manipulation Macros */#define HARD_PUSH(x)	*(CSTKPTR++) = x#define PUSH(x)		{HARD_PUSH(TOPOFSTACK); TOPOFSTACK = x;}#define POP		TOPOFSTACK = *(--CSTKPTR)#define GET_TOS_1	*(CSTKPTR - 1)#define GET_TOS_2	*(CSTKPTR - 2)#define GET_POPPED	*CSTKPTR#define POP_TOS_1	*(--CSTKPTR)#define TOPOFSTACK 	tscache#define FIXTOS1		CSTKPTR++#define GET_TOS_1_HI	*((DLword *)(CSTKPTR - 1))#define GET_TOS_1_LO	*((DLword *)(CSTKPTR - 1)+1)#define IVAR_REG	((LispPTR *) pccache)#define PVAR_REG	((LispPTR *) table)/* OPCODE interface routines */ #define StackPtrSave	{CurrentStackPTR = (DLword *) (CSTKPTR-1);}#define StackPtrRestore	{CSTKPTR = ((LispPTR *) CurrentStackPTR)+1;}#define EXT	{ PC=pccache;					\		  TopOfStack=TOPOFSTACK;			\		  StackPtrSave; }#define RET	{ pccache=PC;					\		  StackPtrRestore;				\		  TOPOFSTACK = TopOfStack; } #define NRET	{ RET; nextop0; }#define RET_FROM_NATIVE							\{									\	POP;								\	table = optable;						\}#define NATIVE_NEXTOP0	{ 						\		if (BCE_CURRENTFX->native)  { RET_TO_NATIVE; }		\		nextop0;						\		}#define CALL_NATIVE(defcell, num_args) 					\{									\	setivar_pvar_jmp(CSTKPTR + num_args, PVAR, 			\		((int *)(GET_NATIVE_ADDR(defcell)))[num_args+(5+3)]);	\}#define CALL_NATIVE2(defcell, num_args) 				\{									\	setivar_pvar_jmp(CSTKPTR + num_args, PVAR, 			\		((int *)(GET_NATIVE_ADDR(defcell)))			\		[(num_args <= -6) ? ((5+3)-6) : (num_args+(5+3))]);	\}#define RET_TO_NATIVE	{						\	register int native_addr;					\	register struct fnhead *LocFuncObj = FuncObj;			\	if (native_addr = 						\		((int *)(GET_NATIVE_ADDR(LocFuncObj)))			\		[((int) PCMAC - (unsigned int) LocFuncObj)+(5+3)]) 	\		{							\		HARD_PUSH(TOPOFSTACK);					\		setivar_pvar_jmp(IVAR, PVAR, native_addr);		\		};							\	nextop0;							\	}