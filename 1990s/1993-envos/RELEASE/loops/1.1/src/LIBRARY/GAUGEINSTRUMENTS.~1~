(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "INTERLISP" BASE 10)(FILECREATED "11-Mar-88 12:02:18" |{POGO:AISNORTH:XEROX}<LOOPSCORE>LYRIC>LIBRARY>GAUGEINSTRUMENTS.;8| 31267        changes to%:  (CLASSES Meter)                    (VARS GAUGEINSTRUMENTSCOMS)      previous date%: "23-Feb-88 23:25:29" |{POGO:AISNORTH:XEROX}<LOOPSCORE>LYRIC>LIBRARY>GAUGEINSTRUMENTS.;7|)(* "Copyright (c) 1986, 1987, 1988 by Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT GAUGEINSTRUMENTSCOMS)(RPAQQ GAUGEINSTRUMENTSCOMS        ((DECLARE%: DONTCOPY (PROP MAKEFILE-ENVIRONMENT GAUGEINSTRUMENTS)               (PROP FILETYPE GAUGEINSTRUMENTS))        (FILES (FROM VALUEOF LOOPSLIBRARYDIRECTORY)               GAUGES)        (CLASSES Meter Instrument RoundScale StraightScale)        (METHODS Instrument.ComputeDisplayVal Instrument.ComputeScale Instrument.PrintLabelScale                Instrument.SetParameters Instrument.ShowInstrument Meter.ComputeScale                Meter.DrawInstrument Meter.Set Meter.SetParameters Meter.Shape Meter.ShowLabels                Meter.ShowTicks RoundScale.Reset RoundScale.Set RoundScale.ShowReading                StraightScale.Attach)        (FNS ShowRayLabelLength)))(DECLARE%: DONTCOPY (PUTPROPS GAUGEINSTRUMENTS MAKEFILE-ENVIRONMENT (:PACKAGE "IL" :READTABLE "INTERLISP" :BASE 10))(PUTPROPS GAUGEINSTRUMENTS FILETYPE :COMPILE-FILE))(FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)       GAUGES)(DEFCLASSES Meter Instrument RoundScale StraightScale)(DEFCLASS Meter   (MetaClass Class doc "A circular instrument that will wrap around any number of times" Edited%:                                                              (* RBGMartin " 2-May-86 13:06"))   (Supers RoundScale)   (InstanceVariables (ticks 10 doc       "ticks on the instrument; value is number or NIL; smallTicks is number between each large tick"                             )          (lower 90 doc "lower bound for internal displayVal")          (displayVal 90 doc "Internal value relative to instrument")          (range -360 doc "range for internal displayVal")          (inputRange 10 doc "range for external reading")          (labels (0 1 2 3 4 5 6 7 8 9)                 doc "labels for the instrument")          (height 10)          (width 10)))(DEFCLASS Instrument   (MetaClass AbstractClass doc   "A numeric gauge scaled externally by inputLower and inputRange, and internally by lower and range"           Edited%:                                           (* edited%: "22-May-86 13:05"))   (Supers Gauge)   (InstanceVariables (displayVal 0 doc "Internal value relative to instrument")          (ticks 5 tickLength 9 smallTicks 1 doc       "ticks on the instrument; value is number or NIL; smallTicks is number between each large tick"                 )          (brushWidth 1 doc "scale factor for width of ticks, rays and circles.")          (labels NIL doc "labels for the instrument")          (labelScale (1 . 0)                 doc               "CAR of this is 1 or -1 to indicate the sign. CDR is the exponent of the scale factor."                 )          (spaceForLabelScale 20 doc "extra vertical space to display scale label")          (lower 0 doc "lower bound for internal displayVal")          (inputLower 0 doc "lower bound for external reading")          (range 1 doc "range for internal displayVal")          (inputRange 1 doc "range for external reading")))(DEFCLASS RoundScale   (MetaClass AbstractClass Edited%:                         (* mjs%: "28-JAN-83 10:19")          doc "AbstractClass for instrucments with circular (arc) scales")   (Supers Instrument)   (InstanceVariables (needleLength 15 doc "radius of needle")          (radius 10 doc "radius of arc in instrument")          (xc 0 doc "x center of arc")          (yc 0 doc "y center of arc")))(DEFCLASS StraightScale   (MetaClass AbstractClass Edited%:                         (* edited%: "31-Oct-86 21:09")          doc "Abstract classes are placeholders in the inheritance network, which cannot themselves be instantiated."          )   (Supers BoundedMixin Instrument)   (InstanceVariables (labels (0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0))          (shade 65535 doc "shade of bar")          (ticks 11 tickLength 7)))(\BatchMethodDefs)(METH Instrument  ComputeDisplayVal (reading)      "Computes displayVal of instrument in bounded range" (category (Instrument)))(METH Instrument  ComputeScale (min max labelScale)      "Compute a scale covering min and max, with ticks and labels at multiples of one of the appropriate multiples of either 0.2 0.25 0.5 or 1.0"      (category (Instrument)))(METH Instrument  PrintLabelScale NIL      "Print the scale of labelling on instrument" (category (Instrument)))(METH Instrument  SetParameters NIL      "Dummy function where default values are appropriate" (category (Internal)))(METH Instrument  ShowInstrument NIL      "show the instrument including the current displayVal" (category (Internal)))(METH Meter  ComputeScale (newReading)      "Meters always have 0 to 9 scale. This computes the proper label scale." (category (Instrument)                                                                                      ))(METH Meter  DrawInstrument NIL      "I" (category (Meter)))(METH Meter  Set (newReading)      "Move the setting on a RoundScale instrument from current setting to that specified by input."      (category (Meter)))(METH Meter  SetParameters NIL      "Compute width, height, center and radius etc. for meters" (category (Internal)))(METH Meter  Shape (newRegion noUpdateFlg ExtraSpaceFlg)      "Shapes outside of region to specified shape. if ExtraSpaceFlg is T and newRegion is NIL, then the meter is interactively shaped to have extra white space. Shaping from the window menu will keep the meter square except for the space at the bottom for the label."      (category (Public)))(METH Meter  ShowLabels NIL      "If there are any labels, show thenm on the dial" (category (Meter)))(METH Meter  ShowTicks NIL      "Draw ticks at even intervals around the circle starting from 90" (category (Meter)))(METH RoundScale  Reset (newReading)      "set reading to value, and then update gauge so that it shows that reading without going through intermediate states"      (category (Gauge)))(METH RoundScale  Set (newReading)      "Move the setting on a RoundScale instrument from current setting to that specified by input."      (category (RoundScale)))(METH RoundScale  ShowReading NIL      "dgb: 26-JAN-83 23:43" (category (RoundScale)))(METH StraightScale  Attach (obj varName shade propName type xOrPos y)          "same as Gauge.Attach, but with additional argument of shade for setting the shade of the scale."      (category (Public)))(Method ((Instrument ComputeDisplayVal) self reading)        (* ; "edited: 22-May-86 00:48") "Computes displayVal of instrument in bounded range" (PLUS (@ lower)                                                            (FQUOTIENT (TIMES (FDIFFERENCE                                                                               reading                                                                               (@ inputLower))                                                                              (@ range))                                                                   (@ inputRange))))(Method ((Instrument ComputeScale) self min max labelScale)  (* ; "edited: 29-Jan-87 11:23") "Compute a scale covering min and max, with ticks and labels at multiples of one of the appropriate multiples of either 0.2 0.25 0.5 or 1.0"   (PROG ((maxTicks (@ ticks))          scaleFactor scaleFactorExpt estIncr estIncrScale estIncrFloor goodIncr goodMinVal           goodMaxVal precision)                              (* Don't bother for no ticks)         (COND            ((OR (NULL maxTicks)                 (EQ maxTicks 0))             (_@ inputLower min)             (_@ inputRange (IDIFFERENCE max min))             (RETURN)))         (AND labelScale (_@ labelScale labelScale))         [SETQ scaleFactor (FloorOfLog (MAX (ABS max)                                            (ABS min]         (OR labelScale (_@ labelScale (CONS 1 scaleFactor)))         (SETQ estIncr (ABS (QUOTIENT (FDIFFERENCE max min)                                   10)))         (COND            ((EQUAL estIncr 0.0)             (ERROR "No range for scale")))         [SETQ estIncrScale (EXPT 10 (ADD1 (SETQ estIncrFloor (FloorOfLog estIncr]                                                             (* normalize estIncr to between 0 and                                                              1)         (SETQ estIncr (QUOTIENT estIncr estIncrScale))                    (* based upon the estIncr, the following computes the actual increment between           labels. The precision is used in the computation when the IV labels are           computed.)         (COND            ((GREATERP estIncr 0.5)             (SETQ goodIncr estIncrScale)                    (* precision is number of digits to the right of the decimal point, for now.)             (SETQ precision (ABS (IDIFFERENCE estIncrFloor scaleFactor)))             (_@ ticks%:,smallTicks 1))            ((GREATERP estIncr 0.25)             (SETQ goodIncr (TIMES estIncrScale 0.5))             (SETQ precision (ABS (IDIFFERENCE estIncrFloor scaleFactor)))             (_@ ticks%:,smallTicks 4))            ((GREATERP estIncr 0.2)             (SETQ goodIncr (TIMES estIncrScale 0.25))             [SETQ precision (ADD1 (ABS (IDIFFERENCE estIncrFloor scaleFactor]             (_@ ticks%:,smallTicks 4))            ((GREATERP estIncr 0.1)             (SETQ goodIncr (TIMES estIncrScale 0.2))             (SETQ precision (ABS (IDIFFERENCE estIncrFloor scaleFactor)))             (_@ ticks%:,smallTicks 1))            (T (SETQ goodIncr (TIMES estIncrScale 0.1))               (SETQ precision (ABS (IDIFFERENCE estIncrFloor scaleFactor)))               (_@ ticks%:,smallTicks 1)))         [SETQ goodMinVal (TIMES goodIncr (LET ((FLOOR (QUOTIENT min goodIncr)))                    (* When FLOOR is in the system, this LET can be replaced with          (FLOOR (QUOTIENT min goodIncr)))                                               (COND                                                  ((EQP FLOOR (FIX FLOOR))                                                   FLOOR)                                                  ((MINUSP FLOOR)                                                   (FIX (SUB1 FLOOR)))                                                  (T (FIX FLOOR]         [SETQ goodMaxVal (TIMES goodIncr (FIX (QUOTIENT max goodIncr]         [COND            ((GREATERP max goodMaxVal)             (SETQ goodMaxVal (FPLUS goodMaxVal goodIncr]                    (* * Now compute labels)         (SETQ scaleFactorExpt (EXPT 10 scaleFactor))         (_@ labels [bind STRM STRNG for NUM in (bind TEMP STR for N from goodMinVal                                                   to (PLUS goodMaxVal goodIncr) by goodIncr                                                   collect   (* this inner loop builds a list of                                                              numbers)                                                         (FQUOTIENT N scaleFactorExpt))                       repeatuntil (GEQ (FTIMES NUM scaleFactorExpt)                                        max)                       collect                     (* this outer loops converts those numbers to the proper precision If there           were already a rounding fuction for floating point numbers in the system, this           hack would be a lot cleaner.)                             (SETQ STRNG (ALLOCSTRING (PLUS 10 precision)))                             (SETQ STRM (OPENSTRINGSTREAM STRNG 'OUTPUT))                             (COND                                [(MINUSP NUM)                                 (PRINTOUT STRM .N (LIST 'FLOAT (PLUS 10 precision)                                                         precision 0)                                        (MINUS NUM))                                 (CLOSEF STRM)                                 (CONCAT "-"                                        (SUBSTRING STRNG                                               (ADD1 (STRPOS " " STRNG NIL NIL NIL NIL NIL T]                                (T (PRINTOUT STRM .N (LIST 'FLOAT (PLUS 10 precision)                                                           precision 0)                                          NUM)                                   (CLOSEF STRM)                                   (SUBSTRING STRNG                                          (ADD1 (STRPOS " " STRNG NIL NIL NIL NIL NIL T])         (_@ ticks (LENGTH (@ labels)))         (_@ inputLower goodMinVal)         (_@ inputRange (DIFFERENCE goodMaxVal goodMinVal))))(Method ((Instrument PrintLabelScale) self)                  (* ; "edited: 29-Jan-87 11:13") "Print the scale of labelling on instrument" [PROG [(window (@ window))                                                     [superscriptDistance                                                      (FIX (TIMES 0.4 (FONTPROP (@ font)                                                                             'SIZE]                                                     (sign (CAR (@ labelScale)))                                                     (exponent (CDR (@ labelScale)]                                                    (COND                                                       ((@ ticks)                    (* bitblt BLACKSHADE and DISMISS to warn user scale has changed.)                                                        (BITBLT NIL NIL NIL window 0 0                                                               (STRINGWIDTH "X-10-00" (@ font))                                                               (@ spaceForLabelScale)                                                               'TEXTURE                                                               'REPLACE BLACKSHADE)                                                        (DISMISS 100 NIL 'NOBLOCK)                                                        (BITBLT NIL NIL NIL window 0 0                                                               (STRINGWIDTH "X-10-00" (@ font))                                                               (@ spaceForLabelScale)                                                               'TEXTURE                                                               'REPLACE WHITESHADE)                    (* erase the current scale assuming "0" is at least as wide as any of the           integers, and assuming (ABS (CDR labelScale)) < 100)                                                        (COND                                                           [(NOT (MINUSP sign))                                                             (* positive scale)                                                            (MOVETO 1 1 window)                                                            (PRIN1 "x" window)                                                            (DSPXPOSITION (PLUS (DSPXPOSITION NIL                                                                                        window)                                                                                (CHARWIDTH                                                                                 (CHARCODE -)                                                                                 (@ font)))                                                                   window)                                                             (* space over the width of the -                                                             character.)                                                            (COND                                                               ((NEQ 0 exponent)                                                             (* with exponent)                                                                (PRIN1 "10" window)                                                             (* print rest of -10)                                                                (DSPYPOSITION superscriptDistance                                                                        window)                                                             (* move up to print exponent as                                                              superscript.)                                                                (PRIN1 exponent window))                                                               (T                                                              (* no exponent)                                                                  (PRIN1 "1" window]                                                           ((MINUSP sign)                                                             (* negative scale)                                                            (MOVETO 1 1 window)                                                            (PRIN1 "x-1" window)                                                            (COND                                                               ((NEQ 0 exponent)                                                             (* with exponent)                                                                (PRIN1 "0" window)                                                             (* print rest of -10)                                                                (DSPYPOSITION superscriptDistance                                                                        window)                                                             (* move up to print exponent as                                                              superscript.)                                                                (PRIN1 exponent window])(Method ((Instrument SetParameters) self)                    (* ; "edited: 29-Jan-87 10:30") "Dummy function where default values are appropriate"   (_Super )   (_@ spaceForLabelScale [ADD1 (FIX (TIMES 1.5 (FONTPROP (@ font)                                                       'SIZE])   (_@ brushWidth (ADD1 (IQUOTIENT (FONTPROP (@ font)                                          'SIZE)                               8)))                          (* ;                                                              "make sure we have an integer value")   (_@ ticks%:,tickLength (IMAX (QUOTIENT (FONTPROP (@ font)                                                 'SIZE)                                       2)                                6)))(Method ((Instrument ShowInstrument) self)                   (* ; "edited: 22-May-86 13:20") "show the instrument including the current displayVal" (AND (@ ticks)                                                             (PROGN (_ self ShowLabels)                                                                    (_ self ShowTicks)))                                                        (_ self PrintLabelScale)                                                        (_ self DrawInstrument))(Method ((Meter ComputeScale) self newReading)               (* ; "RBGMartin 29-Apr-86 18:57") "Meters always have 0 to 9 scale. This computes the proper label scale."   (PROG (tempScale)         [SETQ tempScale (COND                            ((ZEROP newReading)                             0)                            (T (FloorOfLog (ABS newReading]         (_@ inputRange (TIMES 10 (EXPT 10 tempScale)))         (_@ labelScale (CONS (COND                                 ((MINUSP newReading)                                  -1)                                 (T 1))                              tempScale))                    (* labelScale is a dotted pair. CAR is sign;          CDR is exponent.)     )   (_ self PrintLabelScale))(Method ((Meter DrawInstrument) self)                        (* ; "edited: 22-May-86 13:07") "I" (DRAWCIRCLE (@ xc)            (@ yc)            (@ radius)            (@ brushWidth)            NIL            (@ window)))(Method ((Meter Set) self newReading)                        (* ; "edited: 22-May-86 13:19") "Move the setting on a RoundScale instrument from current setting to that specified by input."   [PROG [(ABSnewReading (ABS newReading))          (EXPO (CDR (@ labelScale)]         (COND            ((MINUSP (TIMES newReading (@ reading)))                    (* readings are different signs. Set Meter to 0, change scale, and move needle.)             (_ self ShowReading)                            (* erase the needle)             (_@ reading 0)             (_ self ShowReading)                            (* display needle at 0)             (_ self ComputeScale newReading)             (_@ reading newReading)             (RotateLine (@ xc)                    (@ yc)                    (@ needleLength)                    (@ displayVal)                    (_@ displayVal (_ self ComputeDisplayVal ABSnewReading))                    (@ window)                    (@ brushWidth)))            (T                                               (* newReading and reading are same                                                              sign.)               (PROG NIL                     (COND                        ((LESSP ABSnewReading (EXPT 10 EXPO))                    (* new reading is between 0 and 1 on the current scale.          Rotate the needle, then rescale.)                         (RotateLine (@ xc)                                (@ yc)                                (@ needleLength)                                (@ displayVal)                                (_@ displayVal (_ self ComputeDisplayVal ABSnewReading))                                (@ window)                                (@ brushWidth))                         (_@ reading newReading)                         (_ self ShowReading)                (* erase the needle)                         (_ self ComputeScale newReading)    (* rescale)                         (_ self ShowReading)                (* draw the needle)                         )                        ((GREATERP ABSnewReading (TIMES 10 (EXPT 10 EXPO)))                                                             (* new reading is higher than current                                                              gauge scale)                         (_ self ShowReading)                (* erase the needle)                         (_ self ComputeScale newReading)    (* rescale)                         (_ self ShowReading)                (* draw the needle)                         (_@ reading newReading)                         (RotateLine (@ xc)                                (@ yc)                                (@ needleLength)                                (@ displayVal)                                (_@ displayVal (_ self ComputeDisplayVal ABSnewReading))                                (@ window)                                (@ brushWidth)))                        (T                                   (* the new reading is on the current                                                              scale.)                           (_@ reading newReading)                           (RotateLine (@ xc)                                  (@ yc)                                  (@ needleLength)                                  (@ displayVal)                                  (_@ displayVal (_ self ComputeDisplayVal ABSnewReading))                                  (@ window)                                  (@ brushWidth)])(Method ((Meter SetParameters) self)                         (* ; "edited: 27-Jan-87 09:59") "Compute width, height, center and radius etc. for meters"   [LET ((MaxStrWidth (MAXSTRINGWIDTH (@ labels)                             (@ font)))         (FontHeight (FONTHEIGHT (@ font)))         meterSize maxFontDimension)        (_Super )        (SETQ maxFontDimension (MAX FontHeight MaxStrWidth))        [SETQ meterSize (MAX (TIMES 6 maxFontDimension)                             (TIMES 2 (PLUS 3 (ShowRayLabelLength self (TIMES 2 (@ ticks%:,tickLength)                                                                              ))                                            (IQUOTIENT maxFontDimension 2]                    (* there are 6 numbers on a side of the meter.          This gaurantees the numbers will not overlap.          Also, check to make sure that this is not smaller than two numbers on either           side of a circle with a diameter 4 times the tickLength.          Refer to ShowRayLabel.)        (_@ height%:,min (HEIGHTIFWINDOW (PLUS (@ spaceForLabelScale)                                               meterSize)                                (@ title)))        (_@ width%:,min (WIDTHIFWINDOW meterSize))        (_@ height (MAX (@ height)                        (@ height%:,min)))                   (* need this in case the font is                                                              bigger)        (_@ width (MAX (@ width)                       (@ width%:,min)))        (_@ yc (PLUS (@ spaceForLabelScale)                     (_@ xc (IQUOTIENT (IMIN (InteriorWidth self)                                             (DIFFERENCE (InteriorHeight self)                                                    (@ spaceForLabelScale)))                                   2))))        (_@ radius (IDIFFERENCE (@ xc)                          (PLUS 3 maxFontDimension)))        (* radius leaves room for labels                                                              around sides)        (_@ needleLength (IDIFFERENCE (@ radius)                                (@ ticks%:,tickLength)))])(Method ((Meter Shape) self newRegion noUpdateFlg ExtraSpaceFlg)                                                              (* ; "RBGMartin 28-Jan-87 17:11") "Shapes outside of region to specified shape. if ExtraSpaceFlg is T and newRegion is NIL, then the meter is interactively shaped to have extra white space. Shaping from the window menu will keep the meter square except for the space at the bottom for the label."   (COND      ((NOT ExtraSpaceFlg)       (_Super self Shape (if newRegion                              then (GetMinRegion newRegion self)                            else (GETREGION (@ width%:,min)                                        (@ height%:,min)                                        (WINDOWPROP (@ window)                                               'REGION)                                        (FUNCTION MeterNEWREGIONfn)                                        self))                    noUpdateFlg))      (T (_Super self Shape newRegion noUpdateFlg))))(Method ((Meter ShowLabels) self)                            (* ; "RBGMartin 21-Apr-86 14:57") "If there are any labels, show thenm on the dial" [COND                                                      ((@ labels)                                                       (DSPRIGHTMARGIN (IPLUS (WINDOWPROP                                                                               (@ window)                                                                               'WIDTH)                                                                              50)                                                              (@ window))                    (* so that labels on the right won't go to the next line)                                                       (for lab in (@ labels) as a                                                          in (EvenIntervals 90 -360 (@ ticks))                                                          do (ShowRayLabel self a lab])(Method ((Meter ShowTicks) self)                             (* ; "RBGMartin 29-Apr-86 15:44") "Draw ticks at even intervals around the circle starting from 90"   (for a in (EvenIntervals 90 -360 (@ ticks)) bind (incr _ (IQUOTIENT -360 (@ ticks)))      do (DrawTick self a (@ ticks%:,smallTicks)                incr 0.5)))(Method ((RoundScale Reset) self newReading)                 (* ; "RBGMartin 29-Apr-86 15:46") "set reading to value, and then update gauge so that it shows that reading without going through intermediate states"   (_ self ShowReading)   (_@ reading newReading)   (_ self ShowReading))(Method ((RoundScale Set) self newReading)                   (* ; "edited: 22-May-86 13:19") "Move the setting on a RoundScale instrument from current setting to that specified by input."   [PROG ((newVal (_ self ComputeDisplayVal newReading)))         (_@ reading newReading)         (AND (_ self HasLispWindow)              (RotateLine (@ xc)                     (@ yc)                     (@ needleLength)                     (@ displayVal)                     (_@ displayVal newVal)                     (@ window)                     (@ brushWidth)])(Method ((RoundScale ShowReading) self)                      (* ; "edited: 22-May-86 13:16") "dgb: 26-JAN-83 23:43"                                      (* ; "I")                        (DrawRay (@ xc)                               (@ yc)                               (@ needleLength)                               (_@ displayVal (_ self ComputeDisplayVal (ABS (@ reading))))                               (@ brushWidth)                               'INVERT                               (@ window)))(Method ((StraightScale Attach) self obj varName shade propName type xOrPos y)                                                              (* ; "RBGMartin  5-Nov-86 16:21") "same as Gauge.Attach, but with additional argument of shade for setting the shade of the scale."   (_@ shade shade)   (_Super self Attach obj varName propName type xOrPos y))(\UnbatchMethodDefs)(DEFINEQ(ShowRayLabelLength  [LAMBDA (self radius)                                      (* RBGMartin "30-Apr-86 10:58")    (IPLUS 3 radius (IQUOTIENT (MAX (MAXSTRINGWIDTH (@ labels))                                    (FONTHEIGHT (@ font)))                           2]))(PUTPROPS GAUGEINSTRUMENTS COPYRIGHT ("Xerox Corporation" 1986 1987 1988))(DECLARE%: DONTCOPY  (FILEMAP (NIL (30879 31169 (ShowRayLabelLength 30889 . 31167)))))STOP