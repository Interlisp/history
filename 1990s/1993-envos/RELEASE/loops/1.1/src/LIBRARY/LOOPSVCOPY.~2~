(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "INTERLISP" BASE 10)(FILECREATED "15-Aug-90 17:26:50" {DSK}<usr>local>lde>SOURCES>loops>LIBRARY>LOOPSVCOPY.;2 20788        changes to%:  (VARS LOOPSVCOPYCOMS)      previous date%: "25-Feb-88 16:41:59" {DSK}<usr>local>lde>SOURCES>loops>LIBRARY>LOOPSVCOPY.;1)(* ; "Copyright (c) 1986, 1987, 1988, 1990 by Venue & Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT LOOPSVCOPYCOMS)(RPAQQ LOOPSVCOPYCOMS       ((DECLARE%: DONTCOPY (PROP MAKEFILE-ENVIRONMENT LOOPSVCOPY))        (* ;;; "Virtual Copy defn's")        (CLASSES VirtualCopy VirtualCopyClass VirtualCopyMixin VirtualCopyContext)        (METHODS VirtualCopy.AddIV VirtualCopy.HasCV VirtualCopy.HasIV VirtualCopy.IVMissing                VirtualCopy.InstOf VirtualCopy.InstOf! VirtualCopy.InstallFileSource                VirtualCopy.ListAttribute VirtualCopy.ListAttribute! VirtualCopy.MethodNotFound                VirtualCopy.OriginalID VirtualCopy.SuperMethodNotFound VirtualCopy.Understands                VirtualCopy.\Internal/MakeCopyObject VirtualCopyClass.CVMissing                VirtualCopyMixin.IVValueFromOriginal VirtualCopyMixin.IVValueMissing                VirtualCopyMixin.NewInstance VirtualCopyMixin.OriginalID VirtualCopyMixin.PrintOn                VirtualCopyMixin.VirtualCopy? VirtualCopyMixin.\Internal/MakeCopy                VirtualCopyMixin.\Internal/MakeCopyActiveValue VirtualCopyMixin.\Internal/MakeCopyList               VirtualCopyMixin.\Internal/MakeCopyObject)        (* ;;; "VirtualCopy fns")        (FNS GetUltimateIVHere MakeVirtualCopy MakeVirtualMixin UltimateOriginal VirtualCopyOfCons)))(DECLARE%: DONTCOPY (PUTPROPS LOOPSVCOPY MAKEFILE-ENVIRONMENT (:PACKAGE "IL" :READTABLE "INTERLISP" :BASE 10)))(* ;;; "Virtual Copy defn's")(DEFCLASSES VirtualCopy VirtualCopyClass VirtualCopyMixin VirtualCopyContext)(DEFCLASS VirtualCopy   (MetaClass VirtualCopyClass doc "VirtualCopy is a class that creates a sparse representation for copies of object structures. It assumes that the class being copied has a class variable named VirtualIVs Note. May want to extend this to say ALL or DontCopy some"          Edited%:                                       (* sm%: "14-Feb-85 11:09"))   (Supers VirtualCopyMixin)   (InstanceVariables (| copyOf | NIL doc "Original object that this is a virual copy of")          (| copyMap | NIL doc               "Association list of objects and their copies to be substituted as structure is built."                 )))(DEFCLASS VirtualCopyClass   (MetaClass MetaClass Edited%:                         (* sm%: "12-Feb-85 10:29"))   (Supers Class))(DEFCLASS VirtualCopyMixin   (MetaClass AbstractClass doc "VirtualCopyMixin is a class that creates a representation for copies of object structures. It assumes that the class being copied has a class variable named VirtualIVs It is mixed in with this class, so that messages are handled locally, but values of instance variables which are not set locally are found in the copy"          Edited%:                                       (* smL "12-Jan-87 17:58"))   (Supers Tofu)   (InstanceVariables (| copyOf | NIL doc "Original object that this is a virual copy of")          (| copyMap | NIL doc               "Association list of objects and their copies to be substituted as structure is built."                 )))(DEFCLASS VirtualCopyContext   (MetaClass Class Edited%:                             (* SM "31-Jul-86 13:52")          doc "used to represent the copy context of a set of virtual copies. keeps the shared copyMap of all the copies"          )   (Supers Object)   (InstanceVariables (copyMap NIL doc "list of dotted pairs of original.copy")))(\BatchMethodDefs)(METH VirtualCopy  AddIV (varName newValue propName)      NIL (category (VirtualCopy)))(METH VirtualCopy  HasCV (cvName propName)      NIL (category (VirtualCopy)))(METH VirtualCopy  HasIV (ivName propName)      NIL (category (VirtualCopy)))(METH VirtualCopy  IVMissing (varName propName typeFlg newValue)      NIL (category (VirtualCopy)))(METH VirtualCopy  InstOf (class)      NIL (category (VirtualCopy)))(METH VirtualCopy  InstOf! (class)      NIL (category (VirtualCopy)))(METH VirtualCopy  InstallFileSource (fileSource)      NIL (category (VirtualCopy)))(METH VirtualCopy  ListAttribute (type name)      NIL (category (VirtualCopy)))(METH VirtualCopy  ListAttribute! (type name)      NIL (category (VirtualCopy)))(METH VirtualCopy  MethodNotFound (selector)      NIL (category (Tofu)))(METH VirtualCopy  OriginalID NIL      NIL (category (VirtualCopyMixin)))(METH VirtualCopy  SuperMethodNotFound (selector classOfSendingMethod)      NIL (category (Tofu)))(METH VirtualCopy  Understands (selector)      NIL (category (VirtualCopy)))(METH VirtualCopy  \Internal/MakeCopyObject (valueToCopy)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyClass  CVMissing (object varName propName typeFlag newValue)      NIL (category (Class)))(METH VirtualCopyMixin  IVValueFromOriginal (varName propName typeFlg newValue)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  IVValueMissing (varName propName typeFlg newValue)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  NewInstance (copyOf copyContextObj)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  OriginalID NIL      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  PrintOn NIL      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  VirtualCopy? NIL      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  \Internal/MakeCopy (valueToCopy)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  \Internal/MakeCopyActiveValue (valueToCopy)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  \Internal/MakeCopyList (valueToCopy)      NIL (category (VirtualCopyMixin)))(METH VirtualCopyMixin  \Internal/MakeCopyObject (valueToCopy)      NIL (category (VirtualCopyMixin)))(Method ((VirtualCopy AddIV) self varName newValue propName)                                                             (* ; "smL  9-Jun-86 19:16")   "Adds an IV to instance. If it is not in regular set, puts it in assoc List on otherIVs"   [COND      [propName (WithIVPropDescr! self varName [LAMBDA (self varName propDescr)                                                 (InstPutProp propDescr propName newValue]                       (LAMBDA (self varName)                         (_ self AddIV varName NotSetValue)                         (InstPutProp (MakeIVPropDescr self varName)                                propName newValue]      (T (WithIVValue self varName [LAMBDA (self varName oldValue loc)                                     (ChangeIVValue self varName loc newValue]                (LAMBDA (self varName)                  (push (fetch otherIVs of self)                         (CONS varName (create IVDescr                                              IVValue _ newValue)))                  newValue])(Method ((VirtualCopy HasCV) self cvName propName)       (* ; "sm: 21-Feb-85 18:21")   "forwards to original"                                    (* ;                                              "assumes that VirtualCopy class does not have any CVs")   (_ (UltimateOriginal self)      HasCV cvName propName))(Method ((VirtualCopy HasIV) self ivName propName)       (* ; "sm: 14-Feb-85 13:23")   "New method template"   (OR (FMEMB ivName '(| copyOf | | copyMap |))       (_ (UltimateOriginal self)          HasIV ivName propName)))(Method ((VirtualCopy IVMissing) self varName propName typeFlg newValue)                                                             (* ; "sm: 22-Feb-85 13:17")   "if an IV is missing then try the copyOf. Also if the IV is to be copied put back a virtual copy of the value"   (OR varName (ERROR "NIL is not an IVName"))   (SELECTQ typeFlg       ((GetValueOnly GetValue)             (_ self IVValueMissing varName propName typeFlg newValue))       (PutValue (_ self AddIV varName NotSetValue)                 (_ self IVValueMissing varName propName typeFlg newValue))       (PutValueOnly (_ self AddIV varName newValue propName))       (SHOULDNT "Error in IVMissing")))(Method ((VirtualCopy InstOf) self class)                (* ; "sm: 14-Feb-85 13:20")   "Forward message"   (_ (UltimateOriginal self)      InstOf class))(Method ((VirtualCopy InstOf!) self class)               (* ; "sm: 14-Feb-85 13:21")   "Forward message"   (_ (UltimateOriginal self)      InstOf! class))(Method ((VirtualCopy InstallFileSource) self fileSource)(* ; "sm: 20-Feb-85 09:29")   "Fill the given instance based on expression fileSource read from file, and name it"   (NameObject self (LISTP (CAR fileSource)                           NIL))   (FillInst (CDR fileSource)          self)   self)(Method ((VirtualCopy ListAttribute) self type name)     (* ; "smL 11-Apr-86 15:13")   "Fowrard ListAttribute messages, with addition for IVs"   (SELECTQ (U-CASE type)       (IVS (APPEND '(| copyOf | | copyMap |)                   (_ (UltimateOriginal self)                      ListAttribute type name)))       (_ (UltimateOriginal self)          ListAttribute type name)))(Method ((VirtualCopy ListAttribute!) self type name)    (* ; "smL 11-Apr-86 15:18")   "Fowrard ListAttribute! messages, with addition for IVs"   (SELECTQ (U-CASE type)       (IVS (APPEND '(| copyOf | | copyMap |)                   (_ (UltimateOriginal self)                      ListAttribute! type name)))       (_ (UltimateOriginal self)          ListAttribute! type name)))(Method ((VirtualCopy MethodNotFound) self selector)     (* ; "sm: 14-Feb-85 13:33")   "Find the method from the original object,"   (FetchMethodOrHelp (UltimateOriginal self)          selector))(Method ((VirtualCopy OriginalID) self)                  (* ; "sm: 17-Jun-85 15:47")   "An expression to identify the original for a virtual copy in PrintOn"   (CONS (ClassName (@ | copyOf |))         (_Super )))(Method ((VirtualCopy SuperMethodNotFound) self selector classOfSendingMethod)                                                             (* ; "sm: 12-Feb-85 15:11")   "Find the super method from the original object"   (FindSuperMethod (UltimateOriginal self)          selector classOfSendingMethod))(Method ((VirtualCopy Understands) self selector)        (* ; "sm: 14-Feb-85 13:23")   "Forward message"   (_ (UltimateOriginal self)      Understands selector))(Method ((VirtualCopy \Internal/MakeCopyObject) self valueToCopy)                                                             (* ; "smL 11-Apr-86 15:47")   "copy the value from the original"   (MakeVirtualCopy valueToCopy (@ | copyMap |)))(Method ((VirtualCopyClass CVMissing) self object varName propName typeFlag newValue)                                                             (* ; "smL 29-Sep-86 17:27")   "forwards it along to the thing its a copy of"   (SELECTQ typeFlag       ((PutClassValueOnly PutClassValue)             (APPLY* typeFlag (UltimateOriginal object)                   varName newValue propName))       (APPLY* typeFlag (UltimateOriginal object)              varName propName)))(Method ((VirtualCopyMixin IVValueFromOriginal) self varName propName typeFlg newValue)                                                             (* ; "smL 29-Sep-86 17:53")   "get the value from the original (or inherit from its class)"   (SELECTQ typeFlg       ((GetValue GetValueOnly)             [COND               ((FMEMB varName '(| copyOf | | copyMap |))                NIL)               ([AND (_ (@ | copyOf |)                        HasCV                        'VirtualIVs)                     (LET [(virtual (GetClassValue (@ | copyOf |)                                           'VirtualIVs]                          (OR (EQ virtual 'ALL)                              (FMEMB varName virtual]        (* for virtual ivs ALWAYS copy the                                                            value accessible from the original)                (_ self AddIV varName (_ self \Internal/MakeCopy (GetValueOnly (@ | copyOf |)                                                                        varName propName))                        propName)                (APPLY* typeFlg self varName propName))               (T                                            (* for all other ivs)                  (LET ((otherHere (GetValueOnly (@ | copyOf |)                                          varName propName)))                       (SELECTQ typeFlg                           (GetValueOnly otherHere)                           (ExtractRealValue self varName otherHere propName])       (PutValue                                             (* PutValueOnly never gets here)                 [COND                    ((FMEMB varName '(| copyOf | | copyMap |))                     (PutValueOnly self varName newValue propName))                    (T (LET ((otherHere (GetValueOnly (@ | copyOf |)                                               varName propName)))         (* * If copy has no value, get the value from the class)                                                             (* Prepare for active values)                            (COND                               ((type? annotatedValue otherHere)                                                             (* Move active value into Virtual                                                            copy)                                (PutValueOnly self varName (_ self \Internal/MakeCopy otherHere)                                       propName)                                (PutValue self varName newValue propName))                               (T (PutValueOnly self varName newValue propName])       (SHOULDNT "Error in Put or GetValue")))(Method ((VirtualCopyMixin IVValueMissing) self varName propName typeFlg newValue)                                                             (* ; "smL 29-Sep-86 14:52")   "find the value in the original"   (if (ASSOC varName (fetch otherIVs of self))       then (_Super )     else (_ self IVValueFromOriginal varName propName typeFlg newValue)))(Method ((VirtualCopyMixin NewInstance) self copyOf copyContextObj)                                                             (* ; "SM 31-Jul-86 15:48")   "fills in the virtual copy and updates the copyMap"   (PutValueOnly self '| copyOf | copyOf)   [COND      (copyContextObj                                        (* copied in context, just add to                                                            the copy map)             (NCONC1 (@ copyContextObj copyMap)                    (CONS copyOf self)))      (T                                                     (* create a new context)         (SETQ copyContextObj (_ ($ VirtualCopyContext)                                 New))         (_@ copyContextObj copyMap (LIST (CONS copyOf self)))]   (PutValueOnly self '| copyMap | copyContextObj)   self)(Method ((VirtualCopyMixin OriginalID) self)             (* ; "smL 23-May-86 09:36")   "An expression to identify the original for a virtual copy in PrintOn"   (OR (GetObjectName (@ | copyOf |))       (fetch OBJUID of (@ | copyOf |))       (EntityAddress (@ | copyOf |))))(Method ((VirtualCopyMixin PrintOn) self)                (* ; "smL 23-May-86 09:36")   "Object.PrintOn could be over-ridden by some method of the copyOf so catch it here"   (LIST (CONCAT LoopsReadMacroChar ".")         '$&         (ClassName self)         (OR (fetch OBJUID of self)             (EntityAddress self))         (_ self OriginalID)))(Method ((VirtualCopyMixin VirtualCopy?) self)           (* ; "sm: 14-Feb-85 11:12")   "yes I am a virtual copy"   self)(Method ((VirtualCopyMixin \Internal/MakeCopy) self valueToCopy)                                                             (* ; "smL 11-Apr-86 15:50")   "copy the value from the original"   (SELECTQ (TYPENAME valueToCopy)       (instance (_ self \Internal/MakeCopyObject valueToCopy))       (LISTP (_ self \Internal/MakeCopyList valueToCopy))       (annotatedValue             (_ self \Internal/MakeCopyActiveValue valueToCopy))       valueToCopy))(Method ((VirtualCopyMixin \Internal/MakeCopyActiveValue) self valueToCopy)                                                             (* ; "smL 11-Apr-86 15:50")   "copy the activeValue from the original"   (LET* ((oldAV (fetch annotatedValue of valueToCopy))          (newAV (_ (_ oldAV Class)                    New)))         [for iv in (_ oldAV ListAttribute! 'IVS) do (PutValueOnly newAV iv                                                                        (_ self \Internal/MakeCopy                                                                                (GetIVHere oldAV iv))                                                                        ]         (create annotatedValue                annotatedValue _ newAV)))(Method ((VirtualCopyMixin \Internal/MakeCopyList) self valueToCopy)                                                             (* ; "smL 11-Apr-86 15:50")   "copy the list from the original"   [LET [(first (_ self \Internal/MakeCopy (CAR valueToCopy)))         (rest (_ self \Internal/MakeCopy (CDR valueToCopy))]        (COND           ((AND (EQ first (CAR valueToCopy))                 (EQ rest (CDR valueToCopy)))            valueToCopy)           (T (CONS first rest])(Method ((VirtualCopyMixin \Internal/MakeCopyObject) self valueToCopy)                                                             (* ; "smL 11-Apr-86 15:47")   "copy the value from the original"   (MakeVirtualMixin valueToCopy (@ | copyMap |)))(\UnbatchMethodDefs)(* ;;; "VirtualCopy fns")(DEFINEQ(GetUltimateIVHere  [LAMBDA (self varName prop)                                (* sm%: "22-Feb-85 09:46")                    (* * returns the local IV up the original chain starting with self)    (LET ((here (GetIVHere self varName prop)))         (COND            ((NotSetValue here)             (COND                ((_ self VirtualCopy?)                 (GetUltimateIVHere (@ | copyOf |)                        varName prop))                (T here)))            (T here])(MakeVirtualCopy  [LAMBDA (x copyContextObj)                                 (* SM "31-Jul-86 14:17")                    (* * copies any objects inside of x)    (COND       ((Object? x)        (OR [AND copyContextObj (CDR (ASSOC x (@ copyContextObj copyMap)]            (_ ($ VirtualCopy)               New x copyContextObj)])(MakeVirtualMixin  [LAMBDA (x copyContextObj)                                 (* SM "31-Jul-86 14:18")                    (* * copies any objects inside of x)    (COND       ((Object? x)        (OR [AND copyContextObj (CDR (ASSOC x (@ copyContextObj copyMap)]            (_ [$! (LIST 'VirtualCopyMixin (ClassName (UltimateOriginal x]               New x copyContextObj)])(UltimateOriginal  [LAMBDA (self)                                             (* sm%: "14-Feb-85 12:06")                    (* * finds the thing which self is ultimately copying)    (COND       [(_ self VirtualCopy?)        (COND           ((NULL (@ | copyOf |))            (ERROR self "No original for VirtualCopy"))           (T (UltimateOriginal (@ | copyOf |)]       (T self])(VirtualCopyOfCons  [LAMBDA (list copyMap)                                     (* mjs%: " 8-Nov-84 16:01")                    (* * copies any objects inside of list)    (LET ((first (MakeVirtualCopy (CAR list)                        copyMap))          (rest (MakeVirtualCopy (CDR list)                       copyMap)))         (COND            ((AND (EQ first (CAR list))                  (EQ rest (CDR list)))             list)            (T (CONS first rest]))(PUTPROPS LOOPSVCOPY COPYRIGHT ("Venue & Xerox Corporation" 1986 1987 1988 1990))(DECLARE%: DONTCOPY  (FILEMAP (NIL (18495 20683 (GetUltimateIVHere 18505 . 19013) (MakeVirtualCopy 19015 . 19366) (MakeVirtualMixin 19368 . 19764) (UltimateOriginal 19766 . 20177) (VirtualCopyOfCons 20179 . 20681)))))STOP