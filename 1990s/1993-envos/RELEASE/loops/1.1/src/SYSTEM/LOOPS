(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)(FILECREATED "27-Jul-90 07:40:41" {DSK}<usr>local>lde>loops>src>SYSTEM>LOOPS.;2 14561        changes to%:  (VARS LOOPSCOMS)      previous date%: "27-Jul-88 14:44:40" {DSK}<usr>local>lde>loops>src>SYSTEM>LOOPS.;1)(* ; "Copyright (c) 1986, 1988, 1990 by Venue & Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT LOOPSCOMS)(RPAQQ LOOPSCOMS ((* * Loading this file will load all of Loops) (INITVARS (LS-CURRENT-SYSTEM (QUOTE ("Loops" (((LOOPSDIRECTORY "{DSK}<LISPFILES>LOOPS>SYSTEM>") (LOOPSLIBRARYDIRECTORY "{DSK}<LISPFILES>LOOPS>LIBRARY>") (LOOPSUSERSDIRECTORY "{DSK}<LISPFILES>LOOPS>USERS>") (LOOPSUSERSRULESDIRECTORY "{DSK}<LISPFILES>LOOPS>RULES>"))) (((DANDELION (EVAL (if (OR (NOT (BOUNDP (QUOTE DISPLAYFONTDIRECTORIES))) (NULL DISPLAYFONTDIRECTORIES)) then (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue") else (CL:FORMAT T "Looking for fonts in ~A~%%" (CAR DISPLAYFONTDIRECTORIES)))) (EVAL (if (NOT (for ff in (QUOTE (5 10 12 14 16 18)) always (FONTSAVAILABLE (QUOTE HELVETICA) ff NIL NIL (QUOTE DISPLAY) T))) then (CL:FORMAT T "I need to load some fonts~%%") (LS-LOAD? (QUOTE COPYFILES) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #1|) ELSE (QUOTE |Medley Library #2|))) (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Display Fonts #7 Presentation/Printwheel 1/5/87|) ELSE (QUOTE |Lyric Display Fonts #7 Presentation/Prin|))) (COPYFILES (QUOTE (HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14* HELVETICA16* HELVETICA18*)) (CAR DISPLAYFONTDIRECTORIES) (QUOTE (=A))))) (EVAL (LS-LOAD? (QUOTE GRAPHER) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #2|) ELSE (QUOTE |Medley Library #2|)))) (|Lyric LOOPS System| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL LOOPSDEBUG.DFASL LOOPSEDIT.DFASL LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL LOOPSSTRUC.DFASL LOOPSUID.DFASL LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL LOOPSWINDOW.DFASL LOOPS-INSTALL.DFASL SEDIT-PATCH.DFASL INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL MEDLEY-PATCH.DFASL)) (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL GAUGELOADER.DFASL GAUGEMETERS.DFASL GAUGES.DFASL GAUGESCALES.DFASL GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL LOOPSVCOPY.DFASL MASTERSCOPE.DFASL MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL)) (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL) (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL))) (DOVE (EVAL (if (OR (NOT (BOUNDP (QUOTE DISPLAYFONTDIRECTORIES))) (NULL DISPLAYFONTDIRECTORIES)) then (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue"))) (EVAL (if (NOT (for ff in (QUOTE (5 10 12 14 16 18)) always (FONTSAVAILABLE (QUOTE HELVETICA) ff NIL NIL (QUOTE DISPLAY) T))) then (CL:FORMAT T "I need to load some fonts~%%") (LS-LOAD? (QUOTE COPYFILES) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #1|) ELSE (QUOTE |Medley Library #5|))) (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Display Fonts #1 Presentation 1/4/87|) ELSE (QUOTE |Lyric Display Fonts #1 Presentation 1/4/|))) (COPYFILES (QUOTE (HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14* HELVETICA16* HELVETICA18*)) (CAR DISPLAYFONTDIRECTORIES) (QUOTE (=A))))) (EVAL (LS-LOAD? (QUOTE GRAPHER) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #3|) ELSE (QUOTE |Medley Library #5|)))) (|Lyric LOOPS System #1| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL LOOPSDEBUG.DFASL LOOPSEDIT.DFASL LOOPS-INSTALL.DFASL)) (|Lyric LOOPS System #2| (LOOPSDIRECTORY LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL LOOPSSTRUC.DFASL LOOPSUID.DFASL LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL LOOPSWINDOW.DFASL SEDIT-PATCH.DFASL INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL MEDLEY-PATCH.DFASL)) (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL GAUGELOADER.DFASL GAUGEMETERS.DFASL GAUGES.DFASL GAUGESCALES.DFASL GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL LOOPSVCOPY.DFASL MASTERSCOPE.DFASL MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL)) (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL) (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL))) (MAIKO (EVAL (if (OR (NOT (BOUNDP (QUOTE DISPLAYFONTDIRECTORIES))) (NULL DISPLAYFONTDIRECTORIES)) then (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and type OK to continue"))) (EVAL (while (NOT (for ff in (QUOTE (5 10 12 14 16 18)) always (FONTSAVAILABLE (QUOTE HELVETICA) ff NIL NIL (QUOTE DISPLAY) T))) do (CL:BREAK "Retrieve HELVETICA fonts to DISPLAYFONTDIRECTORIES~%%and type OK to continue"))) (EVAL (FILESLOAD (SYSLOAD COMPILED) GRAPHER)))) (PROGN (CL:FORMAT T "~%%Building LOOPSSITE file...") (CNDIR LOOPSDIRECTORY) (LOAD (QUOTE LOOPSSITE) (QUOTE PROP)) (for d in (QUOTE (LOOPSDIRECTORY LOOPSLIBRARYDIRECTORY LOOPSUSERSDIRECTORY LOOPSUSERSRULESDIRECTORY)) do (ADDTOFILE (BQUOTE ((\, d) (QUOTE (\, (EVAL d))))) (QUOTE INITVARS) (QUOTE LOOPSSITE))) (MAKEFILE (QUOTE LOOPSSITE) (QUOTE NEW)) (CL:COMPILE-FILE (QUOTE LOOPSSITE)) (REMPROP (QUOTE LOOPSSITE) (QUOTE FILEDATES)) (CL:FORMAT T "done.~%%") (printout T "From now on, to load loops into a fresh sysout, you may either:" T "  do (LOAD 'LOOPS) for menu based loading" T "or" T "  do (FILESLOAD LOADLOOPS) and call (LOADLOOPS)" T "Both files are in:" T "  " LOOPSDIRECTORY T))) ((("Loops" "Load Loops") (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY) LOADLOOPS) (LOADLOOPS)) (("Loops Masterscope" "Load LOOPSMS and Masterscope extensions") (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY) LOOPSMS)) (("Gauges" "Load Loops Active Gauges") (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY) GAUGELOADER) (LOADGAUGES)) (("VirtualCopy" "Load Loops Virtual Copy system") (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY) LOOPSVCOPY)) (("ConversionAids" "Load the Koto Loops to Lyric/Medley Loops converter") (FILESLOAD (FROM VALUEOF LOOPSUSERSDIRECTORY) CONVERSION-AIDS)) (("LoopsRules" "Load Loops Rules system") (FILESLOAD (FROM VALUEOF LOOPSUSERSRULESDIRECTORY) LOOPSRULES-ROOT))))))) (DECLARE%: EVAL@LOADWHEN (NOT (MEMQ DFNFLG (QUOTE (PROP ALLPROP)))) (FILES (NOERROR) LOOPSSITE) (P (if (BOUNDP (QUOTE LOOPSDIRECTORY)) then (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY) LOOPS-INSTALL) else (FILESLOAD LOOPS-INSTALL)) (LOAD-SYSTEM)))))(* * Loading this file will load all of Loops)(RPAQ? LS-CURRENT-SYSTEM (QUOTE ("Loops" (((LOOPSDIRECTORY "{DSK}<LISPFILES>LOOPS>SYSTEM>") (LOOPSLIBRARYDIRECTORY "{DSK}<LISPFILES>LOOPS>LIBRARY>") (LOOPSUSERSDIRECTORY "{DSK}<LISPFILES>LOOPS>USERS>") (LOOPSUSERSRULESDIRECTORY "{DSK}<LISPFILES>LOOPS>RULES>"))) (((DANDELION (EVAL (if (OR (NOT (BOUNDP (QUOTE DISPLAYFONTDIRECTORIES))) (NULL DISPLAYFONTDIRECTORIES)) then (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue") else (CL:FORMAT T "Looking for fonts in ~A~%%" (CAR DISPLAYFONTDIRECTORIES)))) (EVAL (if (NOT (for ff in (QUOTE (5 10 12 14 16 18)) always (FONTSAVAILABLE (QUOTE HELVETICA) ff NIL NIL (QUOTE DISPLAY) T))) then (CL:FORMAT T "I need to load some fonts~%%") (LS-LOAD? (QUOTE COPYFILES) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #1|) ELSE (QUOTE |Medley Library #2|))) (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Display Fonts #7 Presentation/Printwheel 1/5/87|) ELSE (QUOTE |Lyric Display Fonts #7 Presentation/Prin|))) (COPYFILES (QUOTE (HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14* HELVETICA16* HELVETICA18*)) (CAR DISPLAYFONTDIRECTORIES) (QUOTE (=A))))) (EVAL (LS-LOAD? (QUOTE GRAPHER) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #2|) ELSE (QUOTE |Medley Library #2|)))) (|Lyric LOOPS System| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL LOOPSDEBUG.DFASL LOOPSEDIT.DFASL LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL LOOPSSTRUC.DFASL LOOPSUID.DFASL LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL LOOPSWINDOW.DFASL LOOPS-INSTALL.DFASL SEDIT-PATCH.DFASL INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL MEDLEY-PATCH.DFASL)) (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL GAUGELOADER.DFASL GAUGEMETERS.DFASL GAUGES.DFASL GAUGESCALES.DFASL GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL LOOPSVCOPY.DFASL MASTERSCOPE.DFASL MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL)) (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL) (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL))) (DOVE (EVAL (if (OR (NOT (BOUNDP (QUOTE DISPLAYFONTDIRECTORIES))) (NULL DISPLAYFONTDIRECTORIES)) then (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue"))) (EVAL (if (NOT (for ff in (QUOTE (5 10 12 14 16 18)) always (FONTSAVAILABLE (QUOTE HELVETICA) ff NIL NIL (QUOTE DISPLAY) T))) then (CL:FORMAT T "I need to load some fonts~%%") (LS-LOAD? (QUOTE COPYFILES) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #1|) ELSE (QUOTE |Medley Library #5|))) (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Display Fonts #1 Presentation 1/4/87|) ELSE (QUOTE |Lyric Display Fonts #1 Presentation 1/4/|))) (COPYFILES (QUOTE (HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14* HELVETICA16* HELVETICA18*)) (CAR DISPLAYFONTDIRECTORIES) (QUOTE (=A))))) (EVAL (LS-LOAD? (QUOTE GRAPHER) (IF (EQ MAKESYSNAME :LYRIC) THEN (QUOTE |Lyric Library #3|) ELSE (QUOTE |Medley Library #5|)))) (|Lyric LOOPS System #1| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL LOOPSDEBUG.DFASL LOOPSEDIT.DFASL LOOPS-INSTALL.DFASL)) (|Lyric LOOPS System #2| (LOOPSDIRECTORY LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL LOOPSSTRUC.DFASL LOOPSUID.DFASL LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL LOOPSWINDOW.DFASL SEDIT-PATCH.DFASL INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL MEDLEY-PATCH.DFASL)) (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL GAUGELOADER.DFASL GAUGEMETERS.DFASL GAUGES.DFASL GAUGESCALES.DFASL GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL LOOPSVCOPY.DFASL MASTERSCOPE.DFASL MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL)) (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL) (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL))) (MAIKO (EVAL (if (OR (NOT (BOUNDP (QUOTE DISPLAYFONTDIRECTORIES))) (NULL DISPLAYFONTDIRECTORIES)) then (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and type OK to continue"))) (EVAL (while (NOT (for ff in (QUOTE (5 10 12 14 16 18)) always (FONTSAVAILABLE (QUOTE HELVETICA) ff NIL NIL (QUOTE DISPLAY) T))) do (CL:BREAK "Retrieve HELVETICA fonts to DISPLAYFONTDIRECTORIES~%%and type OK to continue"))) (EVAL (FILESLOAD (SYSLOAD COMPILED) GRAPHER)))) (PROGN (CL:FORMAT T "~%%Building LOOPSSITE file...") (CNDIR LOOPSDIRECTORY) (LOAD (QUOTE LOOPSSITE) (QUOTE PROP)) (for d in (QUOTE (LOOPSDIRECTORY LOOPSLIBRARYDIRECTORY LOOPSUSERSDIRECTORY LOOPSUSERSRULESDIRECTORY)) do (ADDTOFILE (BQUOTE ((\, d) (QUOTE (\, (EVAL d))))) (QUOTE INITVARS) (QUOTE LOOPSSITE))) (MAKEFILE (QUOTE LOOPSSITE) (QUOTE NEW)) (CL:COMPILE-FILE (QUOTE LOOPSSITE)) (REMPROP (QUOTE LOOPSSITE) (QUOTE FILEDATES)) (CL:FORMAT T "done.~%%") (printout T "From now on, to load loops into a fresh sysout, you may either:" T "  do (LOAD 'LOOPS) for menu based loading" T "or" T "  do (FILESLOAD LOADLOOPS) and call (LOADLOOPS)" T "Both files are in:" T "  " LOOPSDIRECTORY T))) ((("Loops" "Load Loops") (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY) LOADLOOPS) (LOADLOOPS)) (("Loops Masterscope" "Load LOOPSMS and Masterscope extensions") (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY) LOOPSMS)) (("Gauges" "Load Loops Active Gauges") (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY) GAUGELOADER) (LOADGAUGES)) (("VirtualCopy" "Load Loops Virtual Copy system") (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY) LOOPSVCOPY)) (("ConversionAids" "Load the Koto Loops to Lyric/Medley Loops converter") (FILESLOAD (FROM VALUEOF LOOPSUSERSDIRECTORY) CONVERSION-AIDS)) (("LoopsRules" "Load Loops Rules system") (FILESLOAD (FROM VALUEOF LOOPSUSERSRULESDIRECTORY) LOOPSRULES-ROOT))))))(DECLARE%: EVAL@LOADWHEN (NOT (MEMQ DFNFLG (QUOTE (PROP ALLPROP)))) (FILESLOAD (NOERROR) LOOPSSITE)(if (BOUNDP (QUOTE LOOPSDIRECTORY)) then (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY) LOOPS-INSTALL) else (FILESLOAD LOOPS-INSTALL))(LOAD-SYSTEM))(PUTPROPS LOOPS COPYRIGHT ("Venue & Xerox Corporation" 1986 1988 1990))(DECLARE%: DONTCOPY  (FILEMAP (NIL)))STOP