(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)(FILECREATED "15-Aug-91 20:36:15" {DSK}<python>release>loops>2.0>src>LOOPS.;4 28342        changes to%:  (VARS LOOPSCOMS)      previous date%: "15-Aug-91 20:24:40" {DSK}<python>release>loops>2.0>src>LOOPS.;3)(PRETTYCOMPRINT LOOPSCOMS)(RPAQQ LOOPSCOMS        [        (* ;; "Loading this file will load all of Loops")        (FNS \LOOPSDIR)        [INITVARS         (LS-CURRENT-SYSTEM          `("Loops" [,(\LOOPSDIR (INPUT]                  ([(DANDELION [EVAL (if (OR (NOT (BOUNDP 'DISPLAYFONTDIRECTORIES))                                             (NULL DISPLAYFONTDIRECTORIES))                                         then                                         (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue"                                                )                                         else                                         (CL:FORMAT T "Looking for fonts in ~A~%%" (CAR                                                                                DISPLAYFONTDIRECTORIES                                                                                        ]                           [EVAL (if (NOT (for ff in '(5 10 12 14 16 18)                                               always                                               (FONTSAVAILABLE 'HELVETICA ff NIL NIL 'DISPLAY T)))                                     then                                     (CL:FORMAT T "I need to load some fonts~%%")                                     (LS-LOAD? 'COPYFILES (IF (EQ MAKESYSNAME :LYRIC)                                                              THEN                                                              '|Lyric Library #1| ELSE                                                               '|Medley Library #2|))                                     (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC)                                                           THEN                                                                                                                      '                                              |Lyric Display Fonts #7 Presentation/Printwheel 1/5/87|                                                           ELSE                                                            '                                                           |Lyric Display Fonts #7 Presentation/Prin|                                                           ))                                     (COPYFILES '(HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14*                                                        HELVETICA16* HELVETICA18*)                                            (CAR DISPLAYFONTDIRECTORIES)                                            '(=A]                           [EVAL (LS-LOAD? 'GRAPHER (IF (EQ MAKESYSNAME :LYRIC)                                                        THEN                                                        '|Lyric Library #2| ELSE                                                         '|Medley Library #2|]                           (|Lyric LOOPS System| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL                                                         LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS                                                        LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL                                                         LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL                                                         LOOPSDEBUG.DFASL LOOPSEDIT.DFASL                                                         LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL                                                         LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE                                                        LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL                                                         LOOPSSTRUC.DFASL LOOPSUID.DFASL                                                         LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL                                                         LOOPSWINDOW.DFASL LOOPS-INSTALL.DFASL                                                         INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL                                                         MEDLEY-PATCH.DFASL))                           (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL                                                          GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL                                                          GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL                                                          GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL                                                          GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL                                                         GAUGELOADER.DFASL GAUGEMETERS.DFASL                                                          GAUGES.DFASL GAUGESCALES.DFASL                                                          GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL                                                          LOOPSVCOPY.DFASL MASTERSCOPE.DFASL                                                          MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL                                                         ))                           (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL                                                        LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL)                                  (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL                                          LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL                                          LOOPSRULESD.DFASL LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL)))                    (DOVE (EVAL (if (OR (NOT (BOUNDP 'DISPLAYFONTDIRECTORIES))                                        (NULL DISPLAYFONTDIRECTORIES))                                    then                                    (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue"                                           )))                          [EVAL (if (NOT (for ff in '(5 10 12 14 16 18)                                              always                                              (FONTSAVAILABLE 'HELVETICA ff NIL NIL 'DISPLAY T)))                                    then                                    (CL:FORMAT T "I need to load some fonts~%%")                                    (LS-LOAD? 'COPYFILES (IF (EQ MAKESYSNAME :LYRIC)                                                             THEN                                                             '|Lyric Library #1| ELSE                                                              '|Medley Library #5|))                                    (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC)                                                          THEN                                                                                                                    '                                                         |Lyric Display Fonts #1 Presentation 1/4/87|                                                          ELSE                                                           '|Lyric Display Fonts #1 Presentation 1/4/|                                                          ))                                    (COPYFILES '(HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14*                                                       HELVETICA16* HELVETICA18*)                                           (CAR DISPLAYFONTDIRECTORIES)                                           '(=A]                          [EVAL (LS-LOAD? 'GRAPHER (IF (EQ MAKESYSNAME :LYRIC)                                                       THEN                                                       '|Lyric Library #3| ELSE '|Medley Library #5|]                          (|Lyric LOOPS System #1| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL                                                          LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL                                                           LOOPS LOOPSACCESS.DFASL                                                           LOOPSACTIVEVALUES.DFASL LOOPSBROWSE.DFASL                                                           LOOPSDATATYPES.DFASL LOOPSDEBUG.DFASL                                                           LOOPSEDIT.DFASL LOOPS-INSTALL.DFASL))                          (|Lyric LOOPS System #2| (LOOPSDIRECTORY LOOPSINSPECT.DFASL                                                           LOOPSKERNEL.DFASL LOOPSMETHODS.DFASL                                                           LOOPSPRINT.DFASL LOOPSSITE LOOPSSITE.DFASL                                                          LOOPSSPEEDUP.DFASL LOOPSSTRUC.DFASL                                                           LOOPSUID.DFASL LOOPSUSERINTERFACE.DFASL                                                           LOOPSUTILITY.DFASL LOOPSWINDOW.DFASL                                                           SEDIT-PATCH.DFASL INSPECT-PATCH.DFASL                                                           LOOPS-PATCH.DFASL MEDLEY-PATCH.DFASL))                          (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL                                                         GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL                                                         GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL                                                         GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL                                                         GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL                                                         GAUGELOADER.DFASL GAUGEMETERS.DFASL                                                         GAUGES.DFASL GAUGESCALES.DFASL                                                         GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL                                                         LOOPSVCOPY.DFASL MASTERSCOPE.DFASL                                                         MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL)                                 )                          (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL                                                       LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL)                                 (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL                                         LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL                                        LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL)))                    (MAIKO (EVAL (if (OR (NOT (BOUNDP 'DISPLAYFONTDIRECTORIES))                                         (NULL DISPLAYFONTDIRECTORIES))                                     then                                     (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and type OK to continue"                                            )))                           (EVAL (while (NOT (for ff in '(5 10 12 14 16 18)                                                  always                                                  (FONTSAVAILABLE 'HELVETICA ff NIL NIL 'DISPLAY T)))                                        do                                        (CL:BREAK                        "Retrieve HELVETICA fonts to DISPLAYFONTDIRECTORIES~%%and type OK to continue"                                               )))                           (EVAL (FILESLOAD (SYSLOAD COMPILED)                                        GRAPHER]                   (PROGN (CL:FORMAT T "~%%Building LOOPSSITE file...")                          (CNDIR LOOPSDIRECTORY)                          (LOAD 'LOOPSSITE 'PROP)                          (for d in '(LOOPSDIRECTORY LOOPSLIBRARYDIRECTORY LOOPSUSERSDIRECTORY                                             LOOPSUSERSRULESDIRECTORY)                               do                               (ADDTOFILE `[,d ',(EVAL d]                                      'INITVARS                                      'LOOPSSITE))                          (MAKEFILE 'LOOPSSITE 'NEW)                          (CL:COMPILE-FILE 'LOOPSSITE)                          (REMPROP 'LOOPSSITE 'FILEDATES)                          (CL:FORMAT T "done.~%%")                          (printout T                                  "From now on, to load loops into a fresh sysout, you may either:" T                                 "  do (LOAD 'LOOPS) for menu based loading" T "or" T                                  "  do (FILESLOAD LOADLOOPS) and call (LOADLOOPS)" T                                  "Both files are in:" T "  " LOOPSDIRECTORY T)))                  ((("Loops" "Load Loops")                    (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY)                           LOADLOOPS)                    (LOADLOOPS))                   (("Loops Masterscope" "Load LOOPSMS and Masterscope extensions")                    (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)                           LOOPSMS))                   (("Gauges" "Load Loops Active Gauges")                    (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)                           GAUGELOADER)                    (LOADGAUGES))                   (("VirtualCopy" "Load Loops Virtual Copy system")                    (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)                           LOOPSVCOPY))                   (("ConversionAids" "Load the Koto Loops to Lyric/Medley Loops converter")                    (FILESLOAD (FROM VALUEOF LOOPSUSERSDIRECTORY)                           CONVERSION-AIDS))                   (("LoopsRules" "Load Loops Rules system")                    (FILESLOAD (FROM VALUEOF LOOPSUSERSRULESDIRECTORY)                           LOOPSRULES-ROOT]        (DECLARE%: EVAL@LOADWHEN [NOT (MEMQ DFNFLG '(PROP ALLPROP]               (FILES (NOERROR)                      LOOPSSITE)               (P (if (BOUNDP 'LOOPSDIRECTORY)                      then                      (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY)                             LOOPS-INSTALL)                      else                      (FILESLOAD LOOPS-INSTALL))                  (LOAD-SYSTEM])(* ;; "Loading this file will load all of Loops")(DEFINEQ(\LOOPSDIR  [LAMBDA (STREAM)    (LET ((FN (FULLNAME STREAM))          DIR)         (SETQ DIR (PACKFILENAME.STRING 'NAME NIL 'EXTENSION NIL 'VERSION NIL 'BODY FN))         [SETQ DIR (SUBSTRING DIR 1 (ADD1 (CL:POSITION #\> DIR :FROM-END T :END (SUB1 (NCHARS DIR]         `((LOOPSDIRECTORY ,(CONCAT DIR ">system>"))           (LOOPSLIBRARYDIRECTORY ,(CONCAT DIR ">Library>"))           (LOOPSUSERSDIRECTORY ,(CONCAT DIR ">Users>"))           (LOOPSUSERSRULESDIRECTORY ,(CONCAT DIR ">Users>Rules>"]))(RPAQ? LS-CURRENT-SYSTEM        `["Loops" [,(\LOOPSDIR (INPUT]               ([(DANDELION [EVAL (if (OR (NOT (BOUNDP 'DISPLAYFONTDIRECTORIES))                                          (NULL DISPLAYFONTDIRECTORIES))                                      then                                      (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue"                                             )                                      else                                      (CL:FORMAT T "Looking for fonts in ~A~%%" (CAR                                                                                DISPLAYFONTDIRECTORIES                                                                                     ]                        [EVAL (if (NOT (for ff in '(5 10 12 14 16 18)                                            always                                            (FONTSAVAILABLE 'HELVETICA ff NIL NIL 'DISPLAY T)))                                  then                                  (CL:FORMAT T "I need to load some fonts~%%")                                  (LS-LOAD? 'COPYFILES (IF (EQ MAKESYSNAME :LYRIC)                                                           THEN                                                           '|Lyric Library #1| ELSE                                                            '|Medley Library #2|))                                  (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC)                                                        THEN                                                                                                                '                                              |Lyric Display Fonts #7 Presentation/Printwheel 1/5/87|                                                        ELSE                                                         '|Lyric Display Fonts #7 Presentation/Prin|))                                  (COPYFILES '(HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14*                                                      HELVETICA16* HELVETICA18*)                                         (CAR DISPLAYFONTDIRECTORIES)                                         '(=A]                        [EVAL (LS-LOAD? 'GRAPHER (IF (EQ MAKESYSNAME :LYRIC)                                                     THEN                                                     '|Lyric Library #2| ELSE '|Medley Library #2|]                        (|Lyric LOOPS System| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL                                                      LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS                                                      LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL                                                      LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL                                                      LOOPSDEBUG.DFASL LOOPSEDIT.DFASL                                                      LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL                                                      LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE                                                      LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL                                                      LOOPSSTRUC.DFASL LOOPSUID.DFASL                                                      LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL                                                      LOOPSWINDOW.DFASL LOOPS-INSTALL.DFASL                                                      INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL                                                      MEDLEY-PATCH.DFASL))                        (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL                                                       GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL                                                       GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL                                                       GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL                                                       GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL                                                       GAUGELOADER.DFASL GAUGEMETERS.DFASL                                                       GAUGES.DFASL GAUGESCALES.DFASL                                                       GAUGESELFSCALEMIXIN.DFASL LOOPSMS.DFASL                                                       LOOPSVCOPY.DFASL MASTERSCOPE.DFASL                                                       MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL))                        (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL                                                     LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL)                               (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL                                       LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL                                       LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL)))                 (DOVE (EVAL (if (OR (NOT (BOUNDP 'DISPLAYFONTDIRECTORIES))                                     (NULL DISPLAYFONTDIRECTORIES))                                 then                                 (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and say OK to continue"                                        )))                       [EVAL (if (NOT (for ff in '(5 10 12 14 16 18)                                           always                                           (FONTSAVAILABLE 'HELVETICA ff NIL NIL 'DISPLAY T)))                                 then                                 (CL:FORMAT T "I need to load some fonts~%%")                                 (LS-LOAD? 'COPYFILES (IF (EQ MAKESYSNAME :LYRIC)                                                          THEN                                                          '|Lyric Library #1| ELSE                                                           '|Medley Library #5|))                                 (LS-FLOPPY-PROMPT (IF (EQ MAKESYSNAME :LYRIC)                                                       THEN                                                       '|Lyric Display Fonts #1 Presentation 1/4/87|                                                       ELSE                                                        '|Lyric Display Fonts #1 Presentation 1/4/|))                                 (COPYFILES '(HELVETICA05* HELVETICA10* HELVETICA12* HELVETICA14*                                                     HELVETICA16* HELVETICA18*)                                        (CAR DISPLAYFONTDIRECTORIES)                                        '(=A]                       [EVAL (LS-LOAD? 'GRAPHER (IF (EQ MAKESYSNAME :LYRIC)                                                    THEN                                                    '|Lyric Library #3| ELSE '|Medley Library #5|]                       (|Lyric LOOPS System #1| (LOOPSDIRECTORY BLOCKLOOKUP.DFASL LOADLOOPS.DFASL                                                        LOOPS-FILEPKG.DFASL LOOPS-TTYEDIT.DFASL LOOPS                                                       LOOPSACCESS.DFASL LOOPSACTIVEVALUES.DFASL                                                        LOOPSBROWSE.DFASL LOOPSDATATYPES.DFASL                                                        LOOPSDEBUG.DFASL LOOPSEDIT.DFASL                                                        LOOPS-INSTALL.DFASL))                       (|Lyric LOOPS System #2| (LOOPSDIRECTORY LOOPSINSPECT.DFASL LOOPSKERNEL.DFASL                                                       LOOPSMETHODS.DFASL LOOPSPRINT.DFASL LOOPSSITE                                                       LOOPSSITE.DFASL LOOPSSPEEDUP.DFASL                                                        LOOPSSTRUC.DFASL LOOPSUID.DFASL                                                        LOOPSUSERINTERFACE.DFASL LOOPSUTILITY.DFASL                                                        LOOPSWINDOW.DFASL SEDIT-PATCH.DFASL                                                        INSPECT-PATCH.DFASL LOOPS-PATCH.DFASL                                                        MEDLEY-PATCH.DFASL))                       (|Lyric LOOPS Library| (LOOPSLIBRARYDIRECTORY GAUGEACTIVE.DFASL                                                      GAUGEALARMS.DFASL GAUGEALPHANUMERICS.DFASL                                                      GAUGEBARS.DFASL GAUGEBOUNDEDMIXIN.DFASL                                                      GAUGEDIALS.DFASL GAUGEDIGIMETER.DFASL                                                      GAUGEDIGISCALE.DFASL GAUGEINSTRUMENTS.DFASL                                                      GAUGELOADER.DFASL GAUGEMETERS.DFASL GAUGES.DFASL                                                     GAUGESCALES.DFASL GAUGESELFSCALEMIXIN.DFASL                                                      LOOPSMS.DFASL LOOPSVCOPY.DFASL MASTERSCOPE.DFASL                                                     MSANALYZE.DFASL MSPARSE.DFASL MSCOMMON.DFASL))                       (|Lyric LOOPS Users| (LOOPSUSERSDIRECTORY LOOPSBACKWARDS.DFASL                                                    LOOPSMIXIN.DFASL CONVERSION-AIDS.DFASL)                              (LOOPSUSERSRULESDIRECTORY LOOPSRULES-ROOT.DFASL LOOPSRULES.DFASL                                      LOOPSRULESBACKWARDS.DFASL LOOPSRULESC.DFASL LOOPSRULESD.DFASL                                      LOOPSRULESP.DFASL LOOPSRULESTTY.DFASL)))                 (MAIKO (EVAL (if (OR (NOT (BOUNDP 'DISPLAYFONTDIRECTORIES))                                      (NULL DISPLAYFONTDIRECTORIES))                                  then                                  (CL:BREAK "DISPLAYFONTDIRECTORIES is unset~%%Please (SETQ DISPLAYFONTDIRECTORIES '({your}<displayfont>directory>)) and type OK to continue"                                         )))                        (EVAL (while (NOT (for ff in '(5 10 12 14 16 18)                                               always                                               (FONTSAVAILABLE 'HELVETICA ff NIL NIL 'DISPLAY T)))                                     do                                     (CL:BREAK                        "Retrieve HELVETICA fonts to DISPLAYFONTDIRECTORIES~%%and type OK to continue"                                            )))                        (EVAL (FILESLOAD (SYSLOAD COMPILED)                                     GRAPHER]                (PROGN (CL:FORMAT T "~%%Building LOOPSSITE file...")                       (CNDIR LOOPSDIRECTORY)                       (LOAD 'LOOPSSITE 'PROP)                       (for d in '(LOOPSDIRECTORY LOOPSLIBRARYDIRECTORY LOOPSUSERSDIRECTORY                                          LOOPSUSERSRULESDIRECTORY)                            do                            (ADDTOFILE `[,d ',(EVAL d]                                   'INITVARS                                   'LOOPSSITE))                       (MAKEFILE 'LOOPSSITE 'NEW)                       (CL:COMPILE-FILE 'LOOPSSITE)                       (REMPROP 'LOOPSSITE 'FILEDATES)                       (CL:FORMAT T "done.~%%")                       (printout T "From now on, to load loops into a fresh sysout, you may either:"                              T "  do (LOAD 'LOOPS) for menu based loading" T "or" T                               "  do (FILESLOAD LOADLOOPS) and call (LOADLOOPS)" T                               "Both files are in:" T "  " LOOPSDIRECTORY T)))               ((("Loops" "Load Loops")                 (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY)                        LOADLOOPS)                 (LOADLOOPS))                (("Loops Masterscope" "Load LOOPSMS and Masterscope extensions")                 (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)                        LOOPSMS))                (("Gauges" "Load Loops Active Gauges")                 (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)                        GAUGELOADER)                 (LOADGAUGES))                (("VirtualCopy" "Load Loops Virtual Copy system")                 (FILESLOAD (FROM VALUEOF LOOPSLIBRARYDIRECTORY)                        LOOPSVCOPY))                (("ConversionAids" "Load the Koto Loops to Lyric/Medley Loops converter")                 (FILESLOAD (FROM VALUEOF LOOPSUSERSDIRECTORY)                        CONVERSION-AIDS))                (("LoopsRules" "Load Loops Rules system")                 (FILESLOAD (FROM VALUEOF LOOPSUSERSRULESDIRECTORY)                        LOOPSRULES-ROOT])(DECLARE%: EVAL@LOADWHEN [NOT (MEMQ DFNFLG '(PROP ALLPROP] (FILESLOAD (NOERROR)       LOOPSSITE)(if (BOUNDP 'LOOPSDIRECTORY)    then (FILESLOAD (FROM VALUEOF LOOPSDIRECTORY)                    LOOPS-INSTALL)  else (FILESLOAD LOOPS-INSTALL))(LOAD-SYSTEM))(DECLARE%: DONTCOPY  (FILEMAP (NIL (14735 15255 (\LOOPSDIR 14745 . 15253)))))STOP