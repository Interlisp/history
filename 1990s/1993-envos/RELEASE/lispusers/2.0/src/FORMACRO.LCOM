(DEFINE-FILE-INFO PACKAGE "USER" READTABLE "XCL")
(IL:FILECREATED "25-Sep-91 14:17:44" ("compiled on " IL:|{PELE:MV:ENVOS}<LISPUSERS>MEDLEY>FORMACRO.;1|
) "27-Aug-91 19:40:51" IL:|bcompl'd| IL:|in| "Medley 28-Aug-91 ..." IL:|dated| "28-Aug-91 09:16:07")
(IL:FILECREATED "22-Sep-87 13:17:50" IL:{DSK}<XAVIER>FORMACRO.\;10 20832 IL:|changes| IL:|to:| (
IL:FUNCTIONS SDC-FOR XCL-USER::SELECTC ISOPRP FROMTOTEST) (IL:VARS IL:FORMACROCOMS) (IL:PROPS (AS 
FORWORD) (THEREIS FORWORD) (BY FORWORD) (FROM FORWORD) (IN FORWORD) (ON FORWORD) (TO FORWORD) (JOIN 
FORWORD)) IL:|previous| IL:|date:| "21-Sep-87 17:07:45" IL:{DSK}<XAVIER>FORMACRO.\;9)
(IL:PRETTYCOMPRINT IL:FORMACROCOMS)
(IL:RPAQQ IL:FORMACROCOMS ((IL:P (EXPORT (QUOTE FOR))) (IL:FUNCTIONS EVLIST FOR FROMTOTEST ISOPRP 
SDC-FOR XCL-USER::SELECTC TESTFOR) (IL:PROP FORWORD ALWAYS AS BIND BY COLLECT COUNT DO EACHTIME 
FINALLY FIRST FROM IN INSIDE JOIN LARGEST MAX MIN NEVER ON REPEATWHILE REPEATUNTIL SMALLEST SUM TO 
THEREIS UNION UNLESS UNTIL WHEN WHILE) (IL:PROP IL:MAKEFILE-ENVIRONMENT IL:FORMACRO) (IL:EDITHIST 
IL:FORMACRO)))
(EXPORT (QUOTE FOR))
(DEFUN EVLIST (L) (NREVERSE (MAPCAR (FUNCTION EVAL) L)))
(DEFMACRO FOR (&BODY X) (SDC-FOR X))
(DEFUN FROMTOTEST (IV FROM TO BY BYVAR TOVAR) (LET ((BYVAL (SYMBOL-VALUE BY))) (IF (CONSTANTP BYVAL) (
IF (AND (NUMBERP FROM) (NUMBERP TO) (< TO FROM) (= BYVAL 1)) (PROGN (IL:* IL:\; 
"BY was probably a default +1 so silently force to -1 before the incrementer gets expanded") (SET BY 
-1) (IL:BQUOTE (IF (< (IL:\\\, IV) (IL:\\\, TO)) (GO $$OUT)))) (IL:BQUOTE (IF ((IL:\\\, (IF (MINUSP 
BYVAL) (QUOTE <) (QUOTE >))) (IL:\\\, IV) (IL:\\\, (IF (CONSTANTP TO) TO TOVAR))) (GO $$OUT)))) (
IL:BQUOTE (IF (AND (IL:\\\, BYVAR) (OR (= 0 (IL:\\\, BYVAR)) (IF (MINUSP (IL:\\\, BYVAR)) (< (IL:\\\, 
IV) (IL:\\\, (IF (CONSTANTP TO) TO TOVAR))) (> (IL:\\\, IV) (IL:\\\, (IF (CONSTANTP TO) TO TOVAR))))))
 (GO $$OUT))))))
(DEFUN ISOPRP (X) (IF (SYMBOLP X) (GET (INTERN (STRING-UPCASE X) "USER") (QUOTE FORWORD))))
(DEFUN SDC-FOR (X) (DECLARE (SPECIAL X)) (PROG (VARLIST IV IV1 IOV INITS EACHS PRETESTS BODYS 
POSTTESTS UPDATES FINALS OP (INCCNT 0) $$INC0 $$INC1 $$INC2 $$INC3 $$INC4 $$INC5 $$INC6 $$INCVAR0 
$$INCVAR1 $$INCVAR2 $$INCVAR3 $$INCVAR4 $$INCVAR5 $$INCVAR6 $$INIT0 $$INIT1 $$INIT2 $$INIT3 $$INIT4 
$$INIT5 $$INIT6 $$END0 $$END1 $$END2 $$END3 $$END4 $$END5 $$END6) (DECLARE (SPECIAL VARLIST IV IV1 IOV
 INITS EACHS PRETESTS BODYS POSTTESTS UPDATES FINALS INCCNT $$INC0 $$INC1 $$INC2 $$INC3 $$INC4 $$INC5 
$$INC6 $$INCVAR0 $$INCVAR1 $$INCVAR2 $$INCVAR3 $$INCVAR4 $$INCVAR5 $$INCVAR6 $$INIT0 $$INIT1 $$INIT2 
$$INIT3 $$INIT4 $$INIT5 $$INIT6 $$END0 $$END1 $$END2 $$END3 $$END4 $$END5 $$END6)) (PUSH (QUOTE $$VAL)
 VARLIST) (COND ((CONSP (CAR X)) (COND ((CONSP (CAAR X)) (IL:* IL:\; 
"(FOR ((VAR \"...\") \"...\") \"...\")") (SETQ IOV (SETQ IV1 (SETQ IV (CAAAR X))))) (T (IL:* IL:\; 
"(FOR (VAR \"...\") \"...\")") (SETQ IV1 (SETQ IV (CAAR X))))) (SETQ VARLIST (NCONC (REVERSE (CAR X)) 
VARLIST)) (SETQ X (CDR X))) ((AND (SYMBOLP (CAR X)) (NOT (ISOPRP (CAR X)))) (IL:* IL:\; 
"(FOR VAR \"...\")") (SETQ IOV (SETQ IV1 (SETQ IV (CAR X)))) (PUSH (LIST (CAR X) 1) VARLIST) (SETQ X (
CDR X))) (T (IL:* IL:\; "E.G. (FOR DO \"...\")") (SETQ IOV (SETQ IV1 (SETQ IV (QUOTE $$ITER)))) (PUSH 
(QUOTE ($$ITER 1)) VARLIST))) TOP (IF (NULL X) (RETURN (IL:BQUOTE (PROG (IL:\\\, (NREVERSE VARLIST)) (
IL:\\\,@ (EVLIST INITS)) $$LP (IL:\\\,@ (EVLIST EACHS)) (IL:\\\,@ (EVLIST PRETESTS)) (IL:\\\,@ (EVLIST
 BODYS)) $$ITERATE (IL:\\\,@ (EVLIST POSTTESTS)) (IL:\\\,@ (EVLIST UPDATES)) (GO $$LP) $$OUT (IL:\\\,@
 (EVLIST FINALS)) (RETURN $$VAL))))) (COND ((SETQ OP (ISOPRP (CAR X))) (EVAL OP) (COND ((AND (CDDR X) 
(NOT (ISOPRP (CADDR X))) (NOT (EQL (QUOTE DO) (INTERN (STRING-UPCASE (CAR X)) "USER")))) (PRINT (LIST 
"Warning, no implicit PROGN in Unisys FOR macro:" X) T))) (SETQ X (CDDR X))) (T (PUSH (LIST (QUOTE 
QUOTE) (CAR X)) BODYS) (SETQ X (CDR X)))) (GO TOP)))
(DEFMACRO XCL-USER::SELECTC (XCL-USER::SELECTOR &REST XCL-USER::CASES) (IL:BQUOTE (CASE (IL:\\\, 
XCL-USER::SELECTOR) (IL:\\\,@ (FOR CASE XCL-USER::ON XCL-USER::CASES XCL-USER::WHILE (CDR CASE) 
XCL:COLLECT (CONS (EVAL (CAAR CASE)) (CDAR CASE)))) (OTHERWISE (IL:\\\, (CAR (LAST XCL-USER::CASES))))
)))
(DEFMACRO TESTFOR (L . BODY) (PROG (X) (SETQ X (SDC-FOR (CONS L BODY))) (TERPRI) (WRITE X :PRETTY T) (
TERPRI) (RETURN X)))
(IL:PUTPROPS ALWAYS FORWORD (PROGN (PUSH (QUOTE (QUOTE (SETQ $$VAL T))) INITS) (PUSH (LIST (QUOTE 
QUOTE) (IL:BQUOTE (COND ((NULL (IL:\\\, (CADR X))) (SETQ $$VAL NIL) (GO $$OUT))))) BODYS)))
(IL:PUTPROPS AS FORWORD (PROGN (INCF INCCNT) (SETQ IOV (SETQ IV (CADR X))) (OR IV1 (SETQ IV1 IV)) (
PUSH (LIST IV 1) VARLIST)))
(IL:PUTPROPS BIND FORWORD (IF (CONSP (CADR X)) (SETQ VARLIST (APPEND (REVERSE (CADR X)) VARLIST)) (
PUSH (CADR X) VARLIST)))
(IL:PUTPROPS BY FORWORD (LET ((INCAMT (INTERN (CONCATENATE (QUOTE STRING) "$$INC" (PRINC-TO-STRING 
INCCNT)) "USER"))) (COND ((NUMBERP (CADR X)) (SET INCAMT (CADR X))) (T (SET INCAMT (SUBST IOV IV (CADR
 X))) (LET ((BYVAR (GENSYM))) (PUSH BYVAR VARLIST) (SET (INTERN (CONCATENATE (QUOTE STRING) "$$INCVAR"
 (PRINC-TO-STRING INCCNT)) "USER") BYVAR))))))
(IL:PUTPROPS COLLECT FORWORD (PROGN (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (SETQ $$VAL (CONS (IL:\\\, (
CADR X)) $$VAL)))) BODYS) (PUSH (QUOTE (QUOTE (SETQ $$VAL (NREVERSE $$VAL)))) FINALS)))
(IL:PUTPROPS COUNT FORWORD (PROGN (PUSH (QUOTE (QUOTE (SETQ $$VAL 0))) INITS) (PUSH (LIST (QUOTE QUOTE
) (IL:BQUOTE (IF (IL:\\\, (CADR X)) (SETQ $$VAL (1+ $$VAL))))) BODYS)))
(IL:PUTPROPS DO FORWORD (IF (NULL (ISOPRP (CADR X))) (PUSH (LIST (QUOTE QUOTE) (CADR X)) BODYS) (SETQ 
X (CONS (QUOTE X) X))))
(IL:PUTPROPS EACHTIME FORWORD (PUSH (LIST (QUOTE QUOTE) (CADR X)) EACHS))
(IL:PUTPROPS FINALLY FORWORD (PUSH (LIST (QUOTE QUOTE) (CADR X)) FINALS))
(IL:PUTPROPS FIRST FORWORD (PUSH (LIST (QUOTE QUOTE) (CADR X)) INITS))
(IL:PUTPROPS FROM FORWORD (LET ((INCREM (INTERN (CONCATENATE (QUOTE STRING) "$$INC" (PRINC-TO-STRING 
INCCNT)) "USER"))) (IF (EQL IV (CADR (CADAR INITS))) (RPLACA (CDDR (CADAR INITS)) (CADR X)) (PUSH (
IL:BQUOTE (QUOTE (SETQ (IL:\\\, IV) (IL:\\\, (CADR X))))) INITS)) (SET (INTERN (CONCATENATE (QUOTE 
STRING) "$$INIT" (PRINC-TO-STRING INCCNT)) "USER") (CADR X)) (OR (SYMBOL-VALUE INCREM) (SET INCREM 1))
 (OR (EQL IV (CADR (CADDAR UPDATES))) (PUSH (IL:BQUOTE (LIST (QUOTE INCF) (QUOTE (IL:\\\, IV)) (IF (
CONSTANTP (IL:\\\, INCREM)) (IL:\\\, INCREM) (LIST (QUOTE SETQ) (IL:\\\, (INTERN (CONCATENATE (QUOTE 
STRING) "$$INCVAR" (PRINC-TO-STRING INCCNT)) "USER")) (IL:\\\, INCREM))))) UPDATES))))
(IL:PUTPROPS IN FORWORD (PROG (INCEXPR) (SETQ IOV (GENSYM)) (SETQ INCEXPR (INTERN (CONCATENATE (QUOTE 
STRING) "$$INC" (PRINC-TO-STRING INCCNT)) "USER")) (SET INCEXPR (LIST (QUOTE CDR) IOV)) (PUSH (LIST 
IOV (CADR X)) VARLIST) (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NOT (IL:\\\, IOV)) (GO $$OUT) (SETQ (
IL:\\\, IV) (CAR (IL:\\\, IOV)))))) EACHS) (PUSH (IL:BQUOTE (LIST (QUOTE SETQ) (IL:\\\, (LIST (QUOTE 
QUOTE) IOV)) (IL:\\\, INCEXPR))) UPDATES)))
(IL:PUTPROPS INSIDE FORWORD (PROGN (SETQ IOV (GENSYM)) (PUSH (LIST IOV (CADR X)) VARLIST) (PUSH (LIST 
(QUOTE QUOTE) (IL:BQUOTE (COND ((NULL (IL:\\\, IOV)) (GO $$OUT)) ((NOT (CONSP (IL:\\\, IOV))) (SETQ (
IL:\\\, IV) (IL:\\\, IOV)) (SETQ (IL:\\\, IOV) NIL)) (T (SETQ (IL:\\\, IV) (CAR (IL:\\\, IOV))) (SETQ 
(IL:\\\, IOV) (CDR (IL:\\\, IOV))))))) EACHS)))
(IL:PUTPROPS JOIN FORWORD (PROGN (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (SETQ $$VAL (NCONC (NREVERSE (
IL:\\\, (CADR X))) $$VAL)))) BODYS) (PUSH (QUOTE (QUOTE (SETQ $$VAL (NREVERSE $$VAL)))) FINALS)))
(IL:PUTPROPS LARGEST FORWORD (PROGN (PUSH (QUOTE $$EXTREME) VARLIST) (PUSH (LIST (QUOTE QUOTE) (
IL:BQUOTE (COND ((OR (NULL $$EXTREME) (> (IL:\\\, (CADR X)) $$EXTREME)) (SETQ $$EXTREME (IL:\\\, (CADR
 X))) (SETQ $$VAL (IL:\\\, IV)))))) BODYS)))
(IL:PUTPROPS MAX FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NULL $$VAL) (SETQ $$VAL (IL:\\\, (
CADR X))) (SETQ $$VAL (MAX $$VAL (IL:\\\, (CADR X))))))) BODYS))
(IL:PUTPROPS MIN FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NULL $$VAL) (SETQ $$VAL (IL:\\\, (
CADR X))) (SETQ $$VAL (MIN $$VAL (IL:\\\, (CADR X))))))) BODYS))
(IL:PUTPROPS NEVER FORWORD (PROGN (PUSH (QUOTE (QUOTE (SETQ $$VAL T))) INITS) (PUSH (LIST (QUOTE QUOTE
) (IL:BQUOTE (COND ((IL:\\\, (CADR X)) (SETQ $$VAL NIL) (GO $$OUT))))) BODYS)))
(IL:PUTPROPS ON FORWORD (PROG (INCEXPR) (SETQ INCEXPR (INTERN (CONCATENATE (QUOTE STRING) "$$INC" (
PRINC-TO-STRING (INCF INCCNT))) "USER")) (SET INCEXPR (LIST (QUOTE CDR) IOV)) (COND ((EQL IV (CAAR 
VARLIST)) (RPLACA (CDAR VARLIST) (CADR X))) (T (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (SETQ (IL:\\\, IV)
 (IL:\\\, (CADR X))))) INITS))) (PUSH (IL:BQUOTE (LIST (QUOTE SETQ) (IL:\\\, (LIST (QUOTE QUOTE) IV)) 
(IL:\\\, INCEXPR))) UPDATES) (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NOT (IL:\\\, IV)) (GO $$OUT))))
 PRETESTS)))
(IL:PUTPROPS REPEATWHILE FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NOT (IL:\\\, (CADR X))) (GO
 $$OUT)))) POSTTESTS))
(IL:PUTPROPS REPEATUNTIL FORWORD (IF (NUMBERP (CADR X)) (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (> (
IL:\\\, IV) (IL:\\\, (CADR X))) (GO $$OUT)))) POSTTESTS) (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (
IL:\\\, (CADR X)) (GO $$OUT)))) POSTTESTS)))
(IL:PUTPROPS SMALLEST FORWORD (PROGN (PUSH (QUOTE $$EXTREME) VARLIST) (PUSH (LIST (QUOTE QUOTE) (
IL:BQUOTE (COND ((OR (NULL $$EXTREME) (< (IL:\\\, (CADR X)) $$EXTREME)) (SETQ $$EXTREME (IL:\\\, (CADR
 X))) (SETQ $$VAL (IL:\\\, IV)))))) BODYS)))
(IL:PUTPROPS SUM FORWORD (PROGN (PUSH (QUOTE (QUOTE (SETQ $$VAL 0))) INITS) (PUSH (LIST (QUOTE QUOTE) 
(IL:BQUOTE (SETQ $$VAL (+ (IL:\\\, (CADR X)) $$VAL)))) BODYS)))
(IL:PUTPROPS TO FORWORD (LET (LIMIT (INITAMT (INTERN (CONCATENATE (QUOTE STRING) "$$INIT" (
PRINC-TO-STRING INCCNT)) "USER")) (INCREM (INTERN (CONCATENATE (QUOTE STRING) "$$INC" (PRINC-TO-STRING
 INCCNT)) "USER")) (BYVAR (INTERN (CONCATENATE (QUOTE STRING) "$$INCVAR" (PRINC-TO-STRING INCCNT)) 
"USER")) (END (INTERN (CONCATENATE (QUOTE STRING) "$$END" (PRINC-TO-STRING INCCNT)) "USER"))) (OR (EQL
 IV (CADR (CADAR INITS))) (PUSH (IL:BQUOTE (QUOTE (SETQ (IL:\\\, IV) 1))) INITS)) (OR (SYMBOL-VALUE 
INCREM) (SET INCREM 1)) (OR (CONSTANTP (CADR X)) (PUSH (LIST (SETQ LIMIT (GENSYM)) (CADR X)) VARLIST))
 (OR (SYMBOL-VALUE INITAMT) (SET INITAMT 1)) (OR (EQL IV (CADR (CADDAR UPDATES))) (PUSH (IL:BQUOTE (
LIST (QUOTE INCF) (QUOTE (IL:\\\, IV)) (IF (CONSTANTP (IL:\\\, INCREM)) (IL:\\\, INCREM) (LIST (QUOTE 
SETQ) (IL:\\\, BYVAR) (IL:\\\, INCREM))))) UPDATES)) (SET END (CADR X)) (PUSH (LIST (QUOTE FROMTOTEST)
 (IL:BQUOTE (QUOTE (IL:\\\, IV))) INITAMT END (IL:BQUOTE (QUOTE (IL:\\\, INCREM))) BYVAR (IL:BQUOTE (
QUOTE (IL:\\\, LIMIT)))) PRETESTS)))
(IL:PUTPROPS THEREIS FORWORD (PROGN (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (COND ((IL:\\\, (CADR X)) (
SETQ $$VAL (OR (IL:\\\, IV1) T)) (GO $$OUT))))) BODYS)))
(IL:PUTPROPS UNION FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (SETQ $$VAL (UNION (IL:\\\, (CADR X)) 
$$VAL)))) BODYS))
(IL:PUTPROPS UNLESS FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (IL:\\\, (CADR X)) (GO $$ITERATE)
))) PRETESTS))
(IL:PUTPROPS UNTIL FORWORD (IF (NUMBERP (CADR X)) (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (> (IL:\\\,
 IV) (IL:\\\, (CADR X))) (GO $$OUT)))) PRETESTS) (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (IL:\\\, (
CADR X)) (GO $$OUT)))) PRETESTS)))
(IL:PUTPROPS WHEN FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NOT (IL:\\\, (CADR X))) (GO 
$$ITERATE)))) PRETESTS))
(IL:PUTPROPS WHILE FORWORD (PUSH (LIST (QUOTE QUOTE) (IL:BQUOTE (IF (NOT (IL:\\\, (CADR X))) (GO $$OUT
)))) PRETESTS))
(IL:PUTPROPS IL:FORMACRO IL:MAKEFILE-ENVIRONMENT (:PACKAGE "USER" :READTABLE "XCL"))
(IL:PUTPROPS IL:FORMACRO IL:COPYRIGHT ("System Development Corp." 1987))
NIL
