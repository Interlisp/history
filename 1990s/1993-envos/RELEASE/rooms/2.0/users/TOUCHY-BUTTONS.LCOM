(DEFINE-FILE-INFO PACKAGE "ROOMS" READTABLE "XCL")
(IL:FILECREATED "16-Aug-91 13:29:49" ("compiled on " 
IL:|{DSK}<python>RELEASE>rooms>2.0>users-src>TOUCHY-BUTTONS.;1|) "21-Jul-91 18:05:47" IL:|bcompl'd| 
IL:|in| "Lispcore 22-Jul-91 ..." IL:|dated| "22-Jul-91 02:40:49")
(IL:FILECREATED "17-Aug-90 14:46:54" IL:|{DSK}<python>RELEASE>rooms>current>users-src>TOUCHY-BUTTONS.;3|
 7135 IL:|changes| IL:|to:| (IL:VARS IL:TOUCHY-BUTTONSCOMS) IL:|previous| IL:|date:| 
"27-Jul-90 06:17:33" IL:|{DSK}<python>RELEASE>rooms>current>users-src>TOUCHY-BUTTONS.;2|)
(IL:PRETTYCOMPRINT IL:TOUCHY-BUTTONSCOMS)
(IL:RPAQQ IL:TOUCHY-BUTTONSCOMS ((IL:* IL:|;;| 
"Includer buttons so you can have dynamic mixin rooms.  For example, you can have a \"Notecards-Mixin\" or \"Programming-Mixin\" Room and have buttons to include these in \"Pockets\"  then whenever you need these facilities you can mix them in."
) (IL:FUNCTIONS MAKE-INCLUDER INCLUDER-TEXT INCLUDER-ACTION) (IL:* IL:|;;| 
"Toggle buttons for switching between variable settings.  This should obviously be generalized to something that allows you to select or circulate through value settings."
) (IL:FUNCTIONS MAKE-TOGGLER MAKE-N-VALUER MAKE-EXSET-TOGGLER MAKE-RANGE-TOGGLER N-VALUER-ACTION 
N-VALUER-TEXT CHECK-EVAL) (IL:FUNCTIONS MAKE-SWITCH SWITCH-ACTION) (IL:* IL:|;;| "") (IL:* IL:|;;| 
"(MAKE-ONCE-ONLY (IL:PROMPTPRINT \"Hello, World\") \"Fire...\" \"Exhausted\")") (IL:FUNCTIONS 
MAKE-ONCE-ONLY ONCE-ONLY-ACTION ONCE-ONLY-TEXT) (IL:DECLARE\: IL:DONTCOPY (IL:PROPS (IL:TOUCHY-BUTTONS
 IL:MAKEFILE-ENVIRONMENT) (IL:TOUCHY-BUTTONS IL:FILETYPE)))))
(DEFUN MAKE-INCLUDER (ROOM-NAME) (MAKE-BUTTON-WINDOW (MAKE-BUTTON :TEXT-FORM (LIST (QUOTE 
INCLUDER-TEXT) ROOM-NAME) :ACTION (QUOTE INCLUDER-ACTION) :INCLUDER-ROOM-NAME ROOM-NAME)))
(DEFUN INCLUDER-TEXT (INCLUDER-ROOM-NAME) (LET ((INCLUSIONS (ROOM-INCLUSIONS *CURRENT-ROOM*))) (IF (
LISTP INCLUSIONS) (IF (MEMBER INCLUDER-ROOM-NAME INCLUSIONS :TEST (FUNCTION EQUAL)) (FORMAT NIL 
"Exclude ~A" INCLUDER-ROOM-NAME) (FORMAT NIL "Include ~A" INCLUDER-ROOM-NAME)) (FORMAT NIL 
"*-???-* ~A" INCLUDER-ROOM-NAME))))
(DEFUN INCLUDER-ACTION (DSP BUTTON) (LET* ((ROOM *CURRENT-ROOM*) (INCLUDER-ROOM-NAME (BUTTON-PROP 
BUTTON :INCLUDER-ROOM-NAME))) (UPDATE-PLACEMENTS) (IF (MEMBER INCLUDER-ROOM-NAME (ROOM-INCLUSIONS ROOM
) :TEST (FUNCTION EQUAL)) (SETF (ROOM-INCLUSIONS ROOM) (DELETE INCLUDER-ROOM-NAME (ROOM-INCLUSIONS 
ROOM) :TEST (FUNCTION EQUAL))) (PUSH INCLUDER-ROOM-NAME (ROOM-INCLUSIONS ROOM))) (ROOM-CHANGED ROOM 
:EDITED)))
(DEFUN MAKE-TOGGLER (VARIABLE-NAME &REST KEYS) (APPLY (FUNCTION MAKE-N-VALUER) VARIABLE-NAME (QUOTE (
NIL T)) KEYS))
(DEFUN MAKE-N-VALUER (VARIABLE-NAME N-VALUES &REST KEYS) (MAKE-BUTTON-WINDOW (APPLY (FUNCTION 
MAKE-BUTTON) :TEXT-FORM (IL:BQUOTE (N-VALUER-TEXT (QUOTE (IL:\\\, VARIABLE-NAME)))) :ACTION (QUOTE 
N-VALUER-ACTION) :VARIABLE-NAME VARIABLE-NAME :N-VALUES N-VALUES KEYS)))
(DEFUN MAKE-EXSET-TOGGLER (VARIABLE-NAME EXPLICIT-SET &REST KEYS) (APPLY (FUNCTION MAKE-N-VALUER) 
VARIABLE-NAME EXPLICIT-SET :HELP (FORMAT NIL "Set variable ~S" VARIABLE-NAME) KEYS))
(DEFUN MAKE-RANGE-TOGGLER (VARIABLE-NAME RANGE-START RANGE-END &REST KEYS) (APPLY (FUNCTION 
MAKE-N-VALUER) VARIABLE-NAME (DO ((I RANGE-START (1+ I)) (ACCUMULATOR NIL ACCUMULATOR)) ((> I 
RANGE-END) (NREVERSE ACCUMULATOR)) (PUSH I ACCUMULATOR)) :HELP (FORMAT NIL "Set variable ~S" 
VARIABLE-NAME) KEYS))
(DEFUN N-VALUER-ACTION (DSP BUTTON) (LET* ((N-VALUES (BUTTON-PROP BUTTON :N-VALUES)) (VARIABLE-NAME (
BUTTON-PROP BUTTON :VARIABLE-NAME))) (SETQ N-VALUES (REMOVE (CHECK-EVAL VARIABLE-NAME) N-VALUES)) (SET
 VARIABLE-NAME (IF (EQ (LENGTH N-VALUES) 1) (CAR N-VALUES) (IL:MENU (IL:CREATE IL:MENU IL:ITEMS IL:_ 
N-VALUES))))))
(DEFUN N-VALUER-TEXT (VARIABLE-NAME) (FORMAT NIL "~A is ~a" VARIABLE-NAME (CHECK-EVAL VARIABLE-NAME)))
(DEFUN CHECK-EVAL (VARIABLE-NAME) (IF (BOUNDP VARIABLE-NAME) (EVAL VARIABLE-NAME) "Unbound"))
(DEFUN MAKE-SWITCH (DECISION-FN SET-FN TEXT-FORM &REST KEYS) (MAKE-BUTTON-WINDOW (APPLY (FUNCTION 
MAKE-BUTTON) :TEXT-FORM TEXT-FORM :ACTION (QUOTE SWITCH-ACTION) :DECISION-FN DECISION-FN :SET-FN 
SET-FN KEYS)))
(DEFUN SWITCH-ACTION (DSP BUTTON) (LET* ((VALUE (FUNCALL (BUTTON-PROP BUTTON :DECISION-FN) BUTTON))) (
FUNCALL (BUTTON-PROP BUTTON :SET-FN) BUTTON VALUE)))
(DEFUN MAKE-ONCE-ONLY (FORM INITIAL-TEXT FINAL-TEXT) (MAKE-BUTTON-WINDOW (MAKE-BUTTON :TEXT 
INITIAL-TEXT :TEXT-FORM (QUOTE ONCE-ONLY-TEXT) :ACTION (QUOTE ONCE-ONLY-ACTION) :ONCE-ONLY-FORM FORM 
:INITIAL-TEXT INITIAL-TEXT :FINAL-TEXT FINAL-TEXT)))
(DEFUN ONCE-ONLY-ACTION (STREAM BUTTON) (UNLESS (IL:STREAMPROP (IL:GETSTREAM STREAM) BUTTON) (IL:* 
IL:|;;| 
"store the state of the button on its host, so that the state is reset each time the button is reconstituted."
) (EVAL (BUTTON-PROP BUTTON :ONCE-ONLY-FORM)) (IL:STREAMPROP (IL:GETSTREAM STREAM) BUTTON T)))
(DEFUN ONCE-ONLY-TEXT (STREAM BUTTON) (WHEN STREAM (IF (IL:STREAMPROP (IL:GETSTREAM STREAM) BUTTON) (
BUTTON-PROP BUTTON :FINAL-TEXT) (BUTTON-PROP BUTTON :INITIAL-TEXT))))
(IL:PUTPROPS IL:TOUCHY-BUTTONS IL:COPYRIGHT ("Venue & Xerox Corporation" 1987 1988 1990))
NIL
