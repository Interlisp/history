(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "ROOMS")(IL:FILECREATED "27-Jul-90 05:22:58" IL:|{DSK}<usr>local>lde>rooms>sources>ROOMS-BACKGROUNDS.;2| 13121        IL:|changes| IL:|to:|  (IL:VARS IL:ROOMS-BACKGROUNDSCOMS)      IL:|previous| IL:|date:| " 1-Nov-88 12:03:39" IL:|{DSK}<usr>local>lde>rooms>sources>ROOMS-BACKGROUNDS.;1|); Copyright (c) 1987, 1988, 1990 by Venue & Xerox Corporation.  All rights reserved.(IL:PRETTYCOMPRINT IL:ROOMS-BACKGROUNDSCOMS)(IL:RPAQQ IL:ROOMS-BACKGROUNDSCOMS ((IL:* IL:|;;| "code for painting background") (FILE-ENVIRONMENTS IL:ROOMS-BACKGROUNDS) (IL:P (EXPORT (QUOTE (MAKE-BACKGROUND BACKGROUND-INTERNAL-FORM *DEFAULT-BACKGROUND-TEXT-FONT* RENAISSANCE-BITMAP SQUARES-BITMAP TILE-BITMAP INTERNALIZE-ALL-BACKGROUNDS))) (REQUIRE "ROOMS")) (IL:STRUCTURES BACKGROUND) (IL:FUNCTIONS MAKE-BACKGROUND INTERNALIZE-BACKGROUND INTERNALIZE-BACKGROUND-TEXT INTERNALIZE-ALL-BACKGROUNDS) (EVAL-WHEN (LOAD) (IL:P (PUSHNEW (QUOTE INTERNALIZE-ALL-BACKGROUNDS) *SCREEN-CHANGED-FUNCTIONS*))) (IL:VARIABLES *DEFAULT-BACKGROUND* *DEFAULT-BACKGROUND-TEXT-FONT*) (IL:FUNCTIONS PAINT-BACKGROUND FIND-BACKGROUNDS DRAW&FILL-BOX-WITHIN) (IL:VARIABLES *SCREEN-BITMAP*) (IL:VARIABLES RENAISSANCE-BITMAP SQUARES-BITMAP TILE-BITMAP) (IL:GLOBALVARS IL:WINDOWBACKGROUNDSHADE IL:WHOLESCREEN)))(IL:* IL:|;;| "code for painting background")(DEFINE-FILE-ENVIRONMENT IL:ROOMS-BACKGROUNDS :COMPILER :COMPILE-FILE :PACKAGE "ROOMS" :READTABLE "XCL")(EXPORT (QUOTE (MAKE-BACKGROUND BACKGROUND-INTERNAL-FORM *DEFAULT-BACKGROUND-TEXT-FONT* RENAISSANCE-BITMAP SQUARES-BITMAP TILE-BITMAP INTERNALIZE-ALL-BACKGROUNDS)))(REQUIRE "ROOMS")(DEFSTRUCT (BACKGROUND (:CONSTRUCTOR MAKE-BACKGROUND-INTERNAL)) (EXTERNAL-FORM NIL :TYPE LIST :READ-ONLY T) (IL:* IL:|;;| "what the user sees") (INTERNAL-FORM NIL :TYPE LIST) (IL:* IL:|;;| "what PAINT-BACKGROUND operates on"))(DEFUN MAKE-BACKGROUND (EXTERNAL-FORM) (MAKE-BACKGROUND-INTERNAL :EXTERNAL-FORM EXTERNAL-FORM :INTERNAL-FORM (INTERNALIZE-BACKGROUND EXTERNAL-FORM)))(DEFUN INTERNALIZE-BACKGROUND (BACKGROUND) (IL:* IL:|;;| "internalize BACKGROUND") (MAPCAR (FUNCTION (LAMBDA (PROP-LIST) (CASE (CAR PROP-LIST) (:WHOLE-SCREEN (CHECK-TYPE (SECOND PROP-LIST) (OR BITMAP TEXTURE)) (CHECK-TYPE (GETF PROP-LIST :BORDER) (OR NULL INTEGER)) (CHECK-TYPE (GETF PROP-LIST :BORDER-SHADE) (OR NULL TEXTURE)) (IL:BQUOTE (:WHOLE-SCREEN (IL:\\\, (SECOND PROP-LIST)) (IL:\\\,@ (WHEN (GETF PROP-LIST :BORDER) (IL:BQUOTE (:BORDER (IL:\\\, (GETF PROP-LIST :BORDER)))))) (IL:\\\,@ (WHEN (GETF PROP-LIST :BORDER-SHADE) (IL:BQUOTE (:BORDER-SHADE (IL:\\\, (GETF PROP-LIST :BORDER-SHADE))))))))) (:REGION (CHECK-TYPE (GETF PROP-LIST :SHADE) (OR NULL BITMAP TEXTURE)) (CHECK-TYPE (GETF PROP-LIST :BORDER) (OR NULL INTEGER)) (CHECK-TYPE (GETF PROP-LIST :BORDER-SHADE) (OR NULL TEXTURE)) (IL:BQUOTE (:REGION (IL:\\\, (INTERNALIZE-REGION (SECOND PROP-LIST))) (IL:\\\,@ (WHEN (GETF PROP-LIST :SHADE) (IL:BQUOTE (:SHADE (IL:\\\, (GETF PROP-LIST :SHADE)))))) (IL:\\\,@ (WHEN (GETF PROP-LIST :BORDER) (IL:BQUOTE (:BORDER (IL:\\\, (GETF PROP-LIST :BORDER)))))) (IL:\\\,@ (WHEN (GETF PROP-LIST :BORDER-SHADE) (IL:BQUOTE (:BORDER-SHADE (IL:\\\, (GETF PROP-LIST :BORDER-SHADE))))))))) (:TEXT (LIST :TEXT (LET ((*DEFAULT-TEXT-FONT* *DEFAULT-BACKGROUND-TEXT-FONT*)) (INTERNALIZE-BACKGROUND-TEXT PROP-LIST))))))) (EVAL-WALK BACKGROUND)))(DEFUN INTERNALIZE-BACKGROUND-TEXT (PROP-LIST) (MAKE-TEXT :STRING (GETF PROP-LIST :TEXT) :POSITION (INTERNALIZE-POSITION (OR (GETF PROP-LIST :POSITION) (MAKE-POSITION 0 0))) :ALIGNMENT (OR (GETF PROP-LIST :ALIGNMENT) :LEFT-BOTTOM) :FONT (LET ((FONT (GETF PROP-LIST :FONT))) (IF FONT (IL:FONTCREATE FONT) *DEFAULT-TEXT-FONT*)) :SHADOWS (GETF PROP-LIST :SHADOWS T)))(DEFUN INTERNALIZE-ALL-BACKGROUNDS NIL (IL:* IL:|;;| "do all the named rooms") (DO-ROOMS (ROOM) (LET ((BACKGROUND (ROOM-BACKGROUND ROOM))) (SETF (BACKGROUND-INTERNAL-FORM BACKGROUND) (INTERNALIZE-BACKGROUND (BACKGROUND-EXTERNAL-FORM BACKGROUND))))) (IL:* IL:|;;| "do the Overview too (yes, this is ugly)") (LET ((BACKGROUND (ROOM-BACKGROUND *OVERVIEW-ROOM*))) (SETF (BACKGROUND-INTERNAL-FORM BACKGROUND) (INTERNALIZE-BACKGROUND (BACKGROUND-EXTERNAL-FORM BACKGROUND)))) NIL)(EVAL-WHEN (LOAD)(PUSHNEW (QUOTE INTERNALIZE-ALL-BACKGROUNDS) *SCREEN-CHANGED-FUNCTIONS*))(DEFGLOBALPARAMETER *DEFAULT-BACKGROUND* (MAKE-BACKGROUND (IL:BQUOTE ((:WHOLE-SCREEN (IL:\\\, IL:WINDOWBACKGROUNDSHADE))))))(DEFPARAMETER *DEFAULT-BACKGROUND-TEXT-FONT* (IL:FONTCREATE (QUOTE IL:TIMESROMAND) 36))(DEFUN PAINT-BACKGROUND (ROOM DSP &KEY (SCALE *ONE-TO-ONE*) NO-TEXT CLIPPING-REGION) (DOLIST (BACKGROUND (FIND-BACKGROUNDS ROOM)) (DOLIST (SPEC (BACKGROUND-INTERNAL-FORM BACKGROUND)) (CASE (FIRST SPEC) (:WHOLE-SCREEN (DRAW&FILL-BOX-WITHIN (SCALE-REGION IL:WHOLESCREEN SCALE) DSP :SHADE (SECOND SPEC) :BORDER-WIDTH (SCALE-WIDTH (GETF SPEC :BORDER 0) SCALE) :BORDER-SHADE (GETF SPEC :BORDER-SHADE IL:BLACKSHADE) :CLIPPING-REGION CLIPPING-REGION)) (:REGION (DRAW&FILL-BOX-WITHIN (SCALE-REGION (GETF SPEC :REGION) SCALE) DSP :SHADE (GETF SPEC :SHADE) :BORDER-WIDTH (SCALE-WIDTH (GETF SPEC :BORDER 0) SCALE) :BORDER-SHADE (GETF SPEC :BORDER-SHADE IL:BLACKSHADE) :CLIPPING-REGION CLIPPING-REGION)) (:TEXT (UNLESS NO-TEXT (DISPLAY-TEXT (SECOND SPEC) DSP :SCALE SCALE)))))))(DEFUN FIND-BACKGROUNDS (ROOM) (IL:* IL:|;;;| "returns the list of backgrounds which apply to ROOM") (LET (BACKGROUNDS FOUND-WHOLE-SCREEN?) (DO-INCLUSIONS (ROOM ROOM) (LET ((BACKGROUND (ROOM-BACKGROUND ROOM))) (PUSH BACKGROUND BACKGROUNDS) (IL:* IL:|;;| "stop when we see one which paints the whole background") (WHEN (ASSOC :WHOLE-SCREEN BACKGROUND :TEST (QUOTE EQ)) (SETQ FOUND-WHOLE-SCREEN? T) (RETURN-FROM DO-INCLUSIONS)))) (UNLESS FOUND-WHOLE-SCREEN? (PUSH *DEFAULT-BACKGROUND* BACKGROUNDS)) BACKGROUNDS))(DEFUN DRAW&FILL-BOX-WITHIN (REGION DSP &KEY (SHADE IL:WHITESHADE) (BORDER-WIDTH 0) CLIPPING-REGION (BORDER-SHADE IL:BLACKSHADE)) (LET ((LEFT (REGION-LEFT REGION)) (BOTTOM (REGION-BOTTOM REGION)) (WIDTH (REGION-WIDTH REGION)) (HEIGHT (REGION-HEIGHT REGION))) (IF (OR (NULL BORDER-WIDTH) (ZEROP BORDER-WIDTH)) (PAINT-REGION DSP REGION SHADE CLIPPING-REGION) (LET ((TOP (+ BOTTOM HEIGHT)) (RIGHT (+ LEFT WIDTH)) (INSIDE-LEFT (+ LEFT BORDER-WIDTH)) (INSIDE-WIDTH (- WIDTH BORDER-WIDTH))) (PAINT-REGION DSP (MAKE-REGION :LEFT INSIDE-LEFT :BOTTOM (+ BOTTOM BORDER-WIDTH) :WIDTH INSIDE-WIDTH :HEIGHT (- HEIGHT BORDER-WIDTH)) SHADE CLIPPING-REGION) (IL:* IL:|;;| "up left") (IL:BLTSHADE BORDER-SHADE DSP LEFT BOTTOM BORDER-WIDTH HEIGHT BORDER-WIDTH NIL CLIPPING-REGION) (IL:* IL:|;;| "across top") (IL:BLTSHADE BORDER-SHADE DSP INSIDE-LEFT (- TOP BORDER-WIDTH) INSIDE-WIDTH BORDER-WIDTH NIL CLIPPING-REGION) (IL:* IL:|;;| "up the right") (IL:BLTSHADE BORDER-SHADE DSP (- RIGHT BORDER-WIDTH) BOTTOM BORDER-WIDTH (- HEIGHT BORDER-WIDTH) NIL CLIPPING-REGION) (IL:* IL:|;;| "across the bottom") (IL:BLTSHADE BORDER-SHADE DSP INSIDE-LEFT BOTTOM INSIDE-WIDTH BORDER-WIDTH NIL CLIPPING-REGION)))))(DEFGLOBALVAR *SCREEN-BITMAP* (IL:SCREENBITMAP))(DEFGLOBALPARAMETER TILE-BITMAP (QUOTE #*(100 100)@@@@@@@@@@@@D@@@@@@@@@@@A@@@@@@@@@@@@@@@L@@@@@@@@@@@C@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@COOOOOOOOOOOLOOOOOOOOOOOO@@@GOOOOOOOOOOOMOOOOOOOOOOOO@@@@@@@@@@@@@@@D@@@@@@@@@@@A@@@@@@@@@@@@@@@D@@@@@@@@@@@A@@@@@@@@@@@@@@@L@@@@@@@@@@@C@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@BJJJJJJJJJJJLJJJJJJJJJJJK@@@AEEEEEEEEEEELEEEEEEEEEEEG@@@COOOOOOOOOOOLOOOOOOOOOOOO@@@GOOOOOOOOOOOMOOOOOOOOOOOO@@@@@@@@@@@@@@@D@@@@@@@@@@@A@@@))(IL:DECLARE\: IL:DOEVAL@COMPILE IL:DONTCOPY(IL:GLOBALVARS IL:WINDOWBACKGROUNDSHADE IL:WHOLESCREEN))(IL:PUTPROPS IL:ROOMS-BACKGROUNDS IL:COPYRIGHT ("Venue & Xerox Corporation" 1987 1988 1990))(IL:DECLARE\: IL:DONTCOPY  (IL:FILEMAP (NIL)))IL:STOP