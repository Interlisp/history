(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)(FILECREATED "19-Feb-92 13:23:08" |{DSK}<python>RELEASE>notecards>2.0>src>internal>RELEASETOOLS.;15| 27537        |changes| |to:|  (FNS MAKE-NOTECARDS-SYSOUT GET-DIRECTORY)      |previous| |date:| " 4-Sep-91 16:28:03" |{DSK}<python>RELEASE>notecards>2.0>src>internal>RELEASETOOLS.;14|); Copyright (c) 1989, 1990, 1991, 1992 by Envos Corporation.  All rights reserved.(PRETTYCOMPRINT RELEASETOOLSCOMS)(RPAQQ RELEASETOOLSCOMS (                             (* |;;| "Tools for making the Notecards run-time sysout, etc.")                             (FNS MAKE-NOTECARDS-SYSOUT LOADUP-SOURCES COMPILE-SOURCES GET-DIRECTORY                                  SETUP-NOTECARDS-DIRECTORIES FIND-UNSAVED-FNS MAKE-SYSOUT                                   GET-DEFAULT-DISPLAY-FONT GET-FONT-PROFILE SETUP-BACKGROUND-MENU)))(* |;;| "Tools for making the Notecards run-time sysout, etc.")(DEFINEQ(MAKE-NOTECARDS-SYSOUT  (LAMBDA NIL                                            (* \; "Edited  4-Sep-91 16:24 by jds")(* |;;;| "Setup the Card Types & Load ALL of the card types NOW")    (SETQ NOTECARDTYPES '(|Text| |FileBox| |Sketch| |Graph| |Browser| |Search| |Document| |LinkIndex|                                ))(* |;;;| "No Stub Cards")    (SETQ NOTECARDTYPESTUBS)(* |;;;| "Add any Extra Files Here")    (SETQ |*NC.LibraryFiles*| '(NCHACKS NEWSHADEITEM NCCOMPACT NCREPAIR NCMAPS))(* |;;;| "SYSLOAD the files")    (SETQ NC.LOADFLG 'SYSLOAD)(* |;;;| "Setup the directories")    (SETQ DISPLAYFONTDIRECTORIES (LIST "{Pallas:mv:envos}<Fonts>DISPLAY>JIS1>"                                        "{Pallas:mv:envos}<Fonts>DISPLAY>JIS2>"                                        "{Pallas:mv:envos}<Fonts>DISPLAY>CHINESE>"                                        "{Pallas:mv:envos}<Fonts>DISPLAY>Miscellaneous>"                                        "{Pallas:mv:envos}<Fonts>DISPLAY>Presentation>"                                        "{Pallas:mv:envos}<Fonts>DISPLAY>PrintWheel>"                                        "{Pallas:mv:envos}<Fonts>DISPLAY>Publishing>"))    (SETQ DIRECTORIES (LIST "{Pele:mv:envos}<LISPCORE>library>"                             "{Pele:mv:envos}<LISPCORE>Internal>Library>"                             "{Pele:mv:envos}<LispCore>Library>" "{Pele:mv:envos}<LispCore>SOURCES>"))    (SETQ LISPUSERSDIRECTORIES (LIST "{Pele:mv:envos}<LispUsers>Medley>"                                      "{Pele:mv:envos}<LispUsers>Medley>Postscript>"))    (* |;;| "Force the notecards sysout to dsk for the moment.  Used to be:")    (* |;;| "(CONCAT *NOTECARDSROOTDIRECTORY* \"sysouts>\" \"NoteCards.sysout\")")    (LET* ((*NOTECARDSROOTDIRECTORY* (GET-DIRECTORY "Select Root Directory For NoteCards"))           (*NOTECARDSDIRECTORIES* (SETUP-NOTECARDS-DIRECTORIES *NOTECARDSROOTDIRECTORY*))           (*NOTECARDS-SYSOUT-FILE-NAME* "{DSK}NoteCards.sysout")           (*NOTECARDS-SYSOUT-NAME* "Venue NoteCards 2.0 Runtime Release"))(* |;;;| "Load Some Libraries ")          (FILESLOAD (SYSLOAD)                 TEDIT FILEBROWSER HRULE GRAPHER SKETCH UNIXCOMM)          (FILESLOAD (SYSLOAD FROM VALUEOF LISPUSERSDIRECTORIES)                 DIGI-CLOCK CROCK NEATICONS PAGEHOLD)(* |;;;| " NoteCards has to updated to reflect the changes in POSTSCRIPT. Currently loading from Notecards Lispusers. POSTSCRIPT will load UNIXPRINT.  USED TO LOAD PS-PATCH, WHICH JDS REMOVED 2/19/92")          (FILESLOAD POSTSCRIPTSTREAM PS-SKETCH-PATCH)(* |;;;| " I am not sure why ???? I think it is due to NEATICONS")          (UNADVISE 'SHRINKW)(* |;;;| "Load NoteCards")          (FILESLOAD (SYSLOAD FROM VALUEOF *NOTECARDSDIRECTORIES*)                 NOTECARDS)(* |;;;| "Post NoteCards Files")          (FILESLOAD (SYSLOAD FROM VALUEOF *NOTECARDSDIRECTORIES*)                 NCPSMENU)(* |;;;| "Load Some Notecards Specifics ")          (FILESLOAD (SYSLOAD FROM VALUEOF *NOTECARDSDIRECTORIES*)                 DEFAULT-PRINTER CONN-DIR)(* |;;;| "NOTE: Need to include postscript fonts on tape.")(* |;;;| "Load the Fonts")          (FONTCREATE 'TIMESROMAN 12)          (FONTCREATE 'TIMESROMAN 12 'BOLD)          (FONTCREATE 'HELVETICA 36)          (FONTCREATE 'HELVETICA 14 'BOLD)          (FONTCREATE 'HELVETICA 36 'BOLD)(* |;;;| "Set the READTABLE to interlisp")          (SETQ *READTABLE* FILERDTBL)(* |;;;| "Clear out the directories")          (SETQ DIRECTORIES NIL)          (SETQ LISPUSERSDIRECTORIES NIL)          (SETQ DISPLAYFONTDIRECTORIES NIL)          (SETQ INTERPRESSFONTDIRECTORIES NIL)          (SETQ POSTSCRIPTFONTDIRECTORIES NIL)(* |;;;| "Setup the Background Menu")          (SETUP-BACKGROUND-MENU)(* |;;;| "Smash the compiler definitions")          (CL:WHEN (MENU (CREATE MENU                                TITLE _ "Do you wish to smash the compiler?"                                ITEMS _ '((YES T "Will smash the compiler definitions")                                          (NO NIL "Compiler definitions will remain unaltered"))                                CENTERFLG _ T))              (MOVD 'NULL 'COMPILE T)              (MOVD 'NULL 'TCOMPL T)              (MOVD 'NULL 'BCOMPL T)              (MOVD 'NULL 'CL:COMPILE-FILE T))(* |;;;| "Bring up NoteCards Icon")          (|NC.BringUpNoteCardsIcon|)          (SETQ |NC.ShowTEditProps| NIL)          (* |;;| "Make sure that LOGOW actually does not get replace by the default")          (SETQ AFTERMAKESYSFORMS (CONS '(LOGOW "NoteCards 2.0" NIL                                     "Venue  NoteCards  2.0   Copyright (c) 1992 All Rights Reserved "                                                )                                        (REMOVE (ASSOC 'LOGOW AFTERMAKESYSFORMS)                                               AFTERMAKESYSFORMS)))          (LOGOW "NoteCards 2.0" NIL                  "Venue  NoteCards  2.0   Copyright (c) 1992 All Rights Reserved ")          (SETQ LOGINHOST/DIR "{DSK}")(* |;;;| "Add a Make sysout menu ")(* |;;;| "The variable *NOTECARDS-MAKE-SYSOUT-MENU* will be made unbound by STARTUP-SYSOUT")          (SETQ *NOTECARDS-MAKE-SYSOUT-MENU* (ADDMENU (CREATE MENU                                                             TITLE _ "Press to Start the MAKESYS"                                                             ITEMS _                                                             `(("Make Sysout" (MAKE-SYSOUT                                                                                                                                                              ,                                                                         *NOTECARDS-SYSOUT-FILE-NAME*                                                                                                                                                              ,                                                                              *NOTECARDS-SYSOUT-NAME*                                                                               ))))))          (CNDIR))))(LOADUP-SOURCES  (LAMBDA NIL                                         (* \; "Edited 25-Jun-91 15:14 by gadener")(* |;;;| "Connect to the Right directory")    (LET*     ((SOURCE-DIR (GET-DIRECTORY "Load NoteCards Sources From")))     (FILESLOAD 'EXPORTS.ALL)     (SETQ |NC.InstallFlg| T)     (SETQ |NC.NoUpdateFlg| NIL)     (* |;;| "load notecards & postrelease patches")     (FILESLOAD (FROM SOURCE-DIR)            NOTECARDS)     (SETQ NC.FILES |NC.Files|)     (SETQ NC.CODE (LDIFFERENCE |NC.Files| '(NOTECARDS.HASH)))     (SETQ NC.LIBFILES '(NCMAPS NCHACKS NCFILECARD NCGESTURES NCTABLETOPCARD NEWSHADEITEM))     (SETQ NC.AUXFILES '(NOTECARDS.HASH))     (SETQ NC.COMP (|for| FILE |in| (LDIFFERENCE |NC.Files| '(POSTRELEASEPATCHES                                                                             HOTECARDS.HASH))                      |collect| (MKATOM (CONCAT FILE "." COMPILE.EXT))))     (|for| FILE |in| NC.COMP |do| (|NC.LoadFileFromDirectories| FILE))     (* |;;| "Load all of the sources")     (|for| FILE |in| NC.CODE |do| (LOAD? FILE 'PROP))     (* |;;| "Load the POSTRELEASE patches")     (|for| COMS |in| POSTRELEASEPATCHESCOMS        |do| (|if| (EQ 'FILES (CAR COMS))                     |then| (|for| PATCHFILE |in| (CDR COMS)                                   |do| (LOAD? PATCHFILE 'PROP))))     (LET      ((SEEN-FNS (LIST))       (SEEN-PAIRS (LIST))       (DUP-TRIPS (LIST)))      (|for| COMS |in| POSTRELEASEPATCHESCOMS         |do|         (|if| (EQ 'FILES (CAR COMS))             |then|             (|for| PATCHFILE |in| (CDR COMS)                |do|                (PRINTOUT T "Looking at " PATCHFILE T)                (|for| PATCHCOMS |in| (EVAL (PACK (LIST PATCHFILE 'COMS)))                   |do| (|if| (EQ 'FNS (CAR PATCHCOMS))                                |then| (|for| FN |in| (CDR PATCHCOMS)                                              |do| (|if| (FMEMB FN SEEN-FNS)                                                           |then| (SETQ DUP-TRIPS                                                                       (CONS (LIST FN                                                                                   (LISTGET                                                                                           SEEN-PAIRS                                                                                          FN)                                                                                   PATCHFILE)))                                                                 (PRINTOUT T FN " in " PATCHFILE                                                                         " Already Seen in "                                                                        (LISTGET SEEN-PAIRS FN)                                                                        T))                                                    (SETQ SEEN-PAIRS (CONS FN (CONS PATCHFILE                                                                                     SEEN-PAIRS))))                                      (SETQ SEEN-FNS (APPEND SEEN-FNS (CDR PATCHCOMS))))))))      SEEN-PAIRS DUP-TRIPS))))(COMPILE-SOURCES  (LAMBDA NIL                                         (* \; "Edited  5-Nov-90 15:28 by gadener")(* |;;;| "This must be compiled to run")    (IF (NOT (GETD 'CATL))        THEN (DEFINEQ (CATL (NLAMBDA ITEMS                                  (APPLY #'CL:CONCATENATE (CONS 'LIST                                                                (CL:MAPCAR                                                                 #'(LAMBDA (X)                                                                     (MKLIST (EVAL X)))                                                                 ITEMS))))))              (COMPILE 'CATL))(* |;;;| "Connect to the Right directory")    (LET* ((SOURCE-DIR (GET-DIRECTORY "Compile NoteCards to:"))           (LIBDIR (CONCAT SOURCE-DIR "NEW-NC>"))           (COMPILE-ALL (FMEMB (ASKUSER T 'N "Compile Everything (Don't use RC) ? "                                      '(Y N \y \n))                               '(Y \y)))           (CODE-FILES (LDIFFERENCE NC.CODE (CATL 'NCCONFIG 'POSTRELEASEPATCHES NC.AUXFILES                                                   NC.LIBFILES)))           (COMPILE-OPTIONS (|if| COMPILE-ALL                                |then| '(C ST)                              |else| '(RC ST)))           (LONG-WHEREIS (OR COMPILE-ALL (FMEMB (ASKUSER T 'N "Long where-is create ? "                                                       '(Y N \y \n))                                                '(Y \y))))           (DIRB-FILE (FMEMB (ASKUSER T 'N "Nake Dribble file {DSK}NoteCards.Drb ? "                                    '(Y N \y \n))                             '(Y \y))))          (|if| DIRB-FILE              |then| (DRIBBLE "{DSK}NoteCards.Drb"))          (|if| (NOT COMPILE-ALL)              |then| (SETQ RECOMPILEDEFAULT 'CHANGES)            |else| (SETQ RECOMPILEDEFAULT 'ALL))          (* |;;| "Make & Compile the Sources")          (MAKEFILES COMPILE-OPTIONS CODE-FILES)          (* |;;| "Make & Compile The libraries")          (CNDIR LIBDIR)          (MAKEFILES COMPILE-OPTIONS NC.LIBFILES)          (SETQ RECOMPILEDEFAULT 'CHANGES)          (* |;;| "re-connect back to base directory")          (CNDIR SOURCE-DIR)          (SETQ NCPATHS (|for| FILE |in| (LDIFFERENCE |NC.Files| '(NCCONFIG NOTECARDS.HASH                                                                                  POSTRELEASEPATCHES))                           |collect| (|NC.FindFile| FILE NIL NIL T)))          (|if| LONG-WHEREIS              |then| (XCL::WHERE-IS-NOTICE "NOTECARDS.HASH" :USE-FULLNAME T :FILES NCPATHS :NEW T                                :TEMP-FILE "{DSK}/tmp/TEMP.HASH")            |else| (COPYFILE "NOTECARDS.HASH" "NOTECARDS.HASH")                  (XCL::WHERE-IS-NOTICE "NOTECARDS.HASH" :USE-FULLNAME T :FILES NCPATHS))          (SETQ |NC.InstallFlg| T)          (SETQ |NC.NoUpdateFlg| NIL)          (MAKEFILE 'NCCONFIG COMPILE-OPTIONS)          (IF DIRB-FILE              THEN (DRIBBLE)))))(GET-DIRECTORY  (LAMBDA (MENU-TITLE)                                (* \; "Edited 25-Jun-91 14:50 by gadener")    (LET* ((MENU (|create| MENU                        ITEMS _ (LIST "{Pika:mv:envos}<notecards>" "{DSK}/usr/local/lde/notecards/"                                       "{DSK}/python/release/notecards/"                                       "{DSK}/python/release/notecards/current/src/"                                       "{DSK}/python/release/notecards/BETA/src/"                                      (CONCAT "{DSK}/users/" USERNAME "/medley/notecards/")                                      "*OTHER*")                        TITLE _ MENU-TITLE))           (RESULT (MENU MENU)))          (CL:DO ((RESULT (|if| (STRING-EQUAL RESULT "*OTHER*")                              |then| (PROMPTFORWORD "Directory:  ")                            |else| RESULT)                         (PROMPTFORWORD "Directory:  ")))                 ((AND RESULT (DIRECTORYNAMEP RESULT))                  RESULT)              (PRINTOUT T T "ERROR: Not a valid directory name. ")))))(SETUP-NOTECARDS-DIRECTORIES  (LAMBDA (|Directory|)                               (* \; "Edited  8-Nov-90 10:01 by gadener")    (COND       ((NOT (NULL |Directory|))))    (LET ((|NoteCardsBaseDirectory| (OR |Directory| (MENU (|create| MENU                                                                 ITEMS _ (LIST                                                                          "{Pika:mv:envos}<notecards>"                                                                                                                                                   "{DSK}/python/release/notecards/"                                                                                                                                       "{DSK}/python/release/notecards/current/src/"                                                                               (CONCAT "{DSK}/users/"                                                                                      USERNAME                                                                                  "/medley/notecards/"                                                                                      ))                                                                 TITLE _                                                             "Select Directory to load NoteCards from"                                                                 ))))          (|NoteCardsSubDirectories| '(|system| |library| |lispusers| |patches| |internal| |tools|))          |StrPtr|)         (* |;;| "Create the directory search list based on the NoteCardsBaseDirectory ")         (MAPCAR |NoteCardsSubDirectories| #'(LAMBDA (SUBDIR)                                               (PACKFILENAME.STRING 'HOST (FILENAMEFIELD                                                                              |NoteCardsBaseDirectory|                                                                                 'HOST)                                                      'DIRECTORY                                                      (CONCAT (FILENAMEFIELD |NoteCardsBaseDirectory|                                                                     'DIRECTORY)                                                             ">" SUBDIR)))))))(FIND-UNSAVED-FNS  (LAMBDA NIL                                            (* \; "Edited 13-Jan-89 13:00 by rtk")    (LET     ((UNKNOWN-PAIRS (LIST))      (CODE-FILES NC.CODE)      WHERE)     (|for| COMS |in| POSTRELEASEPATCHESCOMS        |do|        (|if| (EQ 'FILES (CAR COMS))            |then|            (|for| PATCHFILE |in| (CDR COMS)               |do|               (PRINTOUT T "Looking at " PATCHFILE T)               (|for| PATCHCOMS |in| (EVAL (PACK (LIST PATCHFILE 'COMS)))                  |do| (|if| (EQ 'FNS (CAR PATCHCOMS))                               |then| (|for| FN |in| (CDR PATCHCOMS)                                             |do| (|if| (AND (SETQ WHERE (WHEREIS FN))                                                                     (NOT (INTERSECTION WHERE                                                                                  CODE-FILES)))                                                          |then| (SETQ UNKNOWN-PAIRS                                                                      (CONS FN (CONS PATCHFILE                                                                                      UNKNOWN-PAIRS)))                                                             )))))))     UNKNOWN-PAIRS)))(MAKE-SYSOUT  (LAMBDA (SYSOUT-FILE-NAME SYSOUT-NAME)    (DECLARE (GLOBAL PROMPTWINDOW *NOTECARDS-MAKE-SYSOUT-MENU*))                                                          (* \; "Edited 14-Nov-90 13:21 by gadener")    (CLOSEW *NOTECARDS-MAKE-SYSOUT-MENU*)    (CL:MAKUNBOUND '*NOTECARDS-MAKE-SYSOUT-MENU*)    (SETTOPVAL 'LISPXHISTORY '(NIL 0 100 1000))    (* |;;| "This makes sure that this process does not own the TTYDISPLAYSTREAM and that the default mechanisms to create a TTY display stream are not invoked immediatelly after firing up the sysout")    (TTYDISPLAYSTREAM PROMPTWINDOW)    (MAKESYS SYSOUT-FILE-NAME SYSOUT-NAME)))(GET-DEFAULT-DISPLAY-FONT  (LAMBDA NIL                                       (* \; "Edited  6-Apr-89 16:09 by SYE.ENVOS")    (|if| (NOT (FASSOC 'PROMPT\ WINDOW FONTPROFILE))        |then| (SETQ FONTPROFILE (CONS (LIST 'PROMPT\ WINDOW                                                 (+ (CL:REDUCE 'IMAX (|for| ITEM |in|                                                                                           FONTPROFILE                                                                        |collect| (CADR ITEM)))                                                    1)                                                 (GET-FONT-PROFILE (DEFAULTFONT PROMPTWINDOW)))                                           FONTPROFILE)))    (|if| (NOT (FASSOC '|FILE BROWSER FONT| FONTPROFILE))        |then| (SETQ FONTPROFILE (CONS (LIST '|FILE BROWSER FONT|                                                 (+ (CL:REDUCE 'IMAX (|for| ITEM |in|                                                                                           FONTPROFILE                                                                        |collect| (CADR ITEM)))                                                    1)                                                 (GET-FONT-PROFILE FB.BROWSERFONT))                                           FONTPROFILE)))    (|if| (NOT (FASSOC '|FILE BROWSER PROMPT| FONTPROFILE))        |then| (SETQ FONTPROFILE (CONS (LIST '|FILE BROWSER PROMPT|                                                 (+ (CL:REDUCE 'IMAX (|for| ITEM |in|                                                                                           FONTPROFILE                                                                        |collect| (CADR ITEM)))                                                    1)                                                 (GET-FONT-PROFILE FB.PROMPTFONT))                                           FONTPROFILE)))    (* |;;| "Old version of menu.  Menu changed because most of the options in fontprofile are only for developers and most are undocumented and also appear to be unused. Keith Mountford.")    (* |;;| "(MENU (|create| MENU TITLE _ \"Choose Font Profile to Update\" MENUFONT _ '(HELVETICA 14 BOLD) ITEMS _ (|for| ITEM |in| FONTPROFILE |collect| (CAR ITEM))))")    (LET* ((FONT-TO-UPDATE (MENU (|create| MENU                                        TITLE _ "  Choose Font Profile to Update.   "                                        MENUFONT _ '(HELVETICA 14 BOLD)                                        ITEMS _ '(("FileBrowser Display Font" '|FILE BROWSER FONT|)                                                  ("FileBrowser Prompt Font" '|FILE BROWSER PROMPT|)                                                  ("Prompt Window Font" 'PROMPT\ WINDOW)                                                  ("Default Font" 'DEFAULTFONT)                                                  ("Menu Font" 'MENUFONT))                                        CENTERFLG _ T)))           (DEFAULT-PROFILE (FASSOC FONT-TO-UPDATE FONTPROFILE))           (NEW-DEFAULT (AND DEFAULT-PROFILE (|NC.GetFontFromUser| (CADDR DEFAULT-PROFILE)))))          (|if| NEW-DEFAULT              |then| (RPLACA (CDDR DEFAULT-PROFILE)                                (GET-FONT-PROFILE NEW-DEFAULT))                    (COND                       ((EQ 'PROMPT\ WINDOW FONT-TO-UPDATE)                        (DSPFONT NEW-DEFAULT PROMPTWINDOW))                       ((EQ '|FILE BROWSER FONT| FONT-TO-UPDATE)                        (SETQ FB.BROWSERFONT NEW-DEFAULT))                       ((EQ '|FILE BROWSER PROMPT| FONT-TO-UPDATE)                        (SETQ FB.PROMPTFONT NEW-DEFAULT))                       ((EQ 'MENUFONT FONT-TO-UPDATE)                        (SETQ |InspectBitmapMenu| NIL)                        (SETQ |SetPropertyMenu| NIL)                        (SETQ |BackgroundMenu| NIL)                        (SETQ |IconWindowMenu| NIL)                        (SETQ |InspectMenu| NIL)                        (SETQ |WindowMenu| NIL)))                    (FONTPROFILE FONTPROFILE)                    (POSTSCRIPT.INIT))          NEW-DEFAULT)))(GET-FONT-PROFILE  (LAMBDA (FONTSPEC)                                (* \; "Edited 31-Mar-89 13:54 by Mountford")    (|for| I |from| 0 |to| 2 |as| ITEM |in| (FONTPROP FONTSPEC 'DEVICESPEC)       |collect| ITEM)))(SETUP-BACKGROUND-MENU  (LAMBDA NIL                                         (* \; "Edited 13-Nov-90 09:22 by gadener")    (SETQ |BackgroundMenuCommands|     (LIST (SASSOC '|NoteCards| |BackgroundMenuCommands|)           (SASSOC '|TEdit| |BackgroundMenuCommands|)           (SASSOC '|Sketch| |BackgroundMenuCommands|)           '("--------------------" NIL)           (SASSOC "FileBrowser" |BackgroundMenuCommands|)           (SASSOC '|Hardcopy| |BackgroundMenuCommands|)           (SASSOC '|Snap| |BackgroundMenuCommands|)           (SASSOC '|Idle| |BackgroundMenuCommands|)           '("--------------------" NIL)           (LIST "Set Postscript Parameters" '(|NC.BuildPostscriptInspector|)                 "Opens Postscript Parameter Menu")           (LIST "Set Default Display Font" '(GET-DEFAULT-DISPLAY-FONT)                 "Set the Default Display Font")           (SASSOC "Set Default Printer" |BackgroundMenuCommands|)           '("--------------------" NIL)           (LIST "Low Level Tools"                 (LIST 'AND '(MOUSECONFIRM "Warning these are DANGEROUS tools.")                       `(MENU ,(|create| MENU                                      TITLE _ "Select the desired tool"                                      ITEMS _ (LIST (SASSOC 'EXEC |BackgroundMenuCommands|)                                                    (SASSOC "PSW" |BackgroundMenuCommands|)                                                    '("Show TEdit Props" '(|NC.ToggleShowTEditProps|)                                                                                                    "Toggle Showing of TEdit Props in Notecards Parameters Menu."                                                            )))))                 "Dangerous Low Level Debugging Tools")           (LIST "Logout" '(LOGOUT)                 "Save VM & Exit to Unix."                 '(SUBITEMS ("Save image & Exit" '(LOGOUT)                                   "Save VM image & Exit to Unix.")                         ("Flush image & Exit" '(AND (MOUSECONFIRM "Confirm Exit wihout Saving?")                                                     (LOGOUT T))                                "Suspend to Unix (VM image NOT saved).")                         ("Save VM" '(SAVEVM)                                "Save the VM image.")                         ("Suspend & Exit" '(SUSPEND-LISP)                                               "Suspend NoteCards & Exit to Unix (image NOT saved, but you can return to NoteCards)."                                )))           (SASSOC "Directory Connector" |BackgroundMenuCommands|)           (LIST "Clocks" '(CROCK)                 "Analog Clock."                 '(SUBITEMS ("Analog Clock" '(CROCK)                                   "Analog Clock.")                         ("Digital Clock" '(DIGI-CLOCK T)                                "Digital Clock.")))           (LIST "Neat Icons" '(PROGN (READVISE 'SHRINKW)                                      (SETQ |BackgroundMenuCommands|                                       (|for| ITEM |in| |BackgroundMenuCommands|                                          |when| (OR (NOT (LISTP ITEM))                                                         (NOT (STRING-EQUAL (CAR ITEM)                                                                     "Neat Icons"))) |collect|                                                                                     ITEM))                                      (SETQ |BackgroundMenu| NIL)))))    (SETQ |BackgroundMenu| NIL))))(PUTPROPS RELEASETOOLS COPYRIGHT ("Envos Corporation" 1989 1990 1991 1992))(DECLARE\: DONTCOPY  (FILEMAP (NIL (979 27438 (MAKE-NOTECARDS-SYSOUT 989 . 7301) (LOADUP-SOURCES 7303 . 10664) (COMPILE-SOURCES 10666 . 13805) (GET-DIRECTORY 13807 . 14922) (SETUP-NOTECARDS-DIRECTORIES 14924 . 17250) (FIND-UNSAVED-FNS 17252 . 18609) (MAKE-SYSOUT 18611 . 19275) (GET-DEFAULT-DISPLAY-FONT 19277 . 23576) (GET-FONT-PROFILE 23578 . 23829) (SETUP-BACKGROUND-MENU 23831 . 27436)))))STOP