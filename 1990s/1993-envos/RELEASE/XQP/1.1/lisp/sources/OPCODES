(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "INTERLISP")(FILECREATED "18-Aug-87 18:12:56" {DSK}<LISPFILES>DCOMS>OPCODES.\;5 19604        |changes| |to:|  (OPTIMIZERS XQP::|WritePrologPtrAnd0Tag| XQP::|WritePrologTagAndPtr|)      |previous| |date:| "12-Aug-87 18:55:04" {DSK}<LISPFILES>DCOMS>OPCODES.\;4); Copyright (c) 1985, 1986, 1987 by Xerox Corporation.  All rights reserved.(PRETTYCOMPRINT OPCODESCOMS)(RPAQQ OPCODESCOMS ((FNS XQP::PROLOG.GEN.OP# XQP::PROLOG.INCR.P XQP::|ReadPrologPtr|                          XQP::|ReadPrologTag| XQP::|WritePrologPtrAnd0Tag|                          XQP::|WritePrologTagAndPtr|)                                        (* |;;| "these are handled with optimizers now, rather than macros, since that is the new preferred way of doing things, and using macros didn't work properly in Lyric.")                    (OPTIMIZERS XQP::|ReadPrologPtr| XQP::|ReadPrologTag|                            XQP::|WritePrologPtrAnd0Tag| XQP::|WritePrologTagAndPtr|)                    (FNS XQP::\\WRITE-TOP-HALF XQP::\\READ-TOP-HALF XQP::\\WRITE-BOTTOM-HALF                          XQP::\\READ-BOTTOM-HALF XQP::PROLOG.SAVE.REGISTERS                          XQP::PROLOG.RESTORE.REGISTERS)                    (VARS XQP::REGISTER.ASSIGNMENTS)                    (RECORDS XQP::REGISTERDEF)                    (FNS XQP::|PrologNameToURegs| XQP::|PrologNameToHiUReg| XQP::|PrologNameToLoUReg|                         )                    (MACROS XQP::PROLOG.INCR.P XQP::|WriteProlog16| XQP::|ReadProlog16|)                    (MACROS XQP::|PrologOpcode|)                    (FNS XQP::MAKEOP)                    (FNS XQP::\\RDPROLOGPTR.UFN \\POPDISP.UFN XQP::\\RDPROLOGTAG.UFN                          XQP::\\WRTPTR&TAG.UFN XQP::\\WRTPTR&0TAG.UFN)                    (PROP DOPVAL POPDISP)                    (FNS XQP::\\MAKE-REGISTER-FILE)                    (DECLARE\: DONTEVAL@LOAD DOCOPY (*)                           (VARS (XQP::\\REGISTER-FILE (XQP::\\MAKE-REGISTER-FILE))))                    (FNS XQP::PROLOG.AROUNDEXITFN)                    (DECLARE\: DONTEVAL@LOAD DOCOPY (*)                           (ADDVARS (AROUNDEXITFNS XQP::PROLOG.AROUNDEXITFN)))                    (PROP MAKEFILE-ENVIRONMENT)                    (DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS                           (ADDVARS (NLAMA)                                  (NLAML XQP::|WritePrologTagAndPtr| XQP::|WritePrologPtrAnd0Tag|                                          XQP::|ReadPrologTag| XQP::|ReadPrologPtr|)                                  (LAMA)))))(DEFINEQ(XQP::PROLOG.GEN.OP#  (LAMBDA (OP#)                                              (* |hdj| "13-May-85 14:29")    (PACK* "OP" OP#)))(XQP::PROLOG.INCR.P  (LAMBDA NIL                                                (* |hdj| " 6-May-85 17:34")    (LET ((OLDPC (XQP::|ReadPrologPtr| P)))         (XQP::|WritePrologPtrAnd0Tag| P (\\ADDBASE OLDPC 1)))))(XQP::|ReadPrologPtr|  (NLAMBDA (XQP::|RegisterName|)                             (* |hdj| " 6-May-85 17:29")    ((OPCODES RDPROLOGPTR)     (XQP::|PrologNameToURegs| XQP::|RegisterName|))))(XQP::|ReadPrologTag|  (NLAMBDA (XQP::|RegisterName|)                             (* |hdj| " 6-May-85 17:36")    ((OPCODES RDPROLOGTAG)     (XQP::|PrologNameToURegs| XQP::|RegisterName|))))(XQP::|WritePrologPtrAnd0Tag|  (NLAMBDA (XQP::|RegisterName| XQP::|PtrVal|)               (* |hdj| " 6-May-85 17:33")    ((OPCODES WRTPTR&0TAG)     (XQP::|PrologNameToURegs| XQP::|RegisterName|)     (EVAL XQP::|PtrVal|))))(XQP::|WritePrologTagAndPtr|  (NLAMBDA (XQP::|RegisterName| XQP::|TagVal| XQP::|PtrVal|) (* |hdj| " 6-May-85 17:32")    ((OPCODES WRTPTR&TAG)     (XQP::|PrologNameToURegs| XQP::|RegisterName|)     (EVAL XQP::|TagVal|)     (EVAL XQP::|PtrVal|)))))(* |;;| "these are handled with optimizers now, rather than macros, since that is the new preferred way of doing things, and using macros didn't work properly in Lyric.")(DEFOPTIMIZER XQP::|ReadPrologPtr| (XQP::|RegisterName|) `((OPCODES RDPROLOGPTR)                                                           ,(XQP::|PrologNameToURegs|                                                                    XQP::|RegisterName|)))(DEFOPTIMIZER XQP::|ReadPrologTag| (XQP::|RegisterName|) `((OPCODES RDPROLOGTAG)                                                           ,(XQP::|PrologNameToURegs|                                                                    XQP::|RegisterName|)))(DEFOPTIMIZER XQP::|WritePrologPtrAnd0Tag| (XQP::|RegisterName| XQP::|PtrVal|)   `((OPCODES WRTPTR&0TAG)     ,(XQP::|PrologNameToURegs| XQP::|RegisterName|)     ,XQP::|PtrVal|))(DEFOPTIMIZER XQP::|WritePrologTagAndPtr| (XQP::|RegisterName| XQP::|TagVal| XQP::|PtrVal|)   `((OPCODES WRTPTR&TAG)     ,(XQP::|PrologNameToURegs| XQP::|RegisterName|)     ,XQP::|TagVal|     ,XQP::|PtrVal|))(DEFINEQ(XQP::\\WRITE-TOP-HALF  (LAMBDA (XQP::REGISTER VALUE)                              (* |hdj| "16-Oct-85 15:41")    (LET ((HILOC (|fetch| (XQP::REGISTERDEF XQP::AHI) |of| XQP::REGISTER)))         ((OPCODES WRTPTR&0TAG)          (LOGOR (LLSH HILOC 8)                 HILOC)          VALUE))))(XQP::\\READ-TOP-HALF  (LAMBDA (XQP::REGISTER)                                    (* |hdj| "28-Oct-85 12:31")    (LET ((HILOC (|fetch| (XQP::REGISTERDEF XQP::AHI) |of| XQP::REGISTER)))         (\\LOLOC ((OPCODES RDPROLOGPTR)                   (LOGOR (LLSH HILOC 8)                          HILOC))))))(XQP::\\WRITE-BOTTOM-HALF  (LAMBDA (XQP::REGISTER VALUE)                              (* |hdj| "16-Oct-85 15:42")    (LET ((LOLOC (|fetch| (XQP::REGISTERDEF XQP::ALO) |of| XQP::REGISTER)))         ((OPCODES WRTPTR&0TAG)          (LOGOR (LLSH LOLOC 8)                 LOLOC)          VALUE))))(XQP::\\READ-BOTTOM-HALF  (LAMBDA (XQP::REGISTER)                                    (* |hdj| "15-Nov-85 11:07")    (LET ((LOLOC (|fetch| (XQP::REGISTERDEF XQP::ALO) |of| XQP::REGISTER)))         (\\LOLOC ((OPCODES RDPROLOGPTR)                   (LLSH LOLOC 8))))))(XQP::PROLOG.SAVE.REGISTERS  (LAMBDA NIL                                                (* |hdj| "20-Nov-85 14:04")    (DECLARE (GLOBALVARS XQP::REGISTER.ASSIGNMENTS XQP::\\REGISTER-FILE))    (|for| XQP::REGISTER |in| XQP::REGISTER.ASSIGNMENTS |as| XQP::REG# |from| 0       |when| (LET ((NAME (|fetch| (XQP::REGISTERDEF NAME) |of| XQP::REGISTER)))                   (AND (NEQ NAME '*)                        (NEQ NAME 'XQP::|Trashable|)                        (NEQ NAME 'XQP::|Zero|))) |do| (SETA XQP::\\REGISTER-FILE (ITIMES XQP::REG# 2                                                                                         )                                                             (XQP::\\READ-TOP-HALF XQP::REGISTER))                                                       (SETA XQP::\\REGISTER-FILE                                                             (ADD1 (ITIMES XQP::REG# 2))                                                             (XQP::\\READ-BOTTOM-HALF XQP::REGISTER))           )))(XQP::PROLOG.RESTORE.REGISTERS  (LAMBDA NIL                                                (* |hdj| "20-Nov-85 14:05")    (DECLARE (GLOBALVARS XQP::REGISTER.ASSIGNMENTS XQP::\\REGISTER-FILE))                    (* * |assume| |that| |the| XQP::|registers| |we| |must| |not| XQP::|touch|           |are| |the| |last| XQP::|ones| |in| XQP::REGISTER.ASSIGNMENTS)    (|for| XQP::REGISTER |in| XQP::REGISTER.ASSIGNMENTS |as| XQP::REG# |from| 0       |when| (LET ((NAME (|fetch| (XQP::REGISTERDEF NAME) |of| XQP::REGISTER)))                   (AND (NEQ NAME '*)                        (NEQ NAME 'XQP::|Trashable|)                        (NEQ NAME 'XQP::|Zero|))) |do| (XQP::\\WRITE-TOP-HALF XQP::REGISTER                                                              (ELT XQP::\\REGISTER-FILE                                                                   (ITIMES XQP::REG# 2)))                                                       (XQP::\\WRITE-BOTTOM-HALF                                                        XQP::REGISTER                                                        (ELT XQP::\\REGISTER-FILE                                                             (ADD1 (ITIMES XQP::REG# 2))))))))(RPAQQ XQP::REGISTER.ASSIGNMENTS ((P 28 22)                                  (CP 61 154)                                  (C 234 233)                                  (R 232 231)                                  (S 229 227)                                  (H 223 221)                                  (XQP::HB 220 219)                                  (TR 218 217)                                  (E 211 206)                                  (B 205 204)                                  (B0 193 189)                                  (XQP::T0 188 186)                                  (T1 177 159)                                  (N 155 155)                                  (I 110 110)                                  (* * XQP::|Special| XQP::|registers|)                                  (XQP::|CurClause| 74 73)                                  (A1 21 20)                                  (A2 238 237)                                  (A3 236 235)                                  (A4 18 17)                                  (W 54 54)                                  (XQP::|ClockTimeAtomNumber| 62 62)                                  (|Debug| 60 60)                                  (XQP::|LMBase| 108 108)                                  (XQP::|PUfnTableBase| 107 107)                                  (XQP::|LispEmuCodeBase| 95 94)                                  (XQP::|VMlim| 156 156)                                  (XQP::|A0Base| 158 158)                                  (XQP::|A1Base| 157 157)                                  (XQP::|PFCont| 78 78)                                  (XQP::|PInit| 151 151)                                  (XQP::|DeltaPC| 63 63)                                  (XQP::|Save| 72 72)                                  (XQP::|Trashable| 55 55)                                  (XQP::|Zero| 97 97)))(DECLARE\: EVAL@COMPILE(RECORD XQP::REGISTERDEF (NAME XQP::ALO XQP::AHI)))(DEFINEQ(XQP::|PrologNameToURegs|  (LAMBDA (NAME)                                             (* |hdj| "30-May-85 18:00")    (LET ((REG (FASSOC NAME XQP::REGISTER.ASSIGNMENTS)))         (OR REG (HELP "Unknown Prolog register" NAME))         (LOGOR (LLSH (|fetch| (XQP::REGISTERDEF XQP::ALO) |of| REG)                      8)                (|fetch| (XQP::REGISTERDEF XQP::AHI) |of| REG)))))(XQP::|PrologNameToHiUReg|  (LAMBDA (NAME)                                             (* |hdj| "30-May-85 18:01")    (LET ((REG (FASSOC NAME XQP::REGISTER.ASSIGNMENTS)))         (OR REG (HELP "Unknown Prolog register" NAME))         (|fetch| (XQP::REGISTERDEF XQP::AHI) |of| REG))))(XQP::|PrologNameToLoUReg|  (LAMBDA (NAME)                                             (* |hdj| "30-May-85 18:01")    (LET ((REG (FASSOC NAME XQP::REGISTER.ASSIGNMENTS)))         (OR REG (HELP "Unknown Prolog register" NAME))         (|fetch| (XQP::REGISTERDEF XQP::ALO) |of| REG)))))(DECLARE\: EVAL@COMPILE (PUTPROPS XQP::PROLOG.INCR.P MACRO '(LET ((OLDPC (XQP::|ReadPrologPtr| P)))                                         (XQP::|WritePrologPtrAnd0Tag| P (\\ADDBASE OLDPC 1))))(PUTPROPS XQP::|WriteProlog16| MACRO (ARGS (* * XQP::|write| 16 |bits| |into| \a XQP::|Prolog|                                               XQP::|register.| XQP::|Simulated| |by| |writing| 24                                               |bits| |in| |two| XQP::|chunks| - |the| |second|                                               XQP::|chunk| XQP::|overwrites| |the| XQP::|first.|                                               XQP::HACK!)                                           (LET* ((XQP::|RegisterName| (CAR ARGS))                                                  (XQP::|PtrVal| (CADR ARGS))                                                  (XQP::REGDEF (XQP::|PrologNameToLoUReg|                                                                       XQP::|RegisterName|)))                                                 `((OPCODES WRTPTR&0TAG)                                                   \,                                                   (LOGOR (LLSH XQP::REGDEF 8)                                                          XQP::REGDEF)                                                   \, XQP::|PtrVal|))))(PUTPROPS XQP::|ReadProlog16| MACRO (ARGS (* * |read| 16 |bits| |from| \a XQP::|Prolog|                                              XQP::|register.| W\e |do| |this| |by| XQP::|reading|                                              |from| \a |zero| XQP::|register| |into| |hi| |and| |the|                                              XQP::|register| |we| XQP::|want| |into| XQP::|lo.|                                              XQP::HACK!)                                          (LET* ((XQP::|RegisterName| (CAR ARGS))                                                 (XQP::REGDEF (XQP::|PrologNameToLoUReg|                                                                      XQP::|RegisterName|))                                                 (XQP::ZEROREGDEF (XQP::|PrologNameToLoUReg|                                                                   'XQP::|Zero|)))                                                `((OPCODES RDPROLOGPTR)                                                  \,                                                  (LOGOR (LLSH XQP::ZEROREGDEF 8)                                                         XQP::REGDEF))))))(DECLARE\: EVAL@COMPILE (PUTPROPS XQP::|PrologOpcode| MACRO (ARGS (LET ((N (CAR ARGS)))                                               (LIST (MKATOM (CONCAT "PrologOp" N)))))))(DEFINEQ(XQP::MAKEOP  (LAMBDA (XQP::|InstructionName| UFNFN)                     (* |hdj| " 4-Jun-85 21:44")    (PROG ((XQP::|ItsOpcode| (\\FINDOP XQP::|InstructionName|)))          (\\SETUFNENTRY (|fetch| (OPCODE OP#) |of| XQP::|ItsOpcode|)                 UFNFN                 (IDIFFERENCE (IPLUS 1 (COND                                          ((ZEROP (|fetch| (OPCODE OPNARGS) |of| XQP::|ItsOpcode|))                                           0)                                          (T 1)))                        (|fetch| (OPCODE LEVADJ) |of| XQP::|ItsOpcode|))                 (|fetch| (OPCODE OPNARGS) |of| XQP::|ItsOpcode|))))))(DEFINEQ(XQP::\\RDPROLOGPTR.UFN  (LAMBDA (A B)                                              (* |hdj| " 4-Jun-85 21:46")    (HELP A B)))(\\POPDISP.UFN  (LAMBDA (A B)                                              (* |hdj| " 4-Jun-85 21:44")    (HELP A B)))(XQP::\\RDPROLOGTAG.UFN  (LAMBDA (A B)                                              (* |hdj| " 4-Jun-85 21:47")    (HELP A B)))(XQP::\\WRTPTR&TAG.UFN  (LAMBDA (A B)                                              (* |hdj| " 4-Jun-85 21:48")    (HELP A B)))(XQP::\\WRTPTR&0TAG.UFN  (LAMBDA (A B)                                              (* |hdj| " 4-Jun-85 21:48")    (HELP A B))))(PUTPROPS POPDISP DOPVAL (1 POPDISP))(DEFINEQ(XQP::\\MAKE-REGISTER-FILE  (LAMBDA NIL                                                (* |hdj| "20-Nov-85 15:06")    (ARRAY (ITIMES (LENGTH XQP::REGISTER.ASSIGNMENTS)                  2)           'WORD 0 0))))(DECLARE\: DONTEVAL@LOAD DOCOPY (RPAQ XQP::\\REGISTER-FILE (XQP::\\MAKE-REGISTER-FILE)))(DEFINEQ(XQP::PROLOG.AROUNDEXITFN  (LAMBDA (EVENT)                                            (* \; "Edited  6-Aug-87 16:58 by pds")(* |;;;| "unlock/lock those pages that need to be locked down for Prolog.  Only do it if they are really being used -- a good heuristic is if the memory has been allocated, they are being used.  membot will be bound to the base of the Prolog area if this is so.")    (DECLARE (GLOBALVARS PROLOG.PUFN.TABLE PROLOG.ENABLE.PUFN.TABLE XQP::|membot| XQP::|ABase|))    (|if| XQP::|membot|        |then| (SELECTQ EVENT                   ((BEFORELOGOUT BEFOREMAKESYS BEFORESYSOUT BEFORESAVEVM)                         (XQP::PROLOG.SAVE.REGISTERS))                   ((AFTERLOGOUT AFTERMAKESYS AFTERSYSOUT AFTERSAVEVM)                         (XQP::PROLOG.RESTORE.REGISTERS)(* |;;;| "lock these things down and tell Prolog emulator about their real addresses")                        (\\LOCKPAGES (|fetch| (ARRAYP BASE) |of| PROLOG.PUFN.TABLE)                               1)                        (\\LOCKPAGES (|fetch| (ARRAYP BASE) |of| PROLOG.ENABLE.PUFN.TABLE)                               1)                        (\\LOCKPAGES XQP::|ABase| XQP::|AReg.pages|)                        (XQP::|WritePrologPtrAnd0Tag| XQP::|PUfnTableBase| (                                                                         XQP::|MakeUCodeVirtBaseAddr|                                                                            (|fetch| (ARRAYP BASE)                                                                               |of| PROLOG.PUFN.TABLE                                                                                   )))                        (XQP::|WritePrologPtrAnd0Tag| XQP::|LMBase| (XQP::|MakeUCodeVirtBaseAddr|                                                                     (|fetch| (ARRAYP BASE)                                                                        |of| PROLOG.ENABLE.PUFN.TABLE                                                                            )))                                                             (* \;                                                          "lock the A registers, which occupy 2 pages")                        (XQP::|WritePrologPtrAnd0Tag| XQP::|A0Base| (XQP::|MakeUCodeVirtBaseAddr|                                                                     XQP::|ABase|))                        (XQP::|WritePrologPtrAnd0Tag| XQP::|A1Base| (XQP::|MakeUCodeVirtBaseAddr|                                                                     (\\ADDBASE XQP::|ABase|                                                                             WORDSPERPAGE)))                        (XQP::|WritePrologPtrAnd0Tag| XQP::|PInit| 0))                   (* \; "tell ucode to turn virtual addresses to real")                   (PROGN)))    NIL)))(DECLARE\: DONTEVAL@LOAD DOCOPY (ADDTOVAR AROUNDEXITFNS XQP::PROLOG.AROUNDEXITFN))(DECLARE\: DONTEVAL@LOAD DOEVAL@COMPILE DONTCOPY COMPILERVARS (ADDTOVAR NLAMA )(ADDTOVAR NLAML XQP::|WritePrologTagAndPtr| XQP::|WritePrologPtrAnd0Tag| XQP::|ReadPrologTag|                       XQP::|ReadPrologPtr|)(ADDTOVAR LAMA ))(PUTPROPS OPCODES COPYRIGHT ("Xerox Corporation" 1985 1986 1987))(DECLARE\: DONTCOPY  (FILEMAP (NIL (2636 3963 (XQP::PROLOG.GEN.OP# 2646 . 2790) (XQP::PROLOG.INCR.P 2792 . 3029) (XQP::|ReadPrologPtr| 3031 . 3239) (XQP::|ReadPrologTag| 3241 . 3449) (XQP::|WritePrologPtrAnd0Tag| 3451 . 3693) (XQP::|WritePrologTagAndPtr| 3695 . 3961)) (5079 8704 (XQP::\\WRITE-TOP-HALF 5089 . 5404) (XQP::\\READ-TOP-HALF 5406 . 5732) (XQP::\\WRITE-BOTTOM-HALF 5734 . 6052) (XQP::\\READ-BOTTOM-HALF 6054 . 6343) (XQP::PROLOG.SAVE.REGISTERS 6345 . 7423) (XQP::PROLOG.RESTORE.REGISTERS 7425 . 8702)) (10673 11719 (XQP::|PrologNameToURegs| 10683 . 11099) (XQP::|PrologNameToHiUReg| 11101 . 11408) (XQP::|PrologNameToLoUReg| 11410 . 11717)) (14404 15103 (XQP::MAKEOP 14414 . 15101)) (15104 15819 (XQP::\\RDPROLOGPTR.UFN 15114 . 15255) (\\POPDISP.UFN 15257 . 15389) (XQP::\\RDPROLOGTAG.UFN 15391 . 15532) (XQP::\\WRTPTR&TAG.UFN 15534 . 15674) (XQP::\\WRTPTR&0TAG.UFN 15676 . 15817)) (15863 16101 (XQP::\\MAKE-REGISTER-FILE 15873 . 16099)) (16198 19171 (XQP::PROLOG.AROUNDEXITFN 16208 . 19169)))))STOP