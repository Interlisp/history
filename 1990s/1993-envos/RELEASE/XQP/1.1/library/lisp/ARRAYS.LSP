;;; File   : ARRAYS.LSP;;; Author : Richard A. O'Keefe;;; Purpose: support for library(arrays);;; Updated: Friday September 11th, 1987.;;; Instead of implementing library(vectors) as a Prolog package,;;; it seemed good to me to provide some Lisp functions.(CL:IN-PACKAGE "IL")(CL:DEFUN LIST.TO.ARRAY (ELTS TYPE ORIG)    ;;  TYPE and ORIG have the same defaults as in (ARRAY).    ;;  In Common Lisp, use (concatenate 'vector ELTS).    (if (NULL TYPE) then (SETQ TYPE 'POINTER))    (if (NULL ORIG) then (SETQ ORIG 1))    (LET ((RESULT (ARRAY (LENGTH ELTS) TYPE ORIG)))	(for ELT in ELTS do	    (SETA RESULT ORIG ELT)	    (SETQ ORIG (ADD1 ORIG))	)	RESULT    ))(CL:DEFUN ARRAY.TO.LIST (ARRAY ORIG LAST)    ;;  returns a section of ARRAY as a list.    ;;  ORIG defaults to the first element of ARRAY, LAST to the last.    ;;  In Common Lisp, use (concatenate 'list ARRAY).    (if (NULL ORIG) then (SETQ ORIG (ARRAYORIG ARRAY)))    (if (NULL LAST) then	(SETQ LAST (PLUS (ARRAYSIZE ARRAY) (ARRAYORIG ARRAY) -1)))    (for INDEX from ORIG to LAST collect (ELT ARRAY INDEX)))STOP