ref-2-2-1                    Xerox Quintus Prolog Reference Manual                             Section 2-2-1: ListsLists form an important class of data structures in Prolog.  They areessentially the same as the lists of Lisp:  a list is either the atom '[]',representing the empty list, or else a compound term with functor '.'  and twoarguments which are the head and tail of the list respectively, where the tailof a list is another list.  Thus a list of the first three natural numbers isthe structure                          .                        / \                       1    .                           / \                          2    .                              / \                             3   []which could be written using the standard syntax, as             .(1,.(2,.(3,[])))but which is normally written in a special list notation, as             [1,2,3]Two examples of this list notation, as used when the tail of a list is avariable, are:              [X|L]     [a,b|L]which represent                          .               .                        / \             / \                      X     L         a     .                                           / \                                         b     Lrespectively.Note that the notation [X|L] does not add any new power to the language; itsimply improves readability.  The above examples could be written equally wellas             .(X,L)    .(a,.(b,L))For convenience, a further notational variant is allowed for lists of integersthat correspond to ASCII character codes.  Lists written in this notation arecalled strings.  For example,             "Humpty-Dumpty"represents exactly the same list as[72,117,109,112,116,121,45,68,117,109,112,116,121]