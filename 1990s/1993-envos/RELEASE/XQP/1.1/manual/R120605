ref-12-6-5                    Xerox Quintus Prolog Reference Manual                          Section 12-6-5: debuggingdebugging/0 displays information on the terminal about the current debuggingstate.  It shows    - the top-level state of the debugger, which is one of      debug       The debugger is on but will not show anything or stop for                 user interaction until a spypoint is reached.     trace       The debugger is on and will show everything.  As soon as                 you type a goal, you will start seeing a debugging trace.                 After printing each trace message, the debugger may or                 may not stop for user interaction:  this depends on the                 type of leashing in force (see below).     off         The debugger is off.       The top-level state can be controlled by the predicates debug/0,     nodebug/0, trace/0 and notrace/0.   - the type of leashing in force.  When the debugger prints a message     saying that it is passing through a particular port (one of Call,     Exit, Redo, or Fail) of a particular procedure, it stops for user     interaction only if that port is leashed.  The predicate leash/1     ({manual(ref-12-6-10)) can be used to select which of the four ports you want to be leashed.the action to be taken on undefined predicates.  This is either 'trace', whichmeans that calling an undefined predicate traps to the debugger; or 'fail',meaning that such calls simply fail.  This option can be controlled using thepredicate unknown/2 ({manual(ref-12-6-9)}).all the current spypoints.  Spypoints are controlled by the predicates spy/1,nospy/1, and nospyall/0.  }