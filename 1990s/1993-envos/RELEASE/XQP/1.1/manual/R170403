ref-17-4-3                    Xerox Quintus Prolog Reference Manual                    Section 17-4-3: phrase(+Phrase, ?List)phrase(Phrase, List) succeeds when the list List is a phrase of type Phrase(according to the current grammar rules), where Phrase is either a non-terminalor, more generally, a grammar rule body.  This predicate is a convenient way tostart execution of grammar rules.Phrase must be non-variable.  List may be bound to a list of symbols orcharacter codes, in which case this goal corresponds to using the grammar forparsing.  Or it may be unbound, in which case this goal corresponds to usingthe grammar for generation.  For example, given the following simple grammar:            s --> [] | [a], s.phrases of type 's' can be generated as follows:            | ?- phrase(s, L).            L = [] ;            L = [a] ;            L = [a,a] ;            L = [a,a,a] ;            .            .            .and so on indefinitely.If Phrase is an unbound variable, phrase/2 fails, and an error message is sentto the standard error stream.