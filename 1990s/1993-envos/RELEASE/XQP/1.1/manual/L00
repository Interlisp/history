lib-0                     Xerox Quintus Prolog Library Manual                           Chapter 0: IntroductionThe Xerox Quintus Prolog library comprises a set of files containing predicateswhich can be regarded as extensions to the set of predicates which are builtinto the Prolog system, along with supplemental files and demonstrationprograms written in Prolog and Lisp.  Some of these files are tools which canbe used to analyze your Prolog programs statically (that is, without runningthem) and possibly locate bugs.By default, the predicate library_directory/1 defines the set of directories tobe searched for library files.  You can list these directories by typing            | ?- library_directory(X).and backtracking through the set of directories by typing ';' after each one.This definition of library_directory/1 means that you can refer, from withinProlog, to any library file using the form library(File).  The Xerox QuintusProlog Library comprises the 'library' and 'tools' directories.  For example,            | ?- compile(library(lists)).would load the file lists.pl from the 'library' directory.Library packages are typically loaded by doing            | ?- ensure_loaded(library(be_helpful)).if the package is not a module-file or if it is a module and you want all theexported predicates.  See the descriptions of ensure_loaded/1 anduse_module/[1,2] in the Xerox Quintus Prolog Reference Manual.  You will noticethat the library name 'be_helpful' includes an underscore.  Some file systemsdo not permit underscores in file names.  The 'library(_)' wrapper exists, inpart, to decouple library names from file names, and Xerox Quintus Prolog willremove the underscores if necessary.  Use absolute_file_name/2 to find out theactual filename of any library package.This manual contains descriptions of the supported packages of the XeroxQuintus Prolog Library.  The distinction between supported and unsupportedlibrary packages is:   1. The definitions of predicates in supported packages are very      unlikely to be changed in future releases of Xerox Quintus Prolog.      In contrast, it is likely that some of the predicates in the      unsupported packages will be changed in future releases.   2. The supported packages are documented in detail in this manual.  A      certain amount of documentation is also provided for the unsupported      library in the form of '.doc' files and comments in the code.  There      is also a summary of all the unsupported library packages in      {manual(lib-7)} of this manual.   3. Bugs in supported predicates will be fixed.  Bugs in unsupported      predicates may or may not be fixed, or we might withdraw the buggy      predicate.  If you find a bug in any library package, whether      supported or not, you should report the bug.  It should not be      inferred that unsupported packages are untested or inferior, only      that they are undocumented.Currently, the 'library' directory contains both supported and unsupportedpackages.The predicates described here have been tested and are believed to work asdocumented.  If you want something slightly different from one of thesepredicates, it is strongly recommended that you do not change the existingdefinition.  Instead, write a new predicate using the existing definition as amodel.  There are several reasons for not changing the definition of apredicate in the supported library:   1. It may confuse people reading your code who are familiar with the      documented behavior of the library predicate.   2. If you use other library files, they may depend on the exact      definition of this predicate.   3. You might have to redo your modification if you wished to run your      program on some new release of Quintus Prolog.   4. Quintus does not accept responsibility for any bugs introduced by a      user's change to library code.{manual(lib-1)} through {manual(lib-6)} describe the supported packages in the'library' directory.  {manual(lib-7)} summarizes the programs in the 'tools'directory and also the unsupported portion of the 'library' directory.In the predicate descriptions in the following chapters, the arguments topredicates are annotated with "mode" marks.  These annotations are described inthe introduction to the Xerox Quintus Prolog Reference Manual.Many of the examples in this manual show lists of character codes being writtenas quoted strings.  This actually happens if you load the library packagelibrary(print_chars).  That package redefines the predicate portray/1 so thatprint/1, the top-level, and the debugger will write lists of character codes asfollows:            | ?- X = [0'a,0'b,0'c].            X = [97,98,99]            | ?- ensure_loaded(library(print_chars)).            | ?- X = [0'a,0'b,0'c].            X = "abc"