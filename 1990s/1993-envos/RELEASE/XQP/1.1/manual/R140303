ref-14-3-3                    Xerox Quintus Prolog Reference Manual                      Section 14-3-3: retractall(+Head)retractall(Head) erases every clause in the data base whose head matches Head.For the purpose of this matching, unit clauses (clauses with no body) aretreated as if they had a body consisting of the single goal 'true'.  Head mustbe instantiated to a term which looks like a call to a dynamic predicate.  Forexample, to retract all the clauses of foo/3, you would write            | ?- retractall(foo(_,_,_)).If Head corresponds to a static predicate, an error message is sent to thestandard error stream and retractall/1 fails.  If Head is not a legal clausehead, an error message is sent to the standard error stream and retractall/1fails.retractall/1 could be defined (less efficiently) as follows:            retractall(Head) :-                    clause(Head, _, Ref),                    erase(Ref),                    fail ; true.retractall/1 is useful for erasing all the clauses of a dynamic predicatewithout forgetting that it is dynamic; abolish/1 will not only erase all theclauses, but will also forget absolutely everything about the predicate.retractall/1 only erases the clauses.As retractall/1 erases all the dynamic clauses whose heads match Head, it hasno choices to make, and is determinate.  If there are no such clauses, itsucceeds trivially.  None of the variables in Head will be instantiated by thiscommand.  For example,            | ?- listing(baz/2).            baz(a,1).            baz(b,2).            baz(a,3).            baz(b,4).            yes            | ?- retractall(baz(a, X)).            X = _798            | ?- listing(baz/2).            baz(b,2).            baz(b,4).            yesThe space previously occupied by a retracted clause is reclaimed.  Thisreclamation is not necessarily immediate, but it is not delayed untilbacktracking past the call of retractall/1, as in some implementations.