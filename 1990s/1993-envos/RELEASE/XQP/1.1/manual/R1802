ref-18-2                    Xerox Quintus Prolog Reference Manual                         Section 18-2: length(?L, ?N)If L is instantiated to a list of definite length, length(L, N) unifies thislength with N.  Thus, if both L and N are variables, the system will backtrack,generating lists of increasing length whose elements are anonymous variables.For example,            | ?- length([1,2], 2).            yes            | ?- length([1,2], 0).            no            | ?- length([1,2], X).            X = 2 ;            noIf L is a list of indefinite length (that is, either a variable or of the form[...|X]) and if N is bound to an integer, then L is made to be a list of lengthN with unique variables used to "pad" the list. If L cannot be made into a listof length N, the call fails.  For example,            | ?- length(X, 2).            X = [_118,_120] ;            no            | ?- length([1|X], 2).            X = [_387] ;            no            | ?- length([1|X], 0).            noIf N is unbound, then it is unified with all possible lengths for the list L.For example,            | ?- length(X, Y).            X = [],            Y = 0 ;            X = [_144],            Y = 1 ;            X = [_144,_146],            Y = 2 ;            ...            | ?- length([1|X], Y).            X = [],            Y = 1 ;            X = [_413],            Y = 2 ;            X = [_413,_415],            Y = 3 ;            ...If L is bound, and is not a non-negative integer, length/2 simply fails.