lib-5-2                     Xerox Quintus Prolog Library Manual                  Section 5-2: Built-in Operations on FilesThe following operations on files are described in the Xerox Quintus PrologReference Manual, except for absolute_file_name/2 which is described in theXerox Quintus Prolog System-dependent Features Manual.absolute_file_name(+RelFileName, ?AbsFileName)            takes a file name RelFileName (typically typed in by the user of a            program) and unifies it with the normalized AbsFileName.            Beware:  absolute_file_name/2 mimics the file name resolution done            by commands such as compile/1.  It is meant primarily for looking            up Prolog source files.  If you want to find the absolute file name            of any other file, absolute_file_name/2 may not be appropriate.            Beware:  in Release 2.0, the action of compile/1 and other such            commands when given a relative file name was changed.  Such file            names used to be resolved relative to the current working            directory.  They are now resolved relative to the source file            containing the command.  This makes Prolog like C compilers.  But            absolute_file_name/2 still resolves relative file names relative to            the current working directory.close(+FileNameOrStream)            if FileNameOrStream is an atom, it refers to a DEC-10-compatible            stream connected to the file of that name; otherwise it is a stream            object.  In either case, the associated stream is closed.current_stream(?AbsFileName, ?Mode, ?Stream)            is true if Stream is a stream connected to file AbsFileName, and            currently open in mode Mode.  current_stream/2 can be used to list            currently open streams and the files to which they are connected.library_directory(?Directory)            unifies Directory with an entry from the user-modifiable table of            directories to be searched for library files.open(+FileName, +Mode, -Stream)            opens a new Stream connected to the file named by FileName.  If            Mode is 'write' ('append') it will (may) create a new file.see(+FileNameOrStream)            opens the file or stream FileNameOrStream for input if it is not            already open.tell(+FileNameOrStream)            opens the file or stream FileNameOrStream for output if it is not            already open.lisp_apply('CNDIR', [+Directory], _)            Selects Directory as the default directory for relative file names.            This is also called the current working directory.  To find out            what the default directory currently is, type            | ?- lisp_apply('GETTOPVAL', ['\CONNECTED.DIRECTORY'],                    CurrentDirectory).            to find out.  (Beware: 'CNDIR' is one of the few Interlisp-D            environment-related functions which returns the new value, not the            old value, and one of the few such functions where supplying NIL as            the argument changes the state.)