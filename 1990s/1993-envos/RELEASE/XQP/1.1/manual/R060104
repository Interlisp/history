ref-6-1-4                    Xerox Quintus Prolog Reference Manual                    Section 6-1-4: write_canonical(?Term)write_canonical(Term) writes Term to the current output stream in standardsyntax (see {manual(ref-2)} on Prolog syntax), and quotes atoms and functors tomake them acceptable as input to read/[1,2].  That is, operator declarationsare not used and compound terms are therefore always written in the form            <predicate name>(<arg1>, ..., <argn>)write_canonical/1 does not treat terms of the form '$VAR'(N) specially.  Itwrites square bracket lists using '.'/2 and '[]' (that is, [a,b] is written as.(a,.(b,[])) ).  If the character_escapes flag is 'on' then write_canonical/1tries to write layout characters (except ASCII 9 and ASCII 32) in the form\<lower-case-letter>, if possible; otherwise, write_canonical/1 writes the\^<control-char> form.  If the character_escapes flag is 'off' then it writesthe actual character, without using an escape sequence (see {manual(ref-2-3)}).This predicate is provided so that Term, if written to a file, can be read backby read/[1,2] regardless of special characters in Term or prevailing operatordeclarations.write_canonical/1 always succeeds without error.NOTES:   1. write_canonical/[1,2] does not terminate its output with a      full-stop, which is required by read/[1,2].   2. In general, one can only read (using read/[1,2]) a term written by      write_canonical/1 if the value of the character_escapes flag is the      same when the term is read as when it was written.