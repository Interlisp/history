ref-11-1                    Xerox Quintus Prolog Reference Manual                        Section 11-1: Error ConditionsThere are a number of different types of error conditions:   1. An instantiation fault arises when a built-in predicate is called      with insufficiently instantiated arguments.  This can mean that an      uninstantiated variable was passed where an input value (a '+'      argument in a skeletal predicate specification) was expected.  There      are also predicates such as name/2 that require that at least one of      their arguments be instantiated.   2. A type error arises when an argument to a built-in predicate is of      the wrong type; for example, when an atom is expected and a compound      term is supplied.   3. There are various error conditions associated with input and output.      For example, trying to open a nonexistent file causes an error.   4. There are errors associated with breaching various restrictions made      by the system, such as trying to redefine a built-in predicate.   5. There are errors associated with breaching various limits of the      system, such as trying to compile an excessively large procedure.      See the section on limits in the Xerox Quintus Prolog      System-dependent Features Manual for more information on limits.   6. There are errors associated with breaching various external limits,      such as running out of virtual space or running out of input/output      channels.Error conditions normally arise only in the execution of built-in predicates.The action taken varies:  the predicate may simply fail, or it may give anerror message.  After giving an error message, predicates usually fail, butsometimes they abort the program, and sometimes they succeed.  In this manual,the definition of each built-in predicate includes a description of itsbehavior in case of errors.Programs should not depend on the fact that any specific built-in predicatesimply fails in the event of an instantiation fault or a type error.  This isan area which is likely to change in future releases.