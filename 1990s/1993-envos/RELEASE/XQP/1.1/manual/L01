lib-1                     Xerox Quintus Prolog Library Manual                           Chapter 1: IntroductionThe Xerox Quintus Prolog installation directory includes three subdirectorieswhich contain supplemental files written in Prolog and C:demo        contains a number of stand-alone demonstration programs.  This            directory is not considered a part of the library because you would            not normally want to use one of these programs as it stands in your            program development.  The 'demo' subdirectory will not be discussed            further in this manual -- see the README files it contains for            further information.library     contains a large number of predicates which can be regarded as            extensions to the set of predicates which are built into the Prolog            system.tools       contains tools which can be used to analyze your programs            statically (that is, without running them) and possibly locate            bugs.The Xerox Quintus Prolog Library comprises the 'library'and 'tools'directories.  By default, the predicate library_directory/1 has a clause foreach of these directories.  You can see these clauses by typing "listing." or"listing(library_directory)." after starting up Prolog.  This definition oflibrary_directory/1 means that you can refer, from within Prolog, to any filein any of these three areas using the form library(File).  For example,            | ?- compile(library(lists)).would load the file lists.pl from the 'library' directory.This manual contains descriptions of the supported packages of the XeroxQuintus Prolog Library.  The distinction between supported and unsupportedlibrary packages is:   1. The definitions of predicates in supported packages are very      unlikely to be changed in future releases of Xerox Quintus Prolog.      In contrast, it is likely that some of the predicates in the      unsupported packages will be changed in future releases.   2. The supported packages are documented in detail in this manual.  A      certain amount of documentation is also provided for the unsupported      library in the form of '.doc' files and comments in the code.  There      is also a summary of all the unsupported library packages in      {manual(lib-8)} of this manual.   3. Bugs in supported predicates will be fixed.  Bugs in unsupported      predicates may or may not be fixed, or we might withdraw the buggy      predicate.  If you find a bug in any library package, whether      supported or not, you should report the bug.  It should not be      inferred that unsupported packages are untested or inferior, only      that they are undocumented.Currently, the 'tools' directory is unsupported, and the 'library' directorycontains both supported and unsupported packages.The predicates described here have been tested and are believed to work asdocumented.  If you want something slightly different from one of thesepredicates, it is strongly recommended that you do not change the existingdefinition.  Instead, write a new predicate using the existing definition as amodel.  There are several reasons for not changing the definition of apredicate in the supported library:   1. It may confuse people reading your code who are familiar with the      documented behavior of the library predicate.   2. If you use other library files, they may depend on the exact      definition of this predicate.   3. You might have to redo your modification if you wished to run your      program on some new release of Quintus Prolog.   4. Quintus does not accept responsibility for any bugs introduced by a      user's change to library code.{manual(lib-2)} through {manual(lib-7)} describe the supported packages in the'library' directory.  {manual(lib-8)} summarizes the programs in the 'tools'directory and also the unsupported portion of the 'library' directory.In the predicate descriptions in the following chapters, the arguments topredicates are annotated with "mode" marks.  These annotations are described inthe introduction to the Xerox Quintus Prolog Reference Manual.