ref-8-11-1                    Xerox Quintus Prolog Reference Manual                  Section 8-11-1: atom_chars(?Atom, ?Chars)Chars is the list of ASCII character codes comprising the printedrepresentation of Atom.  atom_chars(Atom, Chars) is a relation between an atomAtom and a list Chars consisting of the ASCII character codes comprising theprinted representation of Atom.  Initially, either Atom must be instantiated toan atom, or Chars must be instantiated to a proper list of character codes(containing no variables).If Atom is initially instantiated to an atom, Chars will be unified with thelist of character codes that makes up its printed representation.  If Atom isuninstantiated and Chars is initially instantiated to a list of characters,Atom will be instantiated to an atom containing exactly those characters, evenif the characters look like the printed representation of a number.  If thearguments to atom_chars/2 are both uninstantiated, atom_chars/2 will fail, andan error message will be sent to the standard error stream.  The system willthen enter the debugger in trace mode.Any atom which can be read or written by Prolog can be constructed ordecomposed by atom_chars/2.Here are some examples of the use of atom_chars/2:            | ?- atom_chars(foo, L).            L = [102,111,111]            | ?- atom_chars('Foo', L).            L = [70,111,111]            | ?- atom_chars(431, L).            no            | ?- atom_chars(X, [102,111,111]).            X = foo            | ?- atom_chars(X, [52,51,49]).            X = '431'            | ?- atom_chars(X, "15.0e+12").            X = '15.0e+12'If you deal with chars values often, you may find it useful to loadlibrary(printchars).  Once this is done, chars values will be written byprint/1 as double-quoted text.  Example:              | ?- atom_chars(fred, L).            L = "fred"