ref-8-11-0                    Xerox Quintus Prolog Reference Manual                         Section 8-11-0: IntroductionThe three predicates described in this section convert between constants andlists of ASCII character codes.There is a general convention that a predicate which converts objects of typefoo to objects of type baz should have the form             foo_to_baz(+FooIn, -BazOut)if the conversion works only one way, or the form             foo_baz(?Foo, ?Baz)if for any Foo there is exactly one related Baz and for any Baz at most oneFoo.The type name used for lists of ASCII character codes is "chars".For example, the predicate which relates an atom to its name is atom_chars/2({manual(ref-8-11-1)}), and that the predicate which relates a number to itstextual representation is number_chars/2 ({manual(ref-8-11-2)}).name/2 ({manual(ref-8-11-3)}) converts from any sort of constant to a charsrepresentation.  Given a chars value, name/2 will convert it to a number if itcan, otherwise to an atom.  This means that there are atoms which can beconstructed by the parser and by atom_chars/2 but not by name/2.  name/2 isretained for backwards compatibility with DEC-10 Prolog and C-Prolog.  Newprograms should use atom_chars/2 or number_chars/2 as appropriate.