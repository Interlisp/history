ref-5-1-4                    Xerox Quintus Prolog Reference Manual                    Section 5-1-4: write_canonical(?Term)write_canonical(Term) Orites Term to the current output stream in standardsyntax (see {manual(ref-1)} on Prolog syntax),(and quotes atoms and functors tomake them acceptable as input to read/[1,2].  That is, operator declarationsare not used and compound terms are therefore always written in the form            <predicate name>(<arg1>, ..., <argn>)write_canonical/1 does not treat terms of the form '$VAR'(N) specially.  Itwrites square bracket lists using '.'/2 and '[]' (that is, [a,b] is written as.(a,.(b,[])) ).  If the character_escapes flag is 'on' then write_canonical/1tries to write layout characters (except ASCII 9 and ASCII 32) in the form\<lower-case-letter>, if possible; otherwise, write_canonical/1 writes the\^<control-char> form.  If the character_%pcapes flag is 'off' then it writestheàactual character, without using an escape sequence (see {manual(ref-1-3)}ref-3-0                    Xerox Quintus Prolog Reference Manual                            Section 3-0: OverviewThere are two ways of loading programs into Prolog -- consulting and compiling.Consulted code is interpreted, and has the advantages of greater flexibility indebugging.  The advantage of compiling is that the program will runconsiderably faster and use less space during its execution.It is very easy to mix compiled and interpreted code, so it is generally bestto compile code which is well-tested, and consult new, untested code w