sysdep-1-7            Xerox Quintus Prolog System-Dependent Features Manual           Section 1-7: Searching for a File in a List of LibrariesXerox Quintus Prolog provides a facility for automatically searching for a filethrough a list of user-defined directories.  Wherever a Xerox Quintus Prologpredicate takes a relative FileName as an argument, it can alternatively takelibrary(FileName) as that argument.  When the system encounters a filespecification of the form library(FileName), it searches for the firstoccurrence of the file FileName in the directories specified by theuser-defined predicate library_directory/1, in the order in which its clausesappear in the data base.Additionally, Xerox Quintus Prolog can be informed of additional librarydirectories by adding them to a list called PROLOGLIBRARYDIRECTORIES containingany number of such directories.When the Prolog system encounters library(FileName), it attempts, in order, toopen   1. FileName.pl   2. FileName   3. FileName'.pl, where FileName' is FileName with underscores deleted   4. FileName', where FileName' is FileName with underscores deletedin each of the set of directories specified by library_directory/1.  Thus, forexample, library(test_case) would search for   1. test_case.pl   2. test_case   3. testcase.pl   4. testcaseIf both FileName.pl and FileName appear in the same directory, FileName.pl willbe used.For example,             | ?- compile(user).            library_directory('{DSK}<LISPFILES>QUINTUS>').            [user compiled(.133 sec)]            yesUnder the TEdit interface, there is a Library menu option which prompts for afile name, then pops up a window containing the specified file.  If that fileis already being displayed in a window, TEdit will use that window.  If not,TEdit will prompt for a region, and open a new window in this region in whichto display the file.This window contains the copy of FileName which is specified bylibrary(FileName).  This facility is provided so one can visit/edit the copy ofthe file which will be accessed as a result of a library search.NOTES: 1. PROLOGLIBRARYDIRECTORIES or the library_directory/1 data base maycontain directories which do not exist or are syntactically invalid (asfar as the operating system is concerned).  If an invalid directory ispart of the data base, the system will fail to find any files in it, andthe directory will in essence be ignored.  No message to the user is givenin this case. 2. The library search facility is provided so that one can load libraryfiles without knowing their absolute file names, but there is norestriction on the way a library file can be accessed.  One could write tolibrary(FileSpec), but this might not have the desired effect, since thesystem will write to one of possibly many files depending upon the currentorder of the clauses in PROLOGLIBRARYDIRECTORIES and thelibrary_directory/1 predicate.  It is strongly suggested that writing to alibrary file should not be done using the library(FileSpec) facility.  Theabsolute name of the file to which one is writing should be known.  Tofind the absolute name of a library file, one can type | ?- absolute_file_name(library(FileSpec),AbsFileName). 3. library_directory/1 must be defined in the default module 'user' --definitions in any other module will not be found.