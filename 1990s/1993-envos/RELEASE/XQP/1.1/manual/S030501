sysdep-3-5-1            Xerox Quintus Prolog System-Dependent Features Manual                        Section 3-5-1: garbage_collectgarbage_collect/0 invokes the garbage collector explicitly.  No expansion ofthe heap is done.The cut may be used in conjunction with garbage_collect/0 to allow code thatworks in cycles and builds up large data structures to run for more cycleswithout running out of memory.  The cut removes any alternatives that may bepending, thus potentially freeing up garbage that could not otherwise becollected.For example, in the code fragment cycle(X) :- big_goal(X, X1), cycle(X1).if cycle/1 is to run for a long time, and if big_goal /2 generates a lot ofgarbage, then rewrite the code like this:cycle(X) :- big_goal(X, X1), !, garbage_collect, cycle(X1).Use of this construct is only desirable when you notice that your code doesfrequent garbage collections.  The "!, garbage_collect" idiom will allow thegarbage collector to collect garbage more effectively, and the cycle will runwithout demanding increasing amounts of memory.