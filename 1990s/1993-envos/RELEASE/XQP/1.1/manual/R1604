ref-16-4                    Xerox Quintus Prolog Reference Manual                Section 16-4: current_key(?KeyName, ?KeyTerm)current_key(KeyName, KeyTerm) succeeds when KeyName is the atom or integerwhich is the name of KeyTerm.KeyTerm is an integer, atom, or compound term which is the key for a currentlyrecorded term.  KeyName is either   1. KeyTerm, if KeyTerm is an atom or an integer; or   2. the principal functor of KeyTerm, if KeyTerm is a compound term.For example, if the following terms and keys are recorded in the internal database:              | ?- recorda(foo, p(a), _).            yes            | ?- recorda(foo(baz), p(b), _).            yes            | ?- recorda(99, p(c), _).            yes            | ?- recorda([foo], p(d), _).            yes            | ?- recorda((p,q), p(e), _).            yesthen to find out all of the currently recorded keys and their correspondingnames, submit the query:            | ?- current_key(KeyName, KeyTerm).            KeyName = KeyTerm = foo ;            KeyName = foo,            KeyTerm = foo(_159) ;            KeyName = KeyTerm = 99 ;            KeyName = '.',            KeyTerm = [_158|_159] ;            KeyName = ',',            KeyTerm = _209,_210 ;            noTo find out all of the recorded keys with the name 'foo', submit the query:              | ?- current_key(foo, KeyTerm).            KeyTerm = foo ;            KeyTerm = foo(_134) ;            noSince all recorded keys can be obtained with this predicate, one can backtrackthrough all recorded terms.  For example,| ?- current_key(_, Key), recorded(Key, Term, _),                            write(Term), nl, fail.p(a)p(b)p(c)p(d)p(e)noIf KeyName is not an atom, an integer, or an unbound variable, current_key/2fails, and an error message is sent to the standard error stream.  The systemthen enters the debugger in trace mode.  If KeyTerm is not a current key,current_key/2 simply fails.