(ASSEMBLE.CLAUSE ( %= 2 si ) 3    (get.Ai.value.Xn 2 1)    (proceed))(ASSEMBLE.CLAUSE ( var 1 si ) 3    (is.a 1)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( nonvar 1 si ) 3    (is.a 254)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( atomic 1 si ) 3    (is.a 248)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( atom 1 si ) 3    (is.a 128)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( integer 1 si ) 3    (is.a 24)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( float 1 si ) 3    (is.a 32)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( number 1 si ) 3    (is.a 56)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( arg 3 si ) 3    (arg)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( functor 3 si ) 3    (functor)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %@%< 2 si ) 6    (compare)    (load.pos.word 0)    (less.than)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %@%> 2 si ) 6    (compare)    (load.pos.word 0)    (greater.than)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %@%=%< 2 si ) 6    (compare)    (load.pos.word 0)    (not.greater.than)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %@%>%= 2 si ) 6    (compare)    (load.pos.word 0)    (not.less.than)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %=%= 2 si ) 6    (compare)    (load.pos.word 0)    (equal.to)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %\%=%= 2 si ) 6    (compare)    (load.pos.word 0)    (not.equal.to)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( %^ 2 si ) 4    (put.Ai.value.Xn 1 2)    (execute call 1 interp))(ASSEMBLE.CLAUSE ( %\%+ 1 si ) 15    (allocate)    (load.choice.point)    (store.variable.Yn 1)    (either 4 14)    (call 4 call 1 interp)    (load.value.Yn 1)    (cut.to.choice.point)    (fail)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( is 2 si ) 7    (put.Ai.symbol 2 is)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %=%:%= 2 si ) 7    (put.Ai.symbol 2 %=%:%=)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %=%\%= 2 si ) 7    (put.Ai.symbol 2 %=%\%=)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %< 2 si ) 7    (put.Ai.symbol 2 %<)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %> 2 si ) 7    (put.Ai.symbol 2 %>)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %=%< 2 si ) 7    (put.Ai.symbol 2 %=%<)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %>%= 2 si ) 7    (put.Ai.symbol 2 %>%=)    (put.Ai.constant 1 302)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %, 2 si ) 12    (put.Ai.value.Xn 3 2)    (put.Ai.structure 2 %, 2)    (unify.local.Xn 1)    (unify.local.Xn 3)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %; 2 si ) 12    (put.Ai.value.Xn 3 2)    (put.Ai.structure 2 %; 2)    (unify.local.Xn 1)    (unify.local.Xn 3)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %-%> 2 si ) 12    (put.Ai.value.Xn 3 2)    (put.Ai.structure 2 %-%> 2)    (unify.local.Xn 1)    (unify.local.Xn 3)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( %! 0 si ) 7    (put.Ai.symbol 2 %!)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( fail 0 si ) 7    (put.Ai.symbol 2 fail)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( false 0 si ) 7    (put.Ai.symbol 2 false)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( true 0 si ) 7    (put.Ai.symbol 2 true)    (put.Ai.constant 1 361)    (execute nerror 2 si))(ASSEMBLE.CLAUSE ( otherwise 0 si ) 7    (put.Ai.symbol 2 otherwise)    (put.Ai.constant 1 361)    (execute nerror 2 si))STOP