(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "XCL-USER")(il:filecreated "27-Feb-88 13:23:39" il:{eris}<test>library>rs232>hand>testreceive.\;2 2635         il:|previous| il:|date:| "16-Nov-87 18:09:08" il:{eris}<test>library>rs232>hand>testreceive.\;1); Copyright (c) 1987, 1988 by Xerox Corporation.  All rights reserved.(il:prettycomprint il:testreceivecoms)(il:rpaqq il:testreceivecoms ((file-environments "TESTRECEIVE")                                  (il:functions get-data receive-data)))(define-file-environment "TESTRECEIVE" :package "XCL-USER" :readtable "XCL" :compiler                                                  :compile-file)(defun get-data (strm)                     (il:* il:|;;| "get the data and return the number of characters picked up.")                           (let ((chars-received 0))                                (loop                     (il:* il:|;;|  "now we start getting data.  Just count the number of chars picked up and time how long it takes.")                                      (cond                                         ((il:readp strm)                                          (il:bin strm)                                          (incf chars-received))                                         (t (return chars-received))))))(defun receive-data nil                     (il:* il:|;;| "hang around until readp goes high (they are sending the data) and then count the number of chars until the data stops.  Print out this number of characters and a TIME of the input to standard-output.")                            (let (chars-received)                                 (with-open-stream (input-stream (il:openstream "{RS232}"                                                                        'il:input))                                        (loop (loop                     (il:* il:|;;| "wait till readp goes high.")                                                    (when (il:readp input-stream)                                                          (return))                                                    (il:block 100))                                              (time (setq chars-received (get-data input-stream))                                                    :output *standard-output*)                                              (format *standard-output* "~%~s characters received.~%"                                                      chars-received)))))(il:putprops il:testreceive il:copyright ("Xerox Corporation" 1987 1988))(il:declare\: il:dontcopy  (il:filemap (nil)))il:stop