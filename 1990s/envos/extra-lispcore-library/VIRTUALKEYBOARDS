(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "XCL" BASE 10)(FILECREATED "13-Jun-90 01:12:25" |{DSK}<usr>local>lde>lispcore>library>VIRTUALKEYBOARDS.;2| 133851       |changes| |to:|  (VARS VIRTUALKEYBOARDSCOMS)                       (FNS VKBD.CLEAR-KEY-DISPLAY VKBD.DRAW-KEY-CAPS)      |previous| |date:| "15-Dec-88 18:31:20" |{DSK}<usr>local>lde>lispcore>library>VIRTUALKEYBOARDS.;1|); Copyright (c) 1985, 1986, 1987, 1988, 1990 by Venue & Xerox Corporation.  All rights reserved.(PRETTYCOMPRINT VIRTUALKEYBOARDSCOMS)(RPAQQ VIRTUALKEYBOARDSCOMS       ((PROP (MAKEFILE-ENVIRONMENT FILETYPE)              VIRTUALKEYBOARDS)        (FNS FINDVIRTUALKEYBOARD PROCESS.KEYBOARD VKBD.CREATE-KEYACTION-TABLE VKBD.WINDOWMENUFN              VKBD.WINDOWMENUINIT)        (FNS DEFINEKEYBOARD)        (FNS VKBD.ADD-ITEM-TO-BACKGROUND-MENU VKBD.INIT VKBD.CREATE-DEFAULT-KEYBOARD              VKBD.ADD-DEFAULT-KEYBOARD)        (FNS VKBD.LOAD-FILE-COMMAND VKBD.LOAD-KEYBOARD-FILE VKBD.STORE-FILE-COMMAND              VKBD.STORE-KEYBOARD-FILE)        (FNS SWITCHKEYBOARDS VKBD.ASSIGNABLE-KEYP VKBD.BUTTONEVENTFN VKBD.CENTER-BITMAP-IN-REGION              VKBD.CHAR-ASSIGNMENTP VKBD.CLEAR-KEY-DISPLAY VKBD.COMPLETE-KEYBOARD              VKBD.CTRL-ASSIGNMENTP VKBD.EVENT-ASSIGNMENTP VKBD.META-ASSIGNMENTP              VKBD.CREATE-KEYBOARD-BITMAP VKBD.CREATE-KEYBOARD-DISPLAY VKBD.CURSORMOVEDFN              VKBD.DISPLAY-CHARACTER VKBD.DISPLAY-EMPTY-KEY-CAP VKBD.DISPLAY-KEY              VKBD.DISPLAY-KEY-CHARACTERS VKBD.DRAW-KEY-CAPS VKBD.ERASE-FRAME VKBD.EXTEND-REGION              VKBD.FETCH-KEY-ASSIGNMENT VKBD.FRAME-KEY VKBD.GET-CONFIGURATION              VKBD.GET-CURRENT-KEY-ASSIGNMENT VKBD.GET-KEY-AND-REGIONS-OF-CURSOR-POSITION              VKBD.GET-KEY-REGIONS VKBD.GET-NON-CHAR-LABEL VKBD.ICONFN VKBD.INVERT-LOCK-KEYS              VKBD.INVERT-SHIFT-KEYS VKBD.TRANSLATE-KEY-ID VKBD.INVERT-KEY VKBD.INVERT-REGION              VKBD.KEY-ID-TO-KEY-NAMES VKBD.KEY-NAME-TO-KEY-ID VKBD.KEYBOARD-IS-MACHINE-KEYBOARD              VKBD.KEYBOARD-WINDOW-REPAINTFN VKBD.LOCK-ASSIGNMENTP VKBD.LOCK-KEYP VKBD.LOCK/NOLOCK              VKBD.LOCKDOWN-ASSIGNMENTP VKBD.LOCKUP-ASSIGNMENTP VKBD.LOWER-HALF-REGION              VKBD.PARSE-CHAR-CODE VKBD.PARSE-KEY-ASSIGNMENT VKBD.PERFORM-KEY-ASSIGNMENT              VKBD.POP-MENU-AND-SWITCH-KEYBOARDS VKBD.POP-UP-KEYBOARDS-MENU              VKBD.POSITION-IS-IN-KEY-REGION VKBD.REMOVE-KEYBOARD-COMMAND VKBD.RESET-KEYBOARD-WINDOW              VKBD.SEND-CHARACTER VKBD.SHIFT-ASSIGNMENTP VKBD.SHIFTED-CHAR VKBD.UNDEFINE-KEYBOARD              VKBD.UNION-REGIONS VKBD.UNSHIFTED-CHAR VKBD.UPPER-HALF-REGION)        (RECORDS KEYBOARDCONFIGURATION VIRTUALKEYBOARD)        (INITVARS (VKBD.DEFAULT-CONFIGURATION-NAME (MACHINETYPE))               (VKBD.KNOWN-KEYBOARDS NIL))        (VARS VKBD.BACKGROUND-MENU-SUBITEMS VKBD.NON-CHAR-ASSIGNMENTS-LABELS               VKBD.WINDOW-MENU-SUBITEMS VKBD.CONFIGURATIONS)        (BITMAPS VKBD.ICON VKBD.MASK)        (GLOBALVARS VKBD.BACKGROUND-MENU-SUBITEMS VKBD.DEFAULT-CONFIGURATION-NAME                VKBD.KNOWN-KEYBOARDS VKBD.NON-CHAR-ASSIGNMENTS-LABELS VKBD.ICON VKBD.MASK                VKBD.CONFIGURATIONS)        (COMS (DECLARE\: FIRST (P (MOVD? '\\KEYBOARDEVENTFN '\\OLDKEYBOARDEVENTFN)))              (FNS VKBD.\\KEYBOARDEVENTFN VKBD.RESETKEYACTIONTABLES)              (P (MOVD 'VKBD.\\KEYBOARDEVENTFN '\\KEYBOARDEVENTFN)))        (COMS (DECLARE\: FIRST (P (MOVD? 'KEYACTION 'OLDKEYACTION)))              (FNS NEWKEYACTION)              (P (MOVD 'NEWKEYACTION 'KEYACTION))              (INITVARS (MODEKEYS))              (VARS MODEACTIONS)              (GLOBALVARS MODEKEYS MODEACTIONS))        (ADDVARS (BREAKRESETFORMS ((LAMBDA (K)                                          (PROCESS.KEYBOARD NIL K))                                   'DEFAULT)))        (P (VKBD.INIT))        (FILES ICONW)))(PUTPROPS VIRTUALKEYBOARDS MAKEFILE-ENVIRONMENT (:PACKAGE "IL" :READTABLE "XCL" :BASE 10))(DEFINEQ(FINDVIRTUALKEYBOARD  (LAMBDA (KEYBOARDNAME CONFIGURATIONNAME)               (* \; "Edited 15-Dec-88 17:48 by jds")    (COND       ((NULL CONFIGURATIONNAME)        (SETQ CONFIGURATIONNAME (COND                                   ((LISTP KEYBOARDNAME)                                    (|fetch| (VIRTUALKEYBOARD KEYBOARDCONFIGURATION) |of|                                                                                         KEYBOARDNAME                                           ))                                   (T (SELECTQ (MACHINETYPE)                                          (MAIKO 'DORADO)                                          (MACHINETYPE)))))))    (COND       ((LISTP KEYBOARDNAME)        (SETQ KEYBOARDNAME (|fetch| (VIRTUALKEYBOARD KEYBOARDNAME) |of| KEYBOARDNAME))))                                                             (* \;                                                            "What about upper/lowercase coercions?")    (|for| KB |in| VKBD.KNOWN-KEYBOARDS |when| (AND (EQ KEYBOARDNAME (|fetch|                                                                                  (VIRTUALKEYBOARD                                                                                   KEYBOARDNAME)                                                                                    |of| KB))                                                                (EQ CONFIGURATIONNAME                                                                    (|fetch| (VIRTUALKEYBOARD                                                                                                                                                                  KEYBOARDCONFIGURATION                                                                                  ) |of| KB)))       |do| (RETURN KB))))(PROCESS.KEYBOARD  (LAMBDA (PROCESS/WINDOW KEYBOARD)                      (* \; "Edited 15-Dec-88 17:54 by jds")(* |;;;| "Get/set the keyboard just for this process/window.  Value is previous keyboard.")    (PROG (KEYACTIONTABLE (PROCESS (COND                                      ((NULL PROCESS/WINDOW)                                       (TTY.PROCESS))                                      ((PROCESSP PROCESS/WINDOW)                                       PROCESS/WINDOW)                                      ((AND (WINDOWP PROCESS/WINDOW)                                            (WINDOWPROP PROCESS/WINDOW 'PROCESS)))                                      (T (THIS.PROCESS)))))          (SELECTQ (MACHINETYPE)              (MAIKO                      (* |;;| "Can't change the key assignments on Maiko for now, so just return.")                     (PROMPTPRINT "You can't switch keyboards on Suns yet, sorry.")                     (RETURN))              NIL)          (COND             (KEYBOARD                                       (* \;                                                    "Get/create the KEYACTIONTABLE for the KEYBOARD")                    (SETQ KEYACTIONTABLE (VKBD.CREATE-KEYACTION-TABLE KEYBOARD))                    (PROCESSPROP PROCESS 'KEYACTION KEYACTIONTABLE)                    (COND                       ((TTY.PROCESSP PROCESS)               (* \; "install the key action table")                                                             (* \;                                                          "Hack--wait until dangerous shifts are up")                        (|while| (OR (SHIFTDOWNP 'META)                                         (SHIFTDOWNP 'CTRL)))                        (SETQ \\CURRENTKEYACTION (OR KEYACTIONTABLE (KEYACTIONTABLE)))))                    (RETURN (OR (PROCESSPROP PROCESS 'KEYBOARD KEYBOARD)                                'DEFAULT)))             (T (RETURN (OR (PROCESSPROP PROCESS 'KEYBOARD)                            'DEFAULT)))))))(vkbd.create-keyaction-table  (lambda (new-keyboard oldtable)                        (* \; "Edited 15-Dec-87 16:27 by Snow")    (prog (keyboardname keyaction-table)          (cond             ((and (atom new-keyboard)                   (setq new-keyboard (findvirtualkeyboard new-keyboard))))             ((memb new-keyboard vkbd.known-keyboards))             (t (error "INVALID KEYBOARD" new-keyboard)))          (setq keyboardname (|fetch| (virtualkeyboard keyboardname) |of| new-keyboard))          (cond             (oldtable (setq keyaction-table (resetkeyaction oldtable)))             ((setq keyaction-table (getprop keyboardname 'keyactiontable))              (return keyaction-table))             (t (setq keyaction-table (keyactiontable))))          (setq new-keyboard (vkbd.complete-keyboard (copy new-keyboard)))          (|for| key-assignment |in| (|fetch| (virtualkeyboard keyassignments)                                                |of| new-keyboard)             |do| (keyaction (vkbd.translate-key-id (car key-assignment)                                        (|fetch| (virtualkeyboard keyboardconfiguration)                                           |of| new-keyboard))                             (cdr key-assignment)                             keyaction-table))          (putprop keyboardname 'keyactiontable keyaction-table)          (return keyaction-table))))(vkbd.windowmenufn  (lambda (w)                                            (* \; "Edited 15-Dec-87 16:27 by Snow")    (let (keyboard)         (setq keyboard (vkbd.pop-up-keyboards-menu))         (and keyboard (process.keyboard w keyboard)))))(vkbd.windowmenuinit  (lambda nil                                            (* \; "Edited 15-Dec-87 16:28 by Snow")    (setq |WindowMenuCommands| (remove (sassoc '|Keyboard| |WindowMenuCommands|)                                      |WindowMenuCommands|))    (nconc1 |WindowMenuCommands| `(|Keyboard| (function (lambda (w)                                                          (switchkeyboards t nil w)))                                         "Changes the keyboard associated with this window."                                         ,vkbd.window-menu-subitems))    (setq |WindowMenu| nil))))(DEFINEQ(definekeyboard  (lambda (keyboard-object)                              (* \; "Edited 15-Dec-87 16:29 by Snow")(* |;;;| "The notion of DEFINING a keyboard is not a very good one.  the idea is that there is a global list VKBD.KNOWN-KEYBOARDS.  A keyboard added to this list is considered to be defined.  The parsing allow the user some flexibility in the way the assignments are specified, although most of the user will use the keyboard editor to create and define new keyboards")    (prog (parsed-list-of-key-assignments keyboard parsed-key-assignment assignable-keys                  configuration)          (setq configuration (vkbd.get-configuration (|fetch| (virtualkeyboard                                                                               keyboardconfiguration)                                                             |of| keyboard-object)))          (setq assignable-keys (|fetch| (keyboardconfiguration assignablekeys) |of|                                                                                         configuration                                       ))          (setq parsed-list-of-key-assignments (|for| key-assignment                                                  |in| (|fetch| (virtualkeyboard                                                                                keyassignments)                                                              |of| keyboard-object)                                                  |join| (|if| (and (setq                                                                              parsed-key-assignment                                                                             (                                                                          vkbd.parse-key-assignment                                                                              key-assignment                                                                               configuration))                                                                            (fmemb (car                                                                                 parsed-key-assignment                                                                                        )                                                                                   assignable-keys))                                                                 |then| (list                                                                                 parsed-key-assignment                                                                                  )                                                               |else| (error))))          (|if| (setq keyboard (findvirtualkeyboard keyboard-object))              |then| (|replace| (virtualkeyboard keyassignments) |of| keyboard                            |with| parsed-list-of-key-assignments)            |else| (|replace| (virtualkeyboard keyassignments) |of| keyboard-object                          |with| parsed-list-of-key-assignments)                  (setq vkbd.known-keyboards (cons keyboard-object vkbd.known-keyboards)))))))(DEFINEQ(vkbd.add-item-to-background-menu  (lambda (label command message subitemlist)            (* \; "Edited 15-Dec-87 16:29 by Snow")    (setq |BackgroundMenuCommands| (remove (sassoc label |BackgroundMenuCommands|)                                          |BackgroundMenuCommands|))    (nconc1 |BackgroundMenuCommands| (list label command message subitemlist))    (setq |BackgroundMenu| nil)))(VKBD.INIT  (LAMBDA NIL                                            (* \; "Edited 15-Dec-88 17:36 by jds")                                                             (* |sm| "15-Aug-85 14:34")    (VKBD.ADD-ITEM-TO-BACKGROUND-MENU "Keyboard" ''(SWITCHKEYBOARDS T NIL)           "Displays a menu for switching keyboards" VKBD.BACKGROUND-MENU-SUBITEMS)    (VKBD.WINDOWMENUINIT)    (SELECTQ (MACHINETYPE)        (DORADO (VKBD.LOAD-KEYBOARD-FILE 'DORADOKEYBOARDS)                (VKBD.ADD-DEFAULT-KEYBOARD 'DORADO))        (DANDELION (VKBD.LOAD-KEYBOARD-FILE 'DANDELIONKEYBOARDS)                   (VKBD.ADD-DEFAULT-KEYBOARD 'DANDELION))        (DOVE (VKBD.LOAD-KEYBOARD-FILE 'DOVEKEYBOARDS)              (VKBD.ADD-DEFAULT-KEYBOARD 'DOVE))        (MAIKO (VKBD.LOAD-KEYBOARD-FILE 'DORADOKEYBOARDS)               (VKBD.ADD-DEFAULT-KEYBOARD 'DORADO))        (PROGN (VKBD.LOAD-KEYBOARD-FILE 'DORADOKEYBOARDS)               (VKBD.ADD-DEFAULT-KEYBOARD 'DORADO)))))(vkbd.create-default-keyboard  (lambda (configuration)                                (* \; "Edited 15-Dec-87 16:29 by Snow")    (setq configuration (vkbd.get-configuration configuration))    (|create| virtualkeyboard           keyboardname _ 'default           keyassignments _ (copy (|fetch| (keyboardconfiguration defaultassignment) |of|                                                                                                                                                                                 configuration                                         ))           keyboardconfiguration _ (|fetch| (keyboardconfiguration configurationname)                                      |of| configuration))))(vkbd.add-default-keyboard  (lambda (machinetype)                                  (* \; "Edited 15-Dec-87 16:30 by Snow")(* |;;;| "It is useful practice to be able to switch back to the original key assignments.  Thus the program is adding one special keyboard with the name DEFAULT which is the current machine default keyboard.")    (setq machinetype (or machinetype (machinetype)))    (|bind| default |while| (setq default (findvirtualkeyboard 'default machinetype))       |do| (setq vkbd.known-keyboards (remove default vkbd.known-keyboards)))    (setq vkbd.known-keyboards (cons (vkbd.create-default-keyboard machinetype)                                     vkbd.known-keyboards))    (cond       ((eq machinetype (machinetype))        (vkbd.create-keyaction-table 'default \\defaultkeyaction))))))(DEFINEQ(vkbd.load-file-command  (lambda (redefine? delete-first?)                      (* \; "Edited 15-Dec-87 16:30 by Snow")    (prog (f)          (setq f (mkatom (promptforword "ENTER FILE NAME: " nil nil promptwindow nil 'tty)))          (|if| f              |then| (vkbd.load-keyboard-file f redefine? delete-first?)))))(vkbd.load-keyboard-file  (lambda (filename redefine? delete-current-definitions?)                                                             (* \; "Edited 15-Dec-87 16:30 by Snow")    (prog ((new-keyboard-list (car (readfile filename))))          (cond             (delete-current-definitions? (setq vkbd.known-keyboards new-keyboard-list)                    (vkbd.add-default-keyboard))             (t (|for| keyboard |in| new-keyboard-list |bind| kb                   |do| (cond                               ((setq kb (findvirtualkeyboard keyboard))                                (cond                                   (redefine? (|replace| (virtualkeyboard keyassignments)                                                 |of| kb |with| (|fetch| (virtualkeyboard                                                                                      keyassignments)                                                                           |of| keyboard))                                          (|replace| (virtualkeyboard keyboardconfiguration)                                             |of| kb |with| (|fetch| (virtualkeyboard                                                                                                                                                                  keyboardconfiguration                                                                                  ) |of| keyboard                                                                           )))))                               (t (setq vkbd.known-keyboards (nconc1 vkbd.known-keyboards keyboard)))                               )))))))(vkbd.store-file-command  (lambda (f)                                            (* \; "Edited 15-Dec-87 16:31 by Snow")    (setq f (promptforword "ENTER FILE NAME: " nil nil promptwindow nil 'tty))    (|if| f        |then| (vkbd.store-keyboard-file (mkatom f))      |else| (promptprint "FILE NOT FOUND"))))(vkbd.store-keyboard-file  (lambda (filename configurationname)                   (* \; "Edited 15-Dec-87 16:31 by Snow")    (let ((strm (openstream filename 'output 'new)))         (print (|if| configurationname                    |then| (|for| kb |in| vkbd.known-keyboards                                  |when| (eq configurationname (|fetch| (virtualkeyboard                                                                                                                                                                 keyboardconfiguration                                                                                 ) |of| kb))                                  |collect| kb)                  |else|                                 (* \;                  "(PRINT (REMOVE (FINDVIRTUALKEYBOARD (QUOTE DEFAULT)) VKBD.KNOWN-KEYBOARDS) STRM)")                        vkbd.known-keyboards)                strm filerdtbl)         (closef? strm)         (promptprint (concat "Current known keyboards are stored in " (fullname strm)))         (fullname strm)))))(DEFINEQ(switchkeyboards  (lambda (switch-flg display-flg process new-keyboard display-position)                                                             (* \; "Edited 15-Dec-87 16:32 by Snow")(* |;;;| "This is the main function of the package.  SWITCH-FLG and DISPLAY-FLG will produce the 3 logical combinations of switching a keyboard.  The 4th comb NIl & NIL is NOOP.  The call to VKBD.PERFORM-KEY-ASSIGNMENT is the the actual interaction with the 'real' world.  Any change of the KEYACTION handeling should be reflected here.")    (prog (window)          (cond             ((null new-keyboard)              (setq new-keyboard (vkbd.pop-up-keyboards-menu))))          (cond             ((atom new-keyboard)              (setq new-keyboard (findvirtualkeyboard new-keyboard))))          (cond             ((null new-keyboard)              (return nil)))          (cond             (switch-flg (process.keyboard process new-keyboard)))          (cond             (display-flg (setq new-keyboard (vkbd.complete-keyboard (copy new-keyboard)))                    (* |;;| "THIS IS NECCESSARY TO ENABLE THE MENU TO GENERATE THE RIGHT CHARACTERS FOR THE KEYS THAT WERE NOT REDEFINE")                    (setq window (vkbd.create-keyboard-display new-keyboard display-position                                        'vkbd.send-character))))                                                             (* \; "(RETURN OLD-KEYACTIONS)")      )))(vkbd.assignable-keyp  (lambda (key window)                                   (* \; "Edited 15-Dec-87 16:32 by Snow")(* |;;;| "the assignable keys are specified in the configuration of the keyboard;  Sometimes we don't want to allow the user to change the assignments of certain keys to avoid disasters")    (member key (|fetch| (keyboardconfiguration assignablekeys) |of| (                                                                            vkbd.get-configuration                                                                              window)))))(vkbd.buttoneventfn  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:32 by Snow")(* |;;;| "This is a general 'menu' function for the keyboard when used as a menu --- it is used for all such uses: When displaying a virtual keyboard, when editing one and when editing a default assignments for a configuration.  The only difference is what will be the action taken when a KEY was selected.  This will be determined by the property VKBD.MENUFN which specify the name of the function that should be called.  This function will get 3 arguments : The KEYID, the WINDOW and the mouse key;  In the regular keyboard display this function will send a character to the system buffer.  In the Editor it will make the key the CURRENT key.  In the configuration info window it will display information about the key")    (prog (mouse-position shaded-key last-mouse-key current-key-and-regions shift-is-down)          (setq mouse-position (cursorposition nil window))          (totopw window)                                    (* \;                                "This should be checked if changes to the keyboard handling is done")          (setq shift-is-down (or (keydownp 'rshift)                                  (keydownp 'lshift)))          (setq shaded-key (windowprop window 'vkbd.shaded-key))          (setq last-mouse-key (windowprop window 'vkbd.mouse-button))          (setq current-key-and-regions (vkbd.get-key-and-regions-of-cursor-position                                                mouse-position window))          (cond             ((mousestate up)              (cond                 ((and shaded-key (eq shaded-key (car current-key-and-regions)))                  (apply (windowprop window 'vkbd.menufn)                         (list (windowprop window 'vkbd.shaded-key)                               window                               (windowprop window 'vkbd.last-mouse-state)))                  (vkbd.reset-keyboard-window window))))             ((or (mousestate (only left))                  (mousestate (only middle)))              (windowprop window 'vkbd.shaded-key (car current-key-and-regions))              (|for| region |in| (cdr current-key-and-regions) |do| (vkbd.invert-region                                                                                 region window))              (windowprop window 'vkbd.last-mouse-state (cond                                                           ((lastmousestate (only left))                                                            'left)                                                           (t 'middle)))              (cond                 ((or shift-is-down (lastmousestate (only middle)))                  (vkbd.invert-shift-keys window)                  (windowprop window 'vkbd.shift-down t))))))))(vkbd.center-bitmap-in-region  (lambda (bm region window allignment)                  (* \; "Edited 15-Dec-87 16:32 by Snow")    (bitblt bm 0 0 window (iplus (|fetch| (region left) |of| region)                                 (iquotient (idifference (|fetch| (region width) |of| region)                                                   (bitmapwidth bm))                                        2))           (cond              ((greaterp (bitmapheight bm)                      (|fetch| (region height) |of| region))               (cond                  ((eq allignment 'top)                   (idifference (|fetch| (region bottom) |of| region)                          (idifference (bitmapheight bm)                                 (|fetch| (region height) |of| region))))                  ((eq allignment 'bottom)                   (|fetch| (region bottom) |of| region))                  (t (iplus (|fetch| (region bottom) |of| region)                            (iquotient (idifference (|fetch| (region height) |of| region)                                              (bitmapheight bm))                                   2)))))              (t (iplus (|fetch| (region bottom) |of| region)                        (iquotient (idifference (|fetch| (region height) |of| region)                                          (bitmapheight bm))                               2))))           nil nil 'input 'paint)))(vkbd.char-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:32 by Snow")    (and (cadr assignment)         (listp (cadr assignment)))))(VKBD.CLEAR-KEY-DISPLAY  (LAMBDA (KEY-NAME VKBD-WINDOW)                       (* \; "Edited 13-Jun-90 01:10 by mitani")    (|for| REGION |in| (VKBD.GET-KEY-REGIONS KEY-NAME VKBD-WINDOW)       |do| (PROG ((LEFT (|fetch| (REGION LEFT) |of| REGION))                       (BOTTOM (|fetch| (REGION BOTTOM) |of| REGION))                       (WIDTH (|fetch| (REGION WIDTH) |of| REGION))                       (HEIGHT (|fetch| (REGION HEIGHT) |of| REGION)))                      (BITBLT NIL NIL NIL VKBD-WINDOW (ADD1 LEFT)                             (ADD1 BOTTOM)                             (IDIFFERENCE WIDTH 2)                             (IDIFFERENCE HEIGHT 2)                             'TEXTURE                             'REPLACE WHITESHADE)                      (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)                             (ADD1 BOTTOM)                             (ITIMES (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)                                            BOTTOM)                                    (BITMAPBIT VKBD-WINDOW LEFT (ADD1 BOTTOM))))                      (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))                             (ADD1 BOTTOM)                             (ITIMES (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))                                            BOTTOM)                                    (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (SUB1 WIDTH))                                           (ADD1 BOTTOM))))                      (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)                             (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2))                             (ITIMES (BITMAPBIT VKBD-WINDOW (ADD1 LEFT)                                            (IPLUS BOTTOM (ADD1 HEIGHT)))                                    (BITMAPBIT VKBD-WINDOW LEFT (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2))                                           )))                      (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))                             (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2))                             (ITIMES (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (SUB1 WIDTH))                                            (IPLUS BOTTOM (IDIFFERENCE HEIGHT 2)))                                    (BITMAPBIT VKBD-WINDOW (IPLUS LEFT (IDIFFERENCE WIDTH 2))                                           (IPLUS BOTTOM (SUB1 HEIGHT)))))))))(vkbd.complete-keyboard  (lambda (keyboard)                                     (* \; "Edited 15-Dec-87 16:33 by Snow")                                                             (* \;              "Fill in keys that aren't mentioned in the new keyboard, using this machine's default")    (prog (configuration old-key-assignments default-key-assignments)          (setq configuration (vkbd.get-configuration (|fetch| (virtualkeyboard                                                                               keyboardconfiguration)                                                             |of| keyboard)))          (setq old-key-assignments (|fetch| (virtualkeyboard keyassignments) |of| keyboard))          (|replace| keyassignments |of| keyboard             |with| (cond                           ((and (vkbd.keyboard-is-machine-keyboard keyboard)                                 old-key-assignments)        (* \;                         "If it's a keyboard configured for this machine, make the key assignments.")                            (|for| key |in| (|fetch| (keyboardconfiguration keysidlist)                                                       |of| configuration)                               |collect| (or (fassoc key old-key-assignments)                                                 (vkbd.get-current-key-assignment key                                                         configuration))))                           (t (setq default-key-assignments (|fetch| (keyboardconfiguration                                                                          defaultassignment)                                                               |of| configuration))                              (|for| key |in| (|fetch| (keyboardconfiguration keysidlist)                                                         |of| configuration)                                 |collect| (or (fassoc key old-key-assignments)                                                   (fassoc key default-key-assignments))))))          (return keyboard))))(vkbd.ctrl-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:33 by Snow")    (and (eq (cadr assignment)             'ctrldown)         (eq (cddr assignment)             'ctrlup))))(vkbd.event-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:34 by Snow")    (and (eq (cadr assignment)             'event)         (eq (cddr assignment)             'event))))(vkbd.meta-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:34 by Snow")    (and (eq (cadr assignment)             'metadown)         (eq (cddr assignment)             'metaup))))(vkbd.create-keyboard-bitmap  (lambda (configuration)                                (* \; "Edited 15-Dec-87 16:35 by Snow")    (prog (bm keys-region bm-width bm-height max-region)          (cond             ((atom configuration)              (setq configuration (vkbd.get-configuration configuration))))          (setq max-region (apply* 'vkbd.union-regions (|for| k |in| (|fetch|                                                                              (keyboardconfiguration                                                                               keyregions)                                                                                |of|                                                                                       configuration)                                                          |collect| (cadr k))))          (setq bm-width (iplus (itimes 2 (|fetch| (region left) |of| max-region))                                (|fetch| (region width) |of| max-region)))          (setq bm-height (iplus (itimes 2 (|fetch| (region bottom) |of| max-region))                                 (|fetch| (region height) |of| max-region)))          (setq bm (bitmapcreate bm-width bm-height))          (bitblt nil nil nil bm 0 0 bm-width bm-height 'texture 'replace blackshade)          (bitblt nil nil nil bm 1 1 (idifference bm-width 2)                 (idifference bm-height 2)                 'texture                 'replace                 (|fetch| (keyboardconfiguration backgroundshade) |of| configuration))          (|for| key-and-regions |in| (|fetch| (keyboardconfiguration keyregions)                                                 |of| configuration)             |do| (vkbd.display-empty-key-cap (cdr key-and-regions)                             bm))          (return bm))))(vkbd.create-keyboard-display  (lambda (keyboard menu-position menu-function bm)      (* \; "Edited 15-Dec-87 16:40 by Snow")    (prog (window window-width window-height keyboard-bitmap configuration)          (setq configuration (vkbd.get-configuration (|fetch| keyboardconfiguration                                                             |of| keyboard)))          (setq keyboard-bitmap (or bm (vkbd.create-keyboard-bitmap configuration)))          (setq window-width (iplus 8 (bitmapwidth keyboard-bitmap)))          (setq window-height (iplus 18 (bitmapheight keyboard-bitmap)))          (cond             ((not menu-position)              (setq menu-position (getboxposition window-width window-height))))          (setq window (createw (createregion (|fetch| (position xcoord) |of| menu-position)                                       (|fetch| (position ycoord) |of| menu-position)                                       window-width window-height)                              (concat "Virtual Keyboard : " (|fetch| (virtualkeyboard                                                                                 keyboardname)                                                               |of| keyboard))))          (windowprop window 'vkbd.keyboard keyboard)          (windowprop window 'buttoneventfn 'vkbd.buttoneventfn)          (windowprop window 'cursormovedfn 'vkbd.cursormovedfn)          (windowprop window 'cursoroutfn 'vkbd.reset-keyboard-window)          (windowprop window 'cursorinfn 'vkbd.reset-keyboard-window)          (windowprop window 'vkbd.menufn menu-function)          (windowprop window 'repaintfn 'vkbd.keyboard-window-repaintfn)          (windowprop window 'reshapefn 'don\'t)          (windowprop window 'iconfn 'vkbd.iconfn)          (redisplayw window)          (return window))))(vkbd.cursormovedfn  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:41 by Snow")    (prog (mouse-position shaded-key current-key-and-regions shift-is-down)          (setq mouse-position (cursorposition nil window))          (setq shaded-key (windowprop window 'vkbd.shaded-key))          (setq shift-is-down (or (keydownp 'lshift)                                  (keydownp 'rshift)))          (cond             (shaded-key (cond                            ((not (vkbd.position-is-in-key-region shaded-key mouse-position                                          window))                             (vkbd.reset-keyboard-window window))                            (t (return t)))))          (cond             ((mousestate (or (only left)                              (only middle)))              (setq current-key-and-regions (vkbd.get-key-and-regions-of-cursor-position                                                    mouse-position window))              (cond                 (current-key-and-regions (|for| region |in| (cdr current-key-and-regions)                                             |do| (vkbd.invert-region region window))                        (cond                           ((or shift-is-down (lastmousestate (only middle)))                            (vkbd.invert-shift-keys window)                            (windowprop window 'vkbd.shift-down t)))                        (windowprop window 'vkbd.shaded-key (car current-key-and-regions))                        (windowprop window 'vkbd.last-mouse-state (cond                                                                     ((lastmousestate (only left))                                                                      'left)                                                                     (t 'middle))))))))))(vkbd.display-character  (lambda (char region char-labels window conf allignment)                                                             (* \; "Edited 15-Dec-87 16:41 by Snow")    (prog (char-label)          (setq region (vkbd.extend-region region -1))          (cond             ((setq char-label (fassoc char char-labels))              (dspfont (fontcreate (|fetch| (keyboardconfiguration keylabelsfont) |of| conf))                     window)              (centerprintinregion (cadr char-label)                     region window))             (t (vkbd.center-bitmap-in-region (getcharbitmap char (fontcreate (|fetch|                                                                                   (                                                                                keyboardconfiguration                                                                                                                                                                      keyboarddisplayfont                                                                                    ) |of| conf))                                                         )                       region window allignment)(* |;;;| "(DSPFONT (FONTCREATE (fetch (KEYBOARDCONFIGURATION KEYBOARDDISPLAYFONT) of CONF)) WINDOW) (CENTERPRINTINREGION (MKSTRING (CHARACTER CHAR)) REGION WINDOW)")                )))))(vkbd.display-empty-key-cap  (lambda (key-regions bm)                               (* \; "Edited 15-Dec-87 16:41 by Snow")    (prog (left bottom width height)          (|for| region |in| key-regions             |do| (setq left (|fetch| (region left) |of| region))                   (setq bottom (|fetch| (region bottom) |of| region))                   (setq width (|fetch| (region width) |of| region))                   (setq height (|fetch| (region height) |of| region))                   (bitblt nil nil nil bm left bottom width height 'texture 'replace blackshade)                   (bitblt nil nil nil bm (add1 left)                          (add1 bottom)                          (idifference width 2)                          (idifference height 2)                          'texture                          'replace whiteshade)                   (bitmapbit bm left bottom 0)                   (bitmapbit bm (iplus left (sub1 width))                          bottom 0)                   (bitmapbit bm left (iplus bottom (sub1 height))                          0)                   (bitmapbit bm (iplus left (sub1 width))                          (iplus bottom (sub1 height))                          0))          (cond             ((cdr key-regions)              (|for| region1 |in| key-regions                 |do| (|for| region2 |in| key-regions |bind| intersect                             |do| (cond                                         ((not (equal region1 region2))                                          (setq intersect (intersectregions                                                           (createregion (sub1 (|fetch|                                                                                (region left)                                                                                  |of| region1))                                                                  (sub1 (|fetch| (region bottom)                                                                           |of| region1))                                                                  (iplus (|fetch| (region width)                                                                            |of| region1)                                                                         2)                                                                  (iplus (|fetch| (region height)                                                                            |of| region1)                                                                         2))                                                           (createregion (sub1 (|fetch|                                                                                (region left)                                                                                  |of| region2))                                                                  (sub1 (|fetch| (region bottom)                                                                           |of| region2))                                                                  (iplus (|fetch| (region width)                                                                            |of| region2)                                                                         2)                                                                  (iplus (|fetch| (region height)                                                                            |of| region2)                                                                         2))))                                          (cond                                             (intersect (cond                                                           ((greaterp (|fetch| (region height)                                                                         |of| intersect)                                                                   (|fetch| (region width)                                                                      |of| intersect))                                                            (setq intersect                                                             (createregion (|fetch| (region                                                                                         left)                                                                              |of| intersect)                                                                    (add1 (|fetch| (region bottom                                                                                              )                                                                             |of| intersect))                                                                    (|fetch| (region width)                                                                       |of| intersect)                                                                    (idifference (|fetch|                                                                                  (region height)                                                                                    |of|                                                                                           intersect)                                                                           2)))                                                            (bitblt nil nil nil bm                                                                   (|fetch| (region left)                                                                      |of| intersect)                                                                   (|fetch| (region bottom)                                                                      |of| intersect)                                                                   (|fetch| (region width)                                                                      |of| intersect)                                                                   (|fetch| (region height)                                                                      |of| intersect)                                                                   'texture                                                                   'replace blackshade)                                                            (bitblt nil nil nil bm                                                                   (|fetch| (region left)                                                                      |of| intersect)                                                                   (add1 (|fetch| (region bottom)                                                                            |of| intersect))                                                                   (|fetch| (region width)                                                                      |of| intersect)                                                                   (idifference (|fetch|                                                                                 (region height)                                                                                   |of| intersect                                                                                 )                                                                          2)                                                                   'texture                                                                   'replace whiteshade))                                                           (t (setq intersect                                                               (createregion                                                                (add1 (|fetch| (region left)                                                                         |of| intersect))                                                                (|fetch| (region bottom)                                                                   |of| intersect)                                                                (idifference (|fetch|                                                                              (region width)                                                                                |of| intersect)                                                                       2)                                                                (|fetch| (region height)                                                                   |of| intersect)))                                                              (bitblt nil nil nil bm                                                                     (|fetch| (region left)                                                                        |of| intersect)                                                                     (|fetch| (region bottom)                                                                        |of| intersect)                                                                     (|fetch| (region width)                                                                        |of| intersect)                                                                     (|fetch| (region height)                                                                        |of| intersect)                                                                     'texture                                                                     'replace blackshade)                                                              (bitblt nil nil nil bm                                                                     (add1 (|fetch| (region                                                                                         left)                                                                              |of| intersect))                                                                     (|fetch| (region bottom)                                                                        |of| intersect)                                                                     (idifference (|fetch|                                                                                   (region width)                                                                                     |of|                                                                                            intersect)                                                                            2)                                                                     (|fetch| (region height)                                                                        |of| intersect)                                                                     'texture                                                                     'replace whiteshade))))))))))))))(vkbd.display-key  (lambda (key-id window conf key-labels char-labels)    (* \; "Edited 15-Dec-87 17:40 by Snow")    (prog (conf key-assignment label-string label key-region)          (vkbd.clear-key-display key-id window)          (setq conf (or conf (vkbd.get-configuration window)))          (setq key-labels (or key-labels (|fetch| (keyboardconfiguration keylabels) |of|                                                                                         conf)))          (cond             ((setq label (fassoc key-id key-labels))              (setq label-string (cadr label)))             (t (setq key-assignment (vkbd.fetch-key-assignment key-id window))                (setq label-string (vkbd.get-non-char-label key-assignment))))          (cond             (label-string (setq key-region (car (vkbd.get-key-regions key-id window)))                    (dspfont (fontcreate (|fetch| (keyboardconfiguration keylabelsfont)                                            |of| conf))                           window)                    (cond                       ((and (listp label-string)                             (cdr label-string))                        (centerprintinregion (car label-string)                               (vkbd.upper-half-region key-region)                               window)                        (centerprintinregion (cadr label-string)                               (vkbd.lower-half-region key-region)                               window))                       (t (centerprintinregion label-string key-region window))))             (t (vkbd.display-key-characters key-assignment window conf char-labels))))))(vkbd.display-key-characters  (lambda (key-assignment window conf char-labels)       (* \; "Edited 15-Dec-87 17:10 by Snow")    (prog (key-region char-labels conf shifted-char unshifted-char)          (cond             ((and key-assignment (listp (cadr key-assignment)))              (setq conf (or conf (vkbd.get-configuration window)))              (setq char-labels (or char-labels (|fetch| (keyboardconfiguration charlabels)                                                   |of| conf)))              (setq key-region (car (vkbd.get-key-regions (car key-assignment)                                           conf)))              (setq shifted-char (vkbd.shifted-char key-assignment))              (setq unshifted-char (vkbd.unshifted-char key-assignment))              (cond                 ((eq shifted-char unshifted-char)                  (vkbd.display-character shifted-char key-region char-labels window conf))                 (t (vkbd.display-character unshifted-char (vkbd.lower-half-region key-region                                                                      )                           char-labels window conf 'bottom)                    (vkbd.display-character shifted-char (vkbd.upper-half-region key-region)                           char-labels window conf 'top))))))))(VKBD.DRAW-KEY-CAPS  (LAMBDA (LIST-OF-REGIONS BITMAP)                     (* \; "Edited 13-Jun-90 01:10 by mitani")    (|for| REGION |in| LIST-OF-REGIONS |do| (BITBLT NIL NIL NIL BITMAP                                                               (|fetch| (REGION LEFT)                                                                  |of| REGION)                                                               (|fetch| (REGION BOTTOM)                                                                  |of| REGION)                                                               (|fetch| (REGION WIDTH)                                                                  |of| REGION)                                                               (|fetch| (REGION HEIGHT)                                                                  |of| REGION)                                                               'TEXTURE                                                               'REPLACE BLACKSHADE)                                                     (BITBLT NIL NIL NIL BITMAP                                                            (ADD1 (|fetch| (REGION LEFT)                                                                     |of| REGION))                                                            (ADD1 (|fetch| (REGION BOTTOM)                                                                     |of| REGION))                                                            (IDIFFERENCE (|fetch| (REGION WIDTH)                                                                            |of| REGION)                                                                   2)                                                            (IDIFFERENCE (|fetch| (REGION HEIGHT)                                                                            |of| REGION)                                                                   2)                                                            'TEXTURE                                                            'REPLACE WHITESHADE))))(vkbd.erase-frame  (lambda (key window framesize)                         (* \; "Edited 15-Dec-87 16:42 by Snow")    (vkbd.frame-key key window (|fetch| (keyboardconfiguration backgroundshade)                                      |of| (vkbd.get-configuration window))           framesize)))(vkbd.extend-region  (lambda (region nbits)                                 (* \; "Edited 15-Dec-87 16:42 by Snow")    (cond       ((null nbits)        (setq nbits 1)))    (createregion (idifference (|fetch| (region left) |of| region)                         nbits)           (idifference (|fetch| (region bottom) |of| region)                  nbits)           (iplus (|fetch| (region width) |of| region)                  (itimes nbits 2))           (iplus (|fetch| (region height) |of| region)                  (itimes nbits 2)))))(vkbd.fetch-key-assignment  (lambda (key window)                                   (* \; "Edited 15-Dec-87 16:43 by Snow")    (fassoc key (|fetch| (virtualkeyboard keyassignments) |of| (windowprop window                                                                              'vkbd.keyboard)))))(vkbd.frame-key  (lambda (key window shade bits)                        (* \; "Edited 15-Dec-87 16:43 by Snow")    (prog (key-regions extended-region)          (setq key-regions (vkbd.get-key-regions key window))          (|for| region |in| key-regions |do| (setq extended-region (vkbd.extend-region                                                                                 region bits))                                                       (bitblt nil nil nil window (|fetch|                                                                                   (region left)                                                                                     |of|                                                                                       extended-region                                                                                   )                                                              (|fetch| (region bottom)                                                                 |of| extended-region)                                                              (|fetch| (region width)                                                                 |of| extended-region)                                                              (|fetch| (region height)                                                                 |of| extended-region)                                                              'texture                                                              'replace shade))          (vkbd.display-empty-key-cap key-regions window)          (vkbd.display-key key window)          (|if| (eq (windowprop window 'vkbd.shaded-key)                        key)              |then| (vkbd.invert-key key window)))))(VKBD.GET-CONFIGURATION  (LAMBDA (CONFNAME/WINDOW)                              (* \; "Edited 15-Dec-88 18:30 by jds")    (COND       ((WINDOWP CONFNAME/WINDOW)        (SETQ CONFNAME/WINDOW (|fetch| (VIRTUALKEYBOARD KEYBOARDCONFIGURATION)                                 |of| (WINDOWPROP CONFNAME/WINDOW 'VKBD.KEYBOARD)))))    (COND       ((AND CONFNAME/WINDOW (|type?| KEYBOARDCONFIGURATION CONFNAME/WINDOW))        CONFNAME/WINDOW)       (T (FASSOC (OR CONFNAME/WINDOW VKBD.DEFAULT-CONFIGURATION-NAME (SELECTQ (MACHINETYPE)                                                                          (MAIKO 'DORADO)                                                                          (MACHINETYPE)))                 VKBD.CONFIGURATIONS)))))(vkbd.get-current-key-assignment  (lambda (key window/configuration)                     (* \; "Edited 15-Dec-87 16:43 by Snow")    (cons key (keyaction (vkbd.translate-key-id key window/configuration)))))(vkbd.get-key-and-regions-of-cursor-position  (lambda (cursor-position window)                       (* \; "Edited 15-Dec-87 16:43 by Snow")    (|for| key-regions |in| (|fetch| (keyboardconfiguration keyregions)                                       |of| (vkbd.get-configuration window))       |thereis| (|for| region |in| (cdr key-regions) |thereis| (insidep region                                                                                       cursor-position                                                                                       )))))(vkbd.get-key-regions  (lambda (key-id configuration/window)                  (* \; "Edited 15-Dec-87 16:44 by Snow")    (cdr (fassoc key-id (|fetch| (keyboardconfiguration keyregions) |of| (                                                                             vkbd.get-configuration                                                                                                                                                                   configuration/window                                                                                  ))))))(vkbd.get-non-char-label  (lambda (key-assignment)                               (* \; "Edited 15-Dec-87 16:44 by Snow")    (cond       ((vkbd.shift-assignmentp key-assignment)        "SHIFT")       ((vkbd.lock-assignmentp key-assignment)        "LOCK")       ((vkbd.ctrl-assignmentp key-assignment)        "CTRL")       ((vkbd.lockup-assignmentp key-assignment)        '("LOCK" "UP"))       ((vkbd.lockdown-assignmentp key-assignment)        '("LOCK" "DOWN"))       ((vkbd.meta-assignmentp key-assignment)        "META")       ((vkbd.event-assignmentp key-assignment)        " ")       (t nil))))(vkbd.iconfn  (lambda (window icon)                                  (* \; "Edited 15-Dec-87 16:44 by Snow")    (cond       ((null icon)        (setq icon (titlediconw (|create| titledicon                                       icon _ vkbd.icon                                       mask _ vkbd.mask                                       titlereg _ (createregion 5 15 80 50))                          (|fetch| (virtualkeyboard keyboardname) |of| (windowprop                                                                                window                                                                                'vkbd.keyboard))                          (fontcreate 'gacha 8)))))    icon))(vkbd.invert-lock-keys  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:45 by Snow")    (|for| key-assignment |in| (|fetch| (virtualkeyboard keyassignments)                                          |of| (windowprop window 'vkbd.keyboard))       |when| (vkbd.lock-assignmentp key-assignment) |do| (vkbd.invert-key                                                                       (car key-assignment)                                                                       window))))(vkbd.invert-shift-keys  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:45 by Snow")    (|for| key-assignment |in| (|fetch| (virtualkeyboard keyassignments)                                          |of| (windowprop window 'vkbd.keyboard))       |when| (vkbd.shift-assignmentp key-assignment) |do| (vkbd.invert-key                                                                        (car key-assignment)                                                                        window))))(vkbd.translate-key-id  (lambda (key-id window/configuration)                  (* \; "Edited 15-Dec-87 16:46 by Snow")    (prog (mapping)          (setq window/configuration (vkbd.get-configuration window/configuration))          (setq mapping (|fetch| actualkeysmaping |of| window/configuration))          (|if| (null mapping)              |then| (return key-id))          (|if| (and (listp mapping)                         (eq (car mapping)                             'lambda))              |then| (return (apply* mapping key-id))            |elseif| (and (atom mapping)                              (getd mapping))              |then| (return (apply* mapping key-id))            |else| (return (cadr (fassoc key-id mapping)))))))(vkbd.invert-key  (lambda (key-id vkbd-window)                           (* \; "Edited 15-Dec-87 16:46 by Snow")    (|for| region |in| (vkbd.get-key-regions key-id vkbd-window)       |do| (vkbd.invert-region region vkbd-window))))(vkbd.invert-region  (lambda (region window)                                (* \; "Edited 15-Dec-87 16:46 by Snow")    (|if| region        |then| (bitblt window (|fetch| (region left) |of| region)                          (|fetch| (region bottom) |of| region)                          window                          (|fetch| (region left) |of| region)                          (|fetch| (region bottom) |of| region)                          (|fetch| (region width) |of| region)                          (|fetch| (region height) |of| region)                          'invert                          'replace))))(vkbd.key-id-to-key-names  (lambda (key-id window/configuration)                  (* \; "Edited 15-Dec-87 16:46 by Snow")    (setq window/configuration (vkbd.get-configuration window/configuration))    (|for| name-id-pair |in| (|fetch| (keyboardconfiguration keynamesmapping)                                        |of| window/configuration)       |when| (eq (cadr name-id-pair)                      key-id) |collect| (car name-id-pair))))(vkbd.key-name-to-key-id  (lambda (key-name configuration-name)                  (* \; "Edited 15-Dec-87 16:46 by Snow")    (cadr (fassoc key-name (|fetch| (keyboardconfiguration keynamesmapping) |of| (                                                                             vkbd.get-configuration                                                                                                                                                                             configuration-name                                                                                          ))))))(VKBD.KEYBOARD-IS-MACHINE-KEYBOARD  (LAMBDA (KEYBOARD)                                     (* \; "Edited 15-Dec-88 18:30 by jds")                                                             (* \;                                                "T if this keyboard is configured for this machine.")    (EQ (|fetch| (KEYBOARDCONFIGURATION MACHINETYPE) |of| (VKBD.GET-CONFIGURATION                                                                   (|fetch| KEYBOARDCONFIGURATION                                                                      |of| KEYBOARD)))        (SELECTQ (MACHINETYPE)            (MAIKO 'DORADO)            (MACHINETYPE)))))(vkbd.keyboard-window-repaintfn  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:47 by Snow")    (prog (configuration displayed-keys bm key-labels char-labels)          (setq configuration (vkbd.get-configuration window))          (setq key-labels (|fetch| (keyboardconfiguration keylabels) |of| configuration))          (setq char-labels (|fetch| (keyboardconfiguration charlabels) |of| configuration))          (setq bm (vkbd.create-keyboard-bitmap configuration))          (bitblt bm 0 0 window)          (|for| key |in| (|fetch| (keyboardconfiguration keysidlist) |of|                                                                                         configuration                                         ) |do| (vkbd.display-key key window configuration                                                            key-labels char-labels))          (cond             ((windowprop window 'vkbd.locked)              (vkbd.invert-lock-keys window)))          (windowprop window 'vkbd.shaded-key nil)          (windowprop window 'vkbd.last-mouse-state nil))))(vkbd.lock-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:47 by Snow")    (and (eq (cadr assignment)             'lockdown)         (eq (cddr assignment)             'lockup))))(vkbd.lock-keyp  (lambda (key window)                                   (* \; "Edited 15-Dec-87 16:47 by Snow")    (vkbd.lock-assignmentp (fassoc key (|fetch| (virtualkeyboard keyassignments)                                              |of| (windowprop window 'vkbd.keyboard))))))(vkbd.lock/nolock  (lambda (key-action)                                   (* \; "Edited 15-Dec-87 16:47 by Snow")    (caddr (cadr key-action))))(vkbd.lockdown-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:47 by Snow")    (and (eq (cadr assignment)             'lockdown)         (or (null (cddr assignment))             (eq (cddr assignment)                 'ignore)))))(vkbd.lockup-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:48 by Snow")    (and (eq (cadr assignment)             'lockup)         (or (null (cddr assignment))             (eq (cddr assignment)                 'ignore)))))(vkbd.lower-half-region  (lambda (region)                                       (* \; "Edited 15-Dec-87 16:48 by Snow")    (createregion (|fetch| (region left) |of| region)           (|fetch| (region bottom) |of| region)           (|fetch| (region width) |of| region)           (iquotient (|fetch| (region height) |of| region)                  2))))(vkbd.parse-char-code  (lambda (char-code)                                    (* \; "Edited 15-Dec-87 16:48 by Snow")    (cond       ((fixp char-code)        char-code)       ((and char-code (atom char-code))        (apply* 'charcode char-code))       ((and (listp char-code)             (eqp (length char-code)                  2)             (fixp (car char-code))             (fixp (cadr char-code)))        (iplus (itimes 256 (car char-code))               (cadr char-code))))))(vkbd.parse-key-assignment  (lambda (key-assignment keyboard-configuration-name)   (* \; "Edited 15-Dec-87 16:48 by Snow")    (prog (key unshifted-char shifted-char lock/nolock)          (cond             ((lessp (length key-assignment)                     2)              (return nil)))          (setq key (car key-assignment))          (or (fmemb key (|fetch| (keyboardconfiguration keysidlist) |of| (                                                                             vkbd.get-configuration                                                                                                                                                             keyboard-configuration-name                                                                                   )))              (setq key (vkbd.key-name-to-key-id key keyboard-configuration-name))              (return nil))          (|if| (not (vkbd.char-assignmentp key-assignment))              |then| (return (cons key (cdr key-assignment))))          (cond             ((lessp (length (cadr key-assignment))                     2)              (return nil)))          (setq unshifted-char (vkbd.parse-char-code (vkbd.unshifted-char key-assignment)))          (cond             ((null (cdadr key-assignment))              (setq shifted-char unshifted-char)              (setq lock/nolock 'lockshift))             (t (setq shifted-char (vkbd.parse-char-code (vkbd.shifted-char key-assignment)))                (cond                   ((null (cddadr key-assignment))                    (setq lock/nolock 'lockshift))                   ((fmemb (vkbd.lock/nolock key-assignment)                           '(lockshift nolockshift))                    (setq lock/nolock (vkbd.lock/nolock key-assignment)))                   (t (setq lock/nolock 'lockshift)))))          (return (cons key (cons (list unshifted-char shifted-char lock/nolock)                                  (cddr key-assignment)))))))(vkbd.perform-key-assignment  (lambda (key-assignment window/configuration)          (* \; "Edited 15-Dec-87 16:48 by Snow")    (keyaction (vkbd.translate-key-id (car key-assignment)                      window/configuration)           (cdr key-assignment))))(vkbd.pop-menu-and-switch-keyboards  (lambda (process switch-flg display-flg)               (* \; "Edited 15-Dec-87 16:48 by Snow")    (prog (keyboard)          (setq keyboard (vkbd.pop-up-keyboards-menu "Select an alternative keyboard"))          (|if| keyboard              |then| (switchkeyboards keyboard switch-flg display-flg)))))(VKBD.POP-UP-KEYBOARDS-MENU  (LAMBDA (PROMPT-STRING)                                (* \; "Edited 15-Dec-88 17:40 by jds")    (COND       (PROMPT-STRING (PROMPTPRINT PROMPT-STRING)              (FLASHWINDOW PROMPTWINDOW 1)))    (LET ((MACHINE-TYPE (SELECTQ (MACHINETYPE)                            (MAIKO 'DORADO)                            (MACHINETYPE))))         (MENU (|create| MENU                      ITEMS _ (CONS '(|Quit| NIL)                                    (|for| K |in| VKBD.KNOWN-KEYBOARDS                                       |when| (EQ MACHINE-TYPE (|fetch| (VIRTUALKEYBOARD                                                                                                                                                                 KEYBOARDCONFIGURATION                                                                                 ) |of| K))                                       |collect| (|fetch| (VIRTUALKEYBOARD KEYBOARDNAME)                                                        |of| K)))                      MENUFONT _ BIGFONT)))))(vkbd.position-is-in-key-region  (lambda (key position window)    (|for| region |in| (vkbd.get-key-regions key window) |thereis| (insidep region                                                                                           position))))(vkbd.remove-keyboard-command  (lambda nil                                            (* \; "Edited 15-Dec-87 16:49 by Snow")    (prog (k)          (setq k (vkbd.pop-up-keyboards-menu "Select keyboard to be removed ."))          (|if| k              |then| (vkbd.undefine-keyboard k)                    (printout promptwindow "Keyboard " k                            " was removed from the list of known keyboards. ")))))(vkbd.reset-keyboard-window  (lambda (window)                                       (* \; "Edited 15-Dec-87 16:49 by Snow")    (prog (shaded-key)          (|if| (setq shaded-key (windowprop window 'vkbd.shaded-key))              |then| (vkbd.invert-key shaded-key window)                    (windowprop window 'vkbd.shaded-key nil))          (|if| (windowprop window 'vkbd.shift-down)              |then| (vkbd.invert-shift-keys window)                    (windowprop window 'vkbd.shift-down nil))          (windowprop window 'vkbd.last-mouse-state nil))))(VKBD.SEND-CHARACTER  (LAMBDA (KEY WINDOW MOUSEKEY)                          (* \; "Edited 15-Dec-87 16:49 by Snow")    (PROG (KEY-ASSIGNMENT CHAR-CODE CONFIGURATION)          (SETQ CONFIGURATION (VKBD.GET-CONFIGURATION WINDOW))          (COND             ((VKBD.LOCK-KEYP KEY WINDOW)              (WINDOWPROP WINDOW 'VKBD.LOCKED (NOT (WINDOWPROP WINDOW 'VKBD.LOCKED)))              (VKBD.INVERT-LOCK-KEYS WINDOW))             (T (SETQ KEY-ASSIGNMENT (FASSOC KEY (|fetch| (VIRTUALKEYBOARD KEYASSIGNMENTS)                                                    |of| (WINDOWPROP WINDOW 'VKBD.KEYBOARD))))                (COND                   ((VKBD.CHAR-ASSIGNMENTP KEY-ASSIGNMENT)                    (SETQ CHAR-CODE (COND                                       ((OR (KEYDOWNP 'RSHIFT)                                            (KEYDOWNP 'LSHIFT)                                            (WINDOWPROP WINDOW 'VKBD.SHIFT-DOWN)                                            (AND (EQ (VKBD.LOCK/NOLOCK KEY-ASSIGNMENT)                                                     'LOCKSHIFT)                                                 (WINDOWPROP WINDOW 'VKBD.LOCKED)))                                        (VKBD.SHIFTED-CHAR KEY-ASSIGNMENT))                                       (T (VKBD.UNSHIFTED-CHAR KEY-ASSIGNMENT))))                    (COND                       (CHAR-CODE (BKSYSBUF (CHARACTER CHAR-CODE)))))))))))(vkbd.shift-assignmentp  (lambda (assignment)                                   (* \; "Edited 15-Dec-87 16:50 by Snow")    (or (and (eq (cadr assignment)                 '1shiftdown)             (eq (cddr assignment)                 '1shiftup))        (and (eq (cadr assignment)                 '2shiftdown)             (eq (cddr assignment)                 '2shiftup)))))(vkbd.shifted-char  (lambda (key-assignment)                               (* \; "Edited 15-Dec-87 16:50 by Snow")    (cadadr key-assignment)))(vkbd.undefine-keyboard  (lambda (keyboard-name)                                (* \; "Edited 15-Dec-87 16:50 by Snow")    (|if| (eq keyboard-name 'default)        |then| (promptprint "Cannot delete the default keyboart. ")      |else| (setq vkbd.known-keyboards (remove (findvirtualkeyboard keyboard-name)                                                   vkbd.known-keyboards)))))(vkbd.union-regions  (lambda (region-set)                                   (* \; "Edited 15-Dec-87 16:50 by Snow")    (setq region-set (copy region-set))    (apply 'unionregions (|while| region-set                            |collect| (apply 'unionregions                                                 (|while| region-set |for| i |from|                                                                                     1 |to|                                                                                       50                                                    |collect| (|pop| region-set)))))))(vkbd.unshifted-char  (lambda (key-assignment)                               (* \; "Edited 15-Dec-87 16:50 by Snow")    (caadr key-assignment)))(vkbd.upper-half-region  (lambda (region)                                       (* |sm| "13-Aug-85 10:38")    (createregion (|fetch| (region left) |of| region)           (iplus 1 (|fetch| (region bottom) |of| region)                  (iquotient (|fetch| (region height) |of| region)                         2))           (|fetch| (region width) |of| region)           (iquotient (|fetch| (region height) |of| region)                  2)))))(DECLARE\: EVAL@COMPILE(RECORD KEYBOARDCONFIGURATION         (CONFIGURATIONNAME KEYSIDLIST KEYREGIONS ASSIGNABLEKEYS DEFAULTASSIGNMENT KEYNAMESMAPPING                MACHINETYPE KEYLABELS KEYLABELSFONT BACKGROUNDSHADE KEYBOARDDISPLAYFONT CHARLABELS                ACTUALKEYSMAPING)        (TYPE? (EQLENGTH DATUM (CONSTANT (LENGTH (RECORDFIELDNAMES 'KEYBOARDCONFIGURATION)))))        MACHINETYPE _ (MACHINETYPE)        KEYLABELSFONT _ '(HELVETICA 5)        BACKGROUNDSHADE _ 23130 KEYBOARDDISPLAYFONT _ '(CLASSIC 12)        CHARLABELS _ '((1 BS)                       (92 ESC)                       (9 TAB)                       (13 CR)))(RECORD VIRTUALKEYBOARD (KEYBOARDNAME KEYASSIGNMENTS KEYBOARDCONFIGURATION)))(RPAQ? VKBD.DEFAULT-CONFIGURATION-NAME (MACHINETYPE))(RPAQ? VKBD.KNOWN-KEYBOARDS NIL)(RPAQQ VKBD.BACKGROUND-MENU-SUBITEMS       (SUBITEMS ("Switch keyboard" '(ADD.PROCESS '(SWITCHKEYBOARDS T))                        "Switches the key actions of the keyborad.")              ("Switch and display" '(ADD.PROCESS '(SWITCHKEYBOARDS T T))                     "Switches the key actions of the keyboards and displays the new keyboard. the displayed keyboard can be used as a menu."                     )              ("Display only" '(ADD.PROCESS '(SWITCHKEYBOARDS NIL T))                     "Displays the new keyboard. The displayed keyboard can be used as a menu.")              ("Store keyboards" '(ADD.PROCESS '(VKBD.STORE-FILE-COMMAND)                                         'WINDOW PROMPTWINDOW)                     "Stores the current known keyboards")              ("Load keyboards file" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND)                                             'WINDOW PROMPTWINDOW)                     "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "                     (SUBITEMS ("Replace" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND NIL T)                                                  'WINDOW PROMPTWINDOW)                                                                   "Removes the current known definitions and loads predefined keyboards ."                                      )                            ("Add, don't redefine" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND NIL NIL)                                                           'WINDOW PROMPTWINDOW)                                   "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "                                   )                            ("Add, redefine" '(ADD.PROCESS '(VKBD.LOAD-FILE-COMMAND T NIL)                                                     'WINDOW PROMPTWINDOW)                                   "Adds definitions of keyboards found on file. If a keyboard with the same name is already known to the system, REDEFINE ir"                                   )))              ("Remove keyboard" '(ADD.PROCESS '(VKBD.REMOVE-KEYBOARD-COMMAND))                     "Removes a keyboard from the list of known keyboards")))(RPAQQ VKBD.NON-CHAR-ASSIGNMENTS-LABELS ((SHIFT SHIFT)                                             (CTRL CTRL)                                             (META META)                                             (LOCK LOCK)                                             (LOCKUP LOCKUP)                                             (LOCKDOWN LOCKDOWN)))(RPAQQ VKBD.WINDOW-MENU-SUBITEMS       (SUBITEMS ("Switch keyboard" (FUNCTION (LAMBDA (W)                                                     (SWITCHKEYBOARDS T NIL W)))                        "Switches the key actions of the keyborad.")              ("Switch and display" (FUNCTION (LAMBDA (W)                                                     (SWITCHKEYBOARDS T T W)))                     "Switches the key actions of the keyboards and displays the new keyboard. the displayed keyboard can be used as a menu."                     )              ("Display only" (FUNCTION (LAMBDA (W)                                               (SWITCHKEYBOARDS NIL T W)))                     "Displays the new keyboard. The displayed keyboard can be used as a menu.")              ("Store keyboards" (FUNCTION (LAMBDA (W)                                                  (ADD.PROCESS (FUNCTION (VKBD.STORE-FILE-COMMAND))                                                         'WINDOW PROMPTWINDOW)))                     "Stores the current known keyboards")              ("Load keyboards file" (FUNCTION (LAMBDA (W)                                                      (ADD.PROCESS (FUNCTION (VKBD.LOAD-FILE-COMMAND)                                                                          )                                                             'WINDOW PROMPTWINDOW)))                     "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "                     (SUBITEMS ("Replace" (FUNCTION (LAMBDA (W)                                                           (ADD.PROCESS (FUNCTION (                                                                               VKBD.LOAD-FILE-COMMAND                                                                                   NIL T))                                                                  'WINDOW PROMPTWINDOW)))                                                                   "Removes the current known definitions and loads predefined keyboards ."                                      )                            ("Add, don't redefine" (FUNCTION (LAMBDA (W)                                                                    (ADD.PROCESS                                                                     (FUNCTION (                                                                               VKBD.LOAD-FILE-COMMAND                                                                                ))                                                                     'WINDOW PROMPTWINDOW)))                                   "Adds definition of keyboards found on file. If a keyboard with the same name is already known to the system DO NOT redefine it. "                                   )                            ("Add, redefine" (FUNCTION (LAMBDA (W)                                                              (ADD.PROCESS (FUNCTION (                                                                               VKBD.LOAD-FILE-COMMAND                                                                                      T NIL))                                                                     'WINDOW PROMPTWINDOW)))                                   "Adds definitions of keyboards found on file. If a keyboard with the same name is already known to the system, REDEFINE ir"                                   )))              ("Remove keyboard" (FUNCTION (LAMBDA (W)                                                  (ADD.PROCESS '(VKBD.REMOVE-KEYBOARD-COMMAND))))                     "Removes a keyboard from the list of known keyboards")))(RPAQQ VKBD.CONFIGURATIONS       ((DORADO (100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120                     121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140                     141 142 143 144 145 146 148 149 150 151 152 153 154 155 156 157 158 159 160 161)               ((100 (178 154 29 33))                (101 (146 154 29 33))                (102 (210 154 29 33))                (103 (130 118 29 33))                (104 (242 154 29 33))                (105 (138 82 29 33))                (106 (258 118 29 33))                (107 (186 46 29 33))                (108 (338 154 29 33))                (109 (298 82 29 33))                (110 (370 154 29 33))                (111 (354 118 29 33))                (112 (378 46 29 33))                (113 (434 154 29 33))                (114 (466 154 29 33))                (115 (482 118 29 33))                (116 (114 154 29 33))                (117 (82 154 29 33))                (118 (98 118 29 33))                (119 (66 118 29 33))                (120 (106 82 29 33))                (121 (74 82 29 33))                (122 (306 154 29 33))                (123 (290 118 29 33))                (124 (122 46 29 33))                (125 (322 118 29 33))                (126 (330 82 29 33))                (127 (314 46 29 33))                (128 (394 82 29 33))                (129 (418 118 29 33))                (130 (492 82 29 33))                (131 (514 118 29 33))                (132 (50 154 29 33))                (133 (18 154 29 33))                (134 (9 118 54 33))                (135 (170 82 29 33))                (136 (18 82 52 33))                (137 (154 46 29 33))                (138 (266 82 29 33))                (139 (218 46 29 33))                (140 (90 46 29 33))                (141 (38 46 49 33))                (142 (346 46 29 33))                (143 (362 82 29 33))                (144 (426 82 63 33))                (145 (450 118 29 33))                (146 (498 154 29 33))                (148 (162 118 29 33))                (149 (194 118 29 33))                (150 (202 82 29 33))                (151 (226 118 29 33))                (152 (234 82 29 33))                (153 (274 154 29 33))                (154 (250 46 29 33))                (155 (282 46 29 33))                (156 (6 46 29 33))                (157 (110 10 279 33))                (158 (386 118 29 33))                (159 (402 154 29 33))                (160 (410 46 63 33))                (161 (476 46 29 33)))               (118 100 101 102 103 104 105 106 107 108 109 110 111 112 116 117 119 120 121 122 123                     124 125 126 127 128 129 132 135 137 138 139 140 142 143 145 148 149 150 151 152                     153 154 155 158 159)               ((102 (54 126 NOLOCKSHIFT))                (110 (45 45 NOLOCKSHIFT))                (133 (27 27 NOLOCKSHIFT))                (145 (_ ^ NOLOCKSHIFT))                (136 CTRLDOWN . CTRLUP)                (100 (53 37 NOLOCKSHIFT))                (101 (52 36 NOLOCKSHIFT))                (103 (101 69 LOCKSHIFT))                (104 (55 38 NOLOCKSHIFT))                (105 (100 68 LOCKSHIFT))                (106 (117 85 LOCKSHIFT))                (107 (118 86 LOCKSHIFT))                (108 (48 41 NOLOCKSHIFT))                (109 (107 75 LOCKSHIFT))                (111 (112 80 LOCKSHIFT))                (112 (47 63 NOLOCKSHIFT))                (113 (\\ \| NOLOCKSHIFT))                (114 (10 10 NOLOCKSHIFT))                (115 (8 8 NOLOCKSHIFT))                (116 (51 35 NOLOCKSHIFT))                (117 (50 64 NOLOCKSHIFT))                (118 (119 87 LOCKSHIFT))                (119 (113 81 LOCKSHIFT))                (120 (115 83 LOCKSHIFT))                (121 (97 65 LOCKSHIFT))                (122 (57 40 NOLOCKSHIFT))                (123 (105 73 LOCKSHIFT))                (124 (120 88 LOCKSHIFT))                (125 (111 79 LOCKSHIFT))                (126 (108 76 LOCKSHIFT))                (127 (44 60 NOLOCKSHIFT))                (128 (39 34 NOLOCKSHIFT))                (129 (93 125 NOLOCKSHIFT))                (130 (194 194 NOLOCKSHIFT))                (131 (193 193 NOLOCKSHIFT))                (132 (49 33 NOLOCKSHIFT))                (134 (9 9 NOLOCKSHIFT))                (135 (102 70 LOCKSHIFT))                (137 (99 67 LOCKSHIFT))                (138 (106 74 LOCKSHIFT))                (139 (98 66 LOCKSHIFT))                (140 (122 90 LOCKSHIFT))                (141 1SHIFTDOWN . 1SHIFTUP)                (142 (46 62 NOLOCKSHIFT))                (143 (59 58 NOLOCKSHIFT))                (144 (13 13 NOLOCKSHIFT))                (146 (127 127 NOLOCKSHIFT))                (148 (114 82 LOCKSHIFT))                (149 (116 84 LOCKSHIFT))                (150 (103 71 LOCKSHIFT))                (151 (121 89 LOCKSHIFT))                (152 (104 72 LOCKSHIFT))                (153 (56 42 NOLOCKSHIFT))                (154 (110 78 LOCKSHIFT))                (155 (109 77 LOCKSHIFT))                (156 LOCKDOWN . LOCKUP)                (157 (32 32 NOLOCKSHIFT))                (158 (91 123 NOLOCKSHIFT))                (159 (61 43 NOLOCKSHIFT))                (160 2SHIFTDOWN . 2SHIFTUP)                (161 (195 195 NOLOCKSHIFT)))               ((\w 118)                (W 118)                (5 100)                (% 100)                (4 101)                ($ 101)                (6 102)                (~ 102)                (\e 103)                (E 103)                (7 104)                (& 104)                (\d 105)                (D 105)                (\u 106)                (U 106)                (\v 107)                (V 107)                (0 108)                (\) 108)                (\k 109)                (K 109)                (- 110)                (110)                (\p 111)                (P 111)                (/ 112)                (? 112)                (BS 115)                (<- 115)                (3 116)                (\# 116)                (2 117)                (@ 117)                (\q 119)                (Q 119)                (\s 120)                (S 120)                (\a 121)                (A 121)                (9 122)                (\( 122)                (\i 123)                (I 123)                (\x 124)                (X 124)                (\o 125)                (O 125)                (\l 126)                (L 126)                (\, 127)                (< 127)                (\' 128)                (\" 128)                (] 129)                (} 129)                (1 132)                (! 132)                (ESC 133)                (ESCAPE 133)                (-> 133)                (TAB 134)                (=> 134)                (\f 135)                (F 135)                (\c 137)                (C 137)                (\j 138)                (J 138)                (\b 139)                (B 139)                (\z 140)                (Z 140)                (LSHIFT 141)                (\. 142)                (> 142)                (\; 143)                (\: 143)                (CR 144)                (<-\| 144)                (_ 145)                (^ 145)                (\r 148)                (R 148)                (\t 149)                (T 149)                (\g 150)                (G 150)                (\y 151)                (Y 151)                (\h 152)                (H 152)                (8 153)                (* 153)                (\n 154)                (N 154)                (\m 155)                (M 155)                (LOCK 156)                (SPACE 157)                ([ 158)                ({ 158)                (= 159)                (+ 159)                (RSHIFT 160))               DORADO               ((136 CONTROL))               (HELVETICA 5)               23130               (CLASSIC 12)               ((1 BS)                (27 ESC)                (8 BS)                (9 TAB)                (10 LF)                (13 CR)                (32 SPACE)                (127 DEL)                (193 \ )                (194 \ )                (195 \ ))               (LAMBDA (KEY)                      (IDIFFERENCE KEY 100)))        (DANDELION (100 101 102 103 104 105 106 107 108 109 110 111 112 115 116 117 118 119 120 121                         122 123 124 125 126 127 128 129 132 133 134 135 137 138 139 140 141 142 143                         144 145 148 149 150 151 152 153 154 155 156 157 158 159 160)               ((157 (110 10 279 33))                (115 (434 154 53 33))                (134 (18 118 45 33))                (144 (450 118 37 33)                     (458 82 29 36))                (133 (18 154 29 33))                (141 (18 46 69 33))                (160 (410 46 77 33))                (156 (18 82 53 33))                (132 (50 154 29 33))                (117 (82 154 29 33))                (116 (114 154 29 33))                (101 (146 154 29 33))                (100 (178 154 29 33))                (102 (210 154 29 33))                (104 (242 154 29 33))                (153 (274 154 29 33))                (122 (306 154 29 33))                (108 (338 154 29 33))                (110 (370 154 29 33))                (159 (402 154 29 33))                (119 (66 118 29 33))                (118 (98 118 29 33))                (103 (130 118 29 33))                (148 (162 118 29 33))                (149 (194 118 29 33))                (151 (226 118 29 33))                (106 (258 118 29 33))                (123 (290 118 29 33))                (125 (322 118 29 33))                (111 (354 118 29 33))                (158 (386 118 29 33))                (129 (418 118 29 33))                (121 (74 82 29 33))                (120 (106 82 29 33))                (105 (138 82 29 33))                (135 (170 82 29 33))                (150 (202 82 29 33))                (152 (234 82 29 33))                (138 (266 82 29 33))                (109 (298 82 29 33))                (126 (330 82 29 33))                (143 (362 82 29 33))                (128 (394 82 29 33))                (145 (426 82 29 33))                (140 (90 46 29 33))                (124 (122 46 29 33))                (137 (154 46 29 33))                (107 (186 46 29 33))                (139 (218 46 29 33))                (154 (250 46 29 33))                (155 (282 46 29 33))                (127 (314 46 29 33))                (142 (346 46 29 33))                (112 (378 46 29 33)))               (118 100 101 102 103 104 105 106 107 108 109 110 111 112 116 117 119 120 121 122 123                     124 125 126 127 128 129 132 135 137 138 139 140 142 143 145 148 149 150 151 152                     153 154 155 158 159)               ((118 (119 87 LOCKSHIFT))                (102 (54 94 NOLOCKSHIFT))                (110 (45 95 NOLOCKSHIFT))                (133 (92 124 NOLOCKSHIFT))                (145 (96 126 NOLOCKSHIFT))                (100 (53 37 NOLOCKSHIFT))                (101 (52 36 NOLOCKSHIFT))                (103 (101 69 LOCKSHIFT))                (104 (55 38 NOLOCKSHIFT))                (105 (100 68 LOCKSHIFT))                (106 (117 85 LOCKSHIFT))                (107 (118 86 LOCKSHIFT))                (108 (48 41 NOLOCKSHIFT))                (109 (107 75 LOCKSHIFT))                (111 (112 80 LOCKSHIFT))                (112 (47 63 NOLOCKSHIFT))                (115 (1 1 NOLOCKSHIFT))                (116 (51 35 NOLOCKSHIFT))                (117 (50 64 NOLOCKSHIFT))                (119 (113 81 LOCKSHIFT))                (120 (115 83 LOCKSHIFT))                (121 (97 65 LOCKSHIFT))                (122 (57 40 NOLOCKSHIFT))                (123 (105 73 LOCKSHIFT))                (124 (120 88 LOCKSHIFT))                (125 (111 79 LOCKSHIFT))                (126 (108 76 LOCKSHIFT))                (127 (44 60 NOLOCKSHIFT))                (128 (39 34 NOLOCKSHIFT))                (129 (93 125 NOLOCKSHIFT))                (132 (49 33 NOLOCKSHIFT))                (134 (9 9 NOLOCKSHIFT))                (135 (102 70 LOCKSHIFT))                (137 (99 67 LOCKSHIFT))                (138 (106 74 LOCKSHIFT))                (139 (98 66 LOCKSHIFT))                (140 (122 90 LOCKSHIFT))                (141 1SHIFTDOWN . 1SHIFTUP)                (142 (46 62 NOLOCKSHIFT))                (143 (59 58 NOLOCKSHIFT))                (144 (13 13 NOLOCKSHIFT))                (148 (114 82 LOCKSHIFT))                (149 (116 84 LOCKSHIFT))                (150 (103 71 LOCKSHIFT))                (151 (121 89 LOCKSHIFT))                (152 (104 72 LOCKSHIFT))                (153 (56 42 NOLOCKSHIFT))                (154 (110 78 LOCKSHIFT))                (155 (109 77 LOCKSHIFT))                (156 LOCKDOWN . LOCKUP)                (157 (32 32 NOLOCKSHIFT))                (158 (91 123 NOLOCKSHIFT))                (159 (61 43 NOLOCKSHIFT))                (160 2SHIFTDOWN . 2SHIFTUP))               ((\w 118)                (W 118)                (5 100)                (% 100)                (4 101)                ($ 101)                (6 102)                (~ 102)                (\e 103)                (E 103)                (7 104)                (& 104)                (\d 105)                (D 105)                (\u 106)                (U 106)                (\v 107)                (V 107)                (0 108)                (\) 108)                (\k 109)                (K 109)                (- 110)                (110)                (\p 111)                (P 111)                (/ 112)                (? 112)                (BS 115)                (<- 115)                (3 116)                (\# 116)                (2 117)                (@ 117)                (\q 119)                (Q 119)                (\s 120)                (S 120)                (\a 121)                (A 121)                (9 122)                (\( 122)                (\i 123)                (I 123)                (\x 124)                (X 124)                (\o 125)                (O 125)                (\l 126)                (L 126)                (\, 127)                (< 127)                (\' 128)                (\" 128)                (] 129)                (} 129)                (1 132)                (! 132)                (ESC 133)                (ESCAPE 133)                (-> 133)                (TAB 134)                (=> 134)                (\f 135)                (F 135)                (\c 137)                (C 137)                (\j 138)                (J 138)                (\b 139)                (B 139)                (\z 140)                (Z 140)                (LSHIFT 141)                (\. 142)                (> 142)                (\; 143)                (\: 143)                (CR 144)                (<-\| 144)                (_ 145)                (^ 145)                (\r 148)                (R 148)                (\t 149)                (T 149)                (\g 150)                (G 150)                (\y 151)                (Y 151)                (\h 152)                (H 152)                (8 153)                (* 153)                (\n 154)                (N 154)                (\m 155)                (M 155)                (LOCK 156)                (SPACE 157)                ([ 158)                ({ 158)                (= 159)                (+ 159)                (RSHIFT 160))               DANDELION NIL (HELVETICA 5)               23130               (CLASSIC 12)               ((1 BS)                (92 ESC)                (9 TAB)                (13 CR)                (32 SPACE))               (LAMBDA (KEY)                      (IDIFFERENCE KEY 100)))        (DOVE (100 101 102 103 104 105 106 107 108 109 110 111 112 115 116 117 118 119 120 121 122                    123 124 125 126 127 128 129 131 132 134 135 137 138 139 140 141 142 143 144 145                    147 148 149 150 151 152 153 154 155 156 157 158 159 160 165 169 170 172 173 174                    175 176 181 182 183 184 185 187 193 194 198 205 206)              ((100 (178 138 29 29))               (101 (146 138 29 29))               (102 (210 138 29 29))               (103 (130 106 29 29))               (104 (242 138 29 29))               (105 (138 74 29 29))               (106 (258 106 29 29))               (107 (186 42 29 29))               (108 (338 138 29 29))               (109 (298 74 29 29))               (110 (370 138 29 29))               (111 (354 106 29 29))               (112 (378 42 29 29))               (115 (434 138 53 29))               (116 (114 138 29 29))               (117 (82 138 29 29))               (118 (98 106 29 29))               (119 (66 106 29 29))               (120 (106 74 29 29))               (121 (74 74 29 29))               (122 (306 138 29 29))               (123 (290 106 29 29))               (124 (122 42 29 29))               (125 (322 106 29 29))               (126 (330 74 29 29))               (127 (314 42 29 29))               (128 (394 74 29 29))               (129 (418 106 29 29))               (132 (50 138 29 29))               (134 (18 106 45 29))               (135 (170 74 29 29))               (137 (154 42 29 29))               (138 (266 74 29 29))               (139 (218 42 29 29))               (140 (90 42 29 29))               (141 (18 42 69 29))               (142 (346 42 29 29))               (143 (362 74 29 29))               (144 (450 106 37 29)                    (458 74 29 32))               (145 (426 74 29 29))               (148 (162 106 29 29))               (149 (194 106 29 29))               (150 (202 74 29 29))               (151 (226 106 29 29))               (152 (234 74 29 29))               (153 (274 138 29 29))               (154 (250 42 29 29))               (155 (282 42 29 29))               (156 (18 74 53 29))               (157 (110 10 279 29))               (158 (386 106 29 29))               (159 (402 138 29 29))               (160 (410 42 77 29))               (165 (18 138 29 29))               (172 (520 138 29 29))               (173 (552 138 29 29))               (174 (584 138 29 29))               (175 (616 138 29 29))               (176 (520 106 29 29))               (181 (552 106 29 29))               (182 (584 106 29 29))               (183 (616 106 29 29))               (147 (520 42 29 61))               (184 (552 74 29 29))               (185 (584 74 29 29))               (187 (616 74 29 29))               (194 (552 42 29 29))               (169 (584 42 29 29))               (170 (616 42 29 29))               (198 (520 10 61 29))               (205 (584 10 29 29))               (206 (616 10 29 29))               (131 (18 10 45 29))               (193 (434 10 53 29)))              (100 101 102 103 104 105 106 107 108 109 110 111 112 116 117 118 119 120 121 122 123                    124 125 126 127 128 129 132 135 137 138 139 140 142 143 145 148 149 150 151 152                    153 154 155 158 159)              ((115 (8 8 NOLOCKSHIFT))               (165 (27 27 NOLOCKSHIFT))               (102 (54 94 NOLOCKSHIFT))               (110 (45 95 NOLOCKSHIFT))               (145 (96 126 NOLOCKSHIFT))               (100 (53 37 NOLOCKSHIFT))               (101 (52 36 NOLOCKSHIFT))               (103 (101 69 LOCKSHIFT))               (104 (55 38 NOLOCKSHIFT))               (105 (100 68 LOCKSHIFT))               (106 (117 85 LOCKSHIFT))               (107 (118 86 LOCKSHIFT))               (108 (48 41 NOLOCKSHIFT))               (109 (107 75 LOCKSHIFT))               (111 (112 80 LOCKSHIFT))               (112 (47 63 NOLOCKSHIFT))               (116 (51 35 NOLOCKSHIFT))               (117 (50 64 NOLOCKSHIFT))               (118 (119 87 LOCKSHIFT))               (119 (113 81 LOCKSHIFT))               (120 (115 83 LOCKSHIFT))               (121 (97 65 LOCKSHIFT))               (122 (57 40 NOLOCKSHIFT))               (123 (105 73 LOCKSHIFT))               (124 (120 88 LOCKSHIFT))               (125 (111 79 LOCKSHIFT))               (126 (108 76 LOCKSHIFT))               (127 (44 60 NOLOCKSHIFT))               (128 (39 34 NOLOCKSHIFT))               (129 (93 125 NOLOCKSHIFT))               (132 (49 33 NOLOCKSHIFT))               (134 (9 9 NOLOCKSHIFT))               (135 (102 70 LOCKSHIFT))               (137 (99 67 LOCKSHIFT))               (138 (106 74 LOCKSHIFT))               (139 (98 66 LOCKSHIFT))               (140 (122 90 LOCKSHIFT))               (141 1SHIFTDOWN . 1SHIFTUP)               (142 (46 62 NOLOCKSHIFT))               (143 (59 58 NOLOCKSHIFT))               (144 (13 13 NOLOCKSHIFT))               (148 (114 82 LOCKSHIFT))               (149 (116 84 LOCKSHIFT))               (150 (103 71 LOCKSHIFT))               (151 (121 89 LOCKSHIFT))               (152 (104 72 LOCKSHIFT))               (153 (56 42 NOLOCKSHIFT))               (154 (110 78 LOCKSHIFT))               (155 (109 77 LOCKSHIFT))               (156 LOCKDOWN . LOCKUP)               (157 (32 32 NOLOCKSHIFT))               (158 (91 123 NOLOCKSHIFT))               (159 (61 43 NOLOCKSHIFT))               (160 2SHIFTDOWN . 2SHIFTUP)               (172 (517 549 NOLOCKSHIFT))               (173 (521 45 NOLOCKSHIFT))               (174 (522 180 NOLOCKSHIFT))               (175 (2 184 NOLOCKSHIFT))               (176 (523 555 NOLOCKSHIFT))               (181 (524 55 NOLOCKSHIFT))               (182 (173 56 NOLOCKSHIFT))               (183 (525 57 NOLOCKSHIFT))               (147 (530 562 NOLOCKSHIFT))               (184 (172 52 NOLOCKSHIFT))               (185 (526 53 NOLOCKSHIFT))               (187 (174 54 NOLOCKSHIFT))               (194 (527 49 NOLOCKSHIFT))               (169 (175 50 NOLOCKSHIFT))               (170 (528 51 NOLOCKSHIFT))               (198 (529 48 NOLOCKSHIFT))               (205 (124 46 NOLOCKSHIFT))               (206 (92 44 NOLOCKSHIFT))               (131 METADOWN . METAUP)               (193 (532 564 NOLOCKSHIFT)))              ((INS 198)               (5 100)               (% 100)               (4 101)               ($ 101)               (6 102)               (~ 102)               (\e 103)               (E 103)               (7 104)               (& 104)               (\d 105)               (D 105)               (\u 106)               (U 106)               (\v 107)               (V 107)               (0 108)               (\) 108)               (\k 109)               (K 109)               (- 110)               (110)               (\p 111)               (P 111)               (/ 112)               (? 112)               (BS 115)               (<- 115)               (3 116)               (\# 116)               (2 117)               (@ 117)               (\w 118)               (W 118)               (\q 119)               (Q 119)               (\s 120)               (S 120)               (\a 121)               (A 121)               (9 122)               (\( 122)               (\i 123)               (I 123)               (\x 124)               (X 124)               (\o 125)               (O 125)               (\l 126)               (L 126)               (\, 127)               (< 127)               (\' 128)               (\" 128)               (] 129)               (} 129)               (1 132)               (! 132)               (ESC 165)               (ESCAPE 165)               (-> 165)               (TAB 134)               (=> 134)               (\f 135)               (F 135)               (\c 137)               (C 137)               (\j 138)               (J 138)               (\b 139)               (B 139)               (\z 140)               (Z 140)               (LSHIFT 141)               (\. 142)               (> 142)               (\; 143)               (\: 143)               (CR 144)               (<-\| 144)               (_ 145)               (^ 145)               (\r 148)               (R 148)               (\t 149)               (T 149)               (\g 150)               (G 150)               (\y 151)               (Y 151)               (\h 152)               (H 152)               (8 153)               (* 153)               (\n 154)               (N 154)               (\m 155)               (M 155)               (LOCK 156)               (SPACE 157)               ([ 158)               ({ 158)               (= 159)               (+ 159)               (RSHIFT 160)               (NUMERIC+ 172)               (NUMERIC- 173)               (NUMERIC* 174)               (NUMERIC/ 175)               (CLEAR 176)               (NUMERIC7 181)               (NUMERIC8 182)               (NUMERIC9 183)               (NUMERIC4 147)               (NUMERIC5 184)               (NUMERIC6 185)               (SKIP 147)               (NEXT 147)               (NUMERIC1 194)               (NUMERIC2 169)               (NUMERIC3 170)               (NUMERIC0 198)               (NUMERIC. 205)               (NUMERIC\, 206)               (KEYBOARD 131)               (DEFINE 193)               (EXPAND 193))              DOVE              ((147 NEXT)               (165 ESC)               (176 "CLEAR")               (131 META)               (193 "EXPAND")               (172 HELP))              (HELVETICA 5)              23130              (CLASSIC 12)              ((1 BS)               (2 BREAK)               (8 BS)               (27 ESC)               (9 TAB)               (13 CR)               (32 SPACE)               (517 HELP)               (521 SCRL)               (522 NUMLK)               (523 CLEAR)               (555 DOIT)               (524 HOME)               (525 PGUP)               (526 \ )               (527 END)               (528 PGDN)               (529 INS))              (LAMBDA (KEY)                     (IDIFFERENCE KEY 100)))        (FULL-IBMPC (100 101 102 103 104 105 106 107 108 109 110 111 112 115 116 117 118 119 120 121                         122 123 124 125 126 127 128 129 132 133 134 135 137 138 139 140 141 142 143                         144 148 149 150 151 152 153 154 155 156 157 158 159 160 200 201 202 203 204                         205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 301 302 303 304                         305 306 307 308 309 310 311)               ((157 (180 10 279 29))                (115 (536 138 29 29))                (134 (88 106 45 29))                (144 (520 103 45 32)                     (496 74 69 29))                (133 (88 138 29 29))                (141 (88 42 69 29))                (160 (480 42 85 29))                (156 (88 74 53 29))                (132 (120 138 29 29))                (117 (152 138 29 29))                (116 (184 138 29 29))                (101 (216 138 29 29))                (100 (248 138 29 29))                (102 (280 138 29 29))                (104 (312 138 29 29))                (153 (344 138 29 29))                (122 (376 138 29 29))                (108 (408 138 29 29))                (110 (440 138 29 29))                (159 (472 138 29 29))                (119 (136 106 29 29))                (118 (168 106 29 29))                (103 (200 106 29 29))                (148 (232 106 29 29))                (149 (264 106 29 29))                (151 (296 106 29 29))                (106 (328 106 29 29))                (123 (360 106 29 29))                (125 (392 106 29 29))                (111 (424 106 29 29))                (158 (456 106 29 29))                (129 (488 106 29 29))                (121 (144 74 29 29))                (120 (176 74 29 29))                (105 (208 74 29 29))                (135 (240 74 29 29))                (150 (272 74 29 29))                (152 (304 74 29 29))                (138 (336 74 29 29))                (109 (368 74 29 29))                (126 (400 74 29 29))                (143 (432 74 29 29))                (128 (464 74 29 29))                (140 (160 42 29 29))                (124 (192 42 29 29))                (137 (224 42 29 29))                (107 (256 42 29 29))                (139 (288 42 29 29))                (154 (320 42 29 29))                (155 (352 42 29 29))                (127 (384 42 29 29))                (142 (416 42 29 29))                (112 (448 42 29 29))                (218 (88 10 45 29))                (219 (512 10 53 29))                (200 (582 138 29 29))                (201 (614 138 29 29))                (202 (646 138 29 29))                (203 (678 138 29 29))                (204 (582 106 29 29))                (205 (614 106 29 29))                (206 (646 106 29 29))                (207 (678 106 29 29))                (208 (582 74 29 29))                (209 (614 74 29 29))                (210 (646 74 29 29))                (211 (678 74 29 29))                (212 (582 42 29 29))                (213 (614 42 29 29))                (214 (646 42 29 29))                (215 (678 10 29 61))                (216 (582 10 61 29))                (217 (646 10 29 29))                (311 (504 138 29 29))                (301 (10 138 29 29))                (302 (42 138 29 29))                (303 (10 106 29 29))                (304 (42 106 29 29))                (305 (10 74 29 29))                (306 (42 74 29 29))                (307 (10 42 29 29))                (308 (42 42 29 29))                (309 (10 10 29 29))                (310 (42 10 29 29)))               (201 200 100 101 102 103 104 105 106 107 108 109 110 111 112 116 117 118 119 120 121                     122 123 124 125 126 127 128 129 132 135 137 138 139 140 142 143 145 148 149 150                     151 152 153 154 155 158 159)               ((311 (92 124 NOLOCKSHIFT))                (156 CTRLDOWN . CTRLUP)                (102 (54 94 NOLOCKSHIFT))                (110 (45 95 NOLOCKSHIFT))                (133 (96 196 NOLOCKSHIFT))                (145 (96 126 NOLOCKSHIFT))                (100 (53 37 NOLOCKSHIFT))                (101 (52 36 NOLOCKSHIFT))                (103 (101 69 LOCKSHIFT))                (104 (55 38 NOLOCKSHIFT))                (105 (100 68 LOCKSHIFT))                (106 (117 85 LOCKSHIFT))                (107 (118 86 LOCKSHIFT))                (108 (48 41 NOLOCKSHIFT))                (109 (107 75 LOCKSHIFT))                (111 (112 80 LOCKSHIFT))                (112 (47 63 NOLOCKSHIFT))                (115 (1 1 NOLOCKSHIFT))                (116 (51 35 NOLOCKSHIFT))                (117 (50 64 NOLOCKSHIFT))                (118 (119 87 LOCKSHIFT))                (119 (113 81 LOCKSHIFT))                (120 (115 83 LOCKSHIFT))                (121 (97 65 LOCKSHIFT))                (122 (57 40 NOLOCKSHIFT))                (123 (105 73 LOCKSHIFT))                (124 (120 88 LOCKSHIFT))                (125 (111 79 LOCKSHIFT))                (126 (108 76 LOCKSHIFT))                (127 (44 60 NOLOCKSHIFT))                (128 (39 34 NOLOCKSHIFT))                (129 (93 125 NOLOCKSHIFT))                (132 (49 33 NOLOCKSHIFT))                (134 (9 9 NOLOCKSHIFT))                (135 (102 70 LOCKSHIFT))                (137 (99 67 LOCKSHIFT))                (138 (106 74 LOCKSHIFT))                (139 (98 66 LOCKSHIFT))                (140 (122 90 LOCKSHIFT))                (141 1SHIFTDOWN . 1SHIFTUP)                (142 (46 62 NOLOCKSHIFT))                (143 (59 58 NOLOCKSHIFT))                (144 (13 13 NOLOCKSHIFT))                (148 (114 82 LOCKSHIFT))                (149 (116 84 LOCKSHIFT))                (150 (103 71 LOCKSHIFT))                (151 (121 89 LOCKSHIFT))                (152 (104 72 LOCKSHIFT))                (153 (56 42 NOLOCKSHIFT))                (154 (110 78 LOCKSHIFT))                (155 (109 77 LOCKSHIFT))                (157 (32 32 NOLOCKSHIFT))                (158 (91 123 NOLOCKSHIFT))                (159 (61 43 NOLOCKSHIFT))                (160 2SHIFTDOWN . 2SHIFTUP)                (200 EVENT . EVENT)                (201 EVENT . EVENT)                (202 EVENT . EVENT)                (203 EVENT . EVENT)                (204 (55 55 NOLOCKSHIFT))                (205 (56 56 NOLOCKSHIFT))                (206 (57 57 NOLOCKSHIFT))                (207 (42 42 NOLOCKSHIFT))                (208 (52 52 NOLOCKSHIFT))                (209 (53 53 NOLOCKSHIFT))                (210 (54 54 NOLOCKSHIFT))                (211 (45 45 NOLOCKSHIFT))                (212 (49 49 NOLOCKSHIFT))                (213 (50 50 NOLOCKSHIFT))                (214 (51 51 NOLOCKSHIFT))                (215 (43 43 NOLOCKSHIFT))                (216 (48 48 NOLOCKSHIFT))                (217 (46 46 NOLOCKSHIFT))                (218 METADOWN . METAUP)                (219 LOCKDOWN . LOCKUP))               ((SCRLLOCK 202)                (NUMLOCK 201)                (NUMERICESC 200)                (NUMERIC1 204)                (5 100)                (% 100)                (4 101)                ($ 101)                (6 102)                (~ 102)                (\e 103)                (E 103)                (7 104)                (& 104)                (\d 105)                (D 105)                (\u 106)                (U 106)                (\v 107)                (V 107)                (0 108)                (\) 108)                (\k 109)                (K 109)                (- 110)                (110)                (\p 111)                (P 111)                (/ 112)                (? 112)                (BS 115)                (<- 115)                (3 116)                (\# 116)                (2 117)                (@ 117)                (\w 118)                (W 118)                (\q 119)                (Q 119)                (\s 120)                (S 120)                (\a 121)                (A 121)                (9 122)                (\( 122)                (\i 123)                (I 123)                (\x 124)                (X 124)                (\o 125)                (O 125)                (\l 126)                (L 126)                (\, 127)                (< 127)                (\' 128)                (\" 128)                (] 129)                (} 129)                (1 132)                (! 132)                (ESC 133)                (ESCAPE 133)                (-> 133)                (TAB 134)                (=> 134)                (\f 135)                (F 135)                (\c 137)                (C 137)                (\j 138)                (J 138)                (\b 139)                (B 139)                (\z 140)                (Z 140)                (LSHIFT 141)                (\. 142)                (> 142)                (\; 143)                (\: 143)                (CR 144)                (<-\| 144)                (_ 145)                (^ 145)                (\r 148)                (R 148)                (\t 149)                (T 149)                (\g 150)                (G 150)                (\y 151)                (Y 151)                (\h 152)                (H 152)                (8 153)                (* 153)                (\n 154)                (N 154)                (\m 155)                (M 155)                (LOCK 156)                (SPACE 157)                ([ 158)                ({ 158)                (= 159)                (+ 159)                (RSHIFT 160)                (NUMERIC/ 203)                (NUMERIC7 205)                (NUMERIC8 206)                (NUMERIC9 207)                (NUMERIC4 208)                (NUMERIC5 209)                (NUMERIC6 210)                (SKIP 211)                (NEXT 211)                (NUMERIC1 212)                (NUMERIC2 213)                (NUMERIC3 214)                (NUMERIC0 215)                (NUMERIC. 216)                (NUMERIC\, 217)                (KEYBOARD 218)                (DEFINE 219)                (EXPAND 219))               IBMPC               ((200 ESC)                (203 (SYS REQ))                (202 ("SCRL" "LOCK"))                (201 ("NUM" "LOCK"))                (218 "ALT")                (301 "F1")                (302 "F2")                (303 "F3")                (304 "F4")                (305 "F5")                (306 "F6")                (307 "F7")                (308 "F8")                (309 "F9")                (310 "F10"))               (HELVETICA 5)               23130               (CLASSIC 12)               ((1 BS)                (92 ESC)                (9 TAB)                (13 CR)                (32 SPACE))               (LAMBDA (KEY)                      (IDIFFERENCE KEY 100)))))(RPAQQ VKBD.ICON #*(93 50)OOOOOOOOOOOOOOOOOOOOOOOHOOOOOOOOOOOOOOOOOOOOOOOHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHLGOOOOOOOOOOOOOOOOOOOOAHLGOOOOOOOOOOOOOOOOOOOOAHLG@HDBA@HDBA@HDBA@HD@GAHLG@HDBA@HDBA@HDBA@HD@GAHLG@HDBA@HDBA@HDBA@HDNGAHLG@HDBA@HDBA@HDBA@HD@GAHLGOOOOOOOOOOOOOOOOOOOOAHLG@BA@HDBA@HDBA@HDBA@GAHLGGBA@HDBA@HDBA@HDBA@GAHLGGBA@HDBA@HDBA@HDBAFGAHLG@BA@HDBA@HDBA@HDBA@GAHLGOOOOOOOOOOOOOOOOOOHGAHLG@AHDBA@HDBA@HDBA@HIGAHLG@AHDBA@HDBA@HDBA@HIGAHLG@AHDBA@HDBA@HDBA@HIGAHLG@AHDBA@HDBA@HDBA@HHGAHLGOOOOOOOOOOOOOOOOOOOOAHLG@@@HDBA@HDBA@HDBA@@GAHLG@@@HDBA@HDBA@HDBA@@GAHLG@@@HDBA@HDBA@HDBA@@GAHLG@@@HDBA@HDBA@HDBA@@GAHLGOOOOOOOOOOOOOOOOOOOOAHLGOOOOOOOOOOOOOOOOOOOOAHLGOOOOOOOOOOOOOOOOOOOOAHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHL@@@@@@@@@@@@@@@@@@@@@AHOOOOOOOOOOOOOOOOOOOOOOOHOOOOOOOOOOOOOOOOOOOOOOOH)(RPAQQ VKBD.MASK)(DECLARE\: DOEVAL@COMPILE DONTCOPY(GLOBALVARS VKBD.BACKGROUND-MENU-SUBITEMS VKBD.DEFAULT-CONFIGURATION-NAME VKBD.KNOWN-KEYBOARDS        VKBD.NON-CHAR-ASSIGNMENTS-LABELS VKBD.ICON VKBD.MASK VKBD.CONFIGURATIONS))(DECLARE\: FIRST (MOVD? '\\KEYBOARDEVENTFN '\\OLDKEYBOARDEVENTFN))(DEFINEQ(vkbd.\\keyboardeventfn  (lambda (fdev event extra)                             (* \; "Edited 15-Dec-87 17:41 by Snow")                    (* |;;| "call the old keyboard event function, then make sure to reset the Virtual keyboard keyaction tables.")    (\\oldkeyboardeventfn fdev event extra)    (selectq event        ((afterlogout aftermakesys aftersysout aftersavevm)              (cond                ((neq \\machinetype \\keyboard.beforetype)                 (vkbd.resetkeyactiontables))))        nil)))(vkbd.resetkeyactiontables  (lambda nil                                            (* \; "Edited 15-Dec-87 16:54 by Snow")                                                             (* \;                                                            "Default settings for new machine?")    (or (findvirtualkeyboard 'default)        (vkbd.add-default-keyboard))    (|for| keyboard table (machinetype _ (machinetype)) |in| vkbd.known-keyboards       |when| (and (setq table (getprop (|fetch| (virtualkeyboard keyboardname) |of|                                                                                        keyboard)                                          'keyactiontable))                       (eq machinetype (|fetch| keyboardconfiguration |of| keyboard)))       |do| (vkbd.create-keyaction-table keyboard table)))))(MOVD 'VKBD.\\KEYBOARDEVENTFN '\\KEYBOARDEVENTFN)(DECLARE\: FIRST (MOVD? 'KEYACTION 'OLDKEYACTION))(DEFINEQ(newkeyaction  (lambda (keyname actions table)                        (* \; "Edited 15-Dec-87 16:54 by Snow")    (prog (keyboard (keynum (or (smallp keyname)                                (\\keynametonumber keyname))))(* |;;;| "handle the NIL cases.")          (cond             ((and (null table)                   (listp actions)                   (or (fmemb (car actions)                              modeactions)                       (fmemb (cdr actions)                              modeactions)))                    (* |;;| "If we are setting a mode (as opposed to a character) key, assume that it is intended to be set in all keyboards where that key is still an appropriate mode")              (|for| keyboard keyaction (origkeyaction _ (cdr (fassoc keynum \\origkeyactions)))                     (modeaction _ (cdr (fassoc keyname modekeys))) |in| vkbd.known-keyboards                 |do| (setq keyaction (cdr (fassoc (vkbd.key-name-to-key-id keyname)                                                      (|fetch| keyassignments |of| keyboard))                                               ))                       (cond                          ((or (null keyaction)                               (equal keyaction origkeyaction)                               (equal keyaction modeaction))                           (newkeyaction keyname actions keyboard)))                 |finally| (rplacd (or (assoc keyname modekeys)                                           (car (|push| modekeys (cons keyname))))                                      actions))              (return t)                                     (* \;                      "This will cause an error if we try to pass it back in.  What else can we do?")              ))(* |;;;| "get the keyboard or key action table.")          (cond             ((null table)              (setq table \\currentkeyaction))             ((litatom table)              (cond                 ((setq keyboard (fassoc table vkbd.known-keyboards))                  (setq table (getprop table 'keyactiontable)))                 (t (error table "is not a defined keyboard."))))             ((listp table)              (cond                 ((fmemb table vkbd.known-keyboards)                  (setq keyboard table)                  (setq table (getprop (|fetch| keyboardname |of| table)                                     'keyactiontable)))                 (t (error table "is not a defined keyboard."))))             (t (|for| vkbd |in| vkbd.known-keyboards                   |when| (eq table (getprop (|fetch| keyboardname |of| vkbd)                                               'keyactiontable)) |do| (setq keyboard vkbd))))                    (* |;;| "If TABLE is NIL, means that we are setting a virtual keyboard for which a keyaction table hasn't yet been created.")          (return (prog1 (cond                            (table (oldkeyaction keyname actions table))                            (keyboard                        (* \;         "virtual keyboard package allows incomplete keyboards with defaults from \\ORIGKEYACTIONS.")                                   (cdr (or (fassoc (vkbd.key-name-to-key-id keyname)                                                   (|fetch| keyassignments |of| keyboard))                                            (fassoc keynum \\origkeyactions))))                            (t (shouldnt)))                         (cond                            ((and keyboard actions)          (* \; "set the keyaction in the virtual keyboard, which keeps it consistent with the corresponding table.")                             (putassoc (vkbd.key-name-to-key-id keyname)                                    actions                                    (|fetch| keyassignments |of| keyboard))))))))))(MOVD 'NEWKEYACTION 'KEYACTION)(RPAQ? MODEKEYS )(RPAQQ MODEACTIONS (EVENT CTRLUP CTRLDOWN 1SHIFTUP 1SHIFTDOWN 2SHIFTUP 2SHIFTDOWN LOCKUP LOCKDOWN                              LOCKTOGGLE METAUP METADOWN FONTUP FONTDOWN FONTTOGGLE USERMODE1UP                               USERMODE1DOWN USERMODE1TOGGLE USERMODE2UP USERMODE2DOWN USERMODE2TOGGLE                              USERMODE3UP USERMODE3DOWN USERMODE3TOGGLE))(DECLARE\: DOEVAL@COMPILE DONTCOPY(GLOBALVARS MODEKEYS MODEACTIONS))(ADDTOVAR BREAKRESETFORMS ((LAMBDA (K)                                      (PROCESS.KEYBOARD NIL K))                               'DEFAULT))(VKBD.INIT)(FILESLOAD ICONW)(PUTPROPS VIRTUALKEYBOARDS COPYRIGHT ("Venue & Xerox Corporation" 1985 1986 1987 1988 1990))(DECLARE\: DONTCOPY  (FILEMAP (NIL (4018 10378 (FINDVIRTUALKEYBOARD 4028 . 5920) (PROCESS.KEYBOARD 5922 . 8010) (VKBD.CREATE-KEYACTION-TABLE 8012 . 9482) (VKBD.WINDOWMENUFN 9484 . 9751) (VKBD.WINDOWMENUINIT 9753 . 10376)) (10379 13668 (DEFINEKEYBOARD 10389 . 13666)) (13669 16755 (VKBD.ADD-ITEM-TO-BACKGROUND-MENU 13679 . 14087) (VKBD.INIT 14089 . 15130) (VKBD.CREATE-DEFAULT-KEYBOARD 15132 . 15897) (VKBD.ADD-DEFAULT-KEYBOARD 15899 . 16753)) (16756 20332 (VKBD.LOAD-FILE-COMMAND 16766 . 17114) (VKBD.LOAD-KEYBOARD-FILE 17116 . 18851) (VKBD.STORE-FILE-COMMAND 18853 . 19194) (VKBD.STORE-KEYBOARD-FILE 19196 . 20330)) (20333 80014 (SWITCHKEYBOARDS 20343 . 21845) (VKBD.ASSIGNABLE-KEYP 21847 . 22447) (VKBD.BUTTONEVENTFN 22449 . 25356) (VKBD.CENTER-BITMAP-IN-REGION 25358 . 26882) (VKBD.CHAR-ASSIGNMENTP 26884 . 27081) (VKBD.CLEAR-KEY-DISPLAY 27083 . 29529) (VKBD.COMPLETE-KEYBOARD 29531 . 31727) (VKBD.CTRL-ASSIGNMENTP 31729 . 31972) (VKBD.EVENT-ASSIGNMENTP 31974 . 32214) (VKBD.META-ASSIGNMENTP 32216 . 32459) (VKBD.CREATE-KEYBOARD-BITMAP 32461 . 34391) (VKBD.CREATE-KEYBOARD-DISPLAY 34393 . 36292) (VKBD.CURSORMOVEDFN 36294 . 38198) (VKBD.DISPLAY-CHARACTER 38200 . 39646) (VKBD.DISPLAY-EMPTY-KEY-CAP 39648 . 50911) (VKBD.DISPLAY-KEY 50913 . 52649) (VKBD.DISPLAY-KEY-CHARACTERS 52651 . 54024) (VKBD.DRAW-KEY-CAPS 54026 . 56214) (VKBD.ERASE-FRAME 56216 . 56539) (VKBD.EXTEND-REGION 56541 . 57130) (VKBD.FETCH-KEY-ASSIGNMENT 57132 . 57456) (VKBD.FRAME-KEY 57458 . 59316) (VKBD.GET-CONFIGURATION 59318 . 60098) (VKBD.GET-CURRENT-KEY-ASSIGNMENT 60100 . 60324) (VKBD.GET-KEY-AND-REGIONS-OF-CURSOR-POSITION 60326 . 60941) (VKBD.GET-KEY-REGIONS 60943 . 61539) (VKBD.GET-NON-CHAR-LABEL 61541 . 62196) (VKBD.ICONFN 62198 . 62934) (VKBD.INVERT-LOCK-KEYS 62936 . 63505) (VKBD.INVERT-SHIFT-KEYS 63507 . 64080) (VKBD.TRANSLATE-KEY-ID 64082 . 64882) (VKBD.INVERT-KEY 64884 . 65150) (VKBD.INVERT-REGION 65152 . 65843) (VKBD.KEY-ID-TO-KEY-NAMES 65845 . 66331) (VKBD.KEY-NAME-TO-KEY-ID 66333 . 66956) (VKBD.KEYBOARD-IS-MACHINE-KEYBOARD 66958 . 67653) (VKBD.KEYBOARD-WINDOW-REPAINTFN 67655 . 68834) (VKBD.LOCK-ASSIGNMENTP 68836 . 69079) (VKBD.LOCK-KEYP 69081 . 69390) (VKBD.LOCK/NOLOCK 69392 . 69551) (VKBD.LOCKDOWN-ASSIGNMENTP 69553 . 69847) (VKBD.LOCKUP-ASSIGNMENTP 69849 . 70139) (VKBD.LOWER-HALF-REGION 70141 . 70541) (VKBD.PARSE-CHAR-CODE 70543 . 71051) (VKBD.PARSE-KEY-ASSIGNMENT 71053 . 73113) (VKBD.PERFORM-KEY-ASSIGNMENT 73115 . 73395) (VKBD.POP-MENU-AND-SWITCH-KEYBOARDS 73397 . 73767) (VKBD.POP-UP-KEYBOARDS-MENU 73769 . 74898) (VKBD.POSITION-IS-IN-KEY-REGION 74900 . 75170) (VKBD.REMOVE-KEYBOARD-COMMAND 75172 . 75629) (VKBD.RESET-KEYBOARD-WINDOW 75631 . 76233) (VKBD.SEND-CHARACTER 76235 . 77716) (VKBD.SHIFT-ASSIGNMENTP 77718 . 78112) (VKBD.SHIFTED-CHAR 78114 . 78272) (VKBD.UNDEFINE-KEYBOARD 78274 . 78690) (VKBD.UNION-REGIONS 78692 . 79350) (VKBD.UNSHIFTED-CHAR 79352 . 79511) (VKBD.UPPER-HALF-REGION 79513 . 80012)) (127472 128925 (VKBD.\\KEYBOARDEVENTFN 127482 . 128021) (VKBD.RESETKEYACTIONTABLES 128023 . 128923)) (129031 133045 (NEWKEYACTION 129041 . 133043)))))STOP