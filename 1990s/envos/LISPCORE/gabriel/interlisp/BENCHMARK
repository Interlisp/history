(FILECREATED "19-Nov-85 23:24:15" {QV}<PEDERSEN>BENCHMARKS>BENCHMARK.;11 15509        changes to:  (FNS BROWSE.BM TRAVERSE.BM)      previous date: "17-Nov-85 13:47:33" {QV}<PEDERSEN>BENCHMARKS>BENCHMARK.;10)(* Copyright (c) 1985 by Xerox Corporation. All rights reserved.)(PRETTYCOMPRINT BENCHMARKCOMS)(RPAQQ BENCHMARKCOMS ((FNS CTAK.BM FFT.BM RUN.BENCHMARKS STAK.BM TAK.BM TAKL.BM TAKR.BM BOYER.BM 			     BROWSE.BM DERIVATIVE.BM DDERIVATIVE.BM DESTRUCTIVE.BM DIV2.BM 			     POLYNOMIAL.BM PUZZLE.BM TRAVERSE.BM TRIANGLE.BM IO.BM)	(* * Call (RUN.BENCHMARKS))	(DECLARE: DONTEVAL@LOAD (FILES (SYSLOAD FROM {ERIS}<LISPCORE>LIBRARY>)				       CMLARRAY))	(DECLARE: DONTEVAL@LOAD		  (FILES BOYER BROWSE CTAK DDERIV DERIV DESTRUCTIVE DIV2 FFT FPRINT FREAD POLY PUZZLE 			 STAK TAK TAKL TAKR TESTPATTERN TPRINT TRAVERSE TRIANG))	(* Gabriel benchmarks)	(VARS AREFY BENCHMARKSUITE CONSY TAKS)))(DEFINEQ(CTAK.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:30")    (printout T T "************ CTAK BENCHMARK **************" T T)    (printout T T T "Starting the CTAK run:  (TIMEALL (CTAK 18 12 6))" T T)    (SETQ VALUE (TIMEALL (CTAK 18 12 6)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (SETQ VALUE (TIMEALL (CTAK 18 12 6)))    (printout T "Value = " VALUE T)    (printout T T "CTAK finished" T T])(FFT.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:57")    (printout T T "*************** THE FFT BENCHMARK ***********" T T)    (printout T T T "Starting FFT run:  (TIMEALL (FFT-BENCH))" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (FFT-BENCH))    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (FFT-BENCH))    (printout T T "FFT finished" T T])(RUN.BENCHMARKS  [LAMBDA (BENCHMARKS)                                       (* jop: " 8-Nov-85 17:28")          (* * BENCHMARKS should be a list of the desired Benchmarks)    (DECLARE (SPECVARS BENCHMARKSUITE))    (SETQ BENCHMARKS (MKLIST BENCHMARKS))    (if (NULL BENCHMARKS)	then (SETQ BENCHMARKS BENCHMARKSUITE)      elseif (for BM in BENCHMARKS thereis (NOT (MEMB BM BENCHMARKSUITE)))	then (HELP "Unknown Benchmark" BENCHMARKS))    (RESETLST (LET ((DRIBBLE.FILE (PACKFILENAME (QUOTE HOST)						    (QUOTE DSK)						    (QUOTE NAME)						    (PACK* MAKESYSNAME "-" (MACHINETYPE))						    (QUOTE EXTENSION)						    (QUOTE BENCHMARKS)))		      VALUE)		     (RESETSAVE NIL (QUOTE (TERPRI)))		     (RESETSAVE NIL (LIST (QUOTE PRIN1)					      (CONCAT "Benchmark Results in " DRIBBLE.FILE)))		     [RESETSAVE (DRIBBLE (PACKFILENAME (QUOTE HOST)							     (QUOTE DSK)							     (QUOTE NAME)							     (PACK* MAKESYSNAME "-" (MACHINETYPE))							     (QUOTE EXTENSION)							     (QUOTE BENCHMARKS]		     (MOVD (QUOTE PAGEFULLFN)			     (QUOTE PAGEFULLFN.SAVE))		     (RESETSAVE NIL (QUOTE (MOVD PAGEFULLFN.SAVE PAGEFULLFN)))		     (MOVD (QUOTE NILL)			     (QUOTE PAGEFULLFN))		     (printout T T "MACHINETYPE = " (MACHINETYPE)			       T)		     (printout T T "MAKESYSNAME = " MAKESYSNAME T)		     (printout T T "MAKESYSDATE = " MAKESYSDATE T)		     (printout T T "DATE = " (DATE)			       T)		     (printout T T "USERNAME = " (USERNAME)			       T T)		     (DECLARE (SPECVARS VALUE))		     [for BM in BENCHMARKS do (APPLY (PACK* BM (QUOTE .BM]                                                             (* (BROWSE.BM))                                                             (* (PUZZLE.BM))                                                             (* (JONL.BM) (BITBLT.BM))		     (PRINTOUT T "Finished benchmarking" T T])(STAK.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:31")    (printout T T "************ STAK BENCHMARK **************" T T)    (INIT-STAK)                                            (* Bind X, Y , and Z)    (printout T T T "Starting the STAK run:  (TIMEALL (STAK))" T T)    (SETQ VALUE (TIMEALL (STAK)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (SETQ VALUE (TIMEALL (STAK)))    (printout T T "STAK finished" T T])(TAK.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:29")    (printout T T "************ TAK BENCHMARK **************" T T)    (printout T T T "Starting the TAK run:  (TIMEALL (TAK 18 12 6))" T T)    (SETQ VALUE (TIMEALL (TAK 18 12 6)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (SETQ VALUE (TIMEALL (TAK 18 12 6)))    (printout T "Value = " VALUE T)    (printout T T "TAK finished" T T])(TAKL.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:31")    (printout T T "************ TAKL BENCHMARK **************" T T)    (printout T T T "Starting the TAKL run:  (TIMEALL (TAKL 18L 12L 6L))" T T)    (SETQ VALUE (TIMEALL (TAKL 18L 12L 6L)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (SETQ VALUE (TIMEALL (TAKL 18L 12L 6L)))    (printout T "Value = " VALUE T)    (printout T T "TAKL finished" T T])(TAKR.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:30")    (printout T T "************ TAKR BENCHMARK **************" T T)    (printout T T T "Starting the TAKR run:  (TIMEALL (TAK0 18 12 6))" T T)    (SETQ VALUE (TIMEALL (TAK0 18 12 6)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (SETQ VALUE (TIMEALL (TAK0 18 12 6)))    (printout T "Value = " VALUE T)    (printout T T "TAKR finished" T T])(BOYER.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:46")    (printout T T "********* BOYER BENCHMARK ***********" T T)    (printout T T T "Initializing BOYER run:  (TIMEALL (SETUP)) " T T)    (TIMEALL (SETUP))    (printout T T T "starting BOYER run:  (TIMEALL (TEST-BOYER)) " T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (TEST-BOYER))    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (TEST-BOYER))    (printout T T "BOYER finished" T T])(BROWSE.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:46")    (printout T T "********* BROWSE BENCHMARK ***********" T T)    (printout T T T "starting BROWSE run:  (TIMEALL (BROWSE)) " T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (BROWSE))    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (BROWSE))    (printout T T "BROWSE finished" T T])(DERIVATIVE.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:50")    (printout T T "******* Derivative Benchmark **********" T T)    (printout T T T "Starting the DERIV run:  (TIMEALL (RUN-DERIV))" T T)    (FRPTQ 40 (RECLAIM))    (SETQ VALUE (TIMEALL (RUN-DERIV)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (SETQ VALUE (TIMEALL (RUN-DERIV)))    (printout T "Value = " VALUE T)    (printout T T "DERIV finished" T T])(DDERIVATIVE.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:50")    (printout T T "******* Data-Driven Derivative Benchmark **********" T T)    (printout T T T "Starting the DDERIV run:  (TIMEALL (RUN-DDERIV))" T T)    (INIT-DDERIV)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (RUN-DDERIV)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (SETQ VALUE (TIMEALL (RUN-DDERIV)))    (printout T "Value = " VALUE T)    (printout T T "DDERIV finished" T T])(DESTRUCTIVE.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:54")    (printout T T "*********** THE DESTRUCTIVE BENCHMARK ************" T T)    (printout T T T "Starting the DESTRUCTIVE run:  (TIMEALL (DESTRUCTIVE 600 50))" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (DESTRUCTIVE 600 50)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (SETQ VALUE (TIMEALL (DESTRUCTIVE 600 50)))    (printout T "Value = " VALUE T)    (printout T T "DESTRUCTIVE finished" T T])(DIV2.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:53")    (printout T T "******* DIVIDE BY TWO BENCHMARK **********" T T)    (printout T T T "Starting the iterative DIV2 run:  (TIMEALL (TEST1 L))" T T)    (FRPTQ 20 (RECLAIM))    (TIMEALL (TEST1 L))    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (TEST1 L))    (printout T T T "Starting the recursive DIV2 run:  (TIMEALL (TEST2 L))" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (TEST2 L))    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (TEST2 L))    (printout T T "DIV2 finished" T T])(POLYNOMIAL.BM  [LAMBDA NIL                                                (* jop: " 8-Nov-85 17:26")    (printout T T "*************** THE POLYNOMIAL BENCHMARK ***********" T T)    (printout T T T "Starting POLY 2 run:  (TIMEALL (BENCH 2))" T T)    (SETUP-POLY)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 2)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 2)))    (printout T "Value = " VALUE T)    (printout T T T "Starting POLY 5 run:  (TIMEALL (BENCH 5))" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 5)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 5)))    (printout T "Value = " VALUE T)    (printout T T T "Starting POLY 10 run:  (TIMEALL (BENCH 10))" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 10)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 10)))    (printout T "Value = " VALUE T)    (printout T T T "Starting POLY 15 run:  (TIMEALL (BENCH 15))" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 15)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (BENCH 15)))    (printout T "Value = " VALUE T)    (printout T T "POLYNOMIAL finished" T T])(PUZZLE.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:57")    (printout T T "*************** THE PUZZLE BENCHMARK ***********" T T)    (printout T T T "Starting PUZZLE run:  (TIMEALL (START))" T T)    (FRESHPUZZLES)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (START)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (FRESHPUZZLES)    (FRPTQ 40 (RECLAIM))    (SETQ VALUE (TIMEALL (START)))    (printout T "Value = " VALUE T)    (printout T T "PUZZLE finished" T T])(TRAVERSE.BM  [LAMBDA NIL                                                (* jop: "19-Nov-85 23:23")    (printout T T "************* THE TRAVERSE BENCHMAK ************" T T)    (printout T T T "Starting the TRAVERSE initialization:  (TIMEALL (INIT-TRAVERSE))" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (INIT-TRAVERSE))    (printout T T T "Starting the TRAVERSE run:  (TIMEALL (RUN-TRAVERSE))" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (RUN-TRAVERSE))    (printout T T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (RUN-TRAVERSE))    (printout T T "TRAVERSE finished" T T])(TRIANGLE.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 22:57")    (printout T T "*************** THE TRIANGLE BENCHMARK ***********" T T)    (printout T T T "Starting TRIANG run:  (TIMEALL (GOGOGO 22))" T T)    (TRIANG-INIT)    (FRPTQ 20 (RECLAIM))    (SETQ VALUE (TIMEALL (GOGOGO 22)))    (printout T "Value = " VALUE T)    (printout T T "Repeating the TIMEALL" T T)    (TRIANG-INIT)    (FRPTQ 40 (RECLAIM))    (SETQ VALUE (TIMEALL (GOGOGO 22)))    (printout T "Value = " VALUE T)    (printout T T "TRIANG finished" T T])(IO.BM  [LAMBDA NIL                                                (* jop: " 7-Nov-85 12:37")    (printout T T "*******************************************************************" 	      "DSK file I/O benchmarks:  FPRINT and FREAD"	      T "Terminal printing (to window):  TPRINT" T 	      "*******************************************************************"	      T T)    (CNDIR (QUOTE {DSK}))    (DELFILE (QUOTE FPRINT.TST))    (CREATE-TESTPATTERN)    (printout T T T "Starting  FPRINT:  (TIMEALL (FPRINT))" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (FPRINT))    (printout T T "Repeating the TIMEALL" T T)    (DELFILE (QUOTE FPRINT.TST))    (FRPTQ 20 (RECLAIM))    (TIMEALL (FPRINT))    (printout T T "FPRINT finished" T T)    (printout T T T "Starting the FREAD run:  (TIMEALL (FREAD))" T T)    (FRPTQ 20 (RECLAIM))    (TIMEALL (FREAD))    (printout T T "Repeating the TIMEALL" T T)    (FRPTQ 40 (RECLAIM))    (TIMEALL (FREAD))    (printout T T "FREAD finished" T T)    (printout T T T "Starting the TPRINT run:  (TPRINT)" T T)    (INIT-TPRINT)    (FRPTQ 20 (RECLAIM))    (TIMEALL (TPRINT))    (CLOSEW BIGWINDOW)    (printout T T "Repeating the TIMEALL" T T)    (INIT-TPRINT)    (FRPTQ 10 (RECLAIM))    (TIMEALL (TPRINT))    (CLOSEW BIGWINDOW)    (printout T T "TPRINT finished" T T]))(* * Call (RUN.BENCHMARKS))(DECLARE: DONTEVAL@LOAD (FILESLOAD (SYSLOAD FROM {ERIS}<LISPCORE>LIBRARY>)	   CMLARRAY))(DECLARE: DONTEVAL@LOAD (FILESLOAD BOYER BROWSE CTAK DDERIV DERIV DESTRUCTIVE DIV2 FFT FPRINT FREAD POLY PUZZLE STAK TAK TAKL 	   TAKR TESTPATTERN TPRINT TRAVERSE TRIANG))(* Gabriel benchmarks)(RPAQQ AREFY (PUZZLE TRIANGLE))(RPAQQ BENCHMARKSUITE (TAK STAK CTAK TAKL TAKR BOYER BROWSE DESTRUCTIVE TRAVERSE DERIVATIVE 			     DDERIVATIVE DIV2 FFT PUZZLE TRIANGLE IO POLYNOMIAL))(RPAQQ CONSY (BOYER BROWSE DERIVATIVE DDERIVATIVE DIV2))(RPAQQ TAKS (TAK STAK CTAK TAKL TAKR))(PUTPROPS BENCHMARK COPYRIGHT ("Xerox Corporation" 1985))(DECLARE: DONTCOPY  (FILEMAP (NIL (918 14795 (CTAK.BM 928 . 1443) (FFT.BM 1445 . 1907) (RUN.BENCHMARKS 1909 . 4059) (STAK.BM 4061 . 4605) (TAK.BM 4607 . 5115) (TAKL.BM 5117 . 5641) (TAKR.BM 5643 . 6158) (BOYER.BM 6160 . 6725) (BROWSE.BM 6727 . 7183) (DERIVATIVE.BM 7185 . 7762) (DDERIVATIVE.BM 7764 . 8381) (DESTRUCTIVE.BM 8383 . 9011) (DIV2.BM 9013 . 9741) (POLYNOMIAL.BM 9743 . 11414) (PUZZLE.BM 11416 . 12030) (TRAVERSE.BM 12032 . 12690) (TRIANGLE.BM 12692 . 13320) (IO.BM 13322 . 14793)))))STOP