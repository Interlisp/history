(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "ROOMS")(il:filecreated "22-Jun-88 22:36:08" il:|{POGO:AISNORTH:XEROX}<ROOMS>NEXT>USERS>NEW-LAFITE-WINDOW-TYPES.;8| 4615         il:|changes| il:|to:|  (il:window-types :lafite-browser) (il:vars il:new-lafite-window-typescoms)      il:|previous| il:|date:| "16-Jun-88 15:59:23" il:|{POGO:AISNORTH:XEROX}<ROOMS>NEXT>USERS>NEW-LAFITE-WINDOW-TYPES.;7|); Copyright (c) 1988 by Xerox Corporation.  All rights reserved.(il:prettycomprint il:new-lafite-window-typescoms)(il:rpaqq il:new-lafite-window-typescoms ((il:* il:|;;| "window types for Lafite") (file-environments il:new-lafite-window-types) (il:p (require "ROOMS")) (eval-when (compile eval) (il:files (il:loadcomp t) il:lafitedecls)) (il:window-types :lafite-status-window :lafite-browser) (il:* il:|;;| "keep il:shapew from hanging") (il:p (il:changename (quote il:lab.reshapefn) (quote il:obtain.monitorlock) (quote true)) (il:changename (quote il:lab.repaintfn) (quote il:obtain.monitorlock) (quote true))) (il:globalvars il:lafitestatuswindow il:defaultmailfoldername il:\\lafite.active il:lafitebrowserregion)))(il:* il:|;;| "window types for Lafite")(define-file-environment il:new-lafite-window-types :compiler :compile-file :readtable "XCL" :package "ROOMS")(require "ROOMS")(eval-when (compile eval)(il:filesload (il:loadcomp t) il:lafitedecls))(def-window-type :lafite-status-window :recognizer (lambda (window) (eq window il:lafitestatuswindow)) :abstracter (lambda (window) nil) :reconstituter (lambda (ignore) (when (fboundp (quote il:lafite)) (or il:lafitestatuswindow (progn (il:lafite (quote il:on) nil) il:lafitestatuswindow)))) :title (lambda (placement region dsp) (print-pep-title-string "Lafite" region dsp :no-title-bar? t)) :files (il:* il:|;;;| "we don't load Lafite on demand.") (il:new-lafite-window-types))(def-window-type :lafite-browser :recognizer (lambda (window) (eq (il:windowprop window (quote il:repaintfn)) (quote il:lab.repaintfn))) :abstracter (lambda (window) (let ((folder (il:windowprop window (quote il:mailfolder)))) (list :folder-name (il:|fetch| (il:mailfolder il:versionlessfoldername) il:|of| folder) :layout (let ((folder-region (window-region window)) (icon-position (icon-position window)) (display-region (il:|fetch| (il:mailfolder il:folderdisplayregion) il:|of| folder))) (list (externalize-region folder-region) (when icon-position (externalize-position icon-position)) (when display-region (externalize-region display-region))))))) :reconstituter (lambda (plist) (il:* il:|;;| "pass if lafite is not loaded") (when (fboundp (quote il:lafite)) (il:* il:|;;| "first make sure lafite is turned on") (unless (eq il:\\lafite.active t) (il:lafite (quote il:on) nil) (loop (il:block) (when (eq il:\\lafite.active t) (return))) (il:* il:|;;| "don't want to add windows to current room") (hide-window il:lafitestatuswindow)) (let* ((externalized-region (getf plist :region)) (externalized-layout (getf plist :layout (list il:lafitebrowserregion))) (layout (if externalized-region (il:* il:|;;| "for back compatability") (list (internalize-region externalized-region)) (list (internalize-region (first externalized-layout)) (when (second externalized-layout) (internalize-position (second externalized-layout))) (when (third externalized-layout) (internalize-region (third externalized-layout)))))) (folder (il:lafite.browse.folder (getf plist :folder-name il:defaultmailfoldername) layout :shrink))) (when folder (il:block) (il:* il:\; "let the shrinker grab the monitor") (il:with.monitor (il:fetch (il:mailfolder il:folderlock) il:of folder) (il:* il:\; "then wait for the shrinker to release it") (il:fetch (il:mailfolder il:browserwindow) il:of folder)))))) :title (lambda (placement region dsp) (let* ((folder (il:windowprop (placement-window placement) (quote il:mailfolder)))) (print-pep-title-string (if folder (il:|fetch| (il:mailfolder il:shortfoldername) il:|of| folder) "Lafite Browser") region dsp :no-title-bar? (placement-shrunken? placement)))) :files (il:* il:|;;;| "we don't load Lafite on demand") (il:new-lafite-window-types))(il:* il:|;;| "keep il:shapew from hanging")(il:changename (quote il:lab.reshapefn) (quote il:obtain.monitorlock) (quote true))(il:changename (quote il:lab.repaintfn) (quote il:obtain.monitorlock) (quote true))(il:declare\: il:doeval@compile il:dontcopy(il:globalvars il:lafitestatuswindow il:defaultmailfoldername il:\\lafite.active il:lafitebrowserregion))(il:putprops il:new-lafite-window-types il:copyright ("Xerox Corporation" 1988))(il:declare\: il:dontcopy  (il:filemap (nil)))il:stop