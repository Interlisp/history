h19354s 00023/00000/00046d D 2.4 90/06/04 10:02:33 sybalsky 8 7c reformat, copyrightes 00010/00001/00036d D 2.3 90/03/22 16:34:52 sybalsky 7 6c reverse addition order so  + Lisp_world.  Generates better 286 codees 00006/00006/00031d D 2.2 89/01/09 17:51:25 shih 6 5c spellinges 00000/00000/00037d D 2.1 88/05/17 09:16:55 hayata 5 4c Version up to 2.1es 00001/00001/00036d D 1.3 88/03/13 13:16:06 hayata 4 3c Add SCCS key id (%Z%)es 00008/00000/00029d D 1.2 88/03/09 13:38:06 krivacic 3 1c added StkOffset_from_68K Addr68k_from_StkOffset macroses 00001/00001/00028d R 1.2 88/03/08 18:12:45 krivacic 2 1c added StkOffset_from_68K Addr68k_from_StkOffset macroses 00029/00000/00000d D 1.1 88/02/23 18:34:15 hayata 1 0c date and time created 88/02/23 18:34:15 by hayataeuUtTI 1D 4/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 4I 4D 6/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 6I 6/* %Z% %M% Version %I% (%G%). copyright envos & Fuji Xerox  */E 6E 4/* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. *D 6 *	Auther	:	Takeshi Shimizu *			Hiroshi Hayata	E 6I 6 *	Author	:	Takeshi Shimizu *			Hiroshi HayataE 6 */I 8/************************************************************************//*									*//*	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*//*									*//*	This file is work-product resulting from the Xerox/Venue	*//*	Agreement dated 18-August-1989 for support of Medley.		*//*									*//************************************************************************/E 8/**********************************************************************//*		Func name :	address68k.h		Translate 68k address to Lisp or Lisp to 68k		Date :		January 16, 1987		Create :	Takeshi Shimizu*//**********************************************************************/I 8E 8/*  translate 68k ptr to Lisp DLword address */#define LADDR_from_68k(ptr68k)	(((unsigned int)(ptr68k) - (unsigned int)Lisp_world) >>1)I 8E 8/*  translate 68k ptr to Lisp Page number   */D 6#define LPAGE_from_68k(ptr68k)	(LADDR_from_68k(ptr68k) >> 8)	E 6I 6#define LPAGE_from_68k(ptr68k)	(LADDR_from_68k(ptr68k) >> 8)E 6I 8E 8D 6/* Translate Lisp_address to 68K address 	*/E 6I 6/* Translate Lisp_address to 68K address	*/E 6D 7/*	Lisp_addr: word offset			*/E 7I 7/*	Lisp_addr: word offset		*/#ifndef I386E 7#define Addr68k_from_LADDR(Lisp_addr)	(Lisp_world + (Lisp_addr))I 7#else#define Addr68k_from_LADDR(Lisp_addr)	((Lisp_addr) + Lisp_world)#endifE 7I 8E 8/* translate LispPage to 68k address */#define Addr68k_from_LPAGE(Lisp_page)	(Addr68k_from_LADDR((Lisp_page << 8) ))I 8E 8I 3D 6/* Stack Offset Macors */E 6I 6/* Stack Offset Macros */E 6#define StkOffset_from_68K(ptr68k)\	(((unsigned int)(ptr68k) - (unsigned int)Stackspace) >>1)I 7#ifndef I386E 7#define Addr68k_from_StkOffset(stkoffset)\	(Stackspace + (stkoffset))I 7#else#define Addr68k_from_StkOffset(stkoffset)\	( (stkoffset) + Stackspace)#endifE 7E 3E 1