h60229s 00003/00003/00099d D 1.3 88/04/21 18:19:21 masinter 3 2c merge new GC codees 00001/00001/00101d D 1.2 88/03/13 13:17:23 hayata 2 1c Add SCCS key id (%Z%)es 00102/00000/00000d D 1.1 88/02/23 18:36:09 hayata 1 0c date and time created 88/02/23 18:36:09 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2/* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. * *	Auther :  Takeshi Shimizu * *//**********************************************************************//*	Func name :OP_cons			Execute OPCODE Cons .*//**********************************************************************/#define CONSX			arg1#define NEW_PAGE		arg2#define OPCONS	{ \ /* register int CONSX ; argument x(on Current STK)->arg1 */\ /*  register struct conspage *new_conspage ; DLword *wordp */\  /*register ConsCell *new_cell ;-> *cellp */\  register ConsCell *temp_cell ;\  /* register int NEW_PAGE ; hold the return val of nextconspage ->arg2 (by define macro)*/\  struct conspage *next_conspage();\\  CONSX = GetLongWord(CSTKPTR) ;\  CSTKPTR -= 2;\D 3  gclookup(0x8000|ADDREF, TOPOFSTACK);\  gclookup(0x8000|ADDREF, CONSX);\E 3I 3  htfind(TOPOFSTACK, ADDREF);\  htfind(CONSX, ADDREF);\E 3  IncAllocCnt(1);\  if(TOPOFSTACK == NIL_PTR)\   {\	if ((ListpDTD->dtd_nextpage != 0)&&(GetCONSCount(ListpDTD->dtd_nextpage) > 0))\	{	/* nextpage has 1 or more free cells  in that page */\	  	/* uCode  CDR_NIL case */\		NEW_PAGE = ListpDTD->dtd_nextpage;\		/* Get New Cell */\		wordp = (DLword *)Addr68k_from_LPAGE(NEW_PAGE);\\		cellp = (LispPTR *)GetNewCell_68k(((ConsPage *)wordp)); /* get new cell */\		((ConsPage *)wordp)->count --;  /* decrement free cnt. */\		((ConsPage *)wordp)->next_cell =((ConsCell *)cellp)->cdr_code ; /* update free cell chain */\		/* filling new cell with the data */\		((ConsCell *)cellp)->car_field = CONSX ;\		((ConsCell *)cellp)->cdr_code = CDR_NIL ;\		ListpDTD->dtd_cnt0++;\	} /* if (ListpDTD.. end */\	else /* 1   UFN case : CDR_NIL */\	{\		wordp=(DLword *)next_conspage();\\		cellp = (LispPTR *)GetNewCell_68k(((ConsPage *)wordp) ) ;\		((ConsPage *)wordp)->count --;  /* decrement free cnt. */\		((ConsPage *)wordp)->next_cell = ((ConsCell *)cellp)->cdr_code ; /* update free cell chain */\		/* filling new cell with the data */\		((ConsCell *)cellp)->car_field = CONSX ;\		((ConsCell *)cellp)->cdr_code = CDR_NIL ;\		ListpDTD->dtd_oldcnt++;\	} /* else 1 end */\   } /* if(TOPOFSTACK.. end */\  else /* TOPOFSTACK != NIL */\   {\	NEW_PAGE = POINTER_PAGE(TOPOFSTACK); /* Y's page num */\	if(Listp(TOPOFSTACK) && (GetCONSCount(NEW_PAGE ) > 0 ))\	{\		/* uCode case : CDR_ONPAGE */\		wordp= (DLword *)Addr68k_from_LPAGE(NEW_PAGE);\		cellp = (LispPTR *)GetNewCell_68k( ((ConsPage *)wordp) ) ;\		((ConsPage *)wordp)->count --;  /* decrement free cnt. */\		((ConsPage *)wordp)->next_cell = ((ConsCell *)cellp)->cdr_code ; /* update free cell chain */\		((ConsCell *)cellp)->car_field = CONSX ;\		/* cdr_onpage + cell offset in this conspage */\		((ConsCell *)cellp)->cdr_code = CDR_ONPAGE | ((TOPOFSTACK&0xff)>>1) ;\		ListpDTD->dtd_cnt0++;\	} /* if (listp.. end */\	else\	{\		/* UFN case : CDR_INDIRECT */\		wordp = (DLword *)next_conspage();\		/* get 2 cells from conspage */\		temp_cell = GetNewCell_68k( ((ConsPage *)wordp) ) ;\		((ConsPage *)wordp)->next_cell = temp_cell->cdr_code ; /* update free cell chain */\		cellp = (LispPTR *)GetNewCell_68k( ((ConsPage *)wordp) ) ;\		((ConsPage *)wordp)->next_cell =((ConsCell *)cellp)->cdr_code ; /* update free cell chain */\		((ConsPage *)wordp)->count -= 2;  /* decrement free cnt. */\		/* filling cell */\		*((LispPTR *)temp_cell) = TOPOFSTACK ; /* Indirect CDR ptr */\		 /*** temp_cell->car_field = TOPOFSTACK ; */\		 /*** temp_cell->cdr_code = 0 ; */\		((ConsCell *)cellp)->car_field = CONSX ;\		/* culc. cdr code */\		((ConsCell *)cellp)->cdr_code = (((LispPTR)LADDR_from_68k(temp_cell)) & 0xff) >> 1;\		ListpDTD->dtd_oldcnt++ ;  /* added feb-12 take */\	} /* else end */\   } /* else (TOS==NIL end) */\ /* return val set */\  TOPOFSTACK = LADDR_from_68k(cellp) ;\D 3  gclookup(0x8000|DELREF , TOPOFSTACK);\E 3I 3  htfind(TOPOFSTACK, DELREF);\E 3  PCMAC++; /* PC mainte. */\} /* OPCONS end */E 1