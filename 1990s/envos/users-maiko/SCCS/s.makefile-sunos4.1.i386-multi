h51146s 00000/00000/00046d D 1.5 93/03/25 12:11:16 sybalsky 5 4c es 00001/00001/00045d D 1.4 91/03/07 19:53:50 sybalsky 4 3c Add -DBIGATOMS for 3 byte atom emulator.es 00001/00001/00045d D 1.3 90/07/26 18:47:10 mitani 3 2c add -DNEW_STORAGE flages 00003/00001/00043d D 1.2 90/07/04 01:34:24 sybalsky 2 1c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00044/00000/00000d D 1.1 90/05/14 15:57:28 fuji 1 0c date and time created 90/05/14 15:57:28 by fujieuUf e 0tTI 1# Options for sun4 and mc68020# This is to make the %$#@! Apollo cc happyOEXT = .oOPTFLAGS = -ODISPOPTFLAGS = -OFPFLAGS = D 2DFLAGS = -DKBINT -DFSERROR -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DDISPLAYBUFFER -DSUNDISPLAY -DNEWBITBLT -DOPDISPE 2I 2D 3DFLAGS = -DKBINT -DFSERROR -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DDISPLAYBUFFER -DSUNDISPLAY -DNEWBITBLT -DOPDISP -DFORKCOMME 3I 3D 4DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DDISPLAYBUFFER -DSUNDISPLAY -DNEWBITBLT -DOPDISP -DFORKCOMME 4I 4DFLAGS = -DKBINT -DFSERROR -DNEW_STORAGE -DOS4 -DI386 -DBYTESWAP -DCHECK -DLOGINT -DDISPLAYBUFFER -DSUNDISPLAY -DNEWBITBLT -DOPDISP -DFORKCOMM -DBIGATOMSE 4E 3LDFLAGS = -lsuntool -lsunwindow -lpixrect -lc -lmE 2INLINE = $(SRCDIR)disp386i.ilBITBLTFILE=$(OBJECTDIR)bitblt386i.oOBJECTDIR = ../sunos4.i386-multi/BYTESWAPFILES = $(OBJECTDIR)byteswapfns.o I 2COLORFILES = $(OBJECTDIR)colorbltfns.oE 2default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeether# Special rules to create xc.c on 386i#run cpp to expand macros$(OBJECTDIR)xc.s:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h  $(INCDIR)dbprint.h\	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(SRCDIR)disp386i.il  \	 $(INCDIR)inline386i.h  $(INCDIR)fast_disp.h  \	 $(INCDIR)fastinline68K.h $(INCDIR)profile.h	cc -c -O -Qproduce .s $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.s#run c compiler to produce first pass assembly#$(OBJECTDIR)xc.s1:	$(OBJECTDIR)xc.i#	rm -f $(OBJECTDIR)xc.s1#	/lib/ccom - $(FPFLAGS) <$(OBJECTDIR)xc.i >$(OBJECTDIR)xc.s1$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s $(INLINE)	rm -f $(OBJECTDIR)xc.s2	/usr/lib/inline -i $(INLINE) < $(OBJECTDIR)xc.s > $(OBJECTDIR)xc.s2$(OBJECTDIR)xc.o: $(OBJECTDIR)xc.s2	/bin/as -o $(OBJECTDIR)xc.o -O1 $(OBJECTDIR)xc.s2E 1