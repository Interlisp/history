h06029s 00001/00000/00064d D 1.9 91/09/03 18:47:31 sybalsky 9 8c Add L libs static for makin g lde.es 00000/00000/00064d D 1.8 91/09/03 18:36:33 sybalsky 8 7c Add LDELDFLAGS to make lde with X libs static.es 00001/00001/00063d D 1.7 91/03/07 19:50:56 sybalsky 7 6c Add -DBIGATOMS for 3 byte atom emulator.es 00002/00001/00062d D 1.6 90/09/18 23:59:12 sybalsky 6 5c Change opt to -O2es 00001/00001/00062d D 1.5 90/07/26 18:50:06 mitani 5 4c add -DNEW_STORAGE flages 00027/00001/00036d D 1.4 90/07/04 01:36:59 sybalsky 4 3c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00004/00004/00033d D 1.3 90/04/20 02:13:02 sybalsky 3 2c AIX:  shortening file names, bulk change.es 00002/00003/00035d D 1.2 90/04/18 11:39:00 sybalsky 2 1c Posix:  shorten tosfuncallmacro to tosfuncalles 00038/00000/00000d D 1.1 90/03/01 12:54:12 osamu 1 0c date and time created 90/03/01 12:54:12 by osamueuUf e 0tTI 1# Options for sun4, mc68020 and X-WindowI 4XFILES = $(OBJECTDIR)XClose.o \	$(OBJECTDIR)Cursor.o \	$(OBJECTDIR)XWindow.o \	$(OBJECTDIR)DoRing.o \	$(OBJECTDIR)DoScroll.o \	$(OBJECTDIR)XEvent.o \	$(OBJECTDIR)XGravity.o \	$(OBJECTDIR)XInit.o \	$(OBJECTDIR)InitXevent.o \	$(OBJECTDIR)XKbdMouse.o \	$(OBJECTDIR)LispWindow.o \        $(OBJECTDIR)LispXbitblt.o \	$(OBJECTDIR)XKeyboard.o \	$(OBJECTDIR)MakeXicon.o \	$(OBJECTDIR)OpenDisplay.o \	$(OBJECTDIR)ReadXoption.o \	$(OBJECTDIR)XReconfig.o \	$(OBJECTDIR)XScroll.o \	$(OBJECTDIR)Scrollbar.o \	$(OBJECTDIR)XCursor.o \	$(OBJECTDIR)XMouse.o \	$(OBJECTDIR)Subwindows.o \	$(OBJECTDIR)VideoColor.o \	$(OBJECTDIR)XWindowMgr.o  E 4XVERSION = XV11R4XFLAGS = -DXWINDOW -D$(XVERSION)# This is to make the %$#@! Apollo cc happyOEXT = .oD 6OPTFLAGS = -gE 6I 6OPTFLAGS = -O2E 6DISPOPTFLAGS = -OFPFLAGS = -f68881# DISPLAYBUFFER for Color Sparcstation code testing# [I remove DISPLAYBUFFER option .# You may run 'makeright x'.  -osamu '90/02/27]# NEWBITBLT for assembler version of bitblt.D 4DFLAGS = -DFSERROR -DOPDISP -DUNSAFE -DOS4 -DSUN3_OS4_IL -DOS4_TYPE4BUG -DNEWBITBLT -DLOGINT $(XFLAGS)E 4I 4D 5DFLAGS = -DFSERROR -DOPDISP -DUNSAFE -DOS4 -DSUN3_OS4_IL -DOS4_TYPE4BUG -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMME 5I 5D 7DFLAGS = -DFSERROR -DNEW_STORAGE -DOPDISP -DUNSAFE -DOS4 -DSUN3_OS4_IL -DOS4_TYPE4BUG -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMME 7I 7DFLAGS = -DFSERROR -DNEW_STORAGE -DOPDISP -DUNSAFE -DOS4 -DSUN3_OS4_IL -DOS4_TYPE4BUG -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMM -DBIGATOMSE 7E 5LDFLAGS = -lX11 -lpixrect -lc -lmI 9LDELDFLAGS = -Bstatic -lX11 -lpixrect -Bdynamic -lc -lmE 9E 4INLINE = $(SRCDIR)disp68K.ilBITBLTFILE = $(OBJECTDIR)bitblt68K.oOBJECTDIR = ../sunos4.mc68020-x/I 6BYTESWAPFILES = $(OBJECTDIR)byteswapfns.oE 6default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeether$(OBJECTDIR)xc.o :  $(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  \	 $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h \	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \D 2	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.h  \	 $(INCDIR)dummy_entries.h \E 2I 2D 3	 $(INCDIR)tosfuncall.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)inlinedefs68K.h  \E 2	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  \	 $(INCDIR)fastinlinedefs68K.h $(INCDIR)profile.hE 3I 3	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.h  \	 $(INCDIR)inlineSPARC.h  $(INCDIR)fast_disp.h  \	 $(INCDIR)fastinline68K.h $(INCDIR)profile.hE 3	cc $(DISPRFLAGS) $(SRCDIR)xc.c $(INLINE) -o $(OBJECTDIR)xc.oE 1