h08072s 00023/00013/00224d D 2.8 93/02/08 15:04:47 sybalsky 11 10c Big VM (and new CDR coding) changes for 3.0 \nes 00044/00000/00193d D 2.7 92/11/10 20:32:46 sybalsky 10 9c Make GC tables be full-cell entries for BIG VM changees 00000/00000/00193d D 2.6 92/04/21 16:30:45 sybalsky 9 8c shortening file names for DOSes 00003/00000/00190d D 2.5 92/03/04 19:32:53 nilsson 8 7c Inserted the CHAR mask S_CHARes 00015/00001/00175d D 2.4 90/06/04 13:01:30 sybalsky 7 6c reformat, copyrightes 00009/00014/00167d D 2.3 89/01/09 17:52:06 shih 6 5c spellinges 00021/00021/00160d D 2.2 88/10/13 18:59:40 shih 5 4c minor cleanupes 00000/00000/00181d D 2.1 88/05/17 09:18:25 hayata 4 3c Version up to 2.1es 00005/00002/00176d D 1.3 88/04/01 17:34:54 masinter 3 2c Move array space for medleyes 00001/00001/00177d D 1.2 88/03/13 13:22:58 hayata 2 1c Add SCCS key id (%Z%)es 00178/00000/00000d D 1.1 88/02/23 18:36:49 hayata 1 0c date and time created 88/02/23 18:36:49 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2D 6/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 6I 6D 7/* %Z% %M% Version %I% (%G%). copyright envos & Fuji Xerox  */E 7I 7D 11/* %Z% %M% Version %I% (%G%). copyright Venue & Fuji Xerox  */E 11I 11/* %Z% %M% Version %I% (%G%). copyright Venue   */E 11E 7E 6E 2I 11/************************************************************************//*									*//*	(C) Copyright 1989-92 Venue. All Rights Reserved.		*//*	Manufactured in the United States of America.			*//*									*//*	The contents of this file are proprietary information 		*//*	belonging to Venue, and are provided to you under license.	*//*	They may not be further distributed or disclosed to third	*//*	parties without the specific permission of Venue.		*//*									*//************************************************************************/E 11/*D 11 *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. *D 6 *	Auther	:	Takeshi Shimizu *			Hiroshi Hayata	E 6I 6 *	Author	:	Takeshi Shimizu *			Hiroshi HayataE 6 *//**********************************************************************//*E 11D 6 		File Name :	lispmap.h(for TEST)E 6I 6		File Name :	lispmap.h(for TEST)E 6		**************NOTE*****************		OLD DEFs are MOVED to lispmap.FULL		**************NOTE*****************D 5		Gloval variables for LispSYSOUT E 5I 5		Global variables for LispSYSOUTE 5D 6 					Date :		December 18, 1986 					Edited by :	Takeshi Shimizu					Changed :	16-Feb-87 Take.					Changed :	03-Mar-87 take					Changed :	24-Apr-87 take							02-Sep-87 take							(add parenthesises) E 6I 6					Date :		December 18, 1986					Edited by :	Takeshi ShimizuE 6*//**********************************************************************/I 7/************************************************************************//*									*//*	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*//*									*//*	This file is work-product resulting from the Xerox/Venue	*//*	Agreement dated 18-August-1989 for support of Medley.		*//*									*//************************************************************************/E 7 /* Whole Lisp size */#define LWORLD_SIZE		0x420000	/* byte *//* 1 MDS entry size is 2(page) * 512 Byte */D 6#define MDSTT_SIZE		(LWORLD_SIZE >> 10 )	E 6I 6#define MDSTT_SIZE		(LWORLD_SIZE >> 10 )E 6D 5#define MAP_SHIFT	0x0		/* if you want to use the ATOMSPACE for Dummy then it must be 0x10000  --- 3-3-87 take */E 5I 5/* if you want to use the ATOMSPACE for Dummy then it must be 0x10000 take */#define MAP_SHIFT	0x0E 5D 5#define MapCulc68k(base,log_offset)	((int)base + ((int)log_offset<<1) - MAP_SHIFT ) /* Following Constants mean LISP word offset. *//* this correspond with lisp mem  map */E 5I 5/* Following constants mean LISP word offset. *//* these correspond with lisp mem map */E 5/* for IOCBPAGE */#define IOCBPAGE_OFFSET	    256#define IOCB_SIZE	      1/* for ATOMSPACE */#define ATOMS_HI	      0#define ATOMS_OFFSET	0x00000#define ATOMS_SIZE	0x10000/* for IOPAGE */#define IOPAGE_OFFSET	0x0FF00#define IOPAGE_SIZE	      1/* for STACKSPACE */#define STK_HI		      1#define STK_OFFSET	0x10000#define STK_SIZE	0x10000/* for PLISTSPACE */I 10#ifndef BIGVME 10#define PLIS_HI		      2#define PLIS_OFFSET	0x20000#define PLIS_SIZE	0x20000I 10#else#define PLIS_HI			3 /* place holder, really */#define PLIS_OFFSET 0x30000#define PLIS_SIZE 0x10#endifE 10I 10#ifdef BIGVM#define FPTOVP_HI		2#define FPTOVP_OFFSET 0x20000#define FPTOVP_SIZE 0x40000#elseE 10/* for FPTOVP */#define FPTOVP_HI	      4#define FPTOVP_OFFSET	0x40000#define FPTOVP_SIZE	0x10000I 10#endif /* BIGVM */E 10/*for PAGEMAP */#define PAGEMAP_HI	      5#define PAGEMAP_OFFSET	0x50000#define PAGEMAP_SIZE	0x10000/* for InterfacePage */#define IFPAGE_HI	      6#define IFPAGE_OFFSET	0x60000#define IFPAGE_SIZE	  0x200/* for PageMapTBL */#define PAGEMAPTBL_OFFSET 0x60200#define PAGEMAPTBL_SIZE	    0x800/* for MISCSTATS */#define MISCSTATS_OFFSET  0x60A00#define MISCSTATS_SIZE	    0x200/* for UFNTable */#define UFNTBL_OFFSET	0x60C00#define UFNTBL_SIZE	  0x200/* for DTDspace */#define DTD_HI		      6#define DTD_OFFSET	0x61000#define DTD_SIZE	 0x1000/* for LOCKEDPAGETBL */#define LOCKEDPAGETBL_OFFSET 0x67000#define LOCKEDPAGETBL_SIZE 0x1000/* for MDSTT */I 10#ifdef BIGVM    /* In BIGVM, MDS type table is at 19.,,0 for 1 segment */D 11#define MDS_HI		      19#define MDS_OFFSET	0x130000E 11I 11#define MDS_HI		      20#define MDS_OFFSET	0x140000E 11#define MDS_SIZE	 0x10000#elseE 10#define MDS_HI		      6#define MDS_OFFSET	0x68000#define MDS_SIZE	 0x8000I 10#endif /* BIGVM */E 10/* for AtomHashTable */#define ATMHT_HI	      7#define ATMHT_OFFSET	0x70000#define ATMHT_SIZE	0x10000/* for PNPSPACE */#define PNP_HI		      8#define PNP_OFFSET	0x80000#define PNP_SIZE	0x20000/* for DEFSPACE */#define DEFS_HI		     10#define DEFS_OFFSET	0xA0000#define DEFS_SIZE	0x20000/* for VALSPACE */#define VALS_HI		     12#define VALS_OFFSET	0xC0000#define VALS_SIZE	0x20000/* for Small Positive */#define SPOS_HI		     14#define S_POSITIVE	0xE0000#define SPOS_SIZE	0x10000/* for Small Negative */#define SNEG_HI		     15#define S_NEGATIVE	0xF0000#define SNEG_SIZE	0x10000I 8/* for characters */#define S_CHAR		0x70000I 10#ifdef BIGVME 10E 8/* for HTMAIN */#define HTMAIN_HI	     16D 5#define HTMAIN_OFFSET	0x100000#define HTMAIN_SIZE	  0x8000E 5I 5#define HTMAIN_OFFSET  0x100000I 10#define HTMAIN_SIZE	 0x10000/* for HTOVERFLOW */#define HTOVERFLOW_OFFSET 0x110000#define HTOVERFLOW_SIZE	     0x100/* for HTBIGCOUNT */#define HTBIG_HI	     16#define HTBIG_OFFSET   0x110100#define HTBIG_SIZE       0x8000/* for HTCOLL */#define HTCOLL_HI	     10#define HTCOLL_OFFSET  0xA0000#define HTCOLL_SIZE	0x40000#else/* for HTMAIN */#define HTMAIN_HI	     16#define HTMAIN_OFFSET  0x100000E 10#define HTMAIN_SIZE	 0x8000E 5/* for HTOVERFLOW */#define HTOVERFLOW_OFFSET 0x108000#define HTOVERFLOW_SIZE	     0x100/* for HTBIGCOUNT */D 6#define HTBIG_HI 	     16E 6I 6#define HTBIG_HI	     16E 6D 5#define HTBIG_OFFSET	0x108100#define HTBIG_SIZE	  0x8000E 5I 5#define HTBIG_OFFSET   0x108100#define HTBIG_SIZE       0x8000E 5/* for HTCOLL */D 5#define HTCOLL_HI	      17#define HTCOLL_OFFSET	0x110000#define HTCOLL_SIZE	 0x10000E 5I 5#define HTCOLL_HI	     17#define HTCOLL_OFFSET  0x110000#define HTCOLL_SIZE	0x10000I 10#endif /* BIGVM */E 10E 5I 10E 10/* DISPLAYREGION */D 5#define DISPALY_HI	      18#define DISPALY_OFFSET	0x120000E 5D 3#define DISPALY_SIZE	 0x10000E 3I 5#define DISPLAY_HI	     18#define DISPLAY_OFFSET 0x120000E 5I 3#ifdef MEDLEYI 10D 11this has to be incorrect.  DOesn't it?E 11E 10E 3/* for ARRAYSPACE & MDS  for PROT-LISP */I 10D 11#define ARRAY_OFFSET		0x140000E 11I 11#define ARRAY_OFFSET		0x150000E 11#elif BIGVME 10I 3D 11#define ARRAY_OFFSET		0x140000E 11I 11#define ARRAY_OFFSET		0x150000E 11#elseE 3#define ARRAY_OFFSET		0x130000I 3#endifE 3#define MDS_BOTTOM_OFFSET	0x200000D 3#define ARRAY_AND_MDS_SIZE	0xd00000E 3/* for PnCharSpace(use only PROT-LISP ) */D 5#define PNCHAR_HI	     0x20#define PNCHAR_OFFSET	0x200000E 5I 5#define PNCHAR_HI	   0x20#define PNCHAR_OFFSET  0x200000E 5#define PNCHAR_SIZE	0x10000D 5E 5/***** SEG definitions for AtomCellN *****/D 5/* following defs are corresponded with D machine memory layout *//**** NOTE!!  if  D's layout  chandes, modify following defs */E 5I 5/* following defs correspond with D machine memory layout *//**** NOTE!!  if D's layout changes, modify following defs */E 5#define D_PLISHI	2#define D_PNHI		010#define D_DEFSHI	012#define D_VALSHI	014E 1