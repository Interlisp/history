h22921s 00001/00001/00114d D 1.2 88/03/13 13:18:50 hayata 2 1c Add SCCS key id (%Z%)es 00115/00000/00000d D 1.1 88/02/23 18:36:23 hayata 1 0c date and time created 88/02/23 18:36:23 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2/* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. * *	Auther :  Takeshi Shimizu *	** ADOPTED NEW VERSION * * *//******************************************************************//*		File Name :	evalmacro.h		Including :	OPEVAL		Created :	Dec 04 1987 Takeshi		Changed :						Takeshi Shimizu*//******************************************************************/struct frame_evalform {		DLword bf_flags ;		DLword ivar;		struct frameex1 fx;		LispPTR pvar[6];	} Frame_evalform ;extern struct frame_evalform *ScratchPTR;extern struct fnhead *EVALFORM_obj;#define EVALFORM_STKMIN 66  /* 64 + STK_SAFE */#define CCall_EVALFORM { \ CURRENTFX->nextblock = LADDR_from_68k(CSTKPTR) +2 ; \ IVAR =(DLword *) Addr68k_from_LADDR((CURRENTFX->nextblock|STK_OFFSET)) ; \ CPushCStack ; \ CPushStack(NIL_PTR); \ ScratchPTR = (struct frame_evalform *)(CSTKPTR +2); \ *ScratchPTR =  Frame_evalform ; /* copy cached contents */ \ CURRENTFX->pc = ((unsigned int)PCMAC - (unsigned int)FuncObj)+1 ; \ if ( (unsigned int)(CSTKPTR + EVALFORM_STKMIN) >=  (unsigned int)StkLimO  ) \ { \   /** printf(" STKOVER in \EVALFORM call \n"); **/ \   TOPOFSTACK = ATOM_EVALFORM ;\   CFnStkOvr(2,0);\   NEXTOPCODE ;\ } \ FuncObj=EVALFORM_obj ; \ ScratchPTR->fx.alink = LOLOC(LADDR_from_68k(PVAR)); \ ScratchPTR->ivar = CURRENTFX->nextblock; \ PVAR = (DLword *)(&(ScratchPTR->pvar[0])) ; \ CSTKPTR=(DLword *)( PVAR + 12 ); \ CURRENTFX =(struct frameex1 *) (PVAR - FRAMESIZE) ; \ /* Set PC points \EVALFORM Function's first OPCODE */ \ PCMAC = (ByteCode *)FuncObj + FuncObj->startpc ; } /******************************************************************//*	Func Name  :	OPEVAL*//******************************************************************/#define EVALWORK	((LispPTR)arg1)#define OPEVAL { \ LispPTR EVALSCRATCH;\ /*** register LispPTR EVALWORK ; **/\  switch(TOPOFSTACK & 0x0ff0000) {\   case S_POSITIVE :\   case S_NEGATIVE :	PCMAC++;\			NEXTOPCODE; \			break;\   case ATOMS_OFFSET :	if((TOPOFSTACK==NIL_PTR)||(TOPOFSTACK==ATOM_T))\			{\				PCMAC++;\				NEXTOPCODE ;\			}\			newframe(CURRENTFX,&(EVALSCRATCH),LOLOC(TOPOFSTACK)) ;\			EVALWORK = ((EVALSCRATCH & 0xffff0000)>> 16) | ((EVALSCRATCH & 0x00ff) <<16) ;\			TOPOFSTACK =\			  *((LispPTR *)(Addr68k_from_LADDR(EVALWORK)));\			if(TOPOFSTACK==NOBIND_PTR)\			 {\			   UFN(054);\			 }\			PCMAC++;\			NEXTOPCODE;\			break;\   default :		switch(GetTypeNumber(TOPOFSTACK)){\			  case TYPE_FIXP :\			  case TYPE_FLOATP : \			  case TYPE_STRINGP :\			  case TYPE_ONED_ARRAY :\		  	  case TYPE_GENERAL_ARRAY :\\					PCMAC++;\					NEXTOPCODE;\					break ;\\			  case TYPE_LISTP : 	 CCall_EVALFORM ;\					     NEXTOPCODE;\					     break;\\			  default :	 UFN(054);\					 NEXTOPCODE;\				        break;\				}\\  } /* end switch */\\}/* OPEVAL end */E 1