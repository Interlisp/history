h33774s 00013/00007/00121d D 1.17 92/11/25 20:18:57 sybalsky 17 16c Fixing extra text in endifs => comment.\nes 00002/00002/00126d D 1.16 92/10/22 09:46:10 sybalsky 16 15c misc changes and restore other files sans change \nes 00015/00003/00113d D 1.15 92/06/26 14:27:17 sybalsky 15 14c retrofit of Apollo poort changes \nes 00020/00003/00096d D 1.14 92/04/23 10:57:50 sybalsky 14 13c sfixing SCCS header \nes 00000/00000/00099d D 1.13 92/04/21 16:27:27 sybalsky 13 12c shortening file names for DOSes 00005/00000/00094d D 1.12 91/04/09 17:51:22 sybalsky 12 11c Retrofit first round of changes from MIPS porting centeres 00001/00001/00093d D 1.11 91/02/04 12:56:59 sybalsky 11 10c Fix errors in teh Savoir retrofit (placement of ifdefs &c)es 00003/00000/00091d D 1.10 90/09/18 23:51:13 sybalsky 10 9c Retrofit changes from AIX, DEC3100, PS/2es 00007/00003/00084d D 1.9 90/08/30 10:33:15 sybalsky 9 8c fix fp for AIX changeses 00012/00001/00075d D 1.8 90/06/04 10:37:42 sybalsky 8 7c reformat, copyrightes 00021/00003/00055d D 1.7 90/03/27 14:30:24 sybalsky 7 6c fp rounding fixes 00001/00001/00057d D 1.6 90/03/22 10:44:49 sybalsky 6 5c Change from interrupt-driven exception handling to checking for NAN and INF, as SPARC does.es 00007/00000/00051d D 1.5 90/03/19 11:39:13 takeshi 5 4c Add floating initialization MACROes 00032/00007/00019d D 1.4 89/03/29 19:37:34 shih 4 3c changed FPTEST to take arg, sparc now checks isinf, isnanes 00012/00003/00014d D 1.3 89/03/29 15:39:31 shih 3 2c more comments about problems with FLTINTes 00001/00001/00016d D 1.2 89/02/23 18:36:14 shih 2 1c removed extraneous sccsides 00017/00000/00000d D 1.1 88/10/12 17:12:00 krivacic 1 0c date and time created 88/10/12 17:12:00 by krivaciceuUtTI 1D 3/* This is G-file %Z% %M% Version %I% (%G%). copyright envos & Fuji Xerox  */E 3I 3D 8/* %Z% %M% Version %I% (%G%). copyright envos & Fuji Xerox  */E 8I 8D 17/* %Z% %M% Version %I% (%G%). copyright Venue & Fuji Xerox  */E 17I 17/* %Z% %M% Version %I% (%G%). copyright Venue  */E 17/************************************************************************//*									*/D 14/*	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*/E 14I 14/*	(C) Copyright 1989-92 Venue. All Rights Reserved.		*//*	Manufactured in the United States of America.			*/E 14/*									*/D 14/*	This file is work-product resulting from the Xerox/Venue	*//*	Agreement dated 18-August-1989 for support of Medley.		*/E 14I 14/*	The contents of this file are proprietary information 		*//*	belonging to Venue, and are provided to you under license.	*//*	They may not be further distributed or disclosed to third	*//*	parties without the specific permission of Venue.		*/E 14/*									*//************************************************************************/I 14/************************************************************************//*									*//*									*//*									*//*									*//*									*//************************************************************************/E 14I 10D 16#ifdef DEC3100E 16I 16#ifdef ULTRIXE 16#include <ieeefp.h>D 16#endif DEC3100E 16I 16D 17#endif ULTRIXE 17I 17#endif /* ULTRIX */E 17E 16I 12#ifdef RISCOS/*#include <ieeefp.h> *//*#define isnan isnand */#define isnan(x) 0D 17#endif RISCOSE 17I 17#endif /* RISCOS */E 17E 12E 10E 8E 3D 2/* This is G-file @(#) fp.h Version 1.1 (9/20/88). copyright envos & Fuji Xerox  */E 2I 2I 17E 17I 3/*  --------------------------------------------------D 4    FPCLEAR - set a global to 0    FPTEST  - check if it's still 0E 4I 4    FPCLEAR         - clear status as necessary    FPTEST(result)  - check result or statusE 4    Sun 4 compiler w. -O2 moves too much code aroundD 4    to use FLTINT.  Where is fpstatus_ documented?E 4I 4    to use FLTINT.E 4    --------------------------------------------------  */E 3E 2#ifdef FLTINTD 3extern int FP_error;#define FPCLEAR FP_error = 0;E 3I 3extern int  FP_error;E 3D 4#define FPTEST  FP_errorI 3#define FPCLEAR FP_error = 0;E 4I 4/*  Note that a compiler may very likely move code around the arithmetic    operation, causing this test (set by an interrupt handler) to be    incorrect.  For example, the Sun SPARC compiler with -O2 makes    this test incorrect. */E 4E 3I 4#define FPCLEAR         FP_error = 0;#define FPTEST(result)  FP_errorE 4#elseI 4/*  fpstatus_ is a FORTRAN library routine (in libc) which    can be called to determine floating point status results.    Documented in the Sun manual, "Floating Point Programmer's Guide",    (Rev. A 19-Sep-86), pg. 34, it does *not* exist in libc for the    SPARC.    For sparc, should also check for isnan?  Don't know what isnormal    & issubnormal do (these are sunos4.0 only) */D 6#ifdef sparcE 6I 6D 11#if (defined(sparc) || defined(I386))E 11I 11#if (defined(sparc) || defined(I386) || defined(HPUX))E 11E 6#define FPCLEAR#define FPTEST(result) (isinf(result) || isnan(result))D 15#elseI 14#ifdef INDIGOE 15I 15#elif APOLLO	/**********************************************************/	/*  Need values.h & nan.h, so we all parts of IsNANorINF  */	/*  are defined.  IsNANorINF uses structure aliasing to   */	/*  get at pieces of the float to test it, so the item    */	/*  being tested can't be a register variable.  Sigh.     */	/**********************************************************/#include </sys5/usr/include/values.h>#include </sys5/usr/include/nan.h>#define FPCLEAR#define FPTEST(result) (IsNANorINF(result))#undef REGISTER#define REGISTER#elif INDIGOE 15#include <nan.h>#define FPCLEAR#define FPTEST(result) (IsNANorINF(result))#elseE 14D 9E 9I 9#ifdef AIX#define FPCLEAR#define FPTEST(result) ((!finite(result)) || isnan(result))#elseE 9E 4static int constant0 = 0;unsigned int fpstatus_();D 4#define FPCLEAR fpstatus_(&constant0);#define FPTEST (fpstatus_(&constant0) & 0xF0)E 4I 4#define FPCLEAR         fpstatus_(&constant0);#define FPTEST(result) (fpstatus_(&constant0) & 0xF0)D 9#endifE 4#endifE 9I 9D 17#endif AIXI 14D 15#endif /* INDIGO */E 15E 14#endif sparc | I386#endif FLTINTE 17I 17#endif /* AIX */E 17E 9I 17#endif /* sparc | I386 */E 17I 17#endif /* FLTINT */E 17I 7/************************************************************************//*									*//*		Sun 386i Floating-point accelerator (80387)		*//*			Initialization macros				*//*									*//*	I386Reset -- set up so convert-to-integer truncates		*//*	I386Round -- set up so FP operation round properly		*//*									*//************************************************************************/E 7I 5#ifdef I386D 7#define I386Reset {/* 80387 initialization */  \	   asm(".text");		\	   asm("fldcw __temp");	}E 7I 7#define I386Reset			\  {	/* 80387 initialization */ 	\    asm(".text");			\    asm("fldcw __FP_trunc");		\  }#define I386Round		\  {				\    asm(".text");		\    asm("fldcw __FP_round");	\  }E 7D 17#endif I386E 17I 17#endif /* I386 */E 17E 5E 1