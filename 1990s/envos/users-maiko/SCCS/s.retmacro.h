h09516s 00001/00001/00035d D 1.2 88/03/13 13:24:54 hayata 2 1c Add SCCS key id (%Z%)es 00036/00000/00000d D 1.1 88/02/23 18:37:10 hayata 1 0c date and time created 88/02/23 18:37:10 by hayataeuUtTI 1D 2/* This is G-file %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2I 2/* This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 2/* MERGED AT AIS */#define OPRETURN	{\ register struct frameex1 *returnFX ; \ returnFX = CURRENTFX; \ if( returnFX->alink & 1) { goto ni; }; \  /* Returnee's Stack(PV area) exists just before Retuner's BF */ \ CSTKPTR = IVAR - 2 ; \ /* Get PVar from ALINK */ \ PVar= Addr68k_from_LADDR((STK_OFFSET | returnFX->alink)); \ /* Move CURRENTFX ptr */ \ CURRENTFX = returnFX = (struct  frameex1 *)(PVar - FRAMESIZE) ; \ IVAR = Addr68k_from_LADDR(STK_OFFSET | *((DLword *)returnFX -1)) ; \ FuncObj = (struct fnhead *)Addr68k_from_LADDR((returnFX->hi2fnheader <<16) | returnFX->lofnheader) ; \	/* Get PC from Retunee's pc slot in FX */ \ PCMAC = (ByteCode *)FuncObj + returnFX->pc ; \} /* OPRETURN end */ #define CFastRetCALL {	/* Get IVAR from Retunee's IVAR offset slot(BF) */ \	IVAR = Addr68k_from_LADDR(STK_OFFSET | *((DLword *)CURRENTFX -1)) ; \	/* Get FuncObj from Retunee's FNHEAD slot in FX */ \	FuncObj = (struct fnhead *)Addr68k_from_LADDR((CURRENTFX->hi2fnheader <<16) | CURRENTFX->lofnheader) ; \	/* Get PC from Retunee's pc slot in FX */ \	PCMAC = (ByteCode *)FuncObj + CURRENTFX->pc ; }#define Midpunt(fxnum) { DLword midpunt; \midpunt = LOLOC(LADDR_from_68k(CURRENTFX));\CURRENTFX=(struct frameex1 *)Addr68k_from_LADDR(STK_OFFSET | (*(((DLword *)InterfacePage) +fxnum))) ; \*(((DLword *)InterfacePage) +fxnum) = midpunt ;}#define CHECKFX	if (((int)PVAR -(int)CURRENTFX) != 20) \		{ printf("Invalid FX(0x%x) and PV(0x%x) \n",LADDR_from_68k(CURRENTFX),LADDR_from_68k(PVAR));}E 1