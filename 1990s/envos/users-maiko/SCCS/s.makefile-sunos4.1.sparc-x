h18391s 00000/00000/00121d D 1.16 93/03/25 12:15:38 sybalsky 16 15c es 00017/00002/00104d D 1.15 92/07/24 10:43:47 sybalsky 15 14c retrofit of SGI & DEC OSF1 changes \nes 00001/00001/00105d D 1.14 92/04/28 16:45:36 nilsson 14 13c Fix of misspelled Xopendsp.ces 00039/00039/00067d D 1.13 92/04/23 17:00:21 nilsson 13 12c es 00001/00001/00105d D 1.12 92/04/17 15:02:21 nilsson 12 11c es 00001/00001/00105d D 1.11 92/03/24 12:01:49 sybalsky 11 10c Add -DNOEUROKBD, so we get non-eurokbd version of the emulator for now.es 00001/00001/00105d D 1.10 92/03/11 15:48:05 nilsson 10 9c fix of missplaced dldes 00008/00002/00098d D 1.9 91/09/17 16:06:58 nilsson 9 8c Added support for the CXL interface. /jarles 00001/00000/00099d D 1.8 91/08/16 18:19:30 sybalsky 8 7c es 00001/00001/00098d D 1.7 91/03/07 19:50:50 sybalsky 7 6c Add -DBIGATOMS for 3 byte atom emulator.es 00003/00001/00096d D 1.6 90/09/18 23:59:04 sybalsky 6 5c Change opt to -O2es 00001/00001/00096d D 1.5 90/08/30 10:35:00 sybalsky 5 4c fix lde target to be in right placees 00001/00001/00096d D 1.4 90/08/29 12:59:42 sybalsky 4 3c Change default lde/ldeether location to OSARCHDIR form OBJECTDIRes 00001/00001/00096d D 1.3 90/07/26 18:48:53 mitani 3 2c add -DNEW_STORAGE flages 00027/00001/00070d D 1.2 90/07/04 01:35:41 sybalsky 2 1c Bob Bane changes:  Consolidate nromal and -x tails, move forking earlier.es 00071/00000/00000d D 1.1 90/05/14 15:58:04 fuji 1 0c date and time created 90/05/14 15:58:04 by fujieuUf e 0tTI 1# Options for SunOS4, SPARC and X-WindowI 9CLXFLAGS = -DCLX -DTCP_NODELAYCLXFILES = $(OBJECTDIR)socket.o \D 13           $(OBJECTDIR)socketdvr.o E 13I 13           $(OBJECTDIR)socdvr.o E 13E 9I 2XFILES = $(OBJECTDIR)XClose.o \	$(OBJECTDIR)Cursor.o \	$(OBJECTDIR)XWindow.o \	$(OBJECTDIR)DoRing.o \	$(OBJECTDIR)DoScroll.o \	$(OBJECTDIR)XEvent.o \	$(OBJECTDIR)XGravity.o \	$(OBJECTDIR)XInit.o \D 13	$(OBJECTDIR)InitXevent.o \	$(OBJECTDIR)XKbdMouse.o \	$(OBJECTDIR)LispWindow.o \        $(OBJECTDIR)LispXbitblt.o \	$(OBJECTDIR)XKeyboard.o \	$(OBJECTDIR)MakeXicon.o \	$(OBJECTDIR)OpenDisplay.o \	$(OBJECTDIR)ReadXoption.o \	$(OBJECTDIR)XReconfig.o \E 13I 13D 15	$(OBJECTDIR)Xinit.o \E 15I 15	$(OBJECTDIR)Xevinit.o \E 15	$(OBJECTDIR)Xkbdmus.o \	$(OBJECTDIR)Xlspwin.o \        $(OBJECTDIR)Xbbt.o \	$(OBJECTDIR)Xkbd.o \	$(OBJECTDIR)Xmkicon.o \D 14	$(OBJECTDIR)Xopnedsp.o \E 14I 14	$(OBJECTDIR)Xopendsp.o \E 14	$(OBJECTDIR)Xrdopt.o \	$(OBJECTDIR)Xreconf.o \E 13	$(OBJECTDIR)XScroll.o \D 13	$(OBJECTDIR)Scrollbar.o \E 13I 13	$(OBJECTDIR)Xscrolb.o \E 13	$(OBJECTDIR)XCursor.o \	$(OBJECTDIR)XMouse.o \D 13	$(OBJECTDIR)Subwindows.o \	$(OBJECTDIR)VideoColor.o \D 9	$(OBJECTDIR)XWindowMgr.o  E 9I 9	$(OBJECTDIR)XWindowMgr.o  \E 13I 13	$(OBJECTDIR)Xsubwin.o \	$(OBJECTDIR)Xcolor.o \	$(OBJECTDIR)Xwinman.o  \E 13	$(CLXFILES)E 9E 2XVERSION = XV11R4D 9XFLAGS = -DXWINDOW -D$(XVERSION)E 9I 9XFLAGS = -DXWINDOW -D$(XVERSION) $(CLXFLAGS)E 9# This is to make the %$#@! Apollo cc happyOEXT = .o# OPTFLAGS is normally -O2.D 6OPTFLAGS = -gE 6I 6D 12OPTFLAGS = -O2E 12I 12OPTFLAGS = -gI 15DISPOPTFLAGS = -gE 15E 12E 6FPFLAGS =D 2DFLAGS = -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS)E 2I 2D 3DFLAGS = -DFSERROR -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMME 3I 3D 7DFLAGS = -DFSERROR -DNEW_STORAGE -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMME 7I 7D 11DFLAGS = -DFSERROR -DNEW_STORAGE -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMM -DBIGATOMSE 11I 11D 15DFLAGS = -DFSERROR -DNEW_STORAGE -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMM -DBIGATOMS -DNOEUROKBDE 15I 15DFLAGS = -DFSERROR -DNEW_STORAGE -DOS4 -DSPARCDISP -DSUN4_OS4_IL -DOS4_TYPE4BUG -DOLD_CURSOR -DNEWBITBLT -DLOGINT $(XFLAGS) -DFORKCOMM -DBIGATOMS -DNOEUROKBD E 15E 11E 7E 3D 10LDFLAGS = -lX11 -lpixrect -lc -lmE 10I 10LDFLAGS = -lX11 -lpixrect -lc -lm -ldldE 10I 8LDELDFLAGS = -Bstatic -lX11 -lpixrect -Bdynamic -lc -lmE 8E 2# SPARC Assemble optimize checkDFLAGS:sh += optck.sh ; true#-Dsparc?D 13INLINE = $(SRCDIR)dispSPARC.ilBITBLTFILE = $(OBJECTDIR)bitbltSPARC.oE 13I 13INLINE = $(SRCDIR)dspSPARC.ilBITBLTFILE = $(OBJECTDIR)bbtSPARC.oE 13OBJECTDIR = ../$(RELEASENAME)/I 6D 13BYTESWAPFILES = $(OBJECTDIR)byteswapfns.oE 13I 13BYTESWAPFILES = $(OBJECTDIR)byteswap.oE 13E 6D 4default	: $(OBJECTDIR)lde $(OBJECTDIR)ldeetherE 4I 4D 5default	: $(OSARCHDIR)lde $(OSARCHDIR)ldeetherE 5I 5default:	../$(OSARCHNAME)/lde ../$(OSARCHNAME)/ldeetherE 5E 4# Special rules to create xc.c on Sun4#run cpp to expand macrosD 13$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \E 13I 13$(OBJECTDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \E 13	 $(INCDIR)arith.h $(INCDIR)stream.h \D 13	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.hE 13I 13	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inln68k.hE 13	cc -Qproduce .i $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.i#run c compiler to produce first pass assembly$(OBJECTDIR)xc.s1:	$(OBJECTDIR)xc.i	rm -f $(OBJECTDIR)xc.s1	/lib/ccom - $(FPFLAGS) <$(OBJECTDIR)xc.i >$(OBJECTDIR)xc.s1#generate C program to remove dispatch loop, optimizeD 13$(OBJECTDIR)disphack.c: $(SRCDIR)disphack.lex	rm -f $(OBJECTDIR)disphack.c	lex -t $(SRCDIR)disphack.lex > $(OBJECTDIR)disphack.cE 13I 13$(OBJECTDIR)dsphack.c: $(SRCDIR)dsphack.lex	rm -f $(OBJECTDIR)dsphack.c	lex -t $(SRCDIR)dsphack.lex > $(OBJECTDIR)dsphack.cE 13#uses this program to find dispatchD 13$(OBJECTDIR)find-disp.c: $(SRCDIR)find-disp.lex	rm -f $(OBJECTDIR)find-disp.c	lex -t $(SRCDIR)find-disp.lex > $(OBJECTDIR)find-disp.cE 13I 13$(OBJECTDIR)find-dsp.c: $(SRCDIR)find-dsp.lex	rm -f $(OBJECTDIR)find-dsp.c	lex -t $(SRCDIR)find-dsp.lex > $(OBJECTDIR)find-dsp.cE 13D 13$(OBJECTDIR)find-disp: $(OBJECTDIR)find-disp.c	cc -o $(OBJECTDIR)find-disp $(OBJECTDIR)find-disp.c -llE 13I 13$(OBJECTDIR)find-dsp: $(OBJECTDIR)find-dsp.c	cc -o $(OBJECTDIR)find-dsp $(OBJECTDIR)find-dsp.c -llE 13D 13$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-disp $(OBJECTDIR)xc.s1E 13I 13$(OBJECTDIR)dispatch-label.c: $(OBJECTDIR)find-dsp $(OBJECTDIR)xc.s1E 13	rm -f $(OBJECTDIR)dispatch-label.cD 13	$(OBJECTDIR)find-disp < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 13I 13	$(OBJECTDIR)find-dsp < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)dispatch-label.cE 13D 13$(OBJECTDIR)disphack: $(OBJECTDIR)disphack.c $(OBJECTDIR)dispatch-label.c	cc -o $(OBJECTDIR)disphack $(OBJECTDIR)dispatch-label.c $(OBJECTDIR)disphack.c -ll	rm -f $(OBJECTDIR)dispatch-label.o $(OBJECTDIR)disphack.oE 13I 13$(OBJECTDIR)dsphack: $(OBJECTDIR)dsphack.c $(OBJECTDIR)dispatch-label.c	cc -o $(OBJECTDIR)dsphack $(OBJECTDIR)dispatch-label.c $(OBJECTDIR)dsphack.c -ll	rm -f $(OBJECTDIR)dispatch-label.o $(OBJECTDIR)dsphack.oE 13D 13$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s1 $(OBJECTDIR)disphackE 13I 13$(OBJECTDIR)xc.s2:	$(OBJECTDIR)xc.s1 $(OBJECTDIR)dsphackE 13	rm -f $(OBJECTDIR)xc.s2D 13	$(OBJECTDIR)disphack < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)xc.s2E 13I 13	$(OBJECTDIR)dsphack < $(OBJECTDIR)xc.s1 >$(OBJECTDIR)xc.s2E 13$(OBJECTDIR)xc.s3:	$(OBJECTDIR)xc.s2 $(INLINE)	rm -f $(OBJECTDIR)xc.s3	/usr/lib/inline -i $(INLINE) < $(OBJECTDIR)xc.s2 > $(OBJECTDIR)xc.s3$(OBJECTDIR)xc.o: $(OBJECTDIR)xc.s3	/bin/as -o $(OBJECTDIR)xc.o -O1 $(OBJECTDIR)xc.s3I 15########### debugging version of xc maker#$(OBJECTDIR)xc.o:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  #$(INCDIR)address.h \#	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \#	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \#	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \#	 $(INCDIR)arith.h $(INCDIR)stream.h \#	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \#	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h#	cc  $(DISPRFLAGS) -USPARCDISP -UOPDISP -DNOASM $(INLINE) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.oE 15E 1