h53767s 00000/00000/00559d D 2.60 89/01/17 11:38:36 sybalsky 113 112c Added BYTESWAPFILES for later overriding in byte-swapped machines.es 00001/00001/00558d D 2.59 88/10/13 19:32:02 krivacic 112 111c add SUN3_OS3_IL flages 00002/00002/00557d D 2.58 88/10/12 17:55:53 krivacic 111 110c fix makevdate for std outputes 00001/00001/00558d D 2.57 88/10/12 14:43:05 hayata 110 109c Compile option -DFSERROR is added.es 00002/00002/00557d D 2.56 88/10/10 19:58:33 shimizu 109 108c add keyboard.h dependencyes 00002/00002/00557d D 2.55 88/10/07 18:11:38 krivacic 108 107c added profile.h to Ctest, subres 00001/00001/00558d D 2.54 88/09/20 11:27:18 shih 107 106c added usersubrs.o to cleanup rulees 00002/00001/00557d D 2.53 88/09/19 21:40:41 shih 106 105c removed usernative files from make releasees 00004/00004/00554d D 2.52 88/09/19 19:03:50 shih 105 104c removed FSERROR, changed USERFILE to EXTFILESes 00005/00002/00553d D 2.51 88/09/15 15:15:41 krivacic 104 103c usersubrs now in make of ldees 00001/00001/00554d D 2.50 88/09/13 11:31:21 hayata 103 102c add -DFSERROR to fix file system error message problem (AR10354)es 00002/00001/00553d D 2.49 88/08/18 16:58:53 charnley 102 101c added bitblt.o dependency on bb.h.es 00001/00001/00553d D 2.48 88/08/03 15:27:53 shih 101 100c suid for the release ldeether fixed.es 00001/00001/00553d D 2.47 88/08/03 15:07:42 shih 100 99c insdir/ldeether suid command wrong (extra slash)es 00001/00001/00553d D 2.46 88/08/03 12:54:02 shih 99 98c put ldeether back onto install directory and on tapees 00003/00001/00551d D 2.45 88/08/02 21:53:27 shih 98 97c removed ldeether executable from release (can't tar off root files, also matches doc.)es 00001/00001/00551d D 2.44 88/08/02 21:46:18 shih 97 96c changed userinstall to install (matches documentation)es 00001/00001/00551d D 2.43 88/07/28 21:43:16 shih 96 95c insdir/ldeether accidentally added as bindir/ldeetheres 00010/00002/00542d D 2.42 88/07/28 21:14:14 shih 95 94c adds lde, ldeether to release directoryes 00003/00003/00541d D 2.41 88/07/25 17:06:53 hayata 94 93c ufs.o, dsk.o and directory.o are compared with timeout.hes 00003/00003/00541d D 2.40 88/07/21 18:52:37 shih 93 92c fixed AR 10573 (cleanup should remove key files), moved xc.c to OFILESes 00005/00002/00539d D 2.39 88/07/19 19:59:39 shimizu 92 91c  include M_datees 00002/00001/00539d D 2.38 88/07/01 19:58:33 shih 91 90c added stream.h to makefile dependencyes 00001/00001/00539d D 2.37 88/06/29 13:54:48 greep 90 89c changed arg to suid ldeether to be in current directoryes 00004/00001/00536d D 2.36 88/06/29 10:33:24 greep 89 88c make ldeether setuid rootes 00001/00001/00536d D 2.35 88/06/28 18:30:44 shih 88 87c added profile.h to xc.c dependencyes 00001/00001/00536d D 2.34 88/06/27 11:09:54 bane 87 86c Added KBINT to turn keyboard interrupts ones 00001/00001/00536d D 2.33 88/06/21 16:04:48 masinter 86 85c turn on RECLAIMINC now that it seems to workes 00001/00000/00536d D 2.32 88/06/20 22:07:42 shimizu 85 84c Add interruptcall.ces 00004/00000/00532d D 2.31 88/06/17 00:11:26 shih 84 83c force removal of release/user* files before attempting relinkes 00004/00001/00528d D 2.30 88/06/17 00:08:09 shih 83 82c added new target userfiles separate from release targetes 00013/00012/00516d D 2.29 88/06/15 23:52:42 shih 82 81c corrections to make releasees 00006/00005/00522d D 2.28 88/06/15 23:24:53 shih 81 80c rearranged RELEASE directory a bites 00017/00015/00510d D 2.27 88/06/15 23:10:28 shih 80 79c copy protect check only included in development systemes 00001/00001/00524d D 2.26 88/06/15 21:44:43 bane 79 78c REALLY fixed dependency of makevdate this time...es 00001/00001/00524d D 2.25 88/06/15 21:28:10 bane 78 77c set right dependency for makevdate.ces 00008/00003/00517d D 2.24 88/06/15 20:52:01 shih 77 76c restored sccs string, cleaned up ldeetheres 00006/00006/00514d D 2.23 88/06/15 20:42:53 shih 76 75c changed references from startlisp to ldeetheres 00013/00005/00507d D 2.22 88/06/15 20:01:23 shih 75 74c renamed executable target 'lisp' to be 'lde'es 00001/00001/00511d D 2.21 88/06/15 15:04:42 charnley 74 73c updated inc's of ubf1.c.es 00007/00001/00505d D 2.20 88/06/15 12:09:29 shimizu 73 72c SCCS trouble!!es 00007/00001/00499d D 2.19 88/06/15 12:02:01 shih 72 71c Added nativeinclude files to installation directoryes 00009/00011/00491d D 2.18 88/06/15 11:07:22 greep 71 70c generate lisp.o instead of lisp.a in $(RELDIR)es 00006/00001/00496d D 2.17 88/06/15 10:13:37 shimizu 70 69c For MICROCODEVERSION, add VFILE,makevdate.c line.es 00001/00000/00496d D 2.16 88/06/14 17:44:44 shih 69 68c Force removees 00004/00000/00492d D 2.15 88/06/14 15:09:28 greep 68 67c new file unix-utils.ces 00008/00001/00484d D 2.14 88/06/13 17:42:47 bane 67 66c Added instructions for startlisp.ces 00003/00001/00482d D 2.13 88/06/13 17:24:28 shih 66 65c Added keymaker target, cleanupes 00006/00000/00477d D 2.12 88/06/03 10:08:03 masinter 65 64c put back in ufn entry (used by C_ONLY)es 00014/00000/00463d D 2.11 88/06/02 17:04:34 charnley 64 63c added unboxed fp fileses 00001/00036/00462d D 2.10 88/05/31 20:38:04 masinter 63 62c eliminate obsolete fileses 00003/00008/00495d D 2.9 88/05/26 12:42:43 mullins 62 61c Removed medley.sysout target and changed usermakefile target to look in BINDIR.es 00003/00004/00500d D 2.8 88/05/26 10:46:11 hayata 61 60c Remove ethersubrses 00000/00004/00504d D 2.7 88/05/25 17:08:09 krivacic 60 59c removed stack from the makefilees 00004/00006/00504d D 2.6 88/05/25 13:57:11 masinter 59 58c Fix definitions so that cxref will work again (can't have -f for cxref)es 00000/00006/00510d D 2.5 88/05/24 18:22:42 krivacic 58 57c remove reference to eval.ces 00000/00008/00516d D 2.4 88/05/20 18:11:04 masinter 57 56c remove obsolete files (vars var2) from makefilees 00001/00001/00523d D 2.3 88/05/20 09:37:07 charnley 56 55c added -f68881 flag for assemblieses 00015/00004/00509d D 2.2 88/05/20 03:17:13 shih 55 54c added keylib, keytester, installation ruleses 00000/00000/00513d D 2.1 88/05/17 09:15:11 hayata 54 53c Version up to 2.1es 00001/00003/00512d D 1.53 88/05/16 16:13:26 masinter 53 52c turn NOFORK off again now that ether initialization is movedes 00004/00003/00511d D 1.52 88/05/15 01:01:24 masinter 52 51c remove (unused) estimatinses 00001/00001/00513d D 1.51 88/05/13 12:44:39 jmturn 51 50c Enable shell sub-processes 00002/00002/00512d D 1.50 88/05/13 10:22:07 shimizu 50 49c del NO_C_HARDRETes 00027/00000/00487d D 1.49 88/05/12 05:32:20 shih 49 48c Added release stuffes 00007/00001/00480d D 1.48 88/05/11 20:10:23 shimizu 48 47c For merging bitbltes 00003/00003/00478d D 1.47 88/05/11 14:44:03 shimizu 47 46c Add return.h dependencyes 00000/00001/00481d D 1.46 88/05/11 12:07:48 hayata 46 45c Remove ethersubr.c, new ether.c include it.es 00003/00000/00479d D 1.45 88/05/10 18:14:18 hayata 45 44c Add systemcallmessage.ces 00006/00001/00473d D 1.44 88/05/10 11:33:34 charnley 44 43c added fp file with FP opses 00006/00001/00468d D 1.43 88/05/09 20:17:25 shimizu 43 42c Add hardreturnes 00007/00002/00462d D 1.42 88/05/09 09:21:41 hayata 42 41c Add osmessage.c, remove unixdir.ces 00006/00000/00458d D 1.41 88/05/08 10:36:19 shimizu 41 40c Add uraides 00001/00001/00457d D 1.40 88/05/07 18:11:23 masinter 40 39c get rid of ../src/../src in default .c.o lineses 00009/00003/00449d D 1.39 88/05/07 17:33:51 masinter 39 38c turn -O back on in makefilees 00011/00091/00441d D 1.38 88/05/07 05:06:53 shih 38 37c removed unnecessary explicit ruleses 00014/00000/00518d D 1.37 88/05/06 16:41:29 charnley 37 36c added z2.c and eqf.c .. new opcodeses 00003/00001/00515d D 1.36 88/05/06 14:18:15 krivacic 36 35c remove TRADSTACKOVERes 00002/00002/00514d D 1.35 88/05/06 14:12:26 jmturn 35 34c Not changedes 00004/00010/00512d D 1.34 88/05/02 19:45:17 hayata 34 33c Add dsk.c insted of new-smallfs.c and new-fullfs.ces 00001/00002/00521d D 1.33 88/05/01 23:48:10 masinter 33 32c remove reference to donsops.h; no longer usedes 00004/00002/00519d D 1.32 88/04/29 16:53:43 masinter 32 31c add make cref linees 00003/00003/00518d D 1.31 88/04/29 05:06:12 masinter 31 30c es 00007/00000/00514d D 1.30 88/04/28 20:25:03 atty 30 29c Added rpc object filees 00003/01215/00511d D 1.29 88/04/25 17:04:39 masinter 29 28c remove duplicate lineses 00402/00000/00915d D 1.28 88/03/24 14:57:36 shih 28 27c deleted those lines again.es 00401/00000/00514d D 1.27 88/03/24 14:54:00 shih 27 26c deleted spurious lines at bottom (how did they get there?)es 00411/00014/00103d D 1.26 88/03/24 14:51:05 shih 26 25c Added -O explicitly to .o.s rule (for assembly output)es 00085/00085/00429d D 1.25 88/04/24 15:18:19 shih 25 24c Restored disp68K, removed optflags (should be restored) to allow recompilationes 00001/00003/00513d D 1.24 88/04/23 22:43:50 masinter 24 23c Allow subr.o to depend on subrs.hes 00083/00087/00433d D 1.23 88/04/23 21:48:46 masinter 23 22c Remove .il file except for xc; remove unused filees 00004/00001/00516d D 1.22 88/04/23 21:46:54 shih 22 21c add ability to make .s filees 00008/00020/00509d D 1.21 88/04/22 19:25:51 krivacic 21 20c array dependencies fixed, xc dependencies fixedes 00000/00007/00529d D 1.20 88/04/21 18:21:52 masinter 20 19c remove gcclockes 00001/00001/00535d D 1.19 88/04/20 10:43:49 krivacic 19 18c TRADSTACKOVERes 00001/00001/00535d D 1.18 88/04/18 18:42:59 krivacic 18 17c TRADSTACKOVERFLOW back ines 00001/00001/00535d D 1.17 88/04/13 16:14:22 shimizu 17 16c To call do_stackoverflowes 00013/00008/00523d D 1.16 88/04/11 17:55:43 masinter 16 15c update to Medley, new file system, NOFORKes 00002/00002/00529d D 1.15 88/04/06 20:29:58 masinter 15 14c Fix problem in $(BINDIR)lisp linees 00417/00004/00114d D 1.14 88/04/06 16:11:55 jmturn 14 13c Added *.h file dependencieses 00004/00001/00114d D 1.13 88/04/05 15:33:29 charnley 13 12c added array writeses 00001/00000/00114d D 1.12 88/04/05 11:13:36 jmturn 12 11c Added Unix Interface Filees 00000/00010/00114d D 1.11 88/04/02 01:11:04 masinter 11 10c one more try to put it right againes 00010/00020/00104d D 1.10 88/03/01 00:47:08 masinter 10 9c Restore use of /usr/include to get sun libraryes 00000/00000/00124d D 1.9 88/03/01 00:40:36 masinter 9 8c Putting makefile backes 00000/00000/00124d D 1.8 88/03/01 00:37:36 masinter 8 7c Undo previous checkines 00004/00019/00110d D 1.7 88/04/01 17:46:55 masinter 7 6c Remove incdir2, loadsysout8M/lisp8M es 00003/00000/00126d D 1.6 88/03/30 14:08:16 charnley 6 5c added array ref opcodeses 00001/00000/00125d D 1.5 88/03/28 13:46:15 shimizu 5 4c Add llstk.o to OBJECTses 00002/00002/00123d D 1.4 88/03/23 10:46:04 krivacic 4 3c new Optionses 00001/00000/00124d D 1.3 88/03/21 17:09:53 charnley 3 2c added drawline C codees 00010/00008/00114d D 1.2 88/02/25 12:00:07 hayata 2 1c Change for Maiko directory structure.es 00122/00000/00000d D 1.1 88/02/24 17:16:33 hayata 1 0c date and time created 88/02/24 17:16:33 by hayataeuUtTI 1D 7D 10#E 10I 10D 13D 26# This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji XeroxE 26I 26D 29# This is G-file @(#) makefile Version 1.24 (4/23/88). copyright Xerox & Fuji Xerox  */E 26E 13I 13D 16# This is G-file @(#) makefile Version 1.12 (4/5/88). copyright Xerox & Fuji XeroxE 16I 16D 25# This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji Xerox  */E 25I 25# This is G-file @(#) makefile Version 1.24 (4/23/88). copyright Xerox & Fuji Xerox  */E 29I 29D 35# This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji XeroxE 35I 35D 38# This is G-file @(#) makefile Version 1.34 (5/2/88). copyright Xerox & Fuji XeroxE 38I 38D 71# G-file %Z% %M% Version %I% (%G%). Copyright Xerox & Fuji XeroxE 71I 71D 77# G-file @(#) makefile Version 2.16 (6/14/88). Copyright Xerox & Fuji XeroxE 77I 77# G-file %Z% %M% Version %I% (%G%).  Copyright Xerox & Fuji XeroxE 77E 71#E 38E 35E 29E 25E 16E 13E 10E 7I 7D 11# This is G-file %Z% %M% Version %I% (%G%). copyright Xerox & Fuji XeroxE 11E 7#	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved.#D 82#	makefile for lisp with SYSOUTE 82I 82#	makefile for lde with SYSOUTE 82#D 24D 26#	date: 08-Dec-87 take#	date: 22-Dec-87 TakeE 26E 24#I 39D 95# the released makefile should say "-O" for OPTFLAGS. If youE 95I 95# the makefile for the product should say "-O" for OPTFLAGS. If youE 95# want to compile with -g, do #     setenv OPTFLAGS -g#     make -e# insteadE 39D 4D 10OPTFLAGS = -OCFLAGS= $(OPTFLAGS) -DMONITOR1600x600 -DOPDISP -DIVARINREG -DTOS1E 10I 10D 21D 26OPTFLAGS = -O E 21I 21D 22OPTFLAGS = -g E 22I 22D 25OPTFLAGS = -O E 25I 25OPTFLAGS = E 25E 22E 21D 16CFLAGS= $(OPTFLAGS) -DOPDISP -DMC68K -DUNSAFEE 16I 16D 17CFLAGS= $(OPTFLAGS) -DNEWFS -DMEDLEY -DNOFORK -DTRADSTACKOVER -DOPDISP -DMC68K -DUNSAFEE 17I 17D 18CFLAGS= $(OPTFLAGS) -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DMC68K -DUNSAFEE 18I 18D 19CFLAGS= $(OPTFLAGS) -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DMC68K -DUNSAFE -DTRADSTACKOVERFLOWE 19I 19CFLAGS= $(OPTFLAGS) -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DMC68K -DUNSAFE -DTRADSTACKOVERE 19E 18E 17E 16E 10E 4I 4D 11OPTFLAGS = -O D 7CFLAGS= $(OPTFLAGS) -DMONITOR1600x600 -DOPDISP -DMC68K -DUNSAFEE 26I 26D 29OPTFLAGS = CFLAGS= $(OPTFLAGS) -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DMC68K -DUNSAFE -DTRADSTACKOVERE 29I 29D 35OPTFLAGS = -OE 35I 35D 39OPTFLAGS = -gE 39I 39# L = load flags, R = relocate flags, C = compile flagsI 43# NO_C_HARDRET is ON,it prevents to call hardreturn();E 43I 52D 53# **** NOFORK IS ON UNTIL IT WORKS WITH ETHERNET ENABLED ****E 53E 52OPTFLAGS = -OE 39E 35D 32CFLAGS= $(OPTFLAGS) -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DMC68K -DUNSAFE  -DTRADSTACKOVERE 32I 32D 36DFLAGS= -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DMC68K -DUNSAFE  -DTRADSTACKOVERE 36I 36D 38DFLAGS= -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DUNSAFE E 38I 38D 43DFLAGS = -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DUNSAFE E 43I 43D 50DFLAGS = -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DUNSAFE -DNO_C_HARDRETE 50I 50D 51DFLAGS = -DNEWFS -DMEDLEY -DNOFORK -DOPDISP -DUNSAFE E 51I 51D 52DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE E 52I 52D 53DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DNOFORKE 53I 53D 56DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFEE 56I 56D 59DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -f68881E 56E 53E 52E 51E 50E 43E 38E 36CFLAGS = $(OPTFLAGS) $(DFLAGS)E 59I 59D 82DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFEE 82FPFLAGS = -f68881I 82D 86DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFEE 86I 86D 87DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINCE 87I 87D 103DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINC -DKBINTE 103I 103D 105DFLAGS = -DFSERROR -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINC -DKBINTE 105I 105D 110DFLAGS = -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINC -DKBINTE 110I 110D 112DFLAGS = -DFSERROR -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINC -DKBINTE 112I 112DFLAGS = -DFSERROR -DNEWFS -DMEDLEY -DOPDISP -DUNSAFE -DRECLAIMINC -DKBINT -DSUN3_OS3_ILE 112E 110E 105E 103E 87E 86E 82CFLAGS = $(OPTFLAGS) $(DFLAGS) $(FPFLAGS)E 59I 39RFLAGS = -c $(CFLAGS) -I$(INCDIR)E 39I 36I 38D 39# L = load flags, R = relocate flags, C = compile flagsE 39D 80E 80E 38D 50# OLD OPTIONS: -DTRADSTACKOVER E 50I 50# OLD OPTIONS: -DTRADSTACKOVER  -DNO_C_HARDRETE 50E 36E 32E 29E 26E 7I 7CFLAGS= $(OPTFLAGS) -DOPDISP -DMC68K -DUNSAFEE 11E 7E 4D 32E 32D 2OBJECTDIR = ./E 2I 2OBJECTDIR = ../src/SRCDIR = ../src/INCDIR = ../inc/D 7D 10BINDIR = ../bin/INCDIR2 = /python0/include/E 10I 10BINDIR = ./I 49RELDIR = ../RELEASE/D 97INSDIR = $(RELDIR)userinstall/E 97I 97INSDIR = $(RELDIR)install/E 97I 81NATDIR = $(RELDIR)usernative/E 81E 49E 10E 7I 7D 11BINDIR = ./E 11E 7E 2I 80KEYON  = $(OBJECTDIR)keytester.oKEYOFF = $(OBJECTDIR)keytestno.oE 80I 38D 39RFLAGS = -c $(CFLAGS) -I$(INCDIR)E 39I 49D 80E 80E 49E 38D 63OFILES = $(OBJECTDIR)arith.o \	$(OBJECTDIR)arith2.o \E 63I 63OFILES = $(OBJECTDIR)arith2.o \E 63	$(OBJECTDIR)arith3.o \	$(OBJECTDIR)arith4.o \I 10	$(OBJECTDIR)array.o \I 26	$(OBJECTDIR)array2.o \I 27D 29	$(OBJECTDIR)array2.o \I 28	$(OBJECTDIR)array2.o \E 28E 27E 26I 13	$(OBJECTDIR)array2.o \E 29E 13	$(OBJECTDIR)array3.o \I 26	$(OBJECTDIR)array4.o \I 27D 29	$(OBJECTDIR)array4.o \I 28	$(OBJECTDIR)array4.o \E 28E 27E 26I 13	$(OBJECTDIR)array4.o \E 29E 13	$(OBJECTDIR)array5.o \I 26	$(OBJECTDIR)array6.o \I 27D 29	$(OBJECTDIR)array6.o \I 28	$(OBJECTDIR)array6.o \E 28E 27E 26I 13	$(OBJECTDIR)array6.o \E 29E 13E 10I 6D 11	$(OBJECTDIR)array.o \	$(OBJECTDIR)array3.o \	$(OBJECTDIR)array5.o \E 11E 6	$(OBJECTDIR)atom.o \	$(OBJECTDIR)bin.o \	$(OBJECTDIR)binds.o  \	$(OBJECTDIR)bitblt.o  \I 48	$(OBJECTDIR)bitbltsub.o  \E 48	$(OBJECTDIR)blt.o \	$(OBJECTDIR)car-cdr.o \	$(OBJECTDIR)common.o \	$(OBJECTDIR)conspage.o \	$(OBJECTDIR)createcell.o \I 93	$(OBJECTDIR)draw.o \E 93D 63	$(OBJECTDIR)constants.o \	$(OBJECTDIR)checkapply.o \	$(OBJECTDIR)equal.o \E 63D 58	$(OBJECTDIR)eval.o \E 58	$(OBJECTDIR)findkey.o \D 63	$(OBJECTDIR)funcall.o \E 63	$(OBJECTDIR)fvar.o \I 93	$(OBJECTDIR)xc.o \E 93	$(OBJECTDIR)gc.o \	$(OBJECTDIR)gc2.o \	$(OBJECTDIR)gvar2.o \I 43	$(OBJECTDIR)hardreturn.o \I 85	$(OBJECTDIR)interruptcall.o \E 85E 43D 59	$(OBJECTDIR)jump.o \E 59I 55	$(OBJECTDIR)keylib.o \D 80	$(OBJECTDIR)keytester.o \E 80E 55	$(OBJECTDIR)listhandle.o \I 10	$(OBJECTDIR)llstk.o \E 10I 5D 11	$(OBJECTDIR)llstk.o \E 11E 5	$(OBJECTDIR)lowlevel1.o \	$(OBJECTDIR)lowlevel2.o \D 63	$(OBJECTDIR)pushpop.o \E 63	$(OBJECTDIR)return.o \	$(OBJECTDIR)rplcons.o \	$(OBJECTDIR)shift.o \D 60	$(OBJECTDIR)stack.o \E 60	$(OBJECTDIR)subr.o \	$(OBJECTDIR)subr0374.o \	$(OBJECTDIR)timer.o \	$(OBJECTDIR)typeof.o \	$(OBJECTDIR)unwind.o \D 57	$(OBJECTDIR)vars.o \	$(OBJECTDIR)vars2.o \E 57	$(OBJECTDIR)vars3.o \I 26	$(OBJECTDIR)unixcomm.o \I 41	$(OBJECTDIR)uraid.o \E 41I 30	$(OBJECTDIR)rpc.o \I 65        $(OBJECTDIR)ufn.o \E 65E 30I 27D 29	$(OBJECTDIR)unixcomm.o \I 28	$(OBJECTDIR)unixcomm.o \E 28E 27E 26I 12	$(OBJECTDIR)unixcomm.o \E 29E 12D 63	$(OBJECTDIR)ufn.o \E 63I 10D 93	$(OBJECTDIR)draw.o \E 93I 37	$(OBJECTDIR)z2.o \	$(OBJECTDIR)eqf.o \I 44	$(OBJECTDIR)fp.o \I 64	$(OBJECTDIR)ubf1.o \	$(OBJECTDIR)ubf2.o \	$(OBJECTDIR)ubf3.o \I 68	$(OBJECTDIR)unix-utils.o \E 68E 64E 44E 37E 10I 3D 11D 26	$(OBJECTDIR)draw.o \E 26E 11E 3D 42	$(OBJECTDIR)loader.oE 42I 42	$(OBJECTDIR)loader.o \I 45	$(OBJECTDIR)systemcallmessage.o \E 45	$(OBJECTDIR)osmessage.oE 42GCFILES = $(OBJECTDIR)gcscan.o \	$(OBJECTDIR)gcarraymaker.o \	$(OBJECTDIR)gcreclaimcodeblock.o \	$(OBJECTDIR)gcfinalfuncs.o \	$(OBJECTDIR)gcreclaimcell.o \	$(OBJECTDIR)gchtfind.o \	$(OBJECTDIR)gcmain3.o \D 20D 26	$(OBJECTDIR)gcclock.o \E 26E 20	$(OBJECTDIR)gcreclaim.o \	$(OBJECTDIR)gchoverflow.o D 80E 80DEVICES = $(OBJECTDIR)dspsubrs.o \	$(OBJECTDIR)initdisplay.o \D 16D 26	$(OBJECTDIR)smallfs.o \	$(OBJECTDIR)fullfs.o \E 26I 26D 34	$(OBJECTDIR)new-smallfs.o \	$(OBJECTDIR)new-fullfs.o \E 34I 34	$(OBJECTDIR)dsk.o \E 34	$(OBJECTDIR)ufs.o \I 27D 29	$(OBJECTDIR)new-smallfs.o \	$(OBJECTDIR)new-fullfs.o \	$(OBJECTDIR)ufs.o \I 28	$(OBJECTDIR)new-smallfs.o \	$(OBJECTDIR)new-fullfs.o \	$(OBJECTDIR)ufs.o \E 28E 27E 26E 16I 16	$(OBJECTDIR)new-smallfs.o \	$(OBJECTDIR)new-fullfs.o \	$(OBJECTDIR)ufs.o \E 29E 16D 42	$(OBJECTDIR)unixdir.o \E 42	$(OBJECTDIR)directory.o \	$(OBJECTDIR)keyevent.o \	$(OBJECTDIR)keyboardsubrs.o \	$(OBJECTDIR)ether.o \D 46	$(OBJECTDIR)ethersubrs.o \E 46	$(OBJECTDIR)initkeyboard.o \	$(OBJECTDIR)rs232c.o \	$(OBJECTDIR)tty.o D 2TESTFILES = $(OBJECTDIR)Ktesttool.o \	$(OBJECTDIR)Kdebugtools.o \E 2I 2TESTFILES = $(OBJECTDIR)Kdebugtools.o \	$(OBJECTDIR)Ktesttool.o \E 2D 52	$(OBJECTDIR)Kprint.o \	$(OBJECTDIR)estimations.oE 52I 52	$(OBJECTDIR)Kprint.oE 52MAINFILES = $(OBJECTDIR)Ctest.o \D 93	$(OBJECTDIR)xc.o \E 93	$(OBJECTDIR)initsysout.o \	$(OBJECTDIR)storage.o \	$(OBJECTDIR)allocmds.o \	$(OBJECTDIR)vmemsave.o \	$(OBJECTDIR)newmakeatom.o \	$(OBJECTDIR)loadsysout.oI 73D 111VFILE = /tmp/vdate.cE 111I 111VFILE = $(OBJECTDIR)vdate.cE 111E 73I 70D 71VFILE = /tmp/vdate.cE 71E 70D 7D 10MAINFILES8M = $(OBJECTDIR)Ctest.o \	$(OBJECTDIR)xc.o \	$(OBJECTDIR)timeofday.o \	$(OBJECTDIR)initsysout.o \	$(OBJECTDIR)storage.o \	$(OBJECTDIR)allocmds.o \	$(OBJECTDIR)vmemsave.o \	$(OBJECTDIR)newmakeatom.o \	$(OBJECTDIR)loadsysout8M.oE 10E 7D 14D 26lisp :	$(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 26I 26I 80DEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)I 104D 105USERFILES = $(OBJECTDIR)usersubrs.oE 105I 105EXTFILES = $(OBJECTDIR)usersubrs.oE 105E 104E 80I 73# execute to make /tmp/vdate.cE 73I 70D 71# execute to make /tmp/vdate.cE 71E 70D 38$(BINDIR)lisp : $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)I 27D 29$(OBJECTDIR)Ctest.o :  $(SRCDIR)Ctest.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)opcodefunc.h  $(INCDIR)debug.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ctest.c -o $(SRCDIR)Ctest.o $(SRCDIR)disp68K.il$(BINDIR)lisp : $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)I 28$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kdebugtools.c -o $(SRCDIR)Kdebugtools.o $(SRCDIR)disp68K.il$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  $(INCDIR)address.h  $(INCDIR)lispemul.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kprint.c -o $(SRCDIR)Kprint.o $(SRCDIR)disp68K.il$(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ktesttool.c -o $(SRCDIR)Ktesttool.o $(SRCDIR)disp68K.il$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)allocmds.c -o $(SRCDIR)allocmds.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith.o :  $(SRCDIR)arith.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith.c -o $(SRCDIR)arith.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith2.c -o $(SRCDIR)arith2.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith3.c -o $(SRCDIR)arith3.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith4.c -o $(SRCDIR)arith4.o $(SRCDIR)disp68K.il$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array.c -o $(SRCDIR)array.o $(SRCDIR)disp68K.il$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array3.c -o $(SRCDIR)array3.o $(SRCDIR)disp68K.il$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array5.c -o $(SRCDIR)array5.o $(SRCDIR)disp68K.il$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)atom.c -o $(SRCDIR)atom.o $(SRCDIR)disp68K.il$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bin.c -o $(SRCDIR)bin.o $(SRCDIR)disp68K.il$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)binds.c -o $(SRCDIR)binds.o $(SRCDIR)disp68K.il$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bitblt.c -o $(SRCDIR)bitblt.o $(SRCDIR)disp68K.il$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)blt.c -o $(SRCDIR)blt.o $(SRCDIR)disp68K.il$(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)car-cdr.c -o $(SRCDIR)car-cdr.o $(SRCDIR)disp68K.il$(OBJECTDIR)checkapply.o :  $(SRCDIR)checkapply.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)checkapply.c -o $(SRCDIR)checkapply.o $(SRCDIR)disp68K.il$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)conspage.c -o $(SRCDIR)conspage.o $(SRCDIR)disp68K.il$(OBJECTDIR)constants.o :  $(SRCDIR)constants.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)constants.c -o $(SRCDIR)constants.o $(SRCDIR)disp68K.il$(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)createcell.c -o $(SRCDIR)createcell.o $(SRCDIR)disp68K.il$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)my.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)draw.c -o $(SRCDIR)draw.o $(SRCDIR)disp68K.il$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dspsubrs.c -o $(SRCDIR)dspsubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)equal.o :  $(SRCDIR)equal.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)equal.c -o $(SRCDIR)equal.o $(SRCDIR)disp68K.il$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)ether.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ether.c -o $(SRCDIR)ether.o $(SRCDIR)disp68K.il$(OBJECTDIR)ethersubrs.o :  $(SRCDIR)ethersubrs.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ethersubrs.c -o $(SRCDIR)ethersubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)eval.o :  $(SRCDIR)eval.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)initatoms.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)eval.c -o $(SRCDIR)eval.o $(SRCDIR)disp68K.il$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)findkey.c -o $(SRCDIR)findkey.o $(SRCDIR)disp68K.il$(OBJECTDIR)new-fullfs.o :  $(SRCDIR)new-fullfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-fullfs.c -o $(SRCDIR)new-fullfs.o $(SRCDIR)disp68K.il$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufs.c -o $(SRCDIR)ufs.o $(SRCDIR)disp68K.il$(OBJECTDIR)funcall.o :  $(SRCDIR)funcall.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)funcall.c -o $(SRCDIR)funcall.o $(SRCDIR)disp68K.il$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fvar.c -o $(SRCDIR)fvar.o $(SRCDIR)disp68K.il$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc.c -o $(SRCDIR)gc.o $(SRCDIR)disp68K.il$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc2.c -o $(SRCDIR)gc2.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcarraymaker.c -o $(SRCDIR)gcarraymaker.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcfinalfuncs.c -o $(SRCDIR)gcfinalfuncs.o $(SRCDIR)disp68K.il$(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchoverflow.c -o $(SRCDIR)gchoverflow.o $(SRCDIR)disp68K.il$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchtfind.c -o $(SRCDIR)gchtfind.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcmain3.c -o $(SRCDIR)gcmain3.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)stack.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaim.c -o $(SRCDIR)gcreclaim.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcell.c -o $(SRCDIR)gcreclaimcell.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaimcodeblock.o :  $(SRCDIR)gcreclaimcodeblock.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h  $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcodeblock.c -o $(SRCDIR)gcreclaimcodeblock.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcscan.c -o $(SRCDIR)gcscan.o $(SRCDIR)disp68K.il$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gvar2.c -o $(SRCDIR)gvar2.o $(SRCDIR)disp68K.il$(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initdisplay.c -o $(SRCDIR)initdisplay.o $(SRCDIR)disp68K.il$(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initkeyboard.c -o $(SRCDIR)initkeyboard.o $(SRCDIR)disp68K.il$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \	 $(INCDIR)systematoms.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initsysout.c -o $(SRCDIR)initsysout.o $(SRCDIR)disp68K.il$(OBJECTDIR)jump.o :  $(SRCDIR)jump.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)jump.c -o $(SRCDIR)jump.o $(SRCDIR)disp68K.il$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyboardsubrs.c -o $(SRCDIR)keyboardsubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyevent.c -o $(SRCDIR)keyevent.o $(SRCDIR)disp68K.il$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)listhandle.c -o $(SRCDIR)listhandle.o $(SRCDIR)disp68K.il$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)llstk.c -o $(SRCDIR)llstk.o $(SRCDIR)disp68K.il$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loader.c -o $(SRCDIR)loader.o $(SRCDIR)disp68K.il$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout.c -o $(SRCDIR)loadsysout.o $(SRCDIR)disp68K.il$(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel1.c -o $(SRCDIR)lowlevel1.o $(SRCDIR)disp68K.il$(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel2.c -o $(SRCDIR)lowlevel2.o $(SRCDIR)disp68K.il$(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)newmakeatom.c -o $(SRCDIR)newmakeatom.o $(SRCDIR)disp68K.il$(OBJECTDIR)pushpop.o :  $(SRCDIR)pushpop.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)pushpop.c -o $(SRCDIR)pushpop.o $(SRCDIR)disp68K.il$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)return.c -o $(SRCDIR)return.o $(SRCDIR)disp68K.il$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rplcons.c -o $(SRCDIR)rplcons.o $(SRCDIR)disp68K.il$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rs232c.c -o $(SRCDIR)rs232c.o $(SRCDIR)disp68K.il$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)shift.c -o $(SRCDIR)shift.o $(SRCDIR)disp68K.il$(OBJECTDIR)new-smallfs.o :  $(SRCDIR)new-smallfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h \	 $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-smallfs.c -o $(SRCDIR)new-smallfs.o $(SRCDIR)disp68K.il$(OBJECTDIR)stack.o :  $(SRCDIR)stack.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)stack.c -o $(SRCDIR)stack.o $(SRCDIR)disp68K.il$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)storage.c -o $(SRCDIR)storage.o $(SRCDIR)disp68K.il$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr.c -o $(SRCDIR)subr.o $(SRCDIR)disp68K.il$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr0374.c -o $(SRCDIR)subr0374.o $(SRCDIR)disp68K.il$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)timer.c -o $(SRCDIR)timer.o $(SRCDIR)disp68K.il$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)tty.c -o $(SRCDIR)tty.o $(SRCDIR)disp68K.il$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)cell.h \	 $(INCDIR)lispmap.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)typeof.c -o $(SRCDIR)typeof.o $(SRCDIR)disp68K.il$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufn.c -o $(SRCDIR)ufn.o $(SRCDIR)disp68K.il$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unixcomm.c -o $(SRCDIR)unixcomm.o $(SRCDIR)disp68K.il$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unwind.c -o $(SRCDIR)unwind.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars.o :  $(SRCDIR)vars.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars.c -o $(SRCDIR)vars.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars2.o :  $(SRCDIR)vars2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars2.c -o $(SRCDIR)vars2.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars3.c -o $(SRCDIR)vars3.o $(SRCDIR)disp68K.il$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vmemsave.c -o $(SRCDIR)vmemsave.o $(SRCDIR)disp68K.il$(OBJECTDIR)xc.o :  $(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  $(INCDIR)arith.h \	 $(INCDIR)opcodefunc.h  $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.h  $(INCDIR)dummy_entries.h \	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h \	 $(INCDIR)donsops.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.o $(SRCDIR)disp68K.il $(SRCDIR)disp68K.il$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array2.c -o $(SRCDIR)array2.o $(SRCDIR)disp68K.il$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array4.c -o $(SRCDIR)array4.o $(SRCDIR)disp68K.il$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array6.c -o $(SRCDIR)array6.o $(SRCDIR)disp68K.il$(OBJECTDIR)Ctest.o :  $(SRCDIR)Ctest.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)opcodefunc.h  $(INCDIR)debug.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ctest.c -o $(SRCDIR)Ctest.o $(SRCDIR)disp68K.il$(BINDIR)lisp : $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 28E 27E 26D 2	cc -o lisp  $(CFLAGS) $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES)  -lsuntool -lsunwindow  -lpixrect -lcE 2I 2	cc -o $(BINDIR)lisp  $(CFLAGS) $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES)  -lsuntool -lsunwindow  -lpixrect -lcI 27$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kdebugtools.c -o $(SRCDIR)Kdebugtools.o $(SRCDIR)disp68K.il$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  $(INCDIR)address.h  $(INCDIR)lispemul.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kprint.c -o $(SRCDIR)Kprint.o $(SRCDIR)disp68K.il$(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ktesttool.c -o $(SRCDIR)Ktesttool.o $(SRCDIR)disp68K.il$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)allocmds.c -o $(SRCDIR)allocmds.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith.o :  $(SRCDIR)arith.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith.c -o $(SRCDIR)arith.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith2.c -o $(SRCDIR)arith2.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith3.c -o $(SRCDIR)arith3.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith4.c -o $(SRCDIR)arith4.o $(SRCDIR)disp68K.il$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array.c -o $(SRCDIR)array.o $(SRCDIR)disp68K.il$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array3.c -o $(SRCDIR)array3.o $(SRCDIR)disp68K.il$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array5.c -o $(SRCDIR)array5.o $(SRCDIR)disp68K.il$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)atom.c -o $(SRCDIR)atom.o $(SRCDIR)disp68K.il$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bin.c -o $(SRCDIR)bin.o $(SRCDIR)disp68K.il$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)binds.c -o $(SRCDIR)binds.o $(SRCDIR)disp68K.il$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bitblt.c -o $(SRCDIR)bitblt.o $(SRCDIR)disp68K.il$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)blt.c -o $(SRCDIR)blt.o $(SRCDIR)disp68K.il$(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)car-cdr.c -o $(SRCDIR)car-cdr.o $(SRCDIR)disp68K.il$(OBJECTDIR)checkapply.o :  $(SRCDIR)checkapply.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)checkapply.c -o $(SRCDIR)checkapply.o $(SRCDIR)disp68K.il$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)conspage.c -o $(SRCDIR)conspage.o $(SRCDIR)disp68K.il$(OBJECTDIR)constants.o :  $(SRCDIR)constants.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)constants.c -o $(SRCDIR)constants.o $(SRCDIR)disp68K.il$(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)createcell.c -o $(SRCDIR)createcell.o $(SRCDIR)disp68K.il$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)my.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)draw.c -o $(SRCDIR)draw.o $(SRCDIR)disp68K.il$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dspsubrs.c -o $(SRCDIR)dspsubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)equal.o :  $(SRCDIR)equal.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)equal.c -o $(SRCDIR)equal.o $(SRCDIR)disp68K.il$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)ether.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ether.c -o $(SRCDIR)ether.o $(SRCDIR)disp68K.il$(OBJECTDIR)ethersubrs.o :  $(SRCDIR)ethersubrs.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ethersubrs.c -o $(SRCDIR)ethersubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)eval.o :  $(SRCDIR)eval.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)initatoms.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)eval.c -o $(SRCDIR)eval.o $(SRCDIR)disp68K.il$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)findkey.c -o $(SRCDIR)findkey.o $(SRCDIR)disp68K.il$(OBJECTDIR)new-fullfs.o :  $(SRCDIR)new-fullfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-fullfs.c -o $(SRCDIR)new-fullfs.o $(SRCDIR)disp68K.il$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufs.c -o $(SRCDIR)ufs.o $(SRCDIR)disp68K.il$(OBJECTDIR)funcall.o :  $(SRCDIR)funcall.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)funcall.c -o $(SRCDIR)funcall.o $(SRCDIR)disp68K.il$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fvar.c -o $(SRCDIR)fvar.o $(SRCDIR)disp68K.il$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc.c -o $(SRCDIR)gc.o $(SRCDIR)disp68K.il$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc2.c -o $(SRCDIR)gc2.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcarraymaker.c -o $(SRCDIR)gcarraymaker.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcfinalfuncs.c -o $(SRCDIR)gcfinalfuncs.o $(SRCDIR)disp68K.il$(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchoverflow.c -o $(SRCDIR)gchoverflow.o $(SRCDIR)disp68K.il$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchtfind.c -o $(SRCDIR)gchtfind.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcmain3.c -o $(SRCDIR)gcmain3.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)stack.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaim.c -o $(SRCDIR)gcreclaim.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcell.c -o $(SRCDIR)gcreclaimcell.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaimcodeblock.o :  $(SRCDIR)gcreclaimcodeblock.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h  $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcodeblock.c -o $(SRCDIR)gcreclaimcodeblock.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcscan.c -o $(SRCDIR)gcscan.o $(SRCDIR)disp68K.il$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gvar2.c -o $(SRCDIR)gvar2.o $(SRCDIR)disp68K.il$(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initdisplay.c -o $(SRCDIR)initdisplay.o $(SRCDIR)disp68K.il$(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initkeyboard.c -o $(SRCDIR)initkeyboard.o $(SRCDIR)disp68K.il$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \	 $(INCDIR)systematoms.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initsysout.c -o $(SRCDIR)initsysout.o $(SRCDIR)disp68K.il$(OBJECTDIR)jump.o :  $(SRCDIR)jump.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)jump.c -o $(SRCDIR)jump.o $(SRCDIR)disp68K.il$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyboardsubrs.c -o $(SRCDIR)keyboardsubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyevent.c -o $(SRCDIR)keyevent.o $(SRCDIR)disp68K.il$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)listhandle.c -o $(SRCDIR)listhandle.o $(SRCDIR)disp68K.il$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)llstk.c -o $(SRCDIR)llstk.o $(SRCDIR)disp68K.il$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loader.c -o $(SRCDIR)loader.o $(SRCDIR)disp68K.il$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout.c -o $(SRCDIR)loadsysout.o $(SRCDIR)disp68K.il$(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel1.c -o $(SRCDIR)lowlevel1.o $(SRCDIR)disp68K.il$(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel2.c -o $(SRCDIR)lowlevel2.o $(SRCDIR)disp68K.il$(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)newmakeatom.c -o $(SRCDIR)newmakeatom.o $(SRCDIR)disp68K.il$(OBJECTDIR)pushpop.o :  $(SRCDIR)pushpop.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)pushpop.c -o $(SRCDIR)pushpop.o $(SRCDIR)disp68K.il$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)return.c -o $(SRCDIR)return.o $(SRCDIR)disp68K.il$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rplcons.c -o $(SRCDIR)rplcons.o $(SRCDIR)disp68K.il$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rs232c.c -o $(SRCDIR)rs232c.o $(SRCDIR)disp68K.il$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)shift.c -o $(SRCDIR)shift.o $(SRCDIR)disp68K.il$(OBJECTDIR)new-smallfs.o :  $(SRCDIR)new-smallfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h \	 $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-smallfs.c -o $(SRCDIR)new-smallfs.o $(SRCDIR)disp68K.il$(OBJECTDIR)stack.o :  $(SRCDIR)stack.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)stack.c -o $(SRCDIR)stack.o $(SRCDIR)disp68K.il$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)storage.c -o $(SRCDIR)storage.o $(SRCDIR)disp68K.il$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr.c -o $(SRCDIR)subr.o $(SRCDIR)disp68K.il$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr0374.c -o $(SRCDIR)subr0374.o $(SRCDIR)disp68K.il$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)timer.c -o $(SRCDIR)timer.o $(SRCDIR)disp68K.il$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)tty.c -o $(SRCDIR)tty.o $(SRCDIR)disp68K.il$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)cell.h \	 $(INCDIR)lispmap.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)typeof.c -o $(SRCDIR)typeof.o $(SRCDIR)disp68K.il$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufn.c -o $(SRCDIR)ufn.o $(SRCDIR)disp68K.il$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unixcomm.c -o $(SRCDIR)unixcomm.o $(SRCDIR)disp68K.il$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unwind.c -o $(SRCDIR)unwind.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars.o :  $(SRCDIR)vars.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars.c -o $(SRCDIR)vars.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars2.o :  $(SRCDIR)vars2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars2.c -o $(SRCDIR)vars2.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars3.c -o $(SRCDIR)vars3.o $(SRCDIR)disp68K.il$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vmemsave.c -o $(SRCDIR)vmemsave.o $(SRCDIR)disp68K.il$(OBJECTDIR)xc.o :  $(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  $(INCDIR)arith.h \	 $(INCDIR)opcodefunc.h  $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.h  $(INCDIR)dummy_entries.h \	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h \	 $(INCDIR)donsops.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.o $(SRCDIR)disp68K.il $(SRCDIR)disp68K.il$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array2.c -o $(SRCDIR)array2.o $(SRCDIR)disp68K.il$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array4.c -o $(SRCDIR)array4.o $(SRCDIR)disp68K.il$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array6.c -o $(SRCDIR)array6.o $(SRCDIR)disp68K.ilE 27E 14E 2D 7D 10lisp8M :	$(OFILES) $(TESTFILES) $(MAINFILES8M) $(DEVICES) $(GCFILES)D 2	cc -o lisp8M $(CFLAGS) $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES8M)  -lsuntool -lsunwindow  -lpixrect -lc E 2I 2	cc -o $(BINDIR)lisp8M $(CFLAGS) $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES8M) -lsuntool -lsunwindow  -lpixrect -lc E 2E 10E 7D 14D 26.c.o:D 2	cc -c $(CFLAGS) -I/python0/include $*.c -o $@ disp68K.ilE 2I 2D 7D 10	cc -c $(CFLAGS) -I$(INCDIR)  -I$(INCDIR2) $*.c -o $@ $(SRCDIR)disp68K.ilE 10I 10D 11	cc -c $(CFLAGS) -I$(INCDIR) -I/usr/include $*.c -o $@ $(SRCDIR)disp68K.ilE 26I 26$(OBJECTDIR)Ctest.o :  $(SRCDIR)Ctest.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \	 $(INCDIR)opcodefunc.h  $(INCDIR)debug.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ctest.c -o $(SRCDIR)Ctest.o $(SRCDIR)disp68K.ilE 26E 11E 10E 7I 7	cc -c $(CFLAGS) -I$(INCDIR) $*.c -o $@ $(SRCDIR)disp68K.ilE 14I 14D 15lisp : $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)	cc -o $(SRCDIR)$(BINDIR)lisp  $(CFLAGS) $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES)  -lsuntool -lsunwindow  -lpixrect -lcE 15I 15$(BINDIR)lisp : $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 29	cc -o $(BINDIR)lisp  $(CFLAGS) $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES)  -lsuntool -lsunwindow  -lpixrect -lcE 38I 38D 75$(BINDIR)lisp :      $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 75I 75D 80#### Main targets #########################################################E 80I 80################################################################################# Development targets - copyprotect is OFF here################################################################################E 80I 77default	: $(BINDIR)lde $(BINDIR)ldeetherE 77D 79$(BINDIR)lde :      $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 79I 79D 80$(BINDIR)lde :      $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(BINDIR)makevdateE 80I 80D 104$(BINDIR)lde :       $(DEVFILES) $(BINDIR)makevdateE 104I 104D 105$(BINDIR)lde :       $(DEVFILES) $(USERFILES) $(BINDIR)makevdateE 105I 105$(BINDIR)lde :       $(DEVFILES) $(EXTFILES) $(BINDIR)makevdateE 105E 104E 80E 79E 75D 70	cc $(CFLAGS) $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)lispE 70I 70D 71	$(BINDIR)makevdate	cc $(CFLAGS) $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)lispE 71I 71D 73	cc $(CFLAGS) $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)lispE 73I 73D 111	$(BINDIR)makevdateE 111I 111	$(BINDIR)makevdate > $(OBJECTDIR)vdate.cE 111D 75	cc $(CFLAGS) $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)lispE 75I 75D 80	cc $(CFLAGS) $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)lde	rm -f lispE 80I 80D 104	cc $(CFLAGS) $(DEVFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)ldeE 104I 104D 105	cc $(CFLAGS) $(DEVFILES) $(USERFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)ldeE 105I 105	cc $(CFLAGS) $(DEVFILES) $(EXTFILES) $(VFILE) -lsuntool -lsunwindow  -lpixrect -lc -o $(BINDIR)ldeE 105E 104	@ rm -f lispE 80	@ echo ""D 77	@ echo "executable is now named 'lde'"E 77I 77	@ echo "Executable is now named 'lde'"E 77E 75E 73E 71E 70E 38E 15E 14E 7E 2I 67D 75$(BINDIR)startlisp	:	cc $(CFLAGS) $(SRCDIR)startlisp.c -o startlisp	echo Make startlisp a setuid root program to use PUP/XNS EthernetE 75I 75D 76$(BINDIR)ldeether : $(SRCDIR)startlisp.c	cc $(CFLAGS) $(SRCDIR)startlisp.c -o ldeether	@ echo Make startlisp a setuid root program to use PUP/XNS EthernetE 76I 76D 80$(BINDIR)ldeether : $(SRCDIR)ldeether.cE 80I 80$(BINDIR)ldeether :  $(SRCDIR)ldeether.cE 80	cc $(CFLAGS) $(SRCDIR)ldeether.c -o ldeetherD 77	@ echo Make ldeether a setuid root program to use PUP/XNS EthernetE 77I 77D 80	rm -f startlispE 80I 80	@ rm -f startlispE 80	@ echo ""	@ echo "ethernet kickstart is now named 'ldeether'"D 89	@ echo "Make ldeether a setuid root program to use PUP/XNS Ethernet"E 89I 89#	@ echo "Make ldeether a setuid root program to use PUP/XNS Ethernet"	@ echo "Now making ldeether setuid root"D 90	rsh python '/users/maiko/bin/suid $$home/maiko/bin/ldeether'E 90I 90	rsh python "/users/maiko/bin/suid `pwd`/ldeether"E 90	ls -l ldeetherE 89E 77E 76E 75I 73D 78$(BINDIR)makevdate	:E 78I 78$(BINDIR)makevdate	: $(SRCDIR)makevdate.cE 78	cc $(SRCDIR)makevdate.c -o makevdateI 75#### Component files ######################################################E 75E 73I 70D 71$(BINDIR)makevdate	:	cc $(SRCDIR)makevdate.c -o makevdateE 71E 70E 67I 26D 29$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kdebugtools.c -o $(SRCDIR)Kdebugtools.o $(SRCDIR)disp68K.il$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  $(INCDIR)address.h  $(INCDIR)lispemul.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kprint.c -o $(SRCDIR)Kprint.o $(SRCDIR)disp68K.il$(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ktesttool.c -o $(SRCDIR)Ktesttool.o $(SRCDIR)disp68K.il$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)allocmds.c -o $(SRCDIR)allocmds.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith.o :  $(SRCDIR)arith.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith.c -o $(SRCDIR)arith.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith2.c -o $(SRCDIR)arith2.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith3.c -o $(SRCDIR)arith3.o $(SRCDIR)disp68K.il$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith4.c -o $(SRCDIR)arith4.o $(SRCDIR)disp68K.il$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array.c -o $(SRCDIR)array.o $(SRCDIR)disp68K.il$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array3.c -o $(SRCDIR)array3.o $(SRCDIR)disp68K.il$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array5.c -o $(SRCDIR)array5.o $(SRCDIR)disp68K.il$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)atom.c -o $(SRCDIR)atom.o $(SRCDIR)disp68K.il$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bin.c -o $(SRCDIR)bin.o $(SRCDIR)disp68K.il$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)binds.c -o $(SRCDIR)binds.o $(SRCDIR)disp68K.il$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bitblt.c -o $(SRCDIR)bitblt.o $(SRCDIR)disp68K.il$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)blt.c -o $(SRCDIR)blt.o $(SRCDIR)disp68K.il$(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)car-cdr.c -o $(SRCDIR)car-cdr.o $(SRCDIR)disp68K.il$(OBJECTDIR)checkapply.o :  $(SRCDIR)checkapply.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)checkapply.c -o $(SRCDIR)checkapply.o $(SRCDIR)disp68K.il$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)conspage.c -o $(SRCDIR)conspage.o $(SRCDIR)disp68K.il$(OBJECTDIR)constants.o :  $(SRCDIR)constants.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)constants.c -o $(SRCDIR)constants.o $(SRCDIR)disp68K.il$(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)createcell.c -o $(SRCDIR)createcell.o $(SRCDIR)disp68K.il$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)my.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)draw.c -o $(SRCDIR)draw.o $(SRCDIR)disp68K.il$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dspsubrs.c -o $(SRCDIR)dspsubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)equal.o :  $(SRCDIR)equal.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)equal.c -o $(SRCDIR)equal.o $(SRCDIR)disp68K.il$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)ether.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ether.c -o $(SRCDIR)ether.o $(SRCDIR)disp68K.il$(OBJECTDIR)ethersubrs.o :  $(SRCDIR)ethersubrs.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ethersubrs.c -o $(SRCDIR)ethersubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)eval.o :  $(SRCDIR)eval.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)initatoms.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)eval.c -o $(SRCDIR)eval.o $(SRCDIR)disp68K.il$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)findkey.c -o $(SRCDIR)findkey.o $(SRCDIR)disp68K.il$(OBJECTDIR)new-fullfs.o :  $(SRCDIR)new-fullfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-fullfs.c -o $(SRCDIR)new-fullfs.o $(SRCDIR)disp68K.il$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufs.c -o $(SRCDIR)ufs.o $(SRCDIR)disp68K.il$(OBJECTDIR)funcall.o :  $(SRCDIR)funcall.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)funcall.c -o $(SRCDIR)funcall.o $(SRCDIR)disp68K.il$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fvar.c -o $(SRCDIR)fvar.o $(SRCDIR)disp68K.il$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc.c -o $(SRCDIR)gc.o $(SRCDIR)disp68K.il$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc2.c -o $(SRCDIR)gc2.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcarraymaker.c -o $(SRCDIR)gcarraymaker.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcfinalfuncs.c -o $(SRCDIR)gcfinalfuncs.o $(SRCDIR)disp68K.il$(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchoverflow.c -o $(SRCDIR)gchoverflow.o $(SRCDIR)disp68K.il$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchtfind.c -o $(SRCDIR)gchtfind.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcmain3.c -o $(SRCDIR)gcmain3.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)stack.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaim.c -o $(SRCDIR)gcreclaim.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcell.c -o $(SRCDIR)gcreclaimcell.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcreclaimcodeblock.o :  $(SRCDIR)gcreclaimcodeblock.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h  $(INCDIR)array.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcodeblock.c -o $(SRCDIR)gcreclaimcodeblock.o $(SRCDIR)disp68K.il$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcscan.c -o $(SRCDIR)gcscan.o $(SRCDIR)disp68K.il$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gvar2.c -o $(SRCDIR)gvar2.o $(SRCDIR)disp68K.il$(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initdisplay.c -o $(SRCDIR)initdisplay.o $(SRCDIR)disp68K.il$(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initkeyboard.c -o $(SRCDIR)initkeyboard.o $(SRCDIR)disp68K.il$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \	 $(INCDIR)systematoms.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initsysout.c -o $(SRCDIR)initsysout.o $(SRCDIR)disp68K.il$(OBJECTDIR)jump.o :  $(SRCDIR)jump.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)jump.c -o $(SRCDIR)jump.o $(SRCDIR)disp68K.il$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyboardsubrs.c -o $(SRCDIR)keyboardsubrs.o $(SRCDIR)disp68K.il$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyevent.c -o $(SRCDIR)keyevent.o $(SRCDIR)disp68K.il$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)listhandle.c -o $(SRCDIR)listhandle.o $(SRCDIR)disp68K.il$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)llstk.c -o $(SRCDIR)llstk.o $(SRCDIR)disp68K.il$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loader.c -o $(SRCDIR)loader.o $(SRCDIR)disp68K.il$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout.c -o $(SRCDIR)loadsysout.o $(SRCDIR)disp68K.il$(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel1.c -o $(SRCDIR)lowlevel1.o $(SRCDIR)disp68K.il$(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel2.c -o $(SRCDIR)lowlevel2.o $(SRCDIR)disp68K.il$(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)newmakeatom.c -o $(SRCDIR)newmakeatom.o $(SRCDIR)disp68K.il$(OBJECTDIR)pushpop.o :  $(SRCDIR)pushpop.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)emulglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)pushpop.c -o $(SRCDIR)pushpop.o $(SRCDIR)disp68K.il$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)return.c -o $(SRCDIR)return.o $(SRCDIR)disp68K.il$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rplcons.c -o $(SRCDIR)rplcons.o $(SRCDIR)disp68K.il$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rs232c.c -o $(SRCDIR)rs232c.o $(SRCDIR)disp68K.il$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)shift.c -o $(SRCDIR)shift.o $(SRCDIR)disp68K.il$(OBJECTDIR)new-smallfs.o :  $(SRCDIR)new-smallfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h \	 $(INCDIR)filesystem.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-smallfs.c -o $(SRCDIR)new-smallfs.o $(SRCDIR)disp68K.il$(OBJECTDIR)stack.o :  $(SRCDIR)stack.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)stack.c -o $(SRCDIR)stack.o $(SRCDIR)disp68K.il$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)storage.c -o $(SRCDIR)storage.o $(SRCDIR)disp68K.il$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h $(INCDIR)subrs.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr.c -o $(SRCDIR)subr.o $(SRCDIR)disp68K.il$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr0374.c -o $(SRCDIR)subr0374.o $(SRCDIR)disp68K.il$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)timer.c -o $(SRCDIR)timer.o $(SRCDIR)disp68K.il$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)tty.c -o $(SRCDIR)tty.o $(SRCDIR)disp68K.il$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)cell.h \	 $(INCDIR)lispmap.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)typeof.c -o $(SRCDIR)typeof.o $(SRCDIR)disp68K.il$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufn.c -o $(SRCDIR)ufn.o $(SRCDIR)disp68K.il$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unixcomm.c -o $(SRCDIR)unixcomm.o $(SRCDIR)disp68K.il$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unwind.c -o $(SRCDIR)unwind.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars.o :  $(SRCDIR)vars.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars.c -o $(SRCDIR)vars.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars2.o :  $(SRCDIR)vars2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars2.c -o $(SRCDIR)vars2.o $(SRCDIR)disp68K.il$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars3.c -o $(SRCDIR)vars3.o $(SRCDIR)disp68K.il$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vmemsave.c -o $(SRCDIR)vmemsave.o $(SRCDIR)disp68K.il$(OBJECTDIR)xc.o :  $(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  $(INCDIR)arith.h \	 $(INCDIR)opcodefunc.h  $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.h  $(INCDIR)dummy_entries.h \	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h \	 $(INCDIR)donsops.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.o $(SRCDIR)disp68K.il $(SRCDIR)disp68K.il$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array2.c -o $(SRCDIR)array2.o $(SRCDIR)disp68K.il$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array4.c -o $(SRCDIR)array4.o $(SRCDIR)disp68K.il$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)arith.h  $(INCDIR)my.h   	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array6.c -o $(SRCDIR)array6.o $(SRCDIR)disp68K.ilE 29E 26I 14D 38$(OBJECTDIR)Ctest.o :  $(SRCDIR)Ctest.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \E 38I 38$(OBJECTDIR)Ctest.o : $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \E 38	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \D 23	 $(INCDIR)opcodefunc.h  $(INCDIR)optable.h  $(INCDIR)debug.h	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ctest.c -o $(SRCDIR)Ctest.o $(SRCDIR)disp68K.ilE 23I 23D 31	 $(INCDIR)opcodefunc.h  $(INCDIR)debug.hE 31I 31D 47	 $(INCDIR)debug.hE 47I 47D 108	 $(INCDIR)return.h $(INCDIR)debug.hE 108I 108	 $(INCDIR)return.h $(INCDIR)debug.h $(INCDIR)profile.hE 108E 47E 31D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ctest.c -o $(SRCDIR)Ctest.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ctest.c -o $(SRCDIR)Ctest.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)Kdebugtools.o :  $(SRCDIR)Kdebugtools.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kdebugtools.c -o $(SRCDIR)Kdebugtools.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kdebugtools.c -o $(SRCDIR)Kdebugtools.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kdebugtools.c -o $(SRCDIR)Kdebugtools.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  $(INCDIR)address.h  $(INCDIR)lispemul.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kprint.c -o $(SRCDIR)Kprint.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kprint.c -o $(SRCDIR)Kprint.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Kprint.c -o $(SRCDIR)Kprint.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)Ktesttool.o :  $(SRCDIR)Ktesttool.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ktesttool.c -o $(SRCDIR)Ktesttool.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ktesttool.c -o $(SRCDIR)Ktesttool.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)Ktesttool.c -o $(SRCDIR)Ktesttool.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)initatoms.h  $(INCDIR)systematoms.h  $(INCDIR)lispglobal.hD 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)allocmds.c -o $(SRCDIR)allocmds.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)allocmds.c -o $(SRCDIR)allocmds.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)allocmds.c -o $(SRCDIR)allocmds.o $(SRCDIR)disp68K.ilE 38E 25E 23D 38E 38D 63$(OBJECTDIR)arith.o :  $(SRCDIR)arith.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith.c -o $(SRCDIR)arith.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith.c -o $(SRCDIR)arith.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith.c -o $(SRCDIR)arith.o $(SRCDIR)disp68K.ilE 38E 25E 23E 63$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith2.c -o $(SRCDIR)arith2.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith2.c -o $(SRCDIR)arith2.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith2.c -o $(SRCDIR)arith2.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith3.c -o $(SRCDIR)arith3.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith3.c -o $(SRCDIR)arith3.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith3.c -o $(SRCDIR)arith3.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith4.c -o $(SRCDIR)arith4.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith4.c -o $(SRCDIR)arith4.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)arith4.c -o $(SRCDIR)arith4.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \D 21	 $(INCDIR)arith.h  $(INCDIR)my.h  $(INCDIR)tos1defs.h \	 $(INCDIR)tosretmacro.h  $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h \	 $(INCDIR)inlinedefs68K.h  $(INCDIR)fastinlinedefs68K.h E 21I 21	 $(INCDIR)arith.h  $(INCDIR)my.h   E 21D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array.c -o $(SRCDIR)array.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array.c -o $(SRCDIR)array.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array.c -o $(SRCDIR)array.o $(SRCDIR)disp68K.ilE 38E 25E 23D 38E 38$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \D 21	 $(INCDIR)arith.h  $(INCDIR)my.h  $(INCDIR)tos1defs.h \	 $(INCDIR)tosretmacro.h  $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h \	 $(INCDIR)inlinedefs68K.h  $(INCDIR)fastinlinedefs68K.h E 21I 21	 $(INCDIR)arith.h  $(INCDIR)my.h   E 21D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array3.c -o $(SRCDIR)array3.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array3.c -o $(SRCDIR)array3.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array3.c -o $(SRCDIR)array3.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \D 21	 $(INCDIR)arith.h  $(INCDIR)my.h  $(INCDIR)tos1defs.h \	 $(INCDIR)tosretmacro.h  $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h \	 $(INCDIR)inlinedefs68K.h  $(INCDIR)fastinlinedefs68K.h E 21I 21	 $(INCDIR)arith.h  $(INCDIR)my.h   E 21D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array5.c -o $(SRCDIR)array5.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array5.c -o $(SRCDIR)array5.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array5.c -o $(SRCDIR)array5.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)atom.c -o $(SRCDIR)atom.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)atom.c -o $(SRCDIR)atom.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)atom.c -o $(SRCDIR)atom.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bin.c -o $(SRCDIR)bin.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bin.c -o $(SRCDIR)bin.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bin.c -o $(SRCDIR)bin.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)binds.c -o $(SRCDIR)binds.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)binds.c -o $(SRCDIR)binds.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)binds.c -o $(SRCDIR)binds.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \D 48	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h E 48I 48D 102	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h E 102I 102	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \	 $(INCDIR)bb.hE 102$(OBJECTDIR)bitbltsub.o :  $(SRCDIR)bitbltsub.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)displaydata.h \	 $(INCDIR)bitblt.hE 48D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bitblt.c -o $(SRCDIR)bitblt.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bitblt.c -o $(SRCDIR)bitblt.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)bitblt.c -o $(SRCDIR)bitblt.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)blt.c -o $(SRCDIR)blt.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)blt.c -o $(SRCDIR)blt.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)blt.c -o $(SRCDIR)blt.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)car-cdr.o :  $(SRCDIR)car-cdr.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)car-cdr.c -o $(SRCDIR)car-cdr.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)car-cdr.c -o $(SRCDIR)car-cdr.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)car-cdr.c -o $(SRCDIR)car-cdr.o $(SRCDIR)disp68K.ilE 38E 25E 23D 63$(OBJECTDIR)checkapply.o :  $(SRCDIR)checkapply.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)checkapply.c -o $(SRCDIR)checkapply.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)checkapply.c -o $(SRCDIR)checkapply.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)checkapply.c -o $(SRCDIR)checkapply.o $(SRCDIR)disp68K.ilE 38E 25E 23E 63$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h  $(INCDIR)lispglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)conspage.c -o $(SRCDIR)conspage.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)conspage.c -o $(SRCDIR)conspage.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)conspage.c -o $(SRCDIR)conspage.o $(SRCDIR)disp68K.ilE 38E 25E 23D 63$(OBJECTDIR)constants.o :  $(SRCDIR)constants.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)constants.c -o $(SRCDIR)constants.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)constants.c -o $(SRCDIR)constants.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)constants.c -o $(SRCDIR)constants.o $(SRCDIR)disp68K.ilE 38E 25E 23E 63$(OBJECTDIR)createcell.o :  $(SRCDIR)createcell.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)createcell.c -o $(SRCDIR)createcell.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)createcell.c -o $(SRCDIR)createcell.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)createcell.c -o $(SRCDIR)createcell.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \	 $(INCDIR)my.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)draw.c -o $(SRCDIR)draw.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)draw.c -o $(SRCDIR)draw.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)draw.c -o $(SRCDIR)draw.o $(SRCDIR)disp68K.ilE 38I 37$(OBJECTDIR)z2.o :  $(SRCDIR)z2.c  \	 $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)gc.h  $(INCDIR)my.hD 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)z2.c -o $(SRCDIR)z2.o $(SRCDIR)disp68K.ilE 38$(OBJECTDIR)eqf.o :  $(SRCDIR)eqf.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)my.hD 44	cc -c -fsingle $(CFLAGS) -I$(INCDIR) $(SRCDIR)eqf.c -o $(SRCDIR)eqf.o $(SRCDIR)disp68K.ilE 44I 44$(OBJECTDIR)fp.o :  $(SRCDIR)fp.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h   \	 $(INCDIR)my.hI 64$(OBJECTDIR)ubf1.o :  $(SRCDIR)ubf1.c  \	 $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \D 74	 $(INCDIR)lisptypes.hE 74I 74	 $(INCDIR)lisptypes.h $(INCDIR)lispmap.h  $(INCDIR)my.hE 74$(OBJECTDIR)ubf2.o :  $(SRCDIR)ubf2.c  \	 $(INCDIR)lispemul.h$(OBJECTDIR)ubf3.o :  $(SRCDIR)ubf3.c  \	 $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.hI 68$(OBJECTDIR)unix-utils.o :  $(SRCDIR)unix-utils.c  \D 109	 $(INCDIR)lisptypes.hE 109I 109	 $(INCDIR)lisptypes.h $(INCDIR)keyboard.hE 109E 68E 64E 44E 37E 25E 23$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)display.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dspsubrs.c -o $(SRCDIR)dspsubrs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dspsubrs.c -o $(SRCDIR)dspsubrs.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dspsubrs.c -o $(SRCDIR)dspsubrs.o $(SRCDIR)disp68K.ilE 38E 25E 23D 63$(OBJECTDIR)equal.o :  $(SRCDIR)equal.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)arith.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)equal.c -o $(SRCDIR)equal.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)equal.c -o $(SRCDIR)equal.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)equal.c -o $(SRCDIR)equal.o $(SRCDIR)disp68K.ilE 38E 25E 23E 63$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)ether.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ether.c -o $(SRCDIR)ether.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ether.c -o $(SRCDIR)ether.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ether.c -o $(SRCDIR)ether.o $(SRCDIR)disp68K.ilE 38E 25E 23D 61$(OBJECTDIR)ethersubrs.o :  $(SRCDIR)ethersubrs.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ethersubrs.c -o $(SRCDIR)ethersubrs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ethersubrs.c -o $(SRCDIR)ethersubrs.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ethersubrs.c -o $(SRCDIR)ethersubrs.o $(SRCDIR)disp68K.ilE 38E 25E 23D 58$(OBJECTDIR)eval.o :  $(SRCDIR)eval.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)initatoms.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address68k.h  $(INCDIR)address.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)cell.h E 58D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)eval.c -o $(SRCDIR)eval.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)eval.c -o $(SRCDIR)eval.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)eval.c -o $(SRCDIR)eval.o $(SRCDIR)disp68K.ilE 38E 25E 23E 61$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)findkey.c -o $(SRCDIR)findkey.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)findkey.c -o $(SRCDIR)findkey.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)findkey.c -o $(SRCDIR)findkey.o $(SRCDIR)disp68K.ilE 38E 25E 23D 16$(OBJECTDIR)fullfs.o :  $(SRCDIR)fullfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \E 16I 16D 34$(OBJECTDIR)new-fullfs.o :  $(SRCDIR)new-fullfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \E 16	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h D 16	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fullfs.c -o $(SRCDIR)fullfs.o $(SRCDIR)disp68K.ilE 16I 16D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-fullfs.c -o $(SRCDIR)new-fullfs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-fullfs.c -o $(SRCDIR)new-fullfs.oE 25I 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-fullfs.c -o $(SRCDIR)new-fullfs.o $(SRCDIR)disp68K.ilE 34I 34$(OBJECTDIR)dsk.o :  $(SRCDIR)dsk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \D 94	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)localfile.h E 94I 94	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h $(INCDIR)localfile.h E 94D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)dsk.c -o $(SRCDIR)dsk.o $(SRCDIR)disp68K.ilE 38E 34E 25E 23E 16I 16$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \D 61	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)filesystem.h E 61I 61D 94	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h $(INCDIR)localfile.hE 94I 94	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h $(INCDIR)stream.h  $(INCDIR)timeout.h $(INCDIR)localfile.hE 94D 94$(OBJECTDIR)directory.o :  $(SRCDIR)directory.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h $(INCDIR)localfile.hE 94I 94$(OBJECTDIR)directory.o :  $(SRCDIR)directory.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h $(INCDIR)timeout.h $(INCDIR)localfile.hE 94E 61D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufs.c -o $(SRCDIR)ufs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufs.c -o $(SRCDIR)ufs.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufs.c -o $(SRCDIR)ufs.o $(SRCDIR)disp68K.ilE 38E 25E 23E 16D 63$(OBJECTDIR)funcall.o :  $(SRCDIR)funcall.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)funcall.c -o $(SRCDIR)funcall.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)funcall.c -o $(SRCDIR)funcall.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)funcall.c -o $(SRCDIR)funcall.o $(SRCDIR)disp68K.ilE 38E 25E 23E 63$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)stack.h  $(INCDIR)emulglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fvar.c -o $(SRCDIR)fvar.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fvar.c -o $(SRCDIR)fvar.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)fvar.c -o $(SRCDIR)fvar.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc.c -o $(SRCDIR)gc.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc.c -o $(SRCDIR)gc.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc.c -o $(SRCDIR)gc.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc2.c -o $(SRCDIR)gc2.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc2.c -o $(SRCDIR)gc2.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gc2.c -o $(SRCDIR)gc2.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gcarraymaker.o :  $(SRCDIR)gcarraymaker.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcarraymaker.c -o $(SRCDIR)gcarraymaker.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcarraymaker.c -o $(SRCDIR)gcarraymaker.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcarraymaker.c -o $(SRCDIR)gcarraymaker.o $(SRCDIR)disp68K.ilE 38E 25E 23D 20$(OBJECTDIR)gcclock.o :  $(SRCDIR)gcclock.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)emulglobal.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lispglobal.h  $(INCDIR)stack.h  $(INCDIR)cell.h \	 $(INCDIR)gc.h  $(INCDIR)arith.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcclock.c -o $(SRCDIR)gcclock.o $(SRCDIR)disp68K.ilE 20$(OBJECTDIR)gcfinalfuncs.o :  $(SRCDIR)gcfinalfuncs.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \	 $(INCDIR)array.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcfinalfuncs.c -o $(SRCDIR)gcfinalfuncs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcfinalfuncs.c -o $(SRCDIR)gcfinalfuncs.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcfinalfuncs.c -o $(SRCDIR)gcfinalfuncs.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gchoverflow.o :  $(SRCDIR)gchoverflow.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchoverflow.c -o $(SRCDIR)gchoverflow.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchoverflow.c -o $(SRCDIR)gchoverflow.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchoverflow.c -o $(SRCDIR)gchoverflow.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchtfind.c -o $(SRCDIR)gchtfind.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchtfind.c -o $(SRCDIR)gchtfind.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gchtfind.c -o $(SRCDIR)gchtfind.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcmain3.c -o $(SRCDIR)gcmain3.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcmain3.c -o $(SRCDIR)gcmain3.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcmain3.c -o $(SRCDIR)gcmain3.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gcreclaim.o :  $(SRCDIR)gcreclaim.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lisptypes.h \	 $(INCDIR)address.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h \	 $(INCDIR)stack.h  $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaim.c -o $(SRCDIR)gcreclaim.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaim.c -o $(SRCDIR)gcreclaim.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaim.c -o $(SRCDIR)gcreclaim.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gcreclaimcell.o :  $(SRCDIR)gcreclaimcell.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)stack.h \	 $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcell.c -o $(SRCDIR)gcreclaimcell.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcell.c -o $(SRCDIR)gcreclaimcell.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcell.c -o $(SRCDIR)gcreclaimcell.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gcreclaimcodeblock.o :  $(SRCDIR)gcreclaimcodeblock.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \	 $(INCDIR)gc.h  $(INCDIR)array.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcodeblock.c -o $(SRCDIR)gcreclaimcodeblock.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcodeblock.c -o $(SRCDIR)gcreclaimcodeblock.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcreclaimcodeblock.c -o $(SRCDIR)gcreclaimcodeblock.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)gc.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcscan.c -o $(SRCDIR)gcscan.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcscan.c -o $(SRCDIR)gcscan.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gcscan.c -o $(SRCDIR)gcscan.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)emulglobal.h I 43$(OBJECTDIR)hardreturn.o :  $(SRCDIR)hardreturn.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \D 47	 $(INCDIR)cell.h $(INCDIR)stack.h  $(INCDIR)emulglobal.h E 47I 47	 $(INCDIR)cell.h $(INCDIR)stack.h  $(INCDIR)return.h $(INCDIR)emulglobal.h E 47E 43D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gvar2.c -o $(SRCDIR)gvar2.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gvar2.c -o $(SRCDIR)gvar2.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)gvar2.c -o $(SRCDIR)gvar2.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)initdisplay.o :  $(SRCDIR)initdisplay.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)display.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initdisplay.c -o $(SRCDIR)initdisplay.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initdisplay.c -o $(SRCDIR)initdisplay.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initdisplay.c -o $(SRCDIR)initdisplay.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)initkeyboard.o :  $(SRCDIR)initkeyboard.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \	 $(INCDIR)ifpage.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initkeyboard.c -o $(SRCDIR)initkeyboard.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initkeyboard.c -o $(SRCDIR)initkeyboard.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initkeyboard.c -o $(SRCDIR)initkeyboard.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)initsysout.o :  $(SRCDIR)initsysout.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \	 $(INCDIR)systematoms.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initsysout.c -o $(SRCDIR)initsysout.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initsysout.c -o $(SRCDIR)initsysout.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)initsysout.c -o $(SRCDIR)initsysout.o $(SRCDIR)disp68K.ilE 38E 25E 23D 59$(OBJECTDIR)jump.o :  $(SRCDIR)jump.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)jump.c -o $(SRCDIR)jump.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)jump.c -o $(SRCDIR)jump.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)jump.c -o $(SRCDIR)jump.o $(SRCDIR)disp68K.ilE 38E 25E 23E 59$(OBJECTDIR)keyboardsubrs.o :  $(SRCDIR)keyboardsubrs.c $(INCDIR)lispemul.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyboardsubrs.c -o $(SRCDIR)keyboardsubrs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyboardsubrs.c -o $(SRCDIR)keyboardsubrs.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyboardsubrs.c -o $(SRCDIR)keyboardsubrs.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \D 109	 $(INCDIR)ifpage.h E 109I 109	 $(INCDIR)ifpage.h $(INCDIR)keyboard.hE 109D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyevent.c -o $(SRCDIR)keyevent.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyevent.c -o $(SRCDIR)keyevent.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)keyevent.c -o $(SRCDIR)keyevent.o $(SRCDIR)disp68K.ilE 38E 25E 23I 55$(OBJECTDIR)keylib.o :  $(SRCDIR)keylib.c$(OBJECTDIR)keytester.o :  $(SRCDIR)keytester.cE 55$(OBJECTDIR)listhandle.o :  $(SRCDIR)listhandle.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)listhandle.c -o $(SRCDIR)listhandle.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)listhandle.c -o $(SRCDIR)listhandle.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)listhandle.c -o $(SRCDIR)listhandle.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \	 $(INCDIR)address.h  $(INCDIR)lisptypes.h  $(INCDIR)initatoms.h \	 $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)stack.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)llstk.c -o $(SRCDIR)llstk.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)llstk.c -o $(SRCDIR)llstk.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)llstk.c -o $(SRCDIR)llstk.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loader.c -o $(SRCDIR)loader.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loader.c -o $(SRCDIR)loader.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loader.c -o $(SRCDIR)loader.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)loadsysout.o :  $(SRCDIR)loadsysout.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout.c -o $(SRCDIR)loadsysout.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout.c -o $(SRCDIR)loadsysout.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout.c -o $(SRCDIR)loadsysout.o $(SRCDIR)disp68K.ilE 38E 25E 23D 23$(OBJECTDIR)loadsysout8M.o :  $(SRCDIR)loadsysout8M.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h 	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)loadsysout8M.c -o $(SRCDIR)loadsysout8M.o $(SRCDIR)disp68K.ilE 23$(OBJECTDIR)lowlevel1.o :  $(SRCDIR)lowlevel1.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel1.c -o $(SRCDIR)lowlevel1.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel1.c -o $(SRCDIR)lowlevel1.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel1.c -o $(SRCDIR)lowlevel1.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)lowlevel2.o :  $(SRCDIR)lowlevel2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel2.c -o $(SRCDIR)lowlevel2.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel2.c -o $(SRCDIR)lowlevel2.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)lowlevel2.c -o $(SRCDIR)lowlevel2.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)newmakeatom.o :  $(SRCDIR)newmakeatom.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lisptypes.h \	 $(INCDIR)lispmap.h  $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)newmakeatom.c -o $(SRCDIR)newmakeatom.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)newmakeatom.c -o $(SRCDIR)newmakeatom.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)newmakeatom.c -o $(SRCDIR)newmakeatom.o $(SRCDIR)disp68K.ilE 38E 25E 23D 63$(OBJECTDIR)pushpop.o :  $(SRCDIR)pushpop.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)emulglobal.h I 42E 63$(OBJECTDIR)osmessage.o :  $(SRCDIR)osmessage.c $(INCDIR)lispemul.h \	 $(INCDIR)address68k.h  $(INCDIR)stream.h  $(INCDIR)arith.h \	 $(INCDIR)lispmap.h $(INCDIR)lisptypes.hD 55	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)osmessage.c -o $(OBJECTDIR)osmessage.o $(SRCDIR)disp68K.ilE 55I 55D 66##	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)osmessage.c -o $(OBJECTDIR)osmessage.o $(SRCDIR)disp68K.ilE 66E 55E 42D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)pushpop.c -o $(SRCDIR)pushpop.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)pushpop.c -o $(SRCDIR)pushpop.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)pushpop.c -o $(SRCDIR)pushpop.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \D 47	 $(INCDIR)cell.h E 47I 47	 $(INCDIR)return.h $(INCDIR)cell.h E 47D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)return.c -o $(SRCDIR)return.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)return.c -o $(SRCDIR)return.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)return.c -o $(SRCDIR)return.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)gc.h  $(INCDIR)cell.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rplcons.c -o $(SRCDIR)rplcons.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rplcons.c -o $(SRCDIR)rplcons.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rplcons.c -o $(SRCDIR)rplcons.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rs232c.c -o $(SRCDIR)rs232c.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rs232c.c -o $(SRCDIR)rs232c.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rs232c.c -o $(SRCDIR)rs232c.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h \	 $(INCDIR)arith.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)shift.c -o $(SRCDIR)shift.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)shift.c -o $(SRCDIR)shift.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)shift.c -o $(SRCDIR)shift.o $(SRCDIR)disp68K.ilE 38E 25E 23D 34D 16$(OBJECTDIR)smallfs.o :  $(SRCDIR)smallfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \E 16I 16$(OBJECTDIR)new-smallfs.o :  $(SRCDIR)new-smallfs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)address68k.h \E 16	 $(INCDIR)lisptypes.h  $(INCDIR)arith.h  $(INCDIR)stream.h \	 $(INCDIR)filesystem.h D 16	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)smallfs.c -o $(SRCDIR)smallfs.o $(SRCDIR)disp68K.ilE 16I 16D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-smallfs.c -o $(SRCDIR)new-smallfs.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-smallfs.c -o $(SRCDIR)new-smallfs.oE 25I 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)new-smallfs.c -o $(SRCDIR)new-smallfs.o $(SRCDIR)disp68K.ilE 34E 25E 23E 16D 60$(OBJECTDIR)stack.o :  $(SRCDIR)stack.c $(INCDIR)lispemul.h  $(INCDIR)stack.h  $(INCDIR)lispmap.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h E 60D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)stack.c -o $(SRCDIR)stack.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)stack.c -o $(SRCDIR)stack.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)stack.c -o $(SRCDIR)stack.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)machineconfig.h  $(INCDIR)lispemul.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)lisptypes.h \	 $(INCDIR)ifpage.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)storage.c -o $(SRCDIR)storage.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)storage.c -o $(SRCDIR)storage.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)storage.c -o $(SRCDIR)storage.o $(SRCDIR)disp68K.ilE 38E 25E 23D 24$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \E 24I 24$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h $(INCDIR)subrs.h \E 24	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \D 108	 $(INCDIR)arith.h E 108I 108	 $(INCDIR)arith.h $(INCDIR)profile.hE 108D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr.c -o $(SRCDIR)subr.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr.c -o $(SRCDIR)subr.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr.c -o $(SRCDIR)subr.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)address68k.h  $(INCDIR)lispglobal.h I 45$(OBJECTDIR)systemcallmessage.o :  $(SRCDIR)systemcallmessage.c E 45D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr0374.c -o $(SRCDIR)subr0374.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr0374.c -o $(SRCDIR)subr0374.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)subr0374.c -o $(SRCDIR)subr0374.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h \	 $(INCDIR)address68k.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)timer.c -o $(SRCDIR)timer.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)timer.c -o $(SRCDIR)timer.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)timer.c -o $(SRCDIR)timer.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)tty.c -o $(SRCDIR)tty.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)tty.c -o $(SRCDIR)tty.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)tty.c -o $(SRCDIR)tty.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  $(INCDIR)lisptypes.h  $(INCDIR)cell.h \	 $(INCDIR)lispmap.h I 65$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h E 65D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)typeof.c -o $(SRCDIR)typeof.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)typeof.c -o $(SRCDIR)typeof.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)typeof.c -o $(SRCDIR)typeof.o $(SRCDIR)disp68K.ilE 38E 25E 23D 63$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h  $(INCDIR)initatoms.h \	 $(INCDIR)cell.h E 63D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufn.c -o $(SRCDIR)ufn.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufn.c -o $(SRCDIR)ufn.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)ufn.c -o $(SRCDIR)ufn.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.hI 41$(OBJECTDIR)uraid.o :  $(SRCDIR)uraid.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)debug.hE 41D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unixcomm.c -o $(SRCDIR)unixcomm.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unixcomm.c -o $(SRCDIR)unixcomm.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unixcomm.c -o $(SRCDIR)unixcomm.o $(SRCDIR)disp68K.ilE 38I 30$(OBJECTDIR)rpc.o :  $(SRCDIR)rpc.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emulglobal.h \	 $(INCDIR)lispglobal.h  $(INCDIR)cell.h  $(INCDIR)stack.h \	 $(INCDIR)arith.hD 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)rpc.c -o $(SRCDIR)rpc.o $(SRCDIR)disp68K.ilE 38E 30E 25E 23$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  $(INCDIR)address.h  $(INCDIR)address68k.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \	 $(INCDIR)emulglobal.h  $(INCDIR)lispglobal.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unwind.c -o $(SRCDIR)unwind.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unwind.c -o $(SRCDIR)unwind.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)unwind.c -o $(SRCDIR)unwind.o $(SRCDIR)disp68K.ilE 38E 25E 23D 57$(OBJECTDIR)vars.o :  $(SRCDIR)vars.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars.c -o $(SRCDIR)vars.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars.c -o $(SRCDIR)vars.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars.c -o $(SRCDIR)vars.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)vars2.o :  $(SRCDIR)vars2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)emulglobal.h \	 $(INCDIR)stack.h E 57D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars2.c -o $(SRCDIR)vars2.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars2.c -o $(SRCDIR)vars2.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars2.c -o $(SRCDIR)vars2.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)lispmap.h \	 $(INCDIR)address68k.h  $(INCDIR)emulglobal.h  $(INCDIR)cell.h \	 $(INCDIR)lisptypes.h  $(INCDIR)stack.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars3.c -o $(SRCDIR)vars3.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars3.c -o $(SRCDIR)vars3.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vars3.c -o $(SRCDIR)vars3.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  $(INCDIR)lispglobal.h \	 $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vmemsave.c -o $(SRCDIR)vmemsave.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vmemsave.c -o $(SRCDIR)vmemsave.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)vmemsave.c -o $(SRCDIR)vmemsave.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)xc.o :  $(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \D 91	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  $(INCDIR)arith.h \E 91I 91	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h \E 91D 31	 $(INCDIR)opcodefunc.h  $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \E 31I 31	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \E 31D 21	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)ni_inlinedefsC.h  $(INCDIR)op_inlinedefsC.h \E 21I 21	 $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h   \E 21	 $(INCDIR)n_op_inlinedefsC.h  $(INCDIR)inlinedefs68K.h  $(INCDIR)dummy_entries.h \D 33	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h \	 $(INCDIR)donsops.h E 33I 33D 88	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h E 88I 88	 $(INCDIR)inlinedefsSPARC.h  $(INCDIR)fast_dispatch.h  $(INCDIR)fastinlinedefs68K.h $(INCDIR)profile.hE 88E 33D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.o $(SRCDIR)disp68K.ilE 25I 25D 31	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.o $(SRCDIR)disp68K.il $(SRCDIR)disp68K.ilE 31I 31D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.o $(SRCDIR)disp68K.ilE 38E 31E 25$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \D 21	 $(INCDIR)arith.h  $(INCDIR)my.h  $(INCDIR)tos1defs.h \	 $(INCDIR)tosretmacro.h  $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h \	 $(INCDIR)inlinedefs68K.h  $(INCDIR)fastinlinedefs68K.h E 21I 21	 $(INCDIR)arith.h  $(INCDIR)my.h   E 21D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array2.c -o $(SRCDIR)array2.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array2.c -o $(SRCDIR)array2.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array2.c -o $(SRCDIR)array2.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \D 21	 $(INCDIR)arith.h  $(INCDIR)my.h  $(INCDIR)tos1defs.h \	 $(INCDIR)tosretmacro.h  $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h \	 $(INCDIR)inlinedefs68K.h  $(INCDIR)fastinlinedefs68K.h E 21I 21	 $(INCDIR)arith.h  $(INCDIR)my.h   E 21D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array4.c -o $(SRCDIR)array4.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array4.c -o $(SRCDIR)array4.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array4.c -o $(SRCDIR)array4.o $(SRCDIR)disp68K.ilE 38E 25E 23$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  $(INCDIR)lispglobal.h  $(INCDIR)address68k.h \	 $(INCDIR)lispmap.h  $(INCDIR)lisptypes.h  $(INCDIR)emulglobal.h \D 21	 $(INCDIR)arith.h  $(INCDIR)my.h  $(INCDIR)tos1defs.h \	 $(INCDIR)tosretmacro.h  $(INCDIR)tosfuncallmacro.h  $(INCDIR)inlinedefsC.h \	 $(INCDIR)inlinedefs68K.h  $(INCDIR)fastinlinedefs68K.h E 21I 21	 $(INCDIR)arith.h  $(INCDIR)my.h   I 104$(OBJECTDIR)usersubrs.o : $(SRCDIR)usersubrs.c    E 104I 49################################################################################D 80# Installation targetsE 80I 80# Installation targets - copyprotect is ON hereE 80D 82# For now, assume:D 55#	1. other files on release directories are permanent#	2. link medley.sysout; should copy lisp.sysoutE 55I 55#	1. usersubrs.c on release directories are permanent#	2. library, fonts on release directories are permanentE 82I 82# library, sysouts, fonts on release directories not handled here.I 83# userfiles are separate target explicitly (can make w/o building lde)I 106#    $(NATDIR)nativeincludes.h $(NATDIR)disp68K.ilE 106E 83E 82D 62#	3. link medley.sysout; should copy lisp.sysoutE 62E 55################################################################################D 80LIBFILES = $(OFILES) $(TESTFILES) $(MAINFILES) $(DEVICES) $(GCFILES)E 80D 55release : $(INSDIR)lisp.a $(INSDIR)medley.sysoutE 55I 55D 62release : $(INSDIR)lisp.a $(INSDIR)makefile $(INSDIR)medley.sysoutE 62I 62D 67release : $(INSDIR)lisp.a $(INSDIR)makefileE 67I 67D 71release : $(INSDIR)lisp.a $(INSDIR)makefile $(INSDIR)startlisp.cE 71I 71D 72release : $(INSDIR)lisp.o $(INSDIR)makefile $(INSDIR)startlisp.cE 72I 72D 76release : $(INSDIR)lisp.o $(INSDIR)makefile $(INSDIR)startlisp.c $(INSDIR)nativeincludes.h $(INSDIR)disp68K.ilE 76I 76D 81release : $(INSDIR)lisp.o $(INSDIR)makefile $(INSDIR)ldeether.c $(INSDIR)nativeincludes.h $(INSDIR)disp68K.ilE 81I 81D 82release : $(INSDIR)lisp.o $(INSDIR)makefile $(INSDIR)ldeether.c $(NATDIR)nativeincludes.h $(NATDIR)disp68K.ilE 82I 82D 83release : $(INSDIR)lde.o $(INSDIR)usersubrs.c $(INSDIR)makefile $(INSDIR)ldeether.c $(NATDIR)nativeincludes.h $(NATDIR)disp68K.ilE 83I 83D 95release : $(INSDIR)lde.o userfiles E 95I 95D 98release : $(INSDIR)lde.o userfiles $(INSDIR)lde $(INSDIR)ldeetherE 98I 98D 99release : $(INSDIR)lde.o userfiles $(INSDIR)ldeE 99I 99release : $(INSDIR)lde.o userfiles $(INSDIR)lde $(INSDIR)ldeetherE 99E 98E 95D 106userfiles : $(INSDIR)usersubrs.c $(INSDIR)makefile $(INSDIR)ldeether.c $(NATDIR)nativeincludes.h $(NATDIR)disp68K.ilE 106I 106userfiles : $(INSDIR)usersubrs.c $(INSDIR)makefile $(INSDIR)ldeether.cE 106E 83E 82E 81E 76E 72E 71E 67E 62E 55D 71$(INSDIR)lisp.a :              $(LIBFILES)E 71I 71D 82$(OBJECTDIR)lisp.a :              $(LIBFILES)E 71I 69	rm -f lisp.aE 69D 71	ar rcv $(INSDIR)lisp.a $(LIBFILES)	ranlib $(INSDIR)lisp.aE 71I 71	ar rcv $(OBJECTDIR)lisp.a $(LIBFILES)	ranlib $(OBJECTDIR)lisp.aE 82I 82D 92$(OBJECTDIR)lde.a :              $(LIBFILES)E 92I 92$(OBJECTDIR)lde.a :              $(LIBFILES) $(BINDIR)makevdate	$(BINDIR)makevdate	cc -c $(VFILE)E 92	rm -f lde.aD 92	ar rcv $(OBJECTDIR)lde.a $(LIBFILES)E 92I 92	ar rcv $(OBJECTDIR)lde.a $(LIBFILES) vdate.oE 92	ranlib $(OBJECTDIR)lde.aI 92	rm -f vdate.oE 92E 82D 80$(INSDIR)lisp.o :              $(OBJECTDIR)lisp.aE 80I 80D 82$(INSDIR)lisp.o :                         $(OBJECTDIR)lisp.aE 80	ld -o $(INSDIR)lisp.o -r -u _main $(OBJECTDIR)lisp.aE 82I 82$(INSDIR)lde.o :                         $(OBJECTDIR)lde.a	ld -o $(INSDIR)lde.o -r -u _main $(OBJECTDIR)lde.aI 95$(INSDIR)lde : $(INSDIR)lde.o $(INSDIR)usersubrs.o	cc $(INSDIR)lde.o $(INSDIR)usersubrs.o -f68881 -lsuntool -lsunwindow -lpixrect -lc -o $(INSDIR)lde	rm -f $(INSDIR)usersubrs.oI 98## ldeether from release - can't tar off with root permission.E 98D 96$(BINDIR)ldeether :  $(INSDIR)ldeether.cE 96I 96$(INSDIR)ldeether :  $(INSDIR)ldeether.cE 96	cc $(CFLAGS) $(INSDIR)ldeether.c -o $(INSDIR)ldeetherD 100	rsh python "/users/maiko/bin/suid $(INSDIR)/ldeether"E 100I 100D 101	rsh python "/users/maiko/bin/suid $(INSDIR)ldeether"E 101I 101	rsh python "cd `pwd`; /users/maiko/bin/suid $(INSDIR)ldeether"E 101E 100E 95E 82E 71I 55D 62$(INSDIR)makefile : $(SRCDIR)usermakefileE 62I 62$(INSDIR)makefile : $(BINDIR)usermakefileE 62	rm -f $(INSDIR)makefileD 62	ln $(SRCDIR)usermakefile $(INSDIR)makefileE 55$(INSDIR)medley.sysout :	ln $(BINDIR)medley4.sysout $(INSDIR)medley.sysout	E 62I 62	ln $(BINDIR)usermakefile $(INSDIR)makefileI 82$(INSDIR)usersubrs.c : $(SRCDIR)usersubrs.cI 84	rm -f $(INSDIR)usersubrs.cE 84	ln $(SRCDIR)usersubrs.c $(INSDIR)usersubrs.cE 82I 67D 76$(INSDIR)startlisp.c : $(SRCDIR)startlisp.c	ln $(SRCDIR)startlisp.c $(INSDIR)startlisp.cE 76I 76$(INSDIR)ldeether.c : $(SRCDIR)ldeether.cI 84	rm -f $(INSDIR)ldeether.cE 84	ln $(SRCDIR)ldeether.c $(INSDIR)ldeether.cE 76I 72D 81$(INSDIR)nativeincludes.h : $(INCDIR)nativeincludes.h	ln $(INCDIR)nativeincludes.c $(INSDIR)nativeincludes.cE 81I 81$(NATDIR)nativeincludes.h : $(INCDIR)nativeincludes.hI 84	rm -f $(NATDIR)nativeincludes.hE 84	ln $(INCDIR)nativeincludes.h $(NATDIR)nativeincludes.hE 81D 81$(INSDIR)disp68K.il : $(SRCDIR)disp68K.il	ln $(SRCDIR)disp68K.il $(INSDIR)disp68K.ilE 81I 81$(NATDIR)disp68K.il : $(SRCDIR)disp68K.ilI 84	rm -f $(NATDIR)disp68K.ilE 84	ln $(SRCDIR)disp68K.il $(NATDIR)disp68K.ilE 81E 72E 67E 62################################################################################# Miscellaneous targets#	 .c.s. should always have -O################################################################################E 49E 21D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array6.c -o $(SRCDIR)array6.o $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array6.c -o $(SRCDIR)array6.oE 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)array6.c -o $(SRCDIR)array6.o $(SRCDIR)disp68K.ilE 38E 25E 23E 14cleanup :D 93	rm  $(OFILES) $(TESTFILES) $(DEVICES) $(GCFILES) $(MAINFILES)E 93I 93D 107	rm  $(LIBFILES) $(KEYOFF)E 107I 107	rm  $(LIBFILES) $(EXTFILES) $(KEYOFF)E 107E 93I 26D 29.c.o:	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.il.c.s:	cc -S -O $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilI 28E 28E 29E 26I 14.c.o:D 23	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilE 23I 23D 25	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@E 25I 25D 38	cc -c $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilE 38I 38D 40	cc $(RFLAGS) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilE 40I 40	cc $(RFLAGS) $*.c -o $@ $(SRCDIR)disp68K.ilE 40E 38E 25E 23I 22.c.s:	cc -S $(CFLAGS) -I$(INCDIR) $(SRCDIR)$*.c -o $(SRCDIR)$@ $(SRCDIR)disp68K.ilI 66keymaker : ../src/keymaker.c ../src/keylib.o	cc $(CFLAGS) -I$(INCDIR) ../src/keymaker.c ../src/keylib.o -o keymakerE 66E 22I 32D 59cref :E 59I 59cxref :E 59	cxref -c  $(DFLAGS) -I$(INCDIR) $(SRCDIR)*.c -o ../all.cxrefE 32E 14E 1