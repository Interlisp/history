h14345s 00005/00005/00088d D 1.3 93/03/25 12:08:29 sybalsky 3 2c bigvm changeses 00034/00031/00059d D 1.2 92/07/24 10:42:06 sybalsky 2 1c retrofit of SGI & DEC OSF1 changes \nes 00090/00000/00000d D 1.1 92/04/23 15:47:08 sybalsky 1 0c date and time created 92/04/23 15:47:08 by sybalskyeuUf e 0tTI 1###************************************************************************/#*									*/#*	(C) Copyright 1991 Venue. All Rights Reserved.			*/#*	Manufactured in the United States of America.			*/#*									*/#*	The contents of this file are proprietary information 		*/#*	belonging to Venue, and are provided to you under license.	*/#*	They may not be further distributed or disclosed to third	*/#*	parties without the specific permission of Venue.		*/#*									*/#************************************************************************/# Options for SGI Indigo under IRIX operating system, X windows.I 2E 2XFILES = $(OBJECTDIR)XClose.o \	$(OBJECTDIR)Cursor.o \	$(OBJECTDIR)XWindow.o \	$(OBJECTDIR)DoRing.o \	$(OBJECTDIR)DoScroll.o \	$(OBJECTDIR)XEvent.o \	$(OBJECTDIR)XGravity.o \	$(OBJECTDIR)XInit.o \D 2	$(OBJECTDIR)InitXevent.o \	$(OBJECTDIR)XKbdMouse.o \	$(OBJECTDIR)LispWindow.o \        $(OBJECTDIR)LispXbitblt.o \	$(OBJECTDIR)XKeyboard.o \	$(OBJECTDIR)MakeXicon.o \	$(OBJECTDIR)OpenDisplay.o \	$(OBJECTDIR)ReadXoption.o \	$(OBJECTDIR)XReconfig.o \E 2I 2	$(OBJECTDIR)Xevinit.o \	$(OBJECTDIR)Xkbdmus.o \	$(OBJECTDIR)Xlspwin.o \        $(OBJECTDIR)Xbbt.o \	$(OBJECTDIR)Xkbd.o \	$(OBJECTDIR)Xmkicon.o \	$(OBJECTDIR)Xopendsp.o \	$(OBJECTDIR)Xrdopt.o \	$(OBJECTDIR)Xreconf.o \E 2	$(OBJECTDIR)XScroll.o \D 2	$(OBJECTDIR)Scrollbar.o \E 2I 2	$(OBJECTDIR)Xscrolb.o \E 2	$(OBJECTDIR)XCursor.o \	$(OBJECTDIR)XMouse.o \D 2	$(OBJECTDIR)Subwindows.o \	$(OBJECTDIR)VideoColor.o \	$(OBJECTDIR)XWindowMgr.o  E 2I 2	$(OBJECTDIR)Xsubwin.o \	$(OBJECTDIR)Xcolor.o \	$(OBJECTDIR)Xwinman.o  E 2XVERSION = XV11R4XFLAGS = -DXWINDOW -D$(XVERSION)# This is to make the %$#@! Apollo cc happyOEXT = .oD 3# OPTFLAGS is normally -O OPTFLAGS =  -O2 -Olimit 1600DISPOPTFLAGS =  -O2 -Olimit 1600E 3I 3# OPTFLAGS is normally -O2 -Olimit 1600 OPTFLAGS = -g # -O2 -Olimit 1600DISPOPTFLAGS = -g #  -O2 -Olimit 1600E 3FPFLAGS =DFLAGS = -DFSERROR -DNEW_STORAGE -DAIX -DFORKCOMM -DLOGINT $(XFLAGS)\	-D_IEEE -DINDIGO -DSYSVONLY -DNOETHER -DNOPIXRECT -DSYSVSIGNALS -DNOFORN \D 3	-DNOASM -DBIGATOMS E 3I 3	-DNOASM -DBIGATOMS -DBIGVM -DNEWCDRCODINGE 3LDFLAGS = -L/usr/lib/X11R4 -L/d/scsistr2/guest/gcc2 -lX11 -lm LDELDFLAGS = $(LDFLAGS)# -Dsparc?D 3CC = cc -cckrE 3I 3CC = ccE 3I 2RANLIB = touchMAIN = mainE 2INLINE = BITBLTFILE = D 2BYTESWAPFILES = $(OBJECTDIR)byteswapfns.oE 2I 2BYTESWAPFILES = $(OBJECTDIR)byteswap.oE 2OBJECTDIR = ../$(RELEASENAME)/default	: ../$(OSARCHNAME)/lde ../$(OSARCHNAME)/ldeether# Special rules to create xc.c on HP/Apollo Series 700 or 800#run cpp to expand macrosD 2$(SRCDIR)xc.i:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \E 2I 2$(OBJECTDIR)xc.o:	$(SRCDIR)xc.c $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \E 2	 $(INCDIR)arith.h $(INCDIR)stream.h \D 2	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.h	$(CC) -E $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(SRCDIR)xc.iE 2I 2	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inln68k.h	$(CC) -c $(DISPOPTFLAGS) $(DFLAGS) -I$(INCDIR) $(SRCDIR)xc.c -o $(OBJECTDIR)xc.oE 2D 2$(OBJECTDIR)xc.o:	$(SRCDIR)xc.i $(INCDIR)lispemul.h  $(INCDIR)emulglobal.h  $(INCDIR)address.h \	 $(INCDIR)address68k.h  $(INCDIR)stack.h  $(INCDIR)lispglobal.h \	 $(INCDIR)lisptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \	 $(INCDIR)initatoms.h  $(INCDIR)gc.h  \	 $(INCDIR)arith.h $(INCDIR)stream.h \	 $(INCDIR)tos1defs.h  $(INCDIR)tosretmacro.h \	 $(INCDIR)tosfuncall.h  $(INCDIR)inlineC.h   \	 $(INCDIR)inline68K.h	$(CC) -c $(DISPOPTFLAGS) $(SRCDIR)xc.i -o $(OBJECTDIR)xc.oE 2I 2#$(OBJECTDIR)xc.o:	$(SRCDIR)xc.i $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \#	 $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \#	 $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \#	 $(INCDIR)initatms.h  $(INCDIR)gc.h  \#	 $(INCDIR)arith.h $(INCDIR)stream.h \#	 $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \#	 $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   \#	 $(INCDIR)inln68k.h#	$(CC) -c $(DISPOPTFLAGS) $(SRCDIR)xc.i -o $(OBJECTDIR)xc.oE 2E 1