#! /bin/sh #The default selectionsQUARTP=xSPARCEMLTRP=xROOMSP=x#The module sizes in MBMLY2DMOSIZ=0.0MLY2DVLSIZ=0.0MLY2RNSIZ=7.48ROOMSSIZ=1.3LOOPSSIZ=6.8LISPUSERSSIZ=18.7NCDMOSIZ=17.44NCRNSIZ=28.14NCDVLSIZ=33.44SUN3EMLTRSIZ=3.0SPARCEMLTRSIZ=3.0HPEMLTRSIZ=3.0IBMEMLTRSIZ=3.0#The uncompressed module sizes in MBUCMLY2DMOSIZ=0.0UCMLY2DVLSIZ=0.0UCMLY2RNSIZ=7.48UCROOMSSIZ=1.3UCLOOPSSIZ=6.8UCLISPUSERSSIZ=18.7UCNCDMOSIZ=17.44UCNCRNSIZ=28.14UCNCDVLSIZ=33.44UCSUN3EMLTRSIZ=2.0UCSPARCEMLTRSIZ=2.0UCHPEMLTRSIZ=2.0UCIBMEMLTRSIZ=2.0#The compressed module sizes in MBCCMLY2DMOSIZ=1.0CCMLY2DVLSIZ=1.0CCMLY2RNSIZ=1.0CCROOMSSIZ=1.0CCLOOPSSIZ=1.0CCLISPUSERSSIZ=1.0CCNCDMOSIZ=1.0CCNCRNSIZ=1.0CCNCDVLSIZ=1.0CCSUN3EMLTRSIZ=1.0CCSPARCEMLTRSIZ=1.0CCHPEMLTRSIZ=1.0CCIBMEMLTRSIZ=1.0#The media sizes in MBDISKSIZ=1.44QUARTSIZ=45.0EIGHTSIZ=2000.0exitScript () {	echo "$scriptName: $1"	exit} # exitScriptscriptMessage () {	MESSAGE="************************** $1 ***************************$2 ************************************************************"} # scriptMessageask(){# Ask a question=$1 and use default=$2 if no answer is given. If arg $3# is specified, it will be considered the opposite of $2. Return 0 if# default is used, 1 otherwise. 'answer' can be used as a global variable        echo -n "$1 ${2:+[$2]}: "	answer=`/bin/line`	if [ $# -gt 2 ]	then	until [ "$answer" = "" -o "$answer" = "$2" -o "$answer" = "$3" ];	        do	echo "Please type '$2' or '$3'."		        echo -n "$1 $2: "		        answer=`/bin/line`	        done	fi# Note the "-" in the argument below. test will not behave well with some # of the shell escape characters otherwise.        [ "-${answer:=$2}" = "-$2" ]} # askmenuInstructions () {	echo "<--------------------> Menu Instructions <--------------------> - Only options marked with an 'x' will be installed. - To select additional options, at the prompt enter at least as   many characters as needed to make the selection unique, e.g.,   'LO' for LOOPS. To select all options, enter 'All'. - To deselect an option already marked with an 'x', at the prompt   enter at least as many characters as needed to make the    selection unique. To deselect all options, enter 'None'.  "	ask "Continue?" "y"} # menuInstructionswelcome() {	/usr/ucb/clear	echo "<----------> Welcome to the Medley tape maker <---------->Recommended options are initially filled in, but you can change them at any time using the Installation Options Menu."	menuInstructions} # welcomeshowInstallMenu () {# Will do different calculations depending on $1. If no argument is # given, it will only redisplay the Installation Options Menu.	/usr/ucb/clearTOTALSIZ=`echo  ${SUN3EMLTRP:+"$SUN3EMLTRSIZ +"}\		${SPARCEMLTRP:+"$SPARCEMLTRSIZ +"}\		${HPEMLTRP:+"$HPEMLTRSIZ +"}\		${IBMEMLTRP:+"$IBMEMLTRSIZ +"}\		${MLY2RNP:+"$MLY2RNSIZ +"}\		${MLY2DVLP:+"$MLY2DVLSIZ +"}\		${MLY2DMOP:+"$MLY2DMOSIZ +"}\		${ROOMSP:+"$ROOMSSIZ +"}\		${LOOPSP:+"$LOOPSSIZ +"}\		${LISPUSERSP:+"$LISPUSERSSIZ +"}\		${NCRNP:+"$NCRNSIZ +"}\		${NCDVLP:+"$NCDVLSIZ +"}\		${NCDMOP:+"$NCDMOSIZ +"} "0" | /bin/bc`	echo "------------------------ Media -------------------------Select one of the following media types:  [${QUARTP:- }]  tape (1/4 inch)  [${DISKP:- }]  disk (3.5 inch)  [${EIGHTP:- }]  small tape (8mm)-------------------------- Compress ---------------------------  [${COMPRESSP:- }]  Compress files------------------------ Architecture -------------------------  [${SUN3EMLTRP:- }]   Sun3                     ( $SUN3EMLTRSIZ MB)  [${SPARCEMLTRP:- }]   Sparc                    ( $SPARCEMLTRSIZ MB)  [${HP9000EMLTRP:- }]   HP9000/700               ( $HPEMLTRSIZ MB)  [${IBM6000EMLTRP:- }]   IBM RS6000               ( $IBMEMLTRSIZ MB)----------------------- Tape contents -------------------------  [${MLY2RNP:- }]   Medley 2.0 runtime        ( $MLY2RNSIZ MB)  [${MLY2DVLP:- }]   Medley 2.0 devel         ( $MLY2DVLSIZ MB)  [${MLY2DMOP:- }]   Medley 2.0 demo          ( $MLY2DMOSIZ MB)  [${ROOMSP:- }]   Rooms                    ( $ROOMSSIZ MB)  [${LOOPSP:- }]   Loops                    ( $LOOPSSIZ MB)  [${LISPUSERSP:- }]   LispUsers                ($LISPUSERSSIZ MB)  [${NCRNP:- }]   NoteCards runtime        ($NCRNSIZ MB)  [${NCDVLP:- }]   NoteCards devel          ($NCDVLSIZ MB)  [${NCDMOP:- }]   NoteCards demo           ($NCDMOSIZ MB)        _____________________________________________                     Total size: ${TOTALSIZ:-  0}                     Media size: ${QUARTP:+$QUARTSIZ}${DISKP:+$DISKSIZ}${EIGHTP:+$EIGHTSIZ}---------------------------- Misc. ----------------------------     !<Unix command> - Execute a Unix command.     ? or Help - Show menu instructions.     Redraw - Redisplay this menu.     All - Mark all options.     None - Unmark all options.     Make distribution     Quit.${MESSAGE}"} # showInstallMenugetInstallOptions() {# General menu for selecting what to install	showInstallMenu required available	menuloop=notdone	while [ "$menuloop" = notdone ]	do	ask "Select" "Make distribution"		unset MESSAGE		case "$answer" in		[tT]*)	if [ "$QUARTP" != "x" ]			then QUARTP=x			fi			unset DISKP			unset EIGHTP			showInstallMenu required ;;		[dD][iI]*)			if [ "$DISKP" != "x" ]			then DISKP=x			fi			unset QUARTP			unset EIGHTP			showInstallMenu required ;;		[sS][mM]*)			if [ "$EIGHTP" != "x" ]			then EIGHTP=x			fi			unset QUARTP			unset DISKP			showInstallMenu required ;;		[cC][oO][mM]*)			if [ "$COMPRESSP" != "x" ]			then	COMPRESSP=x				SUN3EMLTRSIZ="$CCSUN3EMLTRSIZ"				SPARCEMLTRSIZ="$CCSPARCEMLTRSIZ"				HPEMLTRSIZ="$CCHPEMLTRSIZ"				IBMEMLTRSIZ="$CCIBMEMLTRSIZ"				MLY2DMOSIZ="$CCMLY2DMOSIZ"				MLY2DVLSIZ="$CCMLY2DVLSIZ"				MLY2RNSIZ="$CCMLY2RNSIZ"				ROOMSSIZ="$CCROOMSSIZ"				LOOPSSIZ="$CCLOOPSSIZ"				LISPUSERSSIZ="$CCLISPUSERSSIZ"				NCDMOSIZ="$CCNCDMOSIZ"				NCRNSIZ="$CCNCRNSIZ"				NCDVLSIZ="$CCNCDVLSIZ"				SUN3EMLTRSIZ="$CCSUN3EMLTRSIZ"				SPARCEMLTRSIZ="$CCSPARCEMLTRSIZ"				HPEMLTRSIZ="$CCHPEMLTRSIZ"				IBMEMLTRSIZ="$CCIBMEMLTRSIZ"			else	unset	COMPRESSP				SUN3EMLTRSIZ="$UCSUN3EMLTRSIZ"				SPARCEMLTRSIZ="$UCSPARCEMLTRSIZ"				HPEMLTRSIZ="$UCHPEMLTRSIZ"				IBMEMLTRSIZ="$UCIBMEMLTRSIZ"				MLY2DMOSIZ="$UCMLY2DMOSIZ"				MLY2DVLSIZ="$UCMLY2DVLSIZ"				MLY2RNSIZ="$UCMLY2RNSIZ"				ROOMSSIZ="$UCROOMSSIZ"				LOOPSSIZ="$UCLOOPSSIZ"				LISPUSERSSIZ="$UCLISPUSERSSIZ"				NCDMOSIZ="$UCNCDMOSIZ"				NCRNSIZ="$UCNCRNSIZ"				NCDVLSIZ="$UCNCDVLSIZ"				SUN3EMLTRSIZ="$UCSUN3EMLTRSIZ"				SPARCEMLTRSIZ="$UCSPARCEMLTRSIZ"				HPEMLTRSIZ="$UCHPEMLTRSIZ"				IBMEMLTRSIZ="$UCIBMEMLTRSIZ"			fi			showInstallMenu required ;;		[sS][uU]*)			if [ "$SUN3EMLTRP" != "x" ]			then SUN3EMLTRP=x			else unset SUN3EMLTRP			fi			showInstallMenu required ;;		[sS][pP]*)			if [ "$SPARCEMLTRP" != "x" ]			then SPARCEMLTRP=x			else unset SPARCEMLTRP			fi			showInstallMenu required ;;		[hH][pP]*)			if [ "$HP9000EMLTRP" != "x" ]			then HP9000EMLTRP=x			else unset HP9000EMLTRP			fi			showInstallMenu required ;;		[iI][bB]*)			if [ "$IBM6000EMLTRP" != "x" ]			then IBM6000EMLTRP=x			else unset IBM6000EMLTRP			fi			showInstallMenu required ;;		[mM][eE]*[\ ][rR]*)			if [ "$MLY2RNP" != "x" ]			then MLY2RNP=x			else unset MLY2RNP			fi			showInstallMenu required ;;		[mM][eE]*[\ ][dD][eE][vV]*)			if [ "$MLY2DVLP" != "x" ]			then MLY2DVLP=x			else unset MLY2DVLP			fi			showInstallMenu required ;;		[mM][eE]*[\ ][dD][eE][mM]*)			if [ "$MLY2DMOP" != "x" ]			then MLY2DMOP=x			else unset MLY2DMOP			fi			showInstallMenu required ;;		[rR][oO]*)			if [ "$ROOMSP" != "x" ]			then ROOMSP=x			else unset ROOMSP			fi			showInstallMenu required ;;		[lL][oO]*)			if [ "$LOOPSP" != "x" ]			then LOOPSP=x			else unset LOOPSP			fi			showInstallMenu required ;;		[lL][iI]*)			if [ "$LISPUSERSP" != "x" ]			then LISPUSERSP=x			else unset LISPUSERSP			fi			showInstallMenu required ;;		[nN][oO][tT]*[\ ][dD][eE][vV]*)			if [ "$NCDVLP" != "x" ]			then NCDVLP=x			else unset NCDVLP			fi			showInstallMenu required ;;		[nN][oO][tT]*[\ ][rR][uU][nN]*)			if [ "$NCDVLP" != "x" ]			then NCDVLP=x			else unset NCDVLP			fi			showInstallMenu required ;;		[nN][oO][tT]*[\ ][dD][eE][mM]*)			if [ "$NCDMOP" != "x" ]			then NCDMOP=x			else unset NCDMOP			fi			showInstallMenu required ;;		[aA][lL]*)			MLY2RNP=x			MLY2DVLP=x			MLY2DMOP=x			ROOMSP=x			LOOPSP=x			LISPUSERSP=x			NCDVLP=x			NCRNP=x			NCDMOP=x			showInstallMenu required ;;		[rR][eE]*)			showInstallMenu required ;;		!?*) eval `echo "$answer" | /bin/sed -e s/\\!//` ;;		\?|[hH]*) menuInstructions ; showInstallMenu ;;		[nN][oO][nN]*)			unset MLY2RNP			unset MLY2DVLP			unset MLY2DMOP			unset ROOMSP			unset LOOPSP			unset LISPUSERSP			unset NCDVLP			unset NCRNP			unset NCDMOP			showInstallMenu required ;;		[qQ][uU][iI][tT]*)			exitScript "Aborted ..." ;;		[mM][aA][kK][eE]*)			if [	${MLY2RNP:--} = - -a ${ROOMSP:--} = - -a \				${LOOPSP:--} = - -a ${LISPUSERSP:--} = - -a \				${NCP:--} = - -a ${NCDMOP:--} ]			then	scriptMessage "ERROR" "You have to select SOMETHING!"			fi ;;		 *) 	echo "Invalid reply: $answer" ;;		esac	done		} # getInstallOptionsMakeInstallScript(){# create the install scrippt that corresponds to the choises.# The order which the files goes onto the tape are important.# Before hacking this you have to make sure that you order the# tapefiles correctly.# 1. Make the preamble# 2. Make the menu# 3. Make the regexp to recognize it.# 4. Make the postamble.if [ "$ROOMSP" = "x"]then echo roomsfiif [ "$LOOPSP" = "x"]then echo loopsfiif [ "$LISPUSERSP" = "x"]then echo LispUsersfi} # MakeInstallScriptPutThingsOnTape() {if [ "$ROOMSP" = "x"]then echo roomsfiif [ "$LOOPSP" = "x"]then echo loopsfiif [ "$LISPUSERSP" = "x"]then echo LispUsersfi} # PutThingsOnTape#------------------------------------------------------------# ********** Main procedure starts here. **********#------------------------------------------------------------welcomeunset answerwhile [ ${answer:--} != y ]do	getInstallOptions	ask "Ready to make tape?" "y" "n"	MakeInstallScript	PutThingsOnTapedone