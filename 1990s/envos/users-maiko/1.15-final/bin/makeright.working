# makeright#  @(#) makeright Version 1.11 (5/9/90). ##***********************************************************************/##									*/##	Copyright 1989, 1990 Venue, Fuji Xerox Co., Ltd, Xerox Corp.	*/##									*/##	This file is work-product resulting from the Xerox/Venue	*/##	Agreement dated 18-August-1989 for support of Medley.		*/##									*/##***********************************************************************/## Feb. 6 1990 osamu: Add display option#		     release option does not support yet.# Apr.23 1990 osamu: add release option.## usage:  makeright [display-option] [other-option]# # example: makeright single	;  make lde for mmaped displayFB#	   makeright multi	;  make lde for cg3,cg6#	   makeright x		;  make lde for X-windows#	   makeright color	;  make lde with color support in it.#	   makeright multi release ; make release version of lde for cg3,cg6## makeright multi requires directory "maiko/${osversion}.${architecture}-multi"# (ex. maiko/sunos4.spaarc-multi)# object files are stored there.## Note: X11R4 environment link shared libraries. #	lde need X library. If lde links shared libraries, #	X shared libraries are needed at run time.## Hyde X shared libraries from link libraries search path.setenv	LD_LIBRARY_PATH	/usr/local/lib set	RELDIR = ../RELEASE/switch($#)case 0:	set display = single	breakwcase 1:	switch ("$1")	case single:	case multi:	case x:		set display = "$2"		breaksw	case release:		foreach TYPE (single multi x)			makeright $TYPE release		end		exit		breaksw	default:		echo "display-option: $display is not supported."		exit		breaksw	endswcase 2:	switch ("$1")	case single:	case multi:	case x:		set display = "$1"		if !("$2" = release)then			echo "Usage: makeright [single|multi|x] [release]			exit		endif		set releaseflg = 1			breaksw	case release:		set display = "$2"		set releaseflg = 1		breaksw				default:		echo "Usage: makeright [single|multi|x] [release]		exit		breaksw	endswdefault: 	echo "Usage: makeright [single|multi|x] [release]	exit	breakswendswif($1 ==set architecture = `mach`set osversion = `osversion`switch($display)	case single:			set releasename = ${osversion}.${architecture}		breaksw	case multi:			set releasename = ${osversion}.${architecture}-${display}		breaksw	case x:		set releasename = ${osversion}.${architecture}-${display}		breaksw	default:			echo "display-option: $display is not supported."		exit		breakswendswset releaseflg = 0if( "$1" == "release" ) then	set releaseflg = 1	if($display != single) then		if( !(-e usermakefile-${releasename})) then			ln usermakefile-${osversion}.${architecture} usermakefile-${releasename}		endif	endifelse	set releaseflg = 0endifset installdir = ${RELDIR}install.${osversion}.${architecture}/#if($display == single ) then#	set releasename = ${osversion}.${architecture}#else#	set releasename = ${osversion}.${architecture}-${display}#endifecho start making lde for ${releasename}.# then finally do the make, including the right stuffswitch($display)	case single :       		if (-e ../${releasename}/lde) then       			/bin/rm -f ../${releasename}/lde       		endif       		if (-e ../${releasename}/ldesingle) then       			/bin/cp -p ../${releasename}/ldesingle \			../${releasename}/lde       		endif		(echo RELEASENAME = ${releasename}; echo INSDIR = ${installdir}; cat makefile-header makefile-${releasename} makefile-tail) | make -f - $*		breaksw	case multi  :		(echo RELEASENAME = ${releasename}; echo INSDIR = ${installdir}; cat makefile-header makefile-${releasename} makefile-tail) | make -f - $*		breaksw	case x :		(echo RELEASENAME = ${releasename}; echo INSDIR = ${installdir}; cat makefile-header makefile-${releasename} makefile-tail-for-x) | make -f - $*		breaksw	default:			echo "display-option: $display is not supported."		exit		breakswendsw#if($status == 0) then# success making lde	if($releaseflg == 0) then		/bin/cp ../${releasename}/lde ../${osversion}.${architecture}/lde${display}	endif	if ($releaseflg == 1) then#		#making release version		echo rename ${installdir}lde to lde${display}		/bin/mv ${installdir}lde ${installdir}lde${display} 		/bin/mv ${installdir}lde.o ${installdir}lde${display}.o	endifendif# compile ldeboot.cecho compiling ldeboot.cif( $releaseflg == 0) then	set ldeoutputdir = ../${osversion}.${architecture}/else	set ldeoutputdir = ${installdir}endif  switch($display)	case single:#		cc -o ${ldeoutputdir}lde ../src/ldeboot.c -lpixrect		cc -o ${ldeoutputdir}lde ../src/ldeboot.c -lX11 -lpixrect -DXWINDOW -DXV11R4 -I../inc/		breaksw	case multi:#		cc -o ${ldeoutputdir}lde ../src/ldeboot.c -lpixrect		cc -o ${ldeoutputdir}lde ../src/ldeboot.c -lX11 -lpixrect -DXWINDOW -DXV11R4 -I../inc/		breaksw	case x:		cc -o ${ldeoutputdir}lde ../src/ldeboot.c -lX11 -lpixrect -DXWINDOW -DXV11R4 -I../inc/		breaksw	default:		echo "display-option: $display is not supported."		exit		breakswendsw