/* This is G-file @(#) gc.h Version 2.9 (3/24/89). copyright Xerox & Fuji Xerox  *//* *	Copyright (C) 1987 by Fuji Xerox Co., Ltd. All rights reserved. * *	Author	:	Takeshi Shimizu *			Hiroshi Hayata	 *//**********************************************************************//* 		File Name :  	gc.h		Define  for garbage collector	 *//**********************************************************************/#define	ADDREF	0	/* for gclookup routine. */#define	DELREF	1	/* for gclookup routine. */#define	STKREF	2	/* for gclookup routine. */#define UNSTKREF	3	/* for htfind function. (T.T.) */#define MAX_GCCOUNT	0x3F 	/* = 63 *//* IncAllocCnt(n) decrements reclaim countdown by N and signals interrupt   if GC should happen soon */#define IncAllocCnt(n) {\	if ((*Reclaim_cnt_word != NIL)\	    && ((*Reclaim_cnt_word -= n) <= S_POSITIVE)) {\		/* time for GC */\		Irq_Stk_Check = Irq_Stk_End = 0;\		*Reclaim_cnt_word = S_POSITIVE;\	};\}#define FRPLPTR(old , new) { \		htfind(new, ADDREF); \		htfind(old, DELREF); \		(old) = (new) ; }/*#define FRPLPTR(old, new) { \		if( old != new) {\		if (new > 0x120000) htfind(new, ADDREF);\		if (old > 0x120000) htfind(old, DELREF);\		old = new ; }}*/#define GCLOOKUP(bitset,code,addr) htfind(addr,code)#define GCLOOKUPV(bitset,code,addr) htfind(addr,code)#ifndef BYTESWAP	/********************************************************/	/*   Normal byte-order definitions, for e.g., 68020s	*/	/********************************************************/struct	 hashentry  {    unsigned	count		:6;    unsigned	stackref	:1;    unsigned	segnum		:8;    unsigned	collision	:1;  };struct  htlinkptr  {	/* overlay access method */    DLword	contents;  };struct	htcoll  {    DLword	free_ptr ;    DLword	next_free ;  };struct	gc_ovfl  {    LispPTR	  ovfl_ptr ;    unsigned int  ovfl_cnt ;  };struct  htoverflow   {	/* July-23-1987 by TT */    unsigned	pcase	:8;    unsigned	ptr	:24;  };#else	/********************************************************/	/*	Byte-swapped definitions, for e.g., 80386s	*/	/********************************************************/struct	 hashentry  {    unsigned	collision	:1;    unsigned	segnum		:8;    unsigned	stackref	:1;    unsigned	count		:6;  };struct  htlinkptr  {	/* overlay access method */    DLword	contents;  };struct	htcoll  {    DLword	next_free ;    DLword	free_ptr ;  };struct	gc_ovfl  {    LispPTR	  ovfl_ptr ;    unsigned int  ovfl_cnt ;  };struct  htoverflow   {	/* July-23-1987 by TT */    unsigned	ptr	:24;    unsigned	pcase	:8;  };#endif BYTESWAP