/* @(#) bitblt.h Version 2.6 (2/8/90). copyright envos & Fuji Xerox  *//* *	Copyright (C) 1988 by Fuji Xerox Co., Ltd. All rights reserved. * *	File :  bitblt.h * *	Author :  Osamu Nakamura * */#define	REPLACE	0#define	PAINT	2#define	ERASE	1#define	INVERT	3#define	ERROR	PIX_SRC#define PixOperation( SRCTYPE, OPERATION )	\	( SRCTYPE == ERASE ? \		(OPERATION == REPLACE ? PIX_NOT(PIX_SRC) : \		(OPERATION == PAINT   ? PIX_NOT(PIX_SRC) | PIX_DST : \		(OPERATION == ERASE   ? PIX_NOT(PIX_SRC) & PIX_DST : \		(OPERATION == INVERT  ? PIX_NOT(PIX_SRC) ^ PIX_DST : ERROR)))) : \	/*  SRCTYPE == INPUT */ \		(OPERATION == REPLACE ? PIX_SRC : \		(OPERATION == PAINT   ? PIX_SRC | PIX_DST : \		(OPERATION == ERASE   ? PIX_SRC & PIX_DST : \		(OPERATION == INVERT  ? PIX_SRC ^ PIX_DST : ERROR)))))/*----------------------------------------------------------------------*/extern DLword	*EmMouseX68K, *EmMouseY68K;extern int DisplayRasterWidth;#define	XDELTA	50#define	YDELTA	50#define	MOUSEXL	((int)*EmMouseX68K - XDELTA)#define	MOUSEXR	((int)*EmMouseX68K + XDELTA)#define	MOUSEYL	((int)*EmMouseY68K - YDELTA)#define	MOUSEYH	((int)*EmMouseY68K + YDELTA)/*----------------------------------------------------------------------*/#ifdef OLD_CURSORextern struct winlock DisplayLockArea;#define	HideCursor	\	ioctl( LispWindowFd, WINLOCKSCREEN, &DisplayLockArea)#define ShowCursor \	ioctl( LispWindowFd, WINUNLOCKSCREEN, &DisplayLockArea)#elseextern DLword *EmCursorX68K,*EmCursorY68K;#define	HideCursor	{ taking_mouse_down();}#define ShowCursor	{ taking_mouse_up(*EmCursorX68K,*EmCursorY68K);}#endif#define refresh_CG6 										\	HideCursor;											\	pr_rop(ColorDisplayPixrect, 0, 0, DisplayWidth, DisplayHeight,	\			PIX_SRC,DisplayRegionPixrect, 0, 0);				\	ShowCursor;#define clear_CG6											\	HideCursor;											\	pr_rop(ColorDisplayPixrect, 0, 0, DisplayWidth, DisplayHeight,	\			PIX_CLR, ColorDisplayPixrect, 0, 0);					\	ShowCursor;