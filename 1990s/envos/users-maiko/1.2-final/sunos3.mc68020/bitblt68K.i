# 1 "../src/bitblt68K.s"  ######################################################################## #									# #			b i t b l t 6 8 K				# #									# #	Hand-optimized bitblt for the MC68020.  This was created	# #	by taking Don Charnley's C version & creating an assembler	# #	intermediate file, then hand tuning.				# #									# #	bitblt68K(srcbase, dstbase, sx, dx, width, height,		# #		  srcbpl, dstbpl, backwardflg, src_comp, op,		# #		  gray, num_gray, curr_gray_line)			# #									# #									# #									# #									# ########################################################################	.data	.textLL0:	.proc	LF101	=	128	LS101	=	15608	LFF101	=	92	LSS101	=	0	LV101	=	92||   Argument offsets on the stack|||  Local variable offsets on the stack||  -4  num_lines_remaining|  -8  PRECOMPUTED FOR GRAY CASE:  (a6@(56)-1)<<1| -12  dstnumL| -16  src32lbit| -20  srcLshift| -24  dst32lbit| -28  srcRmask| -32  dstold| -36  PRECOMPUTED  a6@(36) << 3| -40  mask| -44  preloop_mask| -48  postloop_mask| -52  sdw_mask| -56  | -60  dst32rbit| -64  src32rbit| -68  | -72  | -76  | -80  bb_fast| -84  | -88  | -92   |#define temp a6@(-8)	|#define dstdata a6@(-36)	|#define x32byta a6@(-44)	|#define x32nbyt a6@(-48)	|#define x32ia a6@(-52)		|#define abc a6@(-56)		|#define fwd a6@(-68)		|#define OrigSrcAddr a6@(-72)|#define OrigDstAddr a6@(-76)|#define bb_fast a6@(-80)|#define preloop_mask a6@(-84)|#define postloop_mask a6@(-88)|#define sdw_mask a6@(-92)||  Register usage remaining from the compiler||	a5 a6@(8)	[used 7 times in code]|	a4 a6@(12)|	a3 a3 (via #define)|	a2 a2 (via #define)|	a0 srcaddr|	a1 dstaddr||	d7 ShS|	d6 SavedS|	d5 NewS|	d4 srcRshift|	d3 cnt (Loop counter in very inner loops)|	d2 a6@(-24), part-time.|	d1 [working temp]|	d0 [working temp]|	.data	.text	.globl	_bitblt_bitblt:|#PROLOGUE# 0	link	a6,#-128	moveml	#0x3cfc,sp@|#PROLOGUE# 1	movl	a6@(8),a5	movl	a6@(12),a4 #	  a6@(-4) = h;	movl	a6@(28),a6@(-4) #	  fwd = !a6@(40);	 #	  a6@(-80) = !(31 & (a6@(32) | a6@(36)));	movl	a6@(32),d0	orl	a6@(36),d0	moveq	#31,d7	andl	d7,d0	notl	d0	movl	d0,a6@(-80)	movl	a6@(36),d0	asrl	#3,d0	movl	d0,a6@(-36)	tstl	a6@(52)	jeq	L103	#########################################################	# Precompute the texture -backup amount for loop bottom #	#########################################################	movl	a6@(56),d0	subql	#1,d0	asll	#1,d0	movl	d0,a6@(-8)	tstl	a6@(20)	jge	L104	movl	a4,d0	moveq	#7,d1	subl	a6@(20),d1	asrl	#3,d1	subl	d1,d0	jra	LY00000L104:	movl	a4,d0	movl	a6@(20),d1	asrl	#3,d1	addl	d1,d0|| d0 = x32byta| d1 = x32nbyt| a1 = x32ia = dst32addrLY00000:	movl	d0,d1|	movb	a6@(-41),d0	moveq	#3,d7	andl	d7,d1|	movl	d0,x32nbyt	movl	d0,a1	subl	d1,a1|	movl	a1,x32ia	lsll	d7,d1	movb	a6@(23),d0	| a6@(20)	moveq	#7,d7	andl	d7,d0	addl	d0,d1	movl	d1,a6@(-24)	movl	d1,d2		| d2 = a6@(-24) starts here	addl	a6@(24),d1	subql	#1,d1	moveq	#31,d7	andl	d7,d1	movl	d1,a6@(-60)	movl	a1,a2|	tstl	a6@(-24)	tstl	d2	jeq	L2000004	moveq	#32,d0|	subl	a6@(-24),d0	subl	d2,d0	moveq	#-1,d1	asll	d0,d1	notl	d1	jra	L2000005L2000004:	moveq	#-1,d1L2000005:	movl	d1,a6@(-44)	moveq	#31,d0	subl	a6@(-60),d0	moveq	#-1,d1	asll	d0,d1	movl	d1,a6@(-48)	movl	a6@(-44),d0	andl	d1,d0	movl	d0,a6@(-52)|	movl	a6@(-24),d0	movl	d2,d0	addl	a6@(24),d0	asrl	#5,d0	subql	#1,d0	movl	d0,a6@(-12)	movb	a6@(39),d0	|a6@(36)	moveq	#31,d7	andl	d7,d0	notl	d0	movl	d0,a6@(-80)	movb	a6@(19),d0	|a6@(16)	moveq	#15,d7	andl	d7,d0	movl	d0,a6@(-16)	jra	LY00009 # else if (fwd)L103:	tstl	a6@(40)	jne	L107 #  {if (a6@(20) < 0) 	tstl	a6@(20)	jge	L108 #    { x32byta = (int)a6@(12) - ((7 - a6@(20)) >> 3); }  #   else { x32byta = (int)a6@(12) + (a6@(20) >> 3); } #   x32nbyt = x32byta & 3;  #   x32ia = x32byta - x32nbyt;     #   dst32addr = (int *)x32ia; 	movl	a4,d0	moveq	#7,d1	subl	a6@(20),d1	asrl	#3,d1	subl	d1,d0	jra	LY00001L108:	movl	a4,d0	movl	a6@(20),d1	asrl	#3,d1	addl	d1,d0LY00001:|	movl	d0,x32byta	movl	d0,d1|	movb	a6@(-41),d1	moveq	#3,d7	andl	d7,d1|	movl	d1,x32nbyt|	movl	x32byta,a1	movl	d0,a1	subl	d1,a1|	movl	a1,x32ia	asll	d7,d1	movb	a6@(23),d0	| a6@(20)	moveq	#7,d7	andl	d7,d0	addl	d0,d1	movl	d1,a6@(-24)	movl	d1,d2		| d2 = a6@(-24) starting here	addl	a6@(24),d1	subql	#1,d1	moveq	#31,d7	andl	d7,d1	movl	d1,a6@(-60) #   a2 = dst32addr;  #   a6@(-44) = ((a6@(-24)) ? (~(0xFFFFFFFF << (32 - a6@(-24)))) : 0xFFFFFFFF);  #  a6@(-48) = 0xFFFFFFFF << (31 - a6@(-60));  #   a6@(-52) = a6@(-44) & a6@(-48);  #   a6@(-12) = ((a6@(-24) + w) >> 5) - 1; 	movl	a1,a2|	tstl	a6@(-24)	tstl	d2	jeq	L2000008	moveq	#32,d0|	subl	a6@(-24),d0	subl	d2, d0	moveq	#-1,d1	asll	d0,d1	notl	d1	jra	L2000009L2000008:	moveq	#-1,d1L2000009:	movl	d1,a6@(-44)	moveq	#31,d0	subl	a6@(-60),d0	moveq	#-1,d1	asll	d0,d1	movl	d1,a6@(-48)	movl	a6@(-44),d0	andl	d1,d0	movl	d0,a6@(-52)|	movl	a6@(-24),d0	movl	d2,d0	addl	a6@(24),d0	asrl	#5,d0	subql	#1,d0	movl	d0,a6@(-12) #   if (a6@(16) < 0)  #     { x32byta = (int)a6@(8) - ((7 - a6@(16)) >> 3); }  #   else { x32byta = (int)a6@(8) + (a6@(16) >> 3); }	tstl	a6@(16)	jge	L110	movl	a5,d0	moveq	#7,d1	subl	a6@(16),d1	asrl	#3,d1	subl	d1,d0	jra	LY00002L110:	movl	a5,d0	movl	a6@(16),d1	asrl	#3,d1	addl	d1,d0LY00002:|	movl	d0,x32byta #   x32nbyt = x32byta & 3; #   x32ia = x32byta - x32nbyt; #   src32addr = (int *)x32ia;|	movb	a6@(-41),d1	movl	d0,d1	moveq	#3,d7	andl	d7,d1|	movl	d1,x32nbyt|	movl	x32byta,a0	movl	d0,a0	subl	d1,a0|	movl	a1,x32ia	asll	d7,d1	movb	a6@(19),d0	| a6@(16)	moveq	#7,d7	andl	d7,d0	addl	d1,d0		| d0 = a6@(-16) starts here	movl	d0,a6@(-16)	movl	d0,d1	addl	a6@(24),d1	subql	#1,d1	moveq	#31,d7	andl	d7,d1	movl	d1,a6@(-64)|	movl	a6@(-24),d4	movl	d2,d4|	subl	a6@(-16),d4	subl	d0,d4	andl	d7,d4|	movl	a6@(-16),d0	| d0 = a6@(-16) stops here|	subl	a6@(-24),d0	subl	d2,d0	andl	d7,d0	movl	d0,a6@(-20)	jeq	L2000010LY00006:			| a6@(-20) is in d0 every way you get here.	moveq	#-1,d1|	movw	a6@(-18),d1	| a6@(-20)	asll	d0,d1	notl	d1	jra	L2000051L2000010:	moveq	#-1,d1	jra	L2000051L107:	movl	a6@(20),d2		| d2 = abc starts here	addl	a6@(24),d2	subql	#1,d2|	movl	d2,abc	jge	L113	movl	a4,d0	moveq	#7,d1|	subl	abc,d1	subl	d2,d1	asrl	#3,d1	subl	d1,d0	jra	LY00003L113:	movl	a4,d0|	movl	abc,d1	movl	d2,d1	asrl	#3,d1	addl	d1,d0LY00003:|	movl	d0,x32byta|	movb	a6@(-41),d1	movl	d0,d1	moveq	#3,d7	andl	d7,d1|	movl	d1,x32nbyt|	movl	x32byta,a1	movl	d0,a1	subl	d1,a1|	movl	a1,x32ia	asll	d7,d1|	movb	a6@(-53),d0	| abc	movl	d2,d0		| d2 = abc ends here	moveq	#7,d7	andl	d7,d0	addl	d0,d1	movl	d1,a6@(-60)	| d1 = a6@(-60) starts here	movl	d1,d2	subl	a6@(24),d2	| d2 = a6@(-24) starts here	addql	#1,d2	moveq	#31,d7	andl	d7,d2	movl	d2,a6@(-24)	movl	a1,a2	moveq	#31,d0|	subl	a6@(-60),d0	subl	d1,d0		| d1 = a6@(-60) stops here	moveq	#-1,d1	asll	d0,d1	movl	d1,a6@(-44)	moveq	#32,d0|	subl	a6@(-24),d0	subl	d2,d0		| d2 = a6@(-24) stops here	moveq	#-1,d1	asll	d0,d1	notl	d1	movl	d1,a6@(-48)	movl	a6@(-44),d0	andl	d1,d0	movl	d0,a6@(-52)	movl	a6@(24),d0	subl	a6@(-60),d0	subql	#1,d0	tstl	d0	jle	L2000012	movl	a6@(24),d0	subl	a6@(-60),d0	subql	#1,d0	asrl	#5,d0	jra	L2000013L2000012:	moveq	#0,d0L2000013:	movl	d0,a6@(-12)	movl	a6@(16),d2		| d2 = abc starts here	addl	a6@(24),d2	subql	#1,d2|	movl	d2,abc	jge	L115	movl	a5,d0	moveq	#7,d1|	subl	abc,d1	subl	d2,d1	asrl	#3,d1	subl	d1,d0	jra	LY00004L115:	movl	a5,d0|	movl	abc,d1	movl	d2,d1	asrl	#3,d1	addl	d1,d0LY00004:|	movl	d0,x32byta|	movb	a6@(-41),d1	movl	d0,d1	moveq	#3,d7	andl	d7,d1|	movl	d1,x32nbyt|	movl	x32byta,a0	movl	d0,a0	subl	d1,a0|	movl	a0,x32ia	asll	d7,d1|	movb	a6@(-53),d0	|abc	movl	d2,d0		| d2 = abc ends here	moveq	#7,d7	andl	d7,d0	addl	d0,d1	movl	d1,a6@(-64)	jra	LY00016LY00010:	tstl	a6@(52)	jeq	L119	movl	a6@(-16),d0	subl	a6@(-24),d0	moveq	#15,d7	andl	d7,d0		| d0 = a6@(-20)	movl	d0,a6@(-20)	moveq	#0,d7	movw	a5@,d7	movl	d7,d1|	moveq	#16,d1|	lsll	d1,d0	swap	d1	orl	d1,d7|	movw	a6@(-18),d0|	lsll	d0,d7|	movl	d7,d0|	moveq	#16,d1|	lsrl	d1,d0|	andl	#65535,d0|	orl	d0,d7	roll	d0,d7	tstl	a6@(44)	jeq	L120	notl	d7		| end oof d0 = a6@(-20)L120:	movl	a6@(-24),d0	addl	a6@(24),d0	moveq	#32,d5	cmpl	d5,d0	jle	LY00008	movl	a6@(-44),a6@(-40)	movl	a1@,d5	|  d5 = dstdata thru here...	movl	a6@(-40),d1	|  d1 = a6@(-32) thru here	notl	d1	andl	d5,d1|	movl	d1,a6@(-32)	movl	a6@(48),d0|	moveq	#3,d5|	cmpl	d5,d0|	jhi	L123	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000017:	.word	L125-L2000017	.word	L126-L2000017	.word	L127-L2000017	.word	L128-L2000017L125:	movl	d7,d5	jra	L123L126:	andl	d7,d5	jra	L123L127:	orl	d7,d5	jra	L123L128:	eorl	d7,d5L123:	movl	a6@(-40),d0	andl	d0,d5	orl	d1,d5	| wass a6@(-32)|	orl	d0,dstdata	movl	d5,a1@+	movl	a6@(48),d0	movl	a6@(-12),d3	| from all loop headers below.|	moveq	#3,d5|	cmpl	d5,d0|	jhi	L129	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000019:	.word	L131-L2000019	.word	L135-L2000019	.word	L139-L2000019	.word	L143-L2000019L131:|	movl	a6@(-12),d3L134:	subql	#1,d3	jmi	L129	movl	d7,a1@+	jra	L134L135:|	movl	a6@(-12),d3L138:	subql	#1,d3	jmi	L129	andl	d7,a1@+	jra	L138L139:|	movl	a6@(-12),d3L142:	subql	#1,d3	jmi	L129	orl	d7,a1@+	jra	L142|L143:|	movl	a6@(-12),d3|	jra	LY00013LY00014:	eorl	d7,a1@+L143:LY00013:	subql	#1,d3	jpl	LY00014L129:	cmpl	#31,a6@(-60)	jeq	L148	jra	L337L119:	tstl	a6@(40)	jne	L149	movw	a6@(-18),d1	| a6@(-20) in d1 down thru L151	movl	a6@(-16),d0	cmpl	a6@(-24),d0	jle	L150	addl	a6@(24),d0	moveq	#32,d7	cmpl	d7,d0	jle	L150	movl	a0@+,d6|	movw	a6@(-18),d1	| a6@(-20)	lsll	d1,d6	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	andl	a6@(-28),d7	orl	d6,d7	lsll	d1,d0	movl	a6@(-28),d1	notl	d1	andl	d1,d0	movl	d0,d6	jra	L151L150:	movl	a6@(-16),d0	cmpl	a6@(-24),d0	jgt	L152	movl	a0@+,d6	movl	d6,d7	lsrl	d4,d7	andl	a6@(-28),d7|	movw	a6@(-18),d1	|a6@(-20)	lsll	d1,d6	movl	a6@(-28),d1	notl	d1	andl	d1,d6	jra	L151L152:	movl	a0@+,d7|	movw	a6@(-18),d1	| a6@(-20)	lsll	d1,d7L151:	tstl	a6@(44)	jeq	L154	notl	d7L154:	movl	a6@(-24),d0	addl	a6@(24),d0	moveq	#32,d5	cmpl	d5,d0	jle	LY00008	movl	a6@(-44),a6@(-40)	movl	a1@,d5		| d5 = dstdata thru here	movl	a6@(-40),d1		| d1 = a6@(-32) thru here.	notl	d1	andl	d5,d1|	movl	d1,a6@(-32)	movl	a6@(48),d0|	moveq	#3,d5|	cmpl	d5,d0|	jhi	L156	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000021:	.word	L158-L2000021	.word	L159-L2000021	.word	L160-L2000021	.word	L161-L2000021L158:	movl	d7,d5	jra	L156L159:	andl	d7,d5	jra	L156L160:	orl	d7,d5	jra	L156L161:	eorl	d7,d5L156:	movl	a6@(-40),d0	andl	d0,d5|	movl	a6@(-32),d1	orl	d1,d5	movl	d5,a1@+	movl	a6@(-16),d0	cmpl	a6@(-24),d0	jne	L162	tstl	a6@(44)	jeq	L184	movl	a6@(48),d0	movl	a6@(-12),d3	| from loop headers below|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L201	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000023:	.word	L166-L2000023	.word	L170-L2000023	.word	L174-L2000023	.word	L178-L2000023L166:|	movl	a6@(-12),d3L169:	subql	#1,d3	jmi	L201	movl	a0@+,d0	notl	d0	movl	d0,a1@+	jra	L169L170:|	movl	a6@(-12),d3L173:	subql	#1,d3	jmi	L201	movl	a0@+,d0	notl	d0	andl	d0,a1@+	jra	L173L174:|	movl	a6@(-12),d3L177:	subql	#1,d3	jmi	L201	movl	a0@+,d0	notl	d0	orl	d0,a1@+	jra	L177L178:|	movl	a6@(-12),d3L181:	subql	#1,d3	jmi	L201	movl	a0@+,d0	notl	d0	eorl	d0,a1@+	jra	L181L185:|	movl	a6@(-12),d3L188:	subql	#1,d3	jmi	L201	movl	a0@+,a1@+	jra	L188L189:|	movl	a6@(-12),d3L192:	subql	#1,d3	jmi	L201	movl	a0@+,d0	andl	d0,a1@+	jra	L192L193:|	movl	a6@(-12),d3L196:	subql	#1,d3	jmi	L201	movl	a0@+,d0	orl	d0,a1@+	jra	L196L197:|	movl	a6@(-12),d3L200:	subql	#1,d3	jmi	L201	movl	a0@+,d0	eorl	d0,a1@+	jra	L200L184:	movl	a6@(48),d0	movl	a6@(-12),d3		|from loop headers|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L201	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000025:	.word	L185-L2000025	.word	L189-L2000025	.word	L193-L2000025	.word	L197-L2000025	jra	L201L162:	tstl	a6@(44)	jeq	L223	movl	a6@(48),d0|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L201	movw	a6@(-18),d1	| from within the loops below, a6@(-20)	movl	a6@(-12),d3	| from loop headers	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000027:	.word	L205-L2000027	.word	L209-L2000027	.word	L213-L2000027	.word	L217-L2000027L205:|	movl	a6@(-12),d3L208:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7	notl	d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	movl	d7,a1@+	jra	L208L209:|	movl	a6@(-12),d3L212:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7	notl	d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	andl	d7,a1@+	jra	L212L213:|	movl	a6@(-12),d3L216:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7	notl	d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	orl	d7,a1@+	jra	L216L217:|	movl	a6@(-12),d3L220:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7	notl	d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	eorl	d7,a1@+	jra	L220L224:|	movl	a6@(-12),d3L227:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	movl	d7,a1@+	jra	L227L228:|	movl	a6@(-12),d3L231:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	andl	d7,a1@+	jra	L231L232:|	movl	a6@(-12),d3L235:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	orl	d7,a1@+	jra	L235L236:|	movl	a6@(-12),d3L239:	subql	#1,d3	jmi	L201	movl	a0@+,d0	movl	d0,d7	lsrl	d4,d7	orl	d6,d7|	movw	a6@(-18),d1	lsll	d1,d0	movl	d0,d6	eorl	d7,a1@+	jra	L239L223:	movl	a6@(48),d0|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L201	movw	a6@(-18),d1	| from loops after dispatch, a6@(-20)	movl	a6@(-12),d3	| from loop headers	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000029:	.word	L224-L2000029	.word	L228-L2000029	.word	L232-L2000029	.word	L236-L2000029L201:	cmpl	#31,a6@(-60)	jeq	L148	movl	a6@(-64),d0	cmpl	a6@(-60),d0	jgt	L335	movl	a0@,d0	lsrl	d4,d0	andl	a6@(-28),d0	jra	LY00011L149:	movl	a6@(-64),d0	cmpl	a6@(-60),d0	jge	L244	movl	a6@(-16),d0	addl	a6@(24),d0	movl	a6@(-24),d1	addql	#1,d1	cmpl	d1,d0	jle	L244	movl	a0@,d6	lsrl	d4,d6	andl	a6@(-28),d6	movl	a0@-,d0	subqw	#4,a0	movl	d0,d7	movw	a6@(-18),d1	| a6@(-20)	lsll	d1,d7	orl	d6,d7	lsrl	d4,d0	andl	a6@(-28),d0	movl	d0,d6	jra	L245L244:	movl	a6@(-64),d0	cmpl	a6@(-60),d0	jlt	L246	movl	a0@,d6	subqw	#4,a0	movl	d6,d7	movw	a6@(-18),d1	| a6@(-20)	lsll	d1,d7	lsrl	d4,d6	andl	a6@(-28),d6	jra	L245L246:	movl	a0@,d7	subqw	#4,a0	lsrl	d4,d7	andl	a6@(-28),d7L245:	tstl	a6@(44)	jeq	L248	notl	d7L248:	movl	a6@(-24),d0	addl	a6@(24),d0	moveq	#32,d5	cmpl	d5,d0	jgt	L249LY00008:	movl	a6@(-52),a6@(-40)	jra	L122L249:	movl	a6@(-44),a6@(-40)	movl	a1@,d5		| d5 = dstdata thru here	movl	a6@(-40),d1		| d1 = a6@(-32) thru here.	notl	d1	andl	d5,d1|	movl	d1,a6@(-32)	movl	a6@(48),d0|	moveq	#3,d5|	cmpl	d5,d0|	jhi	L250	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000031:	.word	L252-L2000031	.word	L253-L2000031	.word	L254-L2000031	.word	L255-L2000031L252:	movl	d7,d5	jra	L250L253:	andl	d7,d5	jra	L250L254:	orl	d7,d5	jra	L250L255:	eorl	d7,d5L250:|	movl	a6@(-40),d0|	andl	d0,d5	andl	a6@(-40),d5|	movl	a6@(-32),d0|	orl	d0,d5	orl	d1,d5		| end of d1/a6@(-32) range	movl	d5,a1@	subqw	#4,a1	movl	a6@(-16),d0	cmpl	a6@(-24),d0	jne	L256	tstl	a6@(44)	jeq	L278	movl	a6@(48),d0	movl	a6@(-12),d3	| from loop headers below|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L295	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000033:	.word	L260-L2000033	.word	L264-L2000033	.word	L268-L2000033	.word	L272-L2000033L260:|	movl	a6@(-12),d3L263:	subql	#1,d3	jmi	L295	movl	a0@,d0	notl	d0	movl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L263L264:|	movl	a6@(-12),d3L267:	subql	#1,d3	jmi	L295	movl	a0@,d0	notl	d0	andl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L267L268:|	movl	a6@(-12),d3L271:	subql	#1,d3	jmi	L295	movl	a0@,d0	notl	d0	orl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L271L272:|	movl	a6@(-12),d3L275:	subql	#1,d3	jmi	L295	movl	a0@,d0	notl	d0	eorl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L275L279:|	movl	a6@(-12),d3L282:	subql	#1,d3	jmi	L295	movl	a0@,a1@	subqw	#4,a0	subqw	#4,a1	jra	L282L283:|	movl	a6@(-12),d3L286:	subql	#1,d3	jmi	L295	movl	a0@,d0	andl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L286L287:|	movl	a6@(-12),d3L290:	subql	#1,d3	jmi	L295	movl	a0@,d0	orl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L290L291:|	movl	a6@(-12),d3L294:	subql	#1,d3	jmi	L295	movl	a0@,d0	eorl	d0,a1@	subqw	#4,a0	subqw	#4,a1	jra	L294L278:	movl	a6@(48),d0	movl	a6@(-12),d3	| from loop headers above|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L295	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000035:	.word	L279-L2000035	.word	L283-L2000035	.word	L287-L2000035	.word	L291-L2000035	jra	L295L256:	tstl	a6@(44)	jeq	L317	movw	a6@(-18),d1	| from loops after dispatch, below, a6@(-20)	movl	a6@(-12),d3	| from loop headers	movl	a6@(48),d0|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L295	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000037:	.word	L299-L2000037	.word	L303-L2000037	.word	L307-L2000037	.word	L311-L2000037L299:|	movl	a6@(-12),d3L302:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	notl	d7	lsrl	d4,d0	movl	d0,d6	movl	d7,a1@	subqw	#4,a1	jra	L302L303:|	movl	a6@(-12),d3L306:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	notl	d7	lsrl	d4,d0	movl	d0,d6	andl	d7,a1@	subqw	#4,a1	jra	L306L307:|	movl	a6@(-12),d3L310:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	notl	d7	lsrl	d4,d0	movl	d0,d6	orl	d7,a1@	subqw	#4,a1	jra	L310L311:|	movl	a6@(-12),d3L314:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	notl	d7	lsrl	d4,d0	movl	d0,d6	eorl	d7,a1@	subqw	#4,a1	jra	L314L318:|	movl	a6@(-12),d3L321:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	lsrl	d4,d0	movl	d0,d6	movl	d7,a1@	subqw	#4,a1	jra	L321L322:|	movl	a6@(-12),d3L325:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	lsrl	d4,d0	movl	d0,d6	andl	d7,a1@	subqw	#4,a1	jra	L325L326:|	movl	a6@(-12),d3L329:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	lsrl	d4,d0	movl	d0,d6	orl	d7,a1@	subqw	#4,a1	jra	L329L330:|	movl	a6@(-12),d3L333:	subql	#1,d3	jmi	L295	movl	a0@,d0	subqw	#4,a0	movl	d0,d7|	movw	a6@(-18),d1	lsll	d1,d7	orl	d6,d7	lsrl	d4,d0	movl	d0,d6	eorl	d7,a1@	subqw	#4,a1	jra	L333L317:	movl	a6@(48),d0	movw	a6@(-18),d1	| from loops after dispatch (above), a6@(-20)	movl	a6@(-12),d3	| from loop headers|	moveq	#3,d7|	cmpl	d7,d0|	jhi	L295	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000039:	.word	L318-L2000039	.word	L322-L2000039	.word	L326-L2000039	.word	L330-L2000039L295:	tstl	a6@(-24)	jeq	L148	movl	a6@(-16),d0	cmpl	a6@(-24),d0	jlt	L335	movl	a0@,d0	movw	a6@(-18),d1	| a6@(-20)	lsll	d1,d0LY00011:	orl	d6,d0	movl	d0,d7	jra	L336L335:	movl	d6,d7L336:	tstl	a6@(44)	jeq	L337	notl	d7L337:	movl	a6@(-48),a6@(-40)L122:	movl	a1@,d5		| d5 = dstdata thru here....	movl	a6@(-40),d1		| d1 = a6@(-32) thru here.	notl	d1	andl	d5,d1|	movl	d1,a6@(-32)	movl	a6@(48),d0|	moveq	#3,d5|	cmpl	d5,d0|	jhi	L338	movw	pc@(6,d0:l:2),d0	jmp	pc@(2,d0:w)L2000041:	.word	L340-L2000041	.word	L341-L2000041	.word	L342-L2000041	.word	L343-L2000041L340:	movl	d7,d5	jra	L338L341:	andl	d7,d5	jra	L338L342:	orl	d7,d5	jra	L338L343:	eorl	d7,d5L338:	movl	a6@(-40),d0	andl	d0,d5|	movl	a6@(-32),d5	| transcription error??, replaced with:	orl	d1, d5	movl	d5,a1@L148:	tstl	a6@(52)	jeq	L344	tstl	a6@(-80)	jeq	L345|	movl	a6@(36),d0|	asrl	#3,d0|	addl	d0,a2	addl	a6@(-36),a2	movl	a2,a1	jra	L346L345:	movl	a2,a1	| d2 = a6@(-24) starts here	movl	a6@(-24),d2|	movl	a6@(36),d0|	addl	d0,a6@(-24)	addl	a6@(36),d2|	movl	a6@(-24),d0	movl	d2,d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	addl	d0,a1	moveq	#31,d7|	andl	d7,a6@(-24)	andl	d7,d2|	movl	a6@(-24),d0	movl	d2,d0	addl	a6@(24),d0	subql	#1,d0	andl	d7,d0	movl	d0,a6@(-60)	movl	a1,a2|	tstl	a6@(-24)	tstl	d2	jeq	L2000042	moveq	#32,d0|	subl	a6@(-24),d0	subl	d2,d0	moveq	#-1,d1	lsll	d0,d1	notl	d1	jra	L2000043L2000042:	moveq	#-1,d1L2000043:	movl	d1,a6@(-44)	moveq	#31,d0	subl	a6@(-60),d0	moveq	#-1,d1	asll	d0,d1	movl	d1,a6@(-48)	movl	a6@(-44),d0	andl	d1,d0	movl	d0,a6@(-52)|	movl	a6@(-24),d0	movl	d2,d0	addl	a6@(24),d0	asrl	#5,d0	subql	#1,d0	movl	d2,a6@(-24)		| d2 = a6@(-24) ends here	movl	d0,a6@(-12)	####################################	#  Bottom of the texture-blt loop  #	#L346:	addql	#1,a6@(60)	movl	a6@(60),d0	cmpl	a6@(56),d0	jlt	L347	clrl	a6@(60)|	movl	a6@(56),d0|	subql	#1,d0|	asll	#1,d0|	subl	d0,a5	subl	a6@(-8),a5	jra	LY00009L347:	addqw	#2,a5	jra	LY00009L344:	tstl	a6@(40)	jne	L349	tstl	a6@(-80)	jeq	L350|	movl	a6@(36),d0|	asrl	#3,d0|	addl	d0,a2	addl	a6@(-36),a2	movl	a2,a1	jra	L351L350:	movl	a2,a1		| d2 = a6@(-24) starts here	movl	a6@(-24),d2|	movl	a6@(36),d0	addl	a6@(36),d2|	addl	d0,a6@(-24)|	movl	a6@(-24),d0	movl	d2,d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	addl	d0,a1	moveq	#31,d7|	andl	d7,a6@(-24)|	movl	a6@(-24),d0	andl	d7,d2	movl	d2,d0	addl	a6@(24),d0	subql	#1,d0	andl	d7,d0	movl	d0,a6@(-60)	movl	a1,a2|	tstl	a6@(-24)	tstl	d2	jeq	L2000044	moveq	#32,d0|	subl	a6@(-24),d0	subl	d2,d0	moveq	#-1,d1	asll	d0,d1	notl	d1	jra	L2000045L2000044:	moveq	#-1,d1L2000045:	movl	d1,a6@(-44)	moveq	#31,d0	subl	a6@(-60),d0	moveq	#-1,d1	asll	d0,d1	movl	d1,a6@(-48)	movl	a6@(-44),d0	andl	d1,d0	movl	d0,a6@(-52)|	movl	a6@(-24),d0	movl	d2,d0	addl	a6@(24),d0	asrl	#5,d0	subql	#1,d0	movl	d0,a6@(-12)	movl	d2,a6@(-24)		| end of d2 = a6@(-24)L351:	tstl	a6@(-80)	jne	LY00007	movl	a3,a0	movl	a6@(-16),d2		| d2 = a6@(-16) starts here|	movl	a6@(32),d0|	addl	d0,a6@(-16)|	movl	a6@(-16),d0	addl	a6@(32),d2	movl	d2,d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	addl	d0,a0	moveq	#31,d7|	andl	d7,a6@(-16)	andl	d7,d2|	movl	a6@(-16),d0	movl	d2,d0	addl	a6@(24),d0	subql	#1,d0	andl	d7,d0	movl	d0,a6@(-64)	movl	a0,a3	movl	a6@(-24),d4|	subl	a6@(-16),d4	subl	d2,d4	andl	d7,d4|	movl	a6@(-16),d0	movl	d2,d1	subl	a6@(-24),d1	andl	d7,d1	movl	d1,a6@(-20)	jeq	L2000046	moveq	#-1,d0|	movw	a6@(-18),d1	| a6@(-20)	asll	d1,d0	notl	d0	jra	L2000047L2000046:	moveq	#-1,d0L2000047:	movl	d0,a6@(-28)	movl	d2,a6@(-16)	| end of d2 = a6@(-16)	jra	LY00009L349:	tstl	a6@(-80)	jeq	L354|	movl	a6@(36),d0|	asrl	#3,d0|	addl	d0,a2	addl	a6@(-36),a2	movl	a2,a1	jra	L355L354:	movl	a2,a1	movl	a6@(36),d0	addl	d0,a6@(-60)	jpl	L356	moveq	#31,d0	subl	a6@(-60),d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	subl	d0,a1	jra	L357L356:	movl	a6@(-24),d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	addl	d0,a1L357:	moveq	#31,d7	andl	d7,a6@(-60)	movl	a6@(-60),d0	subl	a6@(24),d0	addql	#1,d0	andl	d7,d0	movl	d0,a6@(-24)	movl	a1,a2	moveq	#31,d0	subl	a6@(-60),d0	moveq	#-1,d1	asll	d0,d1	movl	d1,a6@(-44)	moveq	#32,d0	subl	a6@(-24),d0	moveq	#-1,d1	asll	d0,d1	notl	d1	movl	d1,a6@(-48)	movl	a6@(-44),d0	andl	d1,d0	movl	d0,a6@(-52)	movl	a6@(24),d0	subl	a6@(-60),d0	subql	#1,d0	tstl	d0	jle	L2000048	movl	a6@(24),d0	subl	a6@(-60),d0	subql	#1,d0	asrl	#5,d0	jra	L2000049L2000048:	moveq	#0,d0L2000049:	movl	d0,a6@(-12)L355:	tstl	a6@(-80)	jeq	L358LY00007:	movl	a6@(32),d0	asrl	#3,d0	addl	d0,a3	movl	a3,a0	jra	LY00009L358:	movl	a3,a0	movl	a6@(32),d0	addl	d0,a6@(-64)	jpl	L360	moveq	#31,d0	subl	a6@(-64),d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	subl	d0,a0	jra	L361L360:	movl	a6@(-64),d0	asrl	#5,d0|	movl	d0,temp	asll	#2,d0|	movl	d0,temp	addl	d0,a0L361:	moveq	#31,d7	andl	d7,a6@(-64)LY00016:	movl	a6@(-64),d0	subl	a6@(24),d0	addql	#1,d0	moveq	#31,d7	andl	d7,d0	movl	d0,a6@(-16)	movl	a6@(-24),d4	subl	d0,d4	andl	d7,d4	subl	a6@(-24),d0	andl	d7,d0	movl	d0,a6@(-20)	jne	LY00006	moveq	#0,d1L2000051:	movl	d1,a6@(-28)	movl	a0,a3LY00009:	movl	a6@(-4),d0	subql	#1,a6@(-4)	tstl	d0	jgt	LY00010	moveq	#0,d0|#PROLOGUE# 2	moveml	a6@(-128),#0x3cfc	unlk	a6|#PROLOGUE# 3	rts