/* This is G-file @(#) dispSPARC.il Version 1.2 (3/28/88). copyright Xerox & Fuji Xerox  *//* dispatch.il *//* inline dispatching support *//* Russ Atkinson, December 29, 1987 *//* To use in compiling XXX, cc -O2 XXX.c dispatch.il *//* The qdisp* routines depend on pc being in %i0 and table being in %i1 *//* The qdisp* routines depend on pc being in %i0 and table being in %i1 */.inline	_qdisp0,0	! qdisp0 - %i0: pc, %i1: table	ldub	[%i0+0],%i2	! temp = *pc	sll	%i2,2,%i2	! temp = temp * 4	ld	[%i2+%i1],%i2	! temp = table[temp]	jmp	%i2		! dispatch	nop.end.inline	_qdisp1,0	! qdisp1 - %i0: pc, %i1: table	ldub	[%i0+1],%i2	! temp = *pc	sll	%i2,2,%i2	! temp = temp * 4	ld	[%i2+%i1],%i2	! temp = table[temp]	jmp	%i2		! dispatch	add	%i0,1,%i0	! update the pc.end.inline	_qdisp2,0	! qdisp2 - %i0: pc, %i1: table	ldub	[%i0+2],%i2	! temp = *pc	sll	%i2,2,%i2	! temp = temp * 4	ld	[%i2+%i1],%i2	! temp = table[temp]	jmp	%i2		! dispatch	add	%i0,2,%i0	! update the pc.end.inline	_qdisp3,0	! qdisp3 - %i0: pc, %i1: table	ldub	[%i0+3],%i2	! temp = *pc	sll	%i2,2,%i2	! temp = temp * 4	ld	[%i2+%i1],%i2	! temp = table[temp]	jmp	%i2		! dispatch	add	%i0,3,%i0	! update the pc.end.inline	_fast_dispatcher,8	!  - %o0: table, %o1: inst	sll	%o1,2,%o1	ld	[%o1+%o0],%o1	jmp	%o1		! dispatch	nop.end/*	***************************************************************	Inline Assembly help for dispatcher.	****************************************************************//* Note: that the error exit of these routines may or may not need to	fix the tos pointer.  The C code should decide when tos must	be fixed through the ifdef flats.*//* inline DIFFERENCE *//* 	%o0 - %o1*/.inline	_op_difference,8	sethi	%hi(0xffff0000),%o2		#15,d2	roll	d2,d1	subqb	#7,d1	bne	diff_err	roll	d2,d0	subqb	#7,d0	bne	diff_err	subl	d1,d0	bvs	diff_err	lsrl	d2,d0	orl	#0x000E0000,d0.end/* inline DIFFERENCE *//* 	d7 - sp@*/.inline	_fast_op_difference,4	movl	a7@+,d1	roll	d5,d7	subqb	#7,d7	bne	diff_err	roll	d5,d1	subqb	#7,d1	bne	diff_err	subl	d7,d1	bvs	diff_err	lsrl	d5,d1	orl	#0x000E0000,d1	movl	d1,d7.end/* inline DIFFERENCE 32 *//* 	sp@ - sp@(4)*/.inline	_sub32,8	movl	a7@+,d0	movl	a7@+,d1	subl	d1,d0	bvs	diff_err.end.inline	_sub32n,8	movl	a7@+,d0	movl	a7@+,d1	subl	d1,d0	bvs	diff_err2.end