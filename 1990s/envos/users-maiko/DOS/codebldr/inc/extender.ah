;  extender.ah - DOS extender Global Data Area and Profile structures;  $Version: 1.12 $;  Copyright 1990 Intel Corporation, ALL RIGHTS RESERVED.;;  CAUTION: Changing the data referenced by these structures may have;  detrimental consequences not only for your software application, but;  also your computer system (ie file system CORRUPTION).  Ensure a;  complete and thorough understanding of the extender environment prior to;  attempting to modify data through these structures.  For more;  information, contact Intel technical support to obtain the Developers';  Notes.;                                        ;* -------- REX File Header -------- *;REX_HEAD STRUC                          ;* ================================= *;   SIGNATURE            DW  ?           ;* Signature: 'MQ'                   *;   SIZE_MOD             DW  ?           ;* File size (bytes) modulo 512      *;   SIZE_BLKS            DW  ?           ;* File size in 512-byte blocks      *;   RELOC_ITEMS          DW  ?           ;* Number of relocation items        *;   HEADER_SIZE          DW  ?           ;* Size of header in paragraphs      *;   MIN_DATA_4K          DW  ?           ;* Minimum data in 4K pages          *;   MAX_DATA_4K          DW  ?           ;* Maximum data in 4K pages          *;   INITIAL_ESP          DD  ?           ;* Initial ESP (Stack pointer)       *;   CHECKSUM             DW  ?           ;* Checksum for file                 *;   INITIAL_EIP          DD  ?           ;* Initial EIP (Instruction pointer) *;   FIRST_RELOC          DW  ?           ;* Offset of first relocation item   *;   OVERLAY              DW  ?           ;* Overlay number (Always 0)         *;   CONSTANT_1           DW  ?           ;* Constant: 0001h                   *;REX_HEAD ENDS                           ;* --------------------------------- *;                                        ;* ----- Intel Interrupt Table ----- *;INTEL_TABLE STRUC                       ;* ================================= *;   ADDRESS              DD  ?           ;* Interrupt handler    Flat address *;   IT_RESERVED          DB  4 DUP(?)    ;*                                   *;INTEL_TABLE ENDS                        ;* --------------------------------- *;                                        ;* ----- High Interrupt Table ------ *;HINT_TABLE STRUC                        ;* ================================= *;   USER_ROUTINE         DD  ?           ;* User handler         Flat address *;   V86_ROUTINE          DD  ?           ;* V86 Handler     Segmented address *;HINT_TABLE ENDS                         ;* --------------------------------- *;                                        ;* --- Overlay Parameter Block ----- *;OVL_STRUC STRUC                         ;* ================================= *;   OVL_TGTP             DD  ?           ;* Load target          Flat address *;   OVL_RELP             DD  ?           ;* Relocation           Flat address *;   OVL_MODL             DD  ?           ;* Overlay module length             *;   OVL_BUF              DD  ?           ;* I/O buffer address                *;   OVL_BUFFSZ           DD  ?           ;* I/O buffer size                   *;   OVL_REXH             DW  14 DUP(?)   ;* REX header information            *;   OVL_FILE             DB  65 DUP(?)   ;* Overlay module filespec           *;   OVL_EIP              DD  ?           ;* Entry point                       *;OVL_STRUC ENDS                          ;* --------------------------------- *;                                        ;* -- Global Data Area Structure --- *;_GDA STRUC                              ;* ================================= *;   GDA_EYE              DB  4 DUP(?)    ;* Eye catcher                       *;   GDA_RLSE             DB  4 DUP(?)    ;* Release level                     *;   GDA_PRV              DD  ?           ;* Previous GDA         Flat address *;   GDA_NXT              DD  ?           ;* Next GDA             Flat address *;   GDA_PSPA             DD  ?           ;* PSP                  Flat address *;   GDA_PSPA6            DD  ?           ;*                 Segmented address *;   GDA_PRO              DD  ?           ;* Profile              Flat address *;   GDA_LDPT             DD  ?           ;* Application loadpt   Flat address *;   GDA_HINT             DD  ?           ;* High INT table       Flat address *;   GDA_TERM             DD  ?           ;* PSP_TERM        Segmented address *;   GDA_INTEL            DD  ?           ;* Intel INT table      Flat address *;   GDA_RESERVED00       DB  4 DUP(?)    ;* Reserved                          *;   GDA_SERV             DD  ?           ;* Extender services    Flat address *;                                        ;* entry point                       *;   GDA_LDCSEL           DD  ?           ;* Application selectors        Code *;   GDA_LDDSEL           DD  ?           ;*                              Data *;   GDA_HMEM             DD  ?           ;* Available high memory (Kbytes)    *;   GDA_LMEM             DD  ?           ;* Available low memory (Kbytes)     *;   GDA_TSTG             DD  ?           ;* Top of virtual storage (Kbytes)   *;   GDA_VSTK             DD  ?           ;* V86 INT low          Flat address *;   GDA_VSTK6            DD  ?           ;* memory stack    Segmented address *;   GDA_HLOD             DD  ?           ;* Highest used load address         *;   GDA_TLOW             DD  ?           ;* Highest used low memory address   *;   GDA_LBUFF            DD  ?           ;* Low memory           Flat address *;   GDA_LBUFF6           DD  ?           ;* user buffer     Segmented address *;   GDA_BUFFSZ           DD  ?           ;*              Buffer size (Kbytes) *;   GDA_WORK             DD  ?           ;* Low memory           Flat address *;   GDA_WORK6            DD  ?           ;* user work       Segmented address *;   GDA_WORKSZ           DD  ?           ;* area          Buffer size (bytes) *;   GDA_STK              DD  ?           ;* Stack                Flat address *;   GDA_STKSZ            DD  ?           ;*                   Length (Kbytes) *;   GDA_MSTKSZ           DD  ?           ;*               Max length (Kbytes) *;   GDA_VBUFF            DD  ?           ;* Virtual memory       Flat address *;   GDA_VBUFF6           DD  ?           ;* low memory      Segmented address *;   GDA_VBUFFSZ          DD  ?           ;* buffers       Max length (Kbytes) *;   GDA_VWRK             DD  ?           ;* Virtual memory       Flat address *;   GDA_VWRK6            DD  ?           ;* low memory      Segmented address *;   GDA_VWRKSZ           DD  ?           ;* work area            Size (bytes) *;   GDA_DTA              DD  ?           ;* Low memory           Flat address *;   GDA_DTA6             DD  ?           ;* disk transfer    Segmented offset *;   GDA_DTASZ            DD  ?           ;* area             Max size (bytes) *;   GDA_HBASE            DD  ?           ;* Origin of high memory             *;   GDA_RESERVED01       DB  8 DUP(?)    ;* Reserved                          *;   GDA_VMB              DD  ?           ;* Location             Flat address *;   GDA_VMB6             DD  ?           ;* of VMLD         Segmented address *;   GDA_RESERVED02       DB  3 DUP(?)    ;* Reserved                          *;   GDA_ENV              DB  ?           ;* Environment byte                  *;   GDA_RESERVED03       DB  2 DUP(?)    ;* Reserved                          *;   GDA_VID              DW  ?           ;* Display buffer size (64-byte blks)*;   GDA_RESERVED04       DB  30 DUP(?)   ;* Reserved                          *;   GDA_RC               DB  ?           ;* Termination code                  *;   GDA_SYS              DB  ?           ;* System type information           *;   GDA_VSTKSZ           DD  ?           ;* V86 INT stack size                *;   GDA_OVLPRM           DD  ?           ;* Overlay load params  Flat address *;   GDA_LOADER           DD  ?           ;* Entry point for overlay loader    *;   GDA_MBA              DD  ?           ;* Memory block area address         *;   GDA_RESERVED06       DB  28 DUP (?)  ;* Reserved                          *;   GDA_I24              DD  ?           ;* Reserved for internal use         *;   GDA_MOUSE            DD  ?           ;* Mouse cleanup routine             *;   GDA_R1               DD  ?           ;* Reserved for internal use         *;   GDA_R2               DD  ?           ;*  "        "     "      "          *;   GDA_R3               DD  ?           ;*  "        "     "      "          *;   GDA_R4               DD  ?           ;*  "        "     "      "          *;   GDA_U1               DD  ?           ;* Reserved for user                 *;   GDA_U2               DD  ?           ;*  "        "   "                   *;   GDA_U3               DD  ?           ;*  "        "   "                   *;   GDA_U4               DD  ?           ;*  "        "   "                   *;   GDA_U5               DD  ?           ;*  "        "   "                   *;   GDA_U6               DD  ?           ;*  "        "   "                   *;   GDA_U7               DD  ?           ;*  "        "   "                   *;   GDA_U8               DD  ?           ;*  "        "   "                   *;   GDA_EMUL             DD  ?           ;* For Use by Emulator               *;   GDA_RESERVED07       DB  60 DUP (?)  ;* Reserved                          *;_GDA ENDS                               ;* --------------------------------- *;                                                                              ;                                        ;* ------- Profile Structure ------- *;_PROFILE STRUC                          ;* ================================= *;   PRO_EYE              DB  4 DUP(?)    ;* 'PRO '                            *;   PRO_RLSE             DB  4 DUP(?)    ;* Profile release level             *;   PRO_PRO              DD  ?           ;* Pointer to           Flat address *;   PRO_PRO6             DD  ?           ;* profile         Segmented address *;   PRO_SOP_EYE          DB  4 DUP(?)    ;* 'SOP='               Stack Option *;   PRO_SOP              DB  ?           ;* = I  - Internal stack             *;   PRO_RESERVED00       DB  11 DUP(?)   ;* Reserved                          *;   PRO_SSZ_EYE          DB  4 DUP(?)    ;* 'SSZ='        Stack size (Kbytes) *;   PRO_SSZ              DD  ?           ;* (May be zero if option is I)      *;   PRO_MST_EYE          DB  4 DUP(?)    ;* 'MST='                            *;   PRO_MST              DD  ?           ;* Max stack size (Kbytes)           *;   PRO_RESERVED01       DB  24 DUP(?)   ;* Reserved                          *;   PRO_ANM_EYE          DB  4 DUP(?)    ;* 'ANM='                            *;   PRO_ANM              DB  65 DUP(?)   ;* ASCIIZ program name               *;   PRO_RESERVED02       DB  3 DUP(?)    ;* Reserved                          *;   PRO_PNM_EYE          DB  4 DUP(?)    ;* 'PNM='                            *;   PRO_PNM              DB  65 DUP(?)   ;* Used by graphics library          *;   PRO_RESERVED03       DB  75 DUP(?)   ;* Reserved                          *;   PRO_BSZ_EYE          DB  4 DUP(?)    ;* 'BSZ='       User low buffer size *;   PRO_BSZ              DD  ?           ;* Default: 40 Kbytes                *;   PRO_VBF_EYE          DB  4 DUP(?)    ;* 'VBF='         VM low buffer size *;   PRO_VBF              DD  ?           ;* Default: 4 Kbytes                 *;   PRO_DTA_EYE          DB  4 DUP(?)    ;* 'DTA='    Disk Transfer Area size *;   PRO_DTA              DD  ?           ;* Default: 0 bytes                  *;   PRO_WRK_EYE          DB  4 DUP(?)    ;* 'WRK='    User low work area size *;   PRO_WRK              DD  ?           ;* Default: 16 Kbytes                *;   PRO_VWK_EYE          DB  4 DUP(?)    ;* 'VWK='      VM low work area size *;   PRO_VWK              DD  ?           ;* Default: 16 Kbytes                *;   PRO_DOS_EYE          DB  4 DUP(?)    ;* 'DOS='          DOS reserved area *;   PRO_DOS              DD  ?           ;* Default: -1 (All available)       *;   PRO_RESERVED04       DB  96 DUP(?)   ;* Reserved                          *;   PRO_ORG_EYE          DB  4 DUP(?)    ;* 'ORG='                            *;   PRO_ORG              DD  ?           ;* Linear address high origin        *;   PRO_RGN_EYE          DB  4 DUP(?)    ;* 'RGN='                            *;   PRO_RGN              DD  ?           ;* Minimum region size (bytes)       *;   PRO_RESERVED05       DB  64 DUP(?)   ;* Reserved                          *;                                        ;* User parameters                   *;   PRO_US1_EYE          DB  4 DUP(?)    ;* 'US1='                            *;   PRO_US1              DD  ?           ;* User parameter 1                  *;   PRO_US2_EYE          DB  4 DUP(?)    ;* 'US2='                            *;   PRO_US2              DD  ?           ;* User parameter 2                  *;   PRO_US3_EYE          DB  4 DUP(?)    ;* 'US3='                            *;   PRO_US3              DD  ?           ;* User parameter 3                  *;   PRO_US4_EYE          DB  4 DUP(?)    ;* 'US4='                            *;   PRO_US4              DD  ?           ;* User parameter 4                  *;   PRO_US5_EYE          DB  4 DUP(?)    ;* 'US5='                            *;   PRO_US5              DD  ?           ;* User parameter 5                  *;   PRO_US6_EYE          DB  4 DUP(?)    ;* 'US6='                            *;   PRO_US6              DD  ?           ;* User parameter 6                  *;   PRO_US7_EYE          DB  4 DUP(?)    ;* 'US7='                            *;   PRO_US7              DD  ?           ;* User parameter 7                  *;   PRO_US8_EYE          DB  4 DUP(?)    ;* 'US8='                            *;   PRO_US8              DD  ?           ;* User parameter 8                  *;   PRO_SWP_EYE          DB  4 DUP(?)    ;* 'SWP='                            *;   PRO_SWP              DB  65 DUP(?)   ;* Demand paging swap file           *;   PRO_RESERVED06       DB  40 DUP(?)   ;* Reserved                          *;_PROFILE ENDS                           ;* --------------------------------- *;                                        ;* gda_env values ------------------ *;GDA_COLOR       EQU     80H             ;* Color monitor                     *;GDA_PGO         EQU     40H             ;* Stand alone page data set opened  *;GDA_PGC         EQU     20H             ;* Stand alone page data set created *;GDA_DPMI        EQU     10H             ;* DPMI-hosted (not stand alone)     *;GDA_XMS         EQU     08H             ;* Extended memoru allocated via XMS *;GDA_IPL         EQU     04H             ;* Reboot the system                 *;GDA_WIN30       EQU     02H             ;* DPMI host is Windows 3.0          *;GDA_WEITEK      EQU     01H             ;* WEITEK Co-processor detected      *;                                        ;* gda_sys values -------------------*;GDA_VCPI        EQU     80H             ; VCPI host is active                *;GDA_WINXX       EQU     40H             ; Windows is active                  *;GDA_EMACT       EQU     04H             ; FP emulation is active             *;RC_IDT          EQU     1               ;* Error during IDT processing       *;RC_LDT          EQU     2               ;* Error building LDT entries        *;RC_CMD          EQU     3               ;* Error during command line scan    *;RC_ENV          EQU     4               ;* Error during environment scan     *;RC_REX          EQU     5               ;* Error during rex header processing*;RC_HMEM         EQU     6               ;* Error during high memory analysis *;RC_AMEM         EQU     7               ;* Error during high memory alloc    *;