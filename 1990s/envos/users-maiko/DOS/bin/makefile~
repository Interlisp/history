###########################################################	Makefile for DOS version of Medley##	Copyright 1992 Venue (C) All Rights Reserved.############################################################ Default values for Maiko makefile variables# These get overridden by OS and hardware-specific stuff# in sub-makefilesRELEASENAME = DOS486OSARCHNAME  = DOS486LDENAME     = MEDLEY.EXEINSDIR      =SRCDIR = ..\src\\INCDIR = ..\inc\\BINDIR = .\\RELDIR = ..\RELEASE\\# for the files that need to be included in byte-swapped implementations:BYTESWAPFILES = $(OBJECTDIR)byteswap.oSXHASHFILE = $(OBJECTDIR)sxhash.oBITBLTFILE = # for files needed by X windows versionXFILES =# for files needed by color (actually files NOT needed by X)COLORFILES = $(OBJECTDIR)rawcolor.o $(OBJECTDIR)llcolor.o# Options for SunOS4 and SPARC#  @(#) makefile-sunos4.sparc Version 1.19 (5\9/90). ## This is to make the %$#@! Apollo cc happyOEXT = .o# OPTFLAGS is normally /O2.OPTFLAGS = /O3 DISPOPTFLAGS = /O3 FPFLAGS =# Now share the same ldesingle with COLOR(CG4)/MONO Suns# If you load MAIKOCOLOR.LCOM etc., you can use color functionsDFLAGS = @DOSopts#had been /lc /lm, but icc complained:LDFLAGS = graphics.lib binmode.lib mouse.lib# SPARC Assemble optimize check#-Dsparc?INLINE =BITBLTFILE =OBJECTDIR = ..\$(RELEASENAME)\\default : ..\$(OSARCHNAME)\lde ..# Special rules to create xc.c on DOS#run cpp to expand macros$(OBJECTDIR)xc.o:       $(SRCDIR)xc.c $(INCDIR)lispemul.h $(INCDIR)emlglob.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)cell.h \         $(INCDIR)initatms.h  $(INCDIR)gc.h  \         $(INCDIR)arith.h $(INCDIR)stream.h \         $(INCDIR)tos1defs.h  $(INCDIR)tosret.h \         $(INCDIR)tosfns.h  $(INCDIR)inlineC.h   \         $(INCDIR)inlnPS2.h        $(CC) $(RFLAGS) /I$(INCDIR) $(SRCDIR)xc.c /o $(OBJECTDIR)xc.o# remainder of makefile######***********************************************************************/##                                                                      */##      (C) Copyright 1989, 1990, 1991 Venue. All Rights Reserved.      */##      Manufactured in the United States of America.                   */##                                                                      */##      The contents of this file are proprietary information           */##      belonging to Venue, and are provided to you under license.      */##      They may not be further distributed or disclosed to third       */##      parties without the specific permission of Venue.               */##                                                                      */##***********************************************************************/##### NOTE:  to add a NEW object file you must#               1.      Add the file.o to one of the object file lists,#                       (i.e. OFILES, GCFILES, DEVICES, etc).#               2.      Add the "how to make" & dependency info such as:##       $(OBJECTDIR)<<file-name>>.o :  $(SRCDIR)<<file-name>>.c \#                $(INCDIR)lispemul.h  \#                $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \#                $(INCDIR)stack.h  $(INCDIR)emlglob.h  $(INCDIR)lispmap.h \#                $(INCDIR)gc.h#               $(CC) $(RFLAGS) $(SRCDIR)<<file-name>>.c $(INLINE) /o $(OBJECTDIR)<<file-name>>.o# to build sysouts on the sun, you must do the following:#       1. setenv OPTFLAGS '-DINIT -g'#       2. rm objectdir/bitblt.c objectdir/dspsubrs.c objectdir/keyevent.c#       3. makeright -e init#       4. follow the instructions on {eris}<lispcore>sunloadup>howto-loadup-sunlisp.txt# '90/04/23 osamu: $INSDIR is defined in makeright ##INSDIR = $(RELDIR)install.$(RELEASENAME)\\CHKDIR = $(RELDIR)checksumdir\\SCRPTDIR = $(RELDIR)scripts\\NATDIR = $(RELDIR)usernative\\# OSARCHDIR is the os/architecture dir, where executables all go.OSARCHDIR = ..\$(OSARCHNAME)\\##  The DISPxxx flags are for compiling files which rely on 'as' much#  more than the other files do.  For mc68020, it'll use optimization#  -O rather than -O2 which is good for the other files in the system#  [JDS 10-26-89] Files affected: xc, arith2, arith4, fvar.#CFLAGS = $(OPTFLAGS) $(DFLAGS) $(FPFLAGS)DISPCFLAGS = $(DISPOPTFLAGS) $(DFLAGS) $(FPGLAGS)RFLAGS = -c $(CFLAGS) /I$(INCDIR)DISPRFLAGS = -c $(DISPCFLAGS) /I$(INCDIR)KEYON  = $(OBJECTDIR)keytst.oKEYOFF = $(OBJECTDIR)keytstno.oOFILES = 	$(OBJECTDIR)arith2.o \        $(OBJECTDIR)arith3.o \        $(OBJECTDIR)arith4.o \        $(OBJECTDIR)array.o \        $(OBJECTDIR)array2.o \        $(OBJECTDIR)array3.o \        $(OBJECTDIR)array4.o \        $(OBJECTDIR)array5.o \        $(OBJECTDIR)array6.o \        $(OBJECTDIR)atom.o \        $(OBJECTDIR)bin.o \        $(OBJECTDIR)binds.o  \        $(OBJECTDIR)bitblt.o  \        $(OBJECTDIR)bbtsub.o  \        $(OBJECTDIR)blt.o \        $(OBJECTDIR)carcdr.o \        $(OBJECTDIR)chardev.o \        $(OBJECTDIR)common.o \        $(OBJECTDIR)conspage.o \        $(OBJECTDIR)mkcell.o \        $(OBJECTDIR)draw.o \        $(OBJECTDIR)findkey.o \        $(OBJECTDIR)fvar.o \        $(OBJECTDIR)xc.o \        $(OBJECTDIR)gc.o \        $(OBJECTDIR)gc2.o \        $(OBJECTDIR)gvar2.o \        $(OBJECTDIR)hardrtn.o \        $(OBJECTDIR)inet.o \        $(OBJECTDIR)intcall.o \        $(OBJECTDIR)keylib.o \        $(OBJECTDIR)lineblt8.o \        $(OBJECTDIR)lsthandl.o \        $(OBJECTDIR)llcolor.o \        $(OBJECTDIR)llstk.o \        $(OBJECTDIR)loopsops.o \        $(OBJECTDIR)lowlev1.o \        $(OBJECTDIR)lowlev2.o \        $(OBJECTDIR)misc7.o \        $(OBJECTDIR)mvs.o \        $(OBJECTDIR)return.o \        $(OBJECTDIR)rplcons.o \        $(OBJECTDIR)shift.o \        $(OBJECTDIR)subr.o \        $(OBJECTDIR)miscn.o \        $(OBJECTDIR)subr0374.o \        $(OBJECTDIR)timer.o \        $(OBJECTDIR)typeof.o \        $(OBJECTDIR)unwind.o \        $(OBJECTDIR)vars3.o \        $(OBJECTDIR)unixcomm.o \        $(OBJECTDIR)uraid.o \        $(OBJECTDIR)rpc.o \        $(OBJECTDIR)ufn.o \        $(OBJECTDIR)z2.o \        $(OBJECTDIR)eqf.o \        $(OBJECTDIR)fp.o \        $(OBJECTDIR)ubf1.o \        $(OBJECTDIR)ubf2.o \        $(OBJECTDIR)ubf3.o \        $(OBJECTDIR)uutils.o \        $(OBJECTDIR)perrno.o \        $(OBJECTDIR)foreign.o \        $(OBJECTDIR)lisp2c.o \        $(OBJECTDIR)hacks.o \        $(OBJECTDIR)osmsg.o \	$(OBJECTDIR)doscomm.o \	$(OBJECTDIR)dspif.o \	$(OBJECTDIR)vgainit.o \	$(OBJECTDIR)vesainit.o \	$(OBJECTDIR)vesafns.oGCFILES = $(OBJECTDIR)gcscan.o \        $(OBJECTDIR)gcarray.o \        $(OBJECTDIR)gccode.o \        $(OBJECTDIR)gcfinal.o \        $(OBJECTDIR)gcrcell.o \        $(OBJECTDIR)gchtfind.o \        $(OBJECTDIR)gcmain3.o \        $(OBJECTDIR)gcr.o \        $(OBJECTDIR)gcoflow.oDEVICES = $(OBJECTDIR)dspsubrs.o \        $(OBJECTDIR)initdsp.o \        $(OBJECTDIR)dsk.o \        $(OBJECTDIR)ufs.o \        $(OBJECTDIR)dir.o \        $(OBJECTDIR)keyevent.o \        $(OBJECTDIR)kbdsubrs.o \        $(OBJECTDIR)ether.o \        $(OBJECTDIR)initkbd.oTESTFILES = $(OBJECTDIR)dbgtool.o \        $(OBJECTDIR)testtool.o \        $(OBJECTDIR)Kprint.oMAINFILES = $(OBJECTDIR)main.o \        $(OBJECTDIR)initsout.o \        $(OBJECTDIR)storage.o \        $(OBJECTDIR)allocmds.o \        $(OBJECTDIR)vmemsave.o \        $(OBJECTDIR)mkatom.o \        $(OBJECTDIR)ldsout.oSXHASHFILE = $(OBJECTDIR)sxhash.oVFILE = $(OBJECTDIR)vdateDEVFILES = $(OFILES) $(KEYOFF) $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) \        $(GCFILES) $(SXHASHFILE) $(BITBLTFILE) $(XFILES) $(COLORFILES)LIBFILES = $(OFILES) $(KEYON)  $(TESTFILES) $(BYTESWAPFILES) $(MAINFILES) $(DEVICES) \        $(GCFILES) $(SXHASHFILE) $(BITBLTFILE) $(XFILES) $(COLORFILES)EXTFILES = $(OBJECTDIR)usrsubr.o#for unix, /bin/rm -f:RM = del# execute to make \tmp\vdate.c################################################################################# Development targets - copyprotect is OFF here################################################################################default : $(OSARCHDIR)lde $(OSARCHDIR)$(LDENAME) \        $(OSARCHDIR)tstsout $(OSARCHDIR)setsout$(OSARCHDIR)lde: $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c        $(CC) $(CFLAGS) /I$(INCDIR) $(SRCDIR)ldeboot.c \                $(LDELDFLAGS) /o $(OSARCHDIR)lde$(OSARCHDIR)$(LDENAME) :       $(DEVFILES) $(EXTFILES) $(OSARCHDIR)mkvdate        $(RM) $(VFILE).c        $(OSARCHDIR)mkvdate > $(VFILE).c        $(CC) $(CFLAGS) @LINKOPTS $(EXTFILES) $(VFILE).c \                $(LDFLAGS) /e$(OSARCHDIR)$(LDENAME)        @ echo ""        @ echo "Executable is now named '$(OSARCHDIR)$(LDENAME)'"$(OSARCHDIR)ldeether :  $(SRCDIR)ldeether.c        $(CC) $(CFLAGS) $(SRCDIR)ldeether.c /o $(OSARCHDIR)ldeether        @ echo ""        @ echo "ethernet kickstart is now named 'ldeether'"        @ echo "Now making ldeether setuid root"        - rsh python "(cd `pwd`;\users\maiko\bin\suid $(OSARCHDIR)ldeether)"        ls -l $(OSARCHDIR)ldeether$(OSARCHDIR)mkvdate     : $(SRCDIR)mkvdate.c        $(CC) $(CFLAGS) $(SRCDIR)mkvdate.c /o $(OSARCHDIR)mkvdate$(OSARCHDIR)tstsout : $(OBJECTDIR)tstsout.o        $(CC) $(OBJECTDIR)tstsout.o -lc -lm /o $(OSARCHDIR)tstsout$(OSARCHDIR)setsout : $(OBJECTDIR)setsout.o        $(CC) $(OBJECTDIR)setsout.o -lc -lm /o $(OSARCHDIR)setsout$(OSARCHDIR)testdsp :  $(SRCDIR)testdsp.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)display.h $(INCDIR)dbprint.h        $(CC) $(CFLAGS) -DDEBUG /I$(INCDIR) $(SRCDIR)testdsp.c -lsuntool -lsunwindow  -lpixrect -lc -lm /o $(OSARCHDIR)testdsp#### Component files ######################################################$(OBJECTDIR)tstsout.o: $(SRCDIR)tstsout.c        $(CC) -c $(SRCDIR)tstsout.c /I..\inc  /o $(OBJECTDIR)tstsout.o$(OBJECTDIR)setsout.o: $(SRCDIR)setsout.c         $(CC) -c $(SRCDIR)setsout.c /I..\inc  /o $(OBJECTDIR)setsout.o$(OBJECTDIR)main.o : $(SRCDIR)main.c $(INCDIR)lispemul.h \         $(INCDIR)emlglob.h  $(INCDIR)address.h $(INCDIR)lsptypes.h \         $(INCDIR)adr68k.h  $(INCDIR)stack.h  $(INCDIR)lspglob.h \         $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \         $(INCDIR)return.h $(INCDIR)debug.h $(INCDIR)profile.h        $(CC) $(RFLAGS) $(SRCDIR)main.c $(INLINE) /o $(OBJECTDIR)main.o$(OBJECTDIR)dbgtool.o :  $(SRCDIR)dbgtool.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)cell.h  $(INCDIR)stack.h        $(CC) $(RFLAGS) $(SRCDIR)dbgtool.c $(INLINE) /o $(OBJECTDIR)dbgtool.o$(OBJECTDIR)Kprint.o :  $(SRCDIR)Kprint.c $(INCDIR)print.h  \         $(INCDIR)address.h  $(INCDIR)lispemul.h \         $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h  $(INCDIR)initatms.h \         $(INCDIR)cell.h  $(INCDIR)emlglob.h  $(INCDIR)lispmap.h \         $(INCDIR)adr68k.h        $(CC) $(RFLAGS) $(SRCDIR)Kprint.c $(INLINE) /o $(OBJECTDIR)Kprint.o$(OBJECTDIR)testtool.o :  $(SRCDIR)testtool.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)cell.h  $(INCDIR)stack.h  $(INCDIR)ifpage.h        $(CC) $(RFLAGS) $(SRCDIR)testtool.c $(INLINE) /o $(OBJECTDIR)testtool.o$(OBJECTDIR)allocmds.o :  $(SRCDIR)allocmds.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \         $(INCDIR)initatms.h  $(INCDIR)sysatms.h  $(INCDIR)lspglob.h        $(CC) $(RFLAGS) $(SRCDIR)allocmds.c $(INLINE) /o $(OBJECTDIR)allocmds.o$(OBJECTDIR)arith2.o :  $(SRCDIR)arith2.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)adr68k.h  $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h \         $(INCDIR)arith.h $(INCDIR)fp.h $(INLINE)        $(CC) $(DISPRFLAGS) $(SRCDIR)arith2.c $(INLINE) /o $(OBJECTDIR)arith2.o$(OBJECTDIR)arith3.o :  $(SRCDIR)arith3.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h  $(INLINE) \         $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)arith3.c $(INLINE) /o $(OBJECTDIR)arith3.o$(OBJECTDIR)arith4.o :  $(SRCDIR)arith4.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h $(INLINE) \         $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)arith.h $(INCDIR)fp.h        $(CC) $(DISPRFLAGS) $(SRCDIR)arith4.c $(INLINE) /o $(OBJECTDIR)arith4.o$(OBJECTDIR)array.o :  $(SRCDIR)array.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h $(INCDIR)fp.h $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)array.c $(INLINE) /o $(OBJECTDIR)array.o$(OBJECTDIR)array3.o :  $(SRCDIR)array3.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h $(INCDIR)fp.h  $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)array3.c $(INLINE) /o $(OBJECTDIR)array3.o$(OBJECTDIR)array5.o :  $(SRCDIR)array5.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h $(INCDIR)fp.h $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)array5.c $(INLINE) /o $(OBJECTDIR)array5.o$(OBJECTDIR)atom.o :  $(SRCDIR)atom.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h        $(CC) $(RFLAGS) $(SRCDIR)atom.c $(INLINE) /o $(OBJECTDIR)atom.o$(OBJECTDIR)bin.o :  $(SRCDIR)bin.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)stream.h        $(CC) $(RFLAGS) $(SRCDIR)bin.c $(INLINE) /o $(OBJECTDIR)bin.o$(OBJECTDIR)binds.o :  $(SRCDIR)binds.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)emlglob.h        $(CC) $(RFLAGS) $(SRCDIR)binds.c $(INLINE) /o $(OBJECTDIR)binds.o$(OBJECTDIR)bitblt.o :  $(SRCDIR)bitblt.c $(INCDIR)lispemul.h \          $(INCDIR)lspglob.h  $(INCDIR)lispmap.h \         $(INCDIR)emlglob.h  $(INCDIR)adr68k.h  $(INCDIR)address.h \         $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \         $(INCDIR)bb.h        $(CC) $(RFLAGS) $(SRCDIR)bitblt.c $(INLINE) /o $(OBJECTDIR)bitblt.o$(OBJECTDIR)bbt68k.o :  $(OBJECTDIR)bbt68k.i $(SRCDIR)bbt68k.s        as -O $(OBJECTDIR)bbt68k.i /o $(OBJECTDIR)bbt68k.o$(OBJECTDIR)bbt68k.i : $(SRCDIR)bbt68k.s        \lib\cpp $(SRCDIR)bbt68k.s $(OBJECTDIR)bbt68k.i$(OBJECTDIR)bbt386i.o :  $(SRCDIR)bbt386i.s $(OBJECTDIR)bbt386i.i        as $(OBJECTDIR)bbt386i.i /o $(OBJECTDIR)bbt386i.o$(OBJECTDIR)bbt386i.i : $(SRCDIR)bbt386i.s        \lib\cpp $(SRCDIR)bbt386i.s $(OBJECTDIR)bbt386i.i$(OBJECTDIR)bbtsub.o :  $(SRCDIR)bbtsub.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h \         $(INCDIR)emlglob.h  $(INCDIR)adr68k.h  $(INCDIR)address.h \         $(INCDIR)pilotbbt.h  $(INCDIR)display.h $(INCDIR)dspdata.h \         $(INCDIR)bitblt.h $(INCDIR)bb.h $(INCDIR)dbprint.h \         $(INCDIR)stack.h $(INCDIR)cell.h $(INCDIR)gc.h $(INCDIR)arith.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)bbtsub.c $(INLINE) /o $(OBJECTDIR)bbtsub.o$(OBJECTDIR)blt.o :  $(SRCDIR)blt.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \         $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)blt.c $(INLINE) /o $(OBJECTDIR)blt.o$(OBJECTDIR)byteswap.o: $(SRCDIR)byteswap.c $(INLINE)        $(CC) $(RFLAGS) $(SRCDIR)byteswap.c $(INLINE) /o $(OBJECTDIR)byteswap.o$(OBJECTDIR)carcdr.o :   $(SRCDIR)carcdr.c  $(INCDIR)lispemul.h  \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)gc.h  $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)carcdr.c  $(INLINE) /o $(OBJECTDIR)carcdr.o$(OBJECTDIR)chardev.o : $(SRCDIR)chardev.c $(INCDIR)lispemul.h \         $(INCDIR)lispmap.h  $(INCDIR)lspglob.h $(INCDIR)stream.h \         $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)osmsg.h  $(INCDIR)arith.h $(INCDIR)locfile.h        $(CC) $(RFLAGS) $(SRCDIR)chardev.c $(INLINE) /o $(OBJECTDIR)chardev.o$(OBJECTDIR)rawcolor.o :  $(SRCDIR)rawcolor.c $(INCDIR)lispemul.h \         $(INCDIR)lspglob.h  $(INCDIR)lispmap.h $(INCDIR)lsptypes.h \         $(INCDIR)emlglob.h  $(INCDIR)adr68k.h  $(INCDIR)address.h \         $(INCDIR)pilotbbt.h  $(INCDIR)display.h  $(INCDIR)bitblt.h \         $(INCDIR)arith.h $(INCDIR)dspdata.h $(INCDIR)debug.h \         $(INCDIR)stream.h        $(CC) $(RFLAGS) $(SRCDIR)rawcolor.c $(INLINE) /o $(OBJECTDIR)rawcolor.o$(OBJECTDIR)llcolor.o : $(SRCDIR)llcolor.c $(INCDIR)lispemul.h $(INCDIR)lispmap.h \        $(INCDIR)lsptypes.h $(INCDIR)address.h $(INCDIR)adr68k.h \        $(INCDIR)lspglob.h $(INCDIR)emlglob.h $(INCDIR)display.h \        $(INCDIR)devconf.h $(INCDIR)bb.h $(INCDIR)bitblt.h $(INCDIR)pilotbbt.h \        $(INCDIR)dbprint.h        $(CC) $(RFLAGS) $(SRCDIR)llcolor.c $(INLINE) /o $(OBJECTDIR)llcolor.o$(OBJECTDIR)lineblt8.o :  $(SRCDIR)lineblt8.c $(INCDIR)lispemul.h         $(CC) $(RFLAGS) $(SRCDIR)lineblt8.c $(INLINE) /o $(OBJECTDIR)lineblt8.o$(OBJECTDIR)common.o :  $(SRCDIR)common.c $(INCDIR)lispemul.h \         $(INCDIR)lispmap.h $(INCDIR)adr68k.h $(INCDIR)lspglob.h \         $(INCDIR)emlglob.h        $(CC) $(RFLAGS) $(SRCDIR)common.c $(INLINE) /o $(OBJECTDIR)common.o$(OBJECTDIR)conspage.o :  $(SRCDIR)conspage.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)cell.h  $(INCDIR)lispmap.h \         $(INCDIR)gc.h  $(INCDIR)lspglob.h        $(CC) $(RFLAGS) $(SRCDIR)conspage.c $(INLINE) /o $(OBJECTDIR)conspage.o$(OBJECTDIR)mkcell.o :  $(SRCDIR)mkcell.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)gc.h        $(CC) $(RFLAGS) $(SRCDIR)mkcell.c $(INLINE) /o $(OBJECTDIR)mkcell.o$(OBJECTDIR)draw.o :  $(SRCDIR)draw.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)draw.c $(INLINE) /o $(OBJECTDIR)draw.o# $(OBJECTDIR)dosbbt.o :  $(SRCDIR)dosbbt.c#        $(CC) $(RFLAGS) $(SRCDIR)dosbbt.c /o $(OBJECTDIR)dosbbt.o################# $(OBJECTDIR)dosbbt.o :  $(SRCDIR)dosbbt.asm#      $(CC) $(RFLAGS) /T $(SRCDIR)dosbbt.asm#      mv dosbbt.obj $(OBJECTDIR)dosbbt.o##$(OBJECTDIR)vgafns.o :  $(SRCDIR)vgafns.asm#      $(CC) $(RFLAGS) /T $(SRCDIR)vgafns.asm#      mv vgafns.obj $(OBJECTDIR)vgafns.o$(OBJECTDIR)vgainit.o :  $(SRCDIR)vgainit.c        $(CC) $(RFLAGS) $(SRCDIR)vgainit.c /o $(OBJECTDIR)vgainit.o$(OBJECTDIR)vesainit.o :  $(SRCDIR)vesainit.c        $(CC) $(RFLAGS) $(SRCDIR)vesainit.c /o $(OBJECTDIR)vesainit.o$(OBJECTDIR)vesafns.o :  $(SRCDIR)vesafns.asm      $(CC) $(RFLAGS) /T $(SRCDIR)vesafns.asm      mv vesafns.obj $(OBJECTDIR)vesafns.o$(OBJECTDIR)dspif.o :  $(SRCDIR)dspif.c        $(CC) $(RFLAGS) $(SRCDIR)dspif.c /o $(OBJECTDIR)dspif.o################$(OBJECTDIR)doscomm.o :  $(SRCDIR)doscomm.c        $(CC) $(RFLAGS) $(SRCDIR)doscomm.c /o $(OBJECTDIR)doscomm.o$(OBJECTDIR)z2.o :  $(SRCDIR)z2.c  \         $(INCDIR)lispemul.h  $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)stack.h \         $(INCDIR)gc.h  $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)z2.c $(INLINE) /o $(OBJECTDIR)z2.o$(OBJECTDIR)eqf.o :  $(SRCDIR)eqf.c  $(INCDIR)fp.h \         $(INCDIR)lispemul.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)eqf.c $(INLINE) /o $(OBJECTDIR)eqf.o$(OBJECTDIR)fp.o :  $(SRCDIR)fp.c  \         $(INCDIR)lispemul.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h   \         $(INCDIR)my.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)fp.c $(INLINE) /o $(OBJECTDIR)fp.o$(OBJECTDIR)intcall.o :  $(SRCDIR)intcall.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h $(INCDIR)adr68k.h  $(INCDIR)lsptypes.h \         $(INCDIR)lispmap.h $(INCDIR)stack.h $(INCDIR)return.h \         $(INCDIR)emlglob.h $(INCDIR)lspglob.h $(INCDIR)initatms.h \         $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)intcall.c $(INLINE) /o $(OBJECTDIR)intcall.o$(OBJECTDIR)ubf1.o :  $(SRCDIR)ubf1.c $(INCDIR)fp.h \         $(INCDIR)lispemul.h  $(INCDIR)adr68k.h  $(INCDIR)lspglob.h \         $(INCDIR)lsptypes.h $(INCDIR)lispmap.h $(INCDIR)arith.h $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)ubf1.c $(INLINE) /o $(OBJECTDIR)ubf1.o$(OBJECTDIR)ubf2.o :  $(SRCDIR)ubf2.c  \         $(INCDIR)lispemul.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)ubf2.c $(INLINE) /o $(OBJECTDIR)ubf2.o$(OBJECTDIR)ubf3.o :  $(SRCDIR)ubf3.c  \         $(INCDIR)lispemul.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)ubf3.c $(INLINE) /o $(OBJECTDIR)ubf3.o$(OBJECTDIR)uutils.o :  $(SRCDIR)uutils.c  \         $(INCDIR)lsptypes.h $(INCDIR)keyboard.h        $(CC) $(RFLAGS) $(SRCDIR)uutils.c $(INLINE) /o $(OBJECTDIR)uutils.o$(OBJECTDIR)dspsubrs.o :  $(SRCDIR)dspsubrs.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)display.h $(INCDIR)lsptypes.h \         $(INCDIR)arith.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)dspsubrs.c $(INLINE) /o $(OBJECTDIR)dspsubrs.o$(OBJECTDIR)ether.o :  $(SRCDIR)ether.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)ether.h        $(CC) $(RFLAGS) $(SRCDIR)ether.c $(INLINE) /o $(OBJECTDIR)ether.o$(OBJECTDIR)findkey.o :  $(SRCDIR)findkey.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)stack.h  $(INCDIR)lspglob.h  $(INCDIR)adr68k.h        $(CC) $(RFLAGS) $(SRCDIR)findkey.c $(INLINE) /o $(OBJECTDIR)findkey.o$(OBJECTDIR)dsk.o :  $(SRCDIR)dsk.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h \         $(INCDIR)adr68k.h $(INCDIR)lsptypes.h $(INCDIR)lspglob.h \         $(INCDIR)fp.h $(INCDIR)arith.h  $(INCDIR)stream.h  $(INCDIR)timeout.h \         $(INCDIR)locfile.h $(INCDIR)osmsg.h $(INCDIR)dbprint.h        $(CC) $(RFLAGS) $(SRCDIR)dsk.c $(INLINE) /o $(OBJECTDIR)dsk.o$(OBJECTDIR)ufs.o :  $(SRCDIR)ufs.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  \         $(INCDIR)adr68k.h $(INCDIR)dbprint.h  $(INLINE)\         $(INCDIR)lsptypes.h  $(INCDIR)lspglob.h $(INCDIR)arith.h \         $(INCDIR)stream.h $(INCDIR)timeout.h $(INCDIR)locfile.h $(INCDIR)dbprint.h        $(CC) $(RFLAGS) $(SRCDIR)ufs.c $(INLINE) /o $(OBJECTDIR)ufs.o$(OBJECTDIR)dir.o :  $(SRCDIR)dir.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h $(INCDIR)adr68k.h $(INCDIR)lsptypes.h  \         $(INCDIR)arith.h $(INCDIR)lspglob.h $(INCDIR)timeout.h $(INCDIR)locfile.h              $(CC) $(RFLAGS) $(SRCDIR)dir.c $(INLINE) /o $(OBJECTDIR)dir.o$(OBJECTDIR)fvar.o :  $(SRCDIR)fvar.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)stack.h  $(INCDIR)emlglob.h  $(INCDIR)lispmap.h \         $(INCDIR)gc.h $(INCDIR)lsptypes.h        $(CC) $(DISPRFLAGS) $(SRCDIR)fvar.c $(INLINE) /o $(OBJECTDIR)fvar.o$(OBJECTDIR)gc.o :  $(SRCDIR)gc.c $(INCDIR)lispemul.h  $(INCDIR)gc.h  \         $(INCDIR)lspglob.h \         $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h        $(CC) $(RFLAGS) $(SRCDIR)gc.c $(INLINE) /o $(OBJECTDIR)gc.o$(OBJECTDIR)gc2.o :  $(SRCDIR)gc2.c $(INCDIR)lispemul.h  $(INCDIR)lispmap.h  \         $(INCDIR)lsptypes.h \         $(INCDIR)lspglob.h  $(INCDIR)emlglob.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h        $(CC) $(RFLAGS) $(SRCDIR)gc2.c $(INLINE) /o $(OBJECTDIR)gc2.o$(OBJECTDIR)gcarray.o :  $(SRCDIR)gcarray.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)stack.h \         $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \         $(INCDIR)array.h        $(CC) $(RFLAGS) $(SRCDIR)gcarray.c $(INLINE) /o $(OBJECTDIR)gcarray.o$(OBJECTDIR)gcfinal.o :  $(SRCDIR)gcfinal.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)stack.h \         $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h \         $(INCDIR)array.h        $(CC) $(RFLAGS) $(SRCDIR)gcfinal.c $(INLINE) /o $(OBJECTDIR)gcfinal.o$(OBJECTDIR)gcoflow.o :  $(SRCDIR)gcoflow.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)gc.h        $(CC) $(RFLAGS) $(SRCDIR)gcoflow.c $(INLINE) /o $(OBJECTDIR)gcoflow.o$(OBJECTDIR)gchtfind.o :  $(SRCDIR)gchtfind.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)gc.h \         $(INCDIR)lispmap.h  $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)gchtfind.c $(INLINE) /o $(OBJECTDIR)gchtfind.o$(OBJECTDIR)gcmain3.o :  $(SRCDIR)gcmain3.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \         $(INCDIR)gc.h        $(CC) $(RFLAGS) $(SRCDIR)gcmain3.c $(INLINE) /o $(OBJECTDIR)gcmain3.o$(OBJECTDIR)gcr.o :  $(SRCDIR)gcr.c $(INCDIR)lispemul.h  \         $(INCDIR)emlglob.h  $(INCDIR)lsptypes.h \         $(INCDIR)address.h  $(INCDIR)adr68k.h  $(INCDIR)lspglob.h \         $(INCDIR)stack.h  $(INCDIR)gc.h        $(CC) $(RFLAGS) $(SRCDIR)gcr.c $(INLINE) /o $(OBJECTDIR)gcr.o$(OBJECTDIR)gcrcell.o :  $(SRCDIR)gcrcell.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)address.h $(INCDIR)dbprint.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)stack.h \         $(INCDIR)cell.h  $(INCDIR)ifpage.h  $(INCDIR)gc.h        $(CC) $(RFLAGS) $(SRCDIR)gcrcell.c $(INLINE) /o $(OBJECTDIR)gcrcell.o$(OBJECTDIR)gccode.o :  $(SRCDIR)gccode.c \         $(INCDIR)lispemul.h  $(INCDIR)lsptypes.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)lispmap.h \         $(INCDIR)stack.h  $(INCDIR)cell.h  $(INCDIR)ifpage.h \         $(INCDIR)gc.h  $(INCDIR)array.h        $(CC) $(RFLAGS) $(SRCDIR)gccode.c $(INLINE) /o $(OBJECTDIR)gccode.o$(OBJECTDIR)gcscan.o :  $(SRCDIR)gcscan.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)gc.h $(INCDIR)lsptypes.h        $(CC) $(RFLAGS) $(SRCDIR)gcscan.c $(INLINE) /o $(OBJECTDIR)gcscan.o$(OBJECTDIR)gvar2.o :  $(SRCDIR)gvar2.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)gc.h  $(INCDIR)emlglob.h $(INCDIR)cell.h $(INCDIR)lsptypes.h        $(CC) $(RFLAGS) $(SRCDIR)gvar2.c $(INLINE) /o $(OBJECTDIR)gvar2.o$(OBJECTDIR)hardrtn.o :  $(SRCDIR)hardrtn.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)cell.h $(INCDIR)stack.h  $(INCDIR)return.h \         $(INCDIR)emlglob.h        $(CC) $(RFLAGS) $(SRCDIR)hardrtn.c $(INLINE) /o $(OBJECTDIR)hardrtn.o$(OBJECTDIR)inet.o : $(SRCDIR)inet.c $(INCDIR)lispemul.h $(INCDIR)arith.h \         $(INCDIR)lispmap.h $(INCDIR)lsptypes.h $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h $(INCDIR)adr68k.h $(INCDIR)ether.h \         $(INCDIR)dbprint.h $(INCDIR)locfile.h        $(CC) $(RFLAGS) $(SRCDIR)inet.c $(INLINE) /o $(OBJECTDIR)inet.o$(OBJECTDIR)initdsp.o :  $(SRCDIR)initdsp.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)address.h $(INCDIR)lsptypes.h \         $(INCDIR)adr68k.h  $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)display.h $(INCDIR)dbprint.h $(INLINE)        $(CC) $(RFLAGS) $(SRCDIR)initdsp.c $(INLINE) /o $(OBJECTDIR)initdsp.o$(OBJECTDIR)initkbd.o :  $(SRCDIR)initkbd.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)lspglob.h \         $(INCDIR)adr68k.h  $(INCDIR)address.h  $(INCDIR)iopage.h \         $(INCDIR)ifpage.h        $(CC) $(RFLAGS) $(SRCDIR)initkbd.c $(INLINE) /o $(OBJECTDIR)initkbd.o$(OBJECTDIR)initsout.o :  $(SRCDIR)initsout.c $(INCDIR)hdw_conf.h  \         $(INCDIR)lispemul.h  $(INCDIR)lspglob.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \         $(INCDIR)ifpage.h  $(INCDIR)iopage.h  $(INCDIR)cell.h \         $(INCDIR)sysatms.h        $(CC) $(RFLAGS) $(SRCDIR)initsout.c $(INLINE) /o $(OBJECTDIR)initsout.o$(OBJECTDIR)kbdsubrs.o :  $(SRCDIR)kbdsubrs.c $(INCDIR)lispemul.h        $(CC) $(RFLAGS) $(SRCDIR)kbdsubrs.c $(INLINE) /o $(OBJECTDIR)kbdsubrs.o$(OBJECTDIR)keyevent.o :  $(SRCDIR)keyevent.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)address.h  $(INCDIR)stack.h  $(INCDIR)iopage.h \         $(INCDIR)ifpage.h $(INCDIR)keyboard.h $(INCDIR)display.h \         $(INCDIR)pilotbbt.h        $(CC) $(RFLAGS) $(SRCDIR)keyevent.c $(INLINE) /o $(OBJECTDIR)keyevent.o$(OBJECTDIR)keylib.o :  $(SRCDIR)keylib.c        $(CC) $(RFLAGS) $(SRCDIR)keylib.c $(INLINE) /o $(OBJECTDIR)keylib.o$(OBJECTDIR)keytst.o :  $(SRCDIR)keytst.c        $(CC) $(RFLAGS) $(SRCDIR)keytst.c $(INLINE) /o $(OBJECTDIR)keytst.o$(OBJECTDIR)keytstno.o :  $(SRCDIR)keytstno.c        $(CC) $(RFLAGS) $(SRCDIR)keytstno.c $(INLINE) /o $(OBJECTDIR)keytstno.o$(OBJECTDIR)lsthandl.o :  $(SRCDIR)lsthandl.c $(INCDIR)lispemul.h  \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \         $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)lsthandl.c $(INLINE) /o $(OBJECTDIR)lsthandl.o$(OBJECTDIR)llstk.o :  $(SRCDIR)llstk.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)adr68k.h \         $(INCDIR)address.h  $(INCDIR)lsptypes.h  $(INCDIR)initatms.h \         $(INCDIR)lspglob.h  $(INCDIR)emlglob.h  $(INCDIR)cell.h \         $(INCDIR)stack.h        $(CC) $(RFLAGS) $(SRCDIR)llstk.c $(INLINE) /o $(OBJECTDIR)llstk.o#$(OBJECTDIR)loader.o :  $(SRCDIR)loader.c#       $(CC) $(RFLAGS) $(SRCDIR)loader.c $(INLINE) /o $(OBJECTDIR)loader.o$(OBJECTDIR)ldsout.o :  $(SRCDIR)ldsout.c $(INCDIR)adr68k.h \         $(INCDIR)lispemul.h $(INCDIR)lispmap.h  $(INCDIR)lspglob.h \         $(INCDIR)ifpage.h $(INCDIR)dbprint.h $(INCDIR)lsptypes.h $(INLINE)        $(CC) $(RFLAGS) $(SRCDIR)ldsout.c $(INLINE) /o $(OBJECTDIR)ldsout.o$(OBJECTDIR)loopsops.o : $(SRCDIR)loopsops.c $(INCDIR)lispemul.h \         $(INCDIR)emlglob.h  $(INCDIR)address.h $(INCDIR)lsptypes.h \         $(INCDIR)adr68k.h  $(INCDIR)cell.h  $(INCDIR)lspglob.h \         $(INCDIR)lispmap.h  $(INCDIR)ifpage.h  $(INCDIR)iopage.h \         $(INCDIR)debug.h $(INCDIR)profile.h        $(CC) $(RFLAGS) $(SRCDIR)loopsops.c $(INLINE) /o $(OBJECTDIR)loopsops.o$(OBJECTDIR)lowlev1.o :  $(SRCDIR)lowlev1.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)emlglob.h $(INCDIR)lsptypes.h        $(CC) $(RFLAGS) $(SRCDIR)lowlev1.c $(INLINE) /o $(OBJECTDIR)lowlev1.o$(OBJECTDIR)lowlev2.o :  $(SRCDIR)lowlev2.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h        $(CC) $(RFLAGS) $(SRCDIR)lowlev2.c $(INLINE) /o $(OBJECTDIR)lowlev2.o$(OBJECTDIR)misc7.o :  $(SRCDIR)misc7.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)stack.h $(INCDIR)opcodes.h $(INCDIR)display.h        $(CC) $(RFLAGS) $(SRCDIR)misc7.c $(INLINE) /o $(OBJECTDIR)misc7.o$(OBJECTDIR)mvs.o :  $(SRCDIR)mvs.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)stack.h $(INCDIR)opcodes.h        $(CC) $(RFLAGS) $(SRCDIR)mvs.c $(INLINE) /o $(OBJECTDIR)mvs.o$(OBJECTDIR)mkatom.o :  $(SRCDIR)mkatom.c $(INCDIR)lispemul.h  \         $(INCDIR)adr68k.h  $(INCDIR)lsptypes.h \         $(INCDIR)lispmap.h  $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)mkatom.c $(INLINE) /o $(OBJECTDIR)mkatom.o$(OBJECTDIR)osmsg.o :  $(SRCDIR)osmsg.c $(INCDIR)lispemul.h \         $(INCDIR)adr68k.h  $(INCDIR)stream.h  $(INCDIR)arith.h \         $(INCDIR)lispmap.h $(INCDIR)lsptypes.h        $(CC) $(RFLAGS) $(SRCDIR)osmsg.c $(INLINE) /o $(OBJECTDIR)osmsg.o$(OBJECTDIR)return.o :  $(SRCDIR)return.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  $(INCDIR)initatms.h \         $(INCDIR)return.h $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)return.c $(INLINE) /o $(OBJECTDIR)return.o$(OBJECTDIR)rplcons.o :  $(SRCDIR)rplcons.c $(INCDIR)lispemul.h  \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \         $(INCDIR)lsptypes.h  $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)gc.h  $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)rplcons.c $(INLINE) /o $(OBJECTDIR)rplcons.o$(OBJECTDIR)rs232c.o :  $(SRCDIR)rs232c.c $(INCDIR)rs232c.h        $(CC) $(RFLAGS) $(SRCDIR)rs232c.c $(INLINE) /o $(OBJECTDIR)rs232c.o$(OBJECTDIR)shift.o :  $(SRCDIR)shift.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)emlglob.h \         $(INCDIR)adr68k.h  $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h \         $(INCDIR)arith.h $(INCDIR)fp.h        $(CC) $(RFLAGS) $(SRCDIR)shift.c $(INLINE) /o $(OBJECTDIR)shift.o$(OBJECTDIR)storage.o :  $(SRCDIR)storage.c $(INCDIR)hdw_conf.h  \         $(INCDIR)lispemul.h  $(INCDIR)address.h \         $(INCDIR)adr68k.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \         $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)lsptypes.h \         $(INCDIR)ifpage.h        $(CC) $(RFLAGS) $(SRCDIR)storage.c $(INLINE) /o $(OBJECTDIR)storage.o$(OBJECTDIR)subr.o :  $(SRCDIR)subr.c \         $(INCDIR)lispemul.h  $(INCDIR)address.h  \         $(INCDIR)adr68k.h $(INCDIR)subrs.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \         $(INCDIR)arith.h $(INCDIR)profile.h        $(CC) $(RFLAGS) $(SRCDIR)subr.c $(INLINE) /o $(OBJECTDIR)subr.o$(OBJECTDIR)miscn.o : $(SRCDIR)miscn.c \         $(INCDIR)lispemul.h  $(INCDIR)address.h  \         $(INCDIR)adr68k.h $(INCDIR)subrs.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h   \         $(INCDIR)arith.h $(INCDIR)profile.h        $(CC) $(RFLAGS) $(SRCDIR)miscn.c $(INLINE) /o $(OBJECTDIR)miscn.o$(OBJECTDIR)subr0374.o :  $(SRCDIR)subr0374.c $(INCDIR)lispemul.h  $(INCDIR)adr68k.h  $(INCDIR)lspglob.h        $(CC) $(RFLAGS) $(SRCDIR)subr0374.c $(INLINE) /o $(OBJECTDIR)subr0374.o$(OBJECTDIR)perrno.o :  $(SRCDIR)perrno.c        $(CC) $(RFLAGS) $(SRCDIR)perrno.c $(INLINE) /o $(OBJECTDIR)perrno.o$(OBJECTDIR)timer.o :  $(SRCDIR)timer.c $(INCDIR)lispemul.h  \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h \         $(INCDIR)adr68k.h $(INCDIR)dbprint.h        $(CC) $(RFLAGS) $(SRCDIR)timer.c $(INLINE) /o $(OBJECTDIR)timer.o$(OBJECTDIR)tty.o :  $(SRCDIR)tty.c $(INCDIR)tty.h        $(CC) $(RFLAGS) $(SRCDIR)tty.c $(INLINE) /o $(OBJECTDIR)tty.o$(OBJECTDIR)typeof.o :  $(SRCDIR)typeof.c $(INCDIR)lispemul.h  \         $(INCDIR)lsptypes.h  $(INCDIR)cell.h \         $(INCDIR)lispmap.h        $(CC) $(RFLAGS) $(SRCDIR)typeof.c $(INLINE) /o $(OBJECTDIR)typeof.o$(OBJECTDIR)ufn.o :  $(SRCDIR)ufn.c $(INCDIR)lispemul.h  $(INCDIR)address.h  \         $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h  $(INCDIR)initatms.h \         $(INCDIR)cell.h        $(CC) $(RFLAGS) $(SRCDIR)ufn.c $(INLINE) /o $(OBJECTDIR)ufn.o$(OBJECTDIR)unixcomm.o :  $(SRCDIR)unixcomm.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \         $(INCDIR)arith.h        $(CC) $(RFLAGS) $(SRCDIR)unixcomm.c $(INLINE) /o $(OBJECTDIR)unixcomm.o$(OBJECTDIR)uraid.o :  $(SRCDIR)uraid.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \         $(INCDIR)debug.h        $(CC) $(RFLAGS) $(SRCDIR)uraid.c $(INLINE) /o $(OBJECTDIR)uraid.o$(OBJECTDIR)rpc.o :  $(SRCDIR)rpc.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)emlglob.h \         $(INCDIR)lspglob.h  $(INCDIR)cell.h  $(INCDIR)stack.h \         $(INCDIR)arith.h $(INCDIR)locfile.h        $(CC) $(RFLAGS) $(SRCDIR)rpc.c $(INLINE) /o $(OBJECTDIR)rpc.o$(OBJECTDIR)unwind.o :  $(SRCDIR)unwind.c $(INCDIR)lispemul.h  \         $(INCDIR)address.h  $(INCDIR)adr68k.h \         $(INCDIR)lsptypes.h  $(INCDIR)lispmap.h  $(INCDIR)stack.h \         $(INCDIR)emlglob.h  $(INCDIR)lspglob.h        $(CC) $(RFLAGS) $(SRCDIR)unwind.c $(INLINE) /o $(OBJECTDIR)unwind.o$(OBJECTDIR)vars3.o :  $(SRCDIR)vars3.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)lispmap.h \         $(INCDIR)adr68k.h  $(INCDIR)emlglob.h  $(INCDIR)cell.h \         $(INCDIR)lsptypes.h  $(INCDIR)stack.h        $(CC) $(RFLAGS) $(SRCDIR)vars3.c $(INLINE) /o $(OBJECTDIR)vars3.o$(OBJECTDIR)vmemsave.o :  $(SRCDIR)vmemsave.c $(INCDIR)lispemul.h  \         $(INCDIR)lispmap.h  $(INCDIR)lspglob.h \         $(INCDIR)ifpage.h  $(INCDIR)vmemsave.h        $(CC) $(RFLAGS) $(SRCDIR)vmemsave.c $(INLINE) /o $(OBJECTDIR)vmemsave.o$(OBJECTDIR)array2.o : $(SRCDIR)array2.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h  $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)array2.c $(INLINE) /o $(OBJECTDIR)array2.o$(OBJECTDIR)array4.o : $(SRCDIR)array4.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h  $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)array4.c $(INLINE) /o $(OBJECTDIR)array4.o$(OBJECTDIR)array6.o : $(SRCDIR)array6.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h  $(INCDIR)my.h        $(CC) $(RFLAGS) $(SRCDIR)array6.c $(INLINE) /o $(OBJECTDIR)array6.o$(OBJECTDIR)socket.o : $(SRCDIR)socket.c        cc $(RFLAGS) $(SRCDIR)socket.c /o $(OBJECTDIR)socket.o$(OBJECTDIR)socdvr.o : $(SRCDIR)socdvr.c $(INCDIR)lispemul.h \       $(INCDIR)adr68k.h $(INCDIR)lsptypes.h $(INCDIR)lispmap.h \       $(INCDIR)arith.h        cc $(RFLAGS) $(SRCDIR)socdvr.c /o $(OBJECTDIR)socdvr.o$(OBJECTDIR)sxhash.o : $(SRCDIR)sxhash.c $(INCDIR)lispemul.h  \         $(INCDIR)lspglob.h  $(INCDIR)adr68k.h \         $(INCDIR)lispmap.h  $(INCDIR)lsptypes.h  $(INCDIR)emlglob.h \         $(INCDIR)arith.h         $(CC) $(RFLAGS) $(SRCDIR)sxhash.c $(INLINE) /o $(OBJECTDIR)sxhash.o$(OBJECTDIR)usrsubr.o : $(SRCDIR)usrsubr.c        $(CC) $(RFLAGS) $(SRCDIR)usrsubr.c $(INLINE) /o $(OBJECTDIR)usrsubr.o$(OBJECTDIR)XClose.o : $(SRCDIR)XClose.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h         $(CC) $(RFLAGS) $(SRCDIR)XClose.c /o $(OBJECTDIR)XClose.o$(OBJECTDIR)Cursor.o : $(SRCDIR)Cursor.c $(INCDIR)XVersion.h $(INCDIR)MyWindow.h \        $(INCDIR)lispemul.h $(INCDIR)display.h         $(CC) $(RFLAGS) $(SRCDIR)Cursor.c /o $(OBJECTDIR)Cursor.o$(OBJECTDIR)XWindow.o : $(SRCDIR)XWindow.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)lispemul.h $(INCDIR)address.h \        $(INCDIR)adr68k.h         $(CC) $(RFLAGS) $(SRCDIR)XWindow.c /o $(OBJECTDIR)XWindow.o$(OBJECTDIR)DoRing.o : $(SRCDIR)DoRing.c $(INCDIR)lispemul.h        $(CC) $(RFLAGS) $(SRCDIR)DoRing.c /o $(OBJECTDIR)DoRing.o$(OBJECTDIR)DoScroll.o : $(SRCDIR)DoScroll.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)Xbitblt.h        $(CC) $(RFLAGS) $(SRCDIR)DoScroll.c /o $(OBJECTDIR)DoScroll.o$(OBJECTDIR)XEvent.o : $(SRCDIR)XEvent.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)Xbitblt.h        $(CC) $(RFLAGS) $(SRCDIR)XEvent.c /o $(OBJECTDIR)XEvent.o$(OBJECTDIR)XGravity.o : $(SRCDIR)XGravity.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)XGravity.c /o $(OBJECTDIR)XGravity.o$(OBJECTDIR)XInit.o : $(SRCDIR)XInit.c        $(CC) $(RFLAGS) $(SRCDIR)XInit.c /o $(OBJECTDIR)XInit.o$(OBJECTDIR)Xevinit.o : $(SRCDIR)Xevinit.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xevinit.c /o $(OBJECTDIR)Xevinit.o$(OBJECTDIR)Xkbdmus.o : $(SRCDIR)Xkbdmus.c $(INCDIR)lispemul.h \        $(INCDIR)XVersion.h $(INCDIR)MyWindow.h $(INCDIR)dbprint.h        $(CC) $(RFLAGS) $(SRCDIR)Xkbdmus.c /o $(OBJECTDIR)Xkbdmus.o$(OBJECTDIR)Xlspwin.o : $(SRCDIR)Xlspwin.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)Xdeflt.h        $(CC) $(RFLAGS) $(SRCDIR)Xlspwin.c /o $(OBJECTDIR)Xlspwin.o$(OBJECTDIR)Xbbt.o : $(SRCDIR)Xbbt.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xbbt.c /o $(OBJECTDIR)Xbbt.o$(OBJECTDIR)Xkbd.o : $(SRCDIR)Xkbd.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xkbd.c /o $(OBJECTDIR)Xkbd.o$(OBJECTDIR)Xmkicon.o : $(SRCDIR)Xmkicon.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)Xicon.h        $(CC) $(RFLAGS) $(SRCDIR)Xmkicon.c /o $(OBJECTDIR)Xmkicon.o$(OBJECTDIR)Xopnedsp.o : $(SRCDIR)Xopnedsp.c $(INCDIR)lispemul.h \        $(INCDIR)XVersion.h $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xopnedsp.c /o $(OBJECTDIR)Xopnedsp.o$(OBJECTDIR)Xrdopt.o : $(SRCDIR)Xrdopt.c $(INCDIR)Xdeflt.h        $(CC) $(RFLAGS) $(SRCDIR)Xrdopt.c /o $(OBJECTDIR)Xrdopt.o$(OBJECTDIR)Xreconf.o : $(SRCDIR)Xreconf.c \        $(INCDIR)XVersion.h $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xreconf.c /o $(OBJECTDIR)Xreconf.o$(OBJECTDIR)XScroll.o : $(SRCDIR)XScroll.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)Stipple.h $(INCDIR)Xcursdef.h \        $(INCDIR)XCursors.h        $(CC) $(RFLAGS) $(SRCDIR)XScroll.c /o $(OBJECTDIR)XScroll.o$(OBJECTDIR)Xscrolb.o : $(SRCDIR)Xscrolb.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xscrolb.c /o $(OBJECTDIR)Xscrolb.o$(OBJECTDIR)XCursor.o : $(SRCDIR)XCursor.c $(INCDIR)lispemul.h \        $(INCDIR)iopage.h $(INCDIR)XVersion.h $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)XCursor.c /o $(OBJECTDIR)XCursor.o$(OBJECTDIR)XMouse.o : $(SRCDIR)XMouse.c \        $(INCDIR)XVersion.h $(INCDIR)MyWindow.h         $(CC) $(RFLAGS) $(SRCDIR)XMouse.c /o $(OBJECTDIR)XMouse.o$(OBJECTDIR)Xsubwin.o : $(SRCDIR)Xsubwin.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xsubwin.c /o $(OBJECTDIR)Xsubwin.o$(OBJECTDIR)Xcolor.o : $(SRCDIR)Xcolor.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h        $(CC) $(RFLAGS) $(SRCDIR)Xcolor.c /o $(OBJECTDIR)Xcolor.o$(OBJECTDIR)Xwinman.o : $(SRCDIR)Xwinman.c $(INCDIR)XVersion.h \        $(INCDIR)MyWindow.h $(INCDIR)dbprint.h        $(CC) $(RFLAGS) $(SRCDIR)Xwinman.c /o $(OBJECTDIR)Xwinman.o$(OBJECTDIR)hacks.o : $(SRCDIR)hacks.c $(INCDIR)dld.h        $(CC) $(RFLAGS) $(SRCDIR)hacks.c /o $(OBJECTDIR)hacks.o$(OBJECTDIR)foreign.o : $(SRCDIR)foreign.c $(INCDIR)dld.h        $(CC) $(RFLAGS) $(SRCDIR)foreign.c $(INLINE) /o $(OBJECTDIR)foreign.o$(OBJECTDIR)lisp2c.o : $(SRCDIR)lisp2c.c $(INCDIR)dld.h        $(CC) $(RFLAGS) $(SRCDIR)lisp2c.c /o $(OBJECTDIR)lisp2c.o################################################################################# Installation targets - copyprotect is ON here# library, sysouts, fonts on release directories not handled here.# userfiles are separate target explicitly (can make w/o building lde)#    $(NATDIR)native.h $(NATDIR)disp68K.il################################################################################prerelease :        mkdir $(RELDIR)        mkdir $(INSDIR)        mkdir $(CHKDIR)        mkdir $(SCRPTDIR)        release : $(INSDIR)$(LDENAME).o userfiles $(INSDIR)$(LDENAME) \        $(INSDIR)ldeether $(INSDIR)lde csumfiles scriptfilesuserfiles : $(INSDIR)usrsubr.c $(INSDIR)makefile $(INSDIR)ldeether.c$(INSDIR)lde: $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c        $(CC) $(CFLAGS) /I$(INCDIR) $(SRCDIR)ldeboot.c $(SRCDIR)unixfork.c \                $(LDELDFLAGS) /o $(INSDIR)lde$(OBJECTDIR)$(LDENAME).a :              $(LIBFILES) $(OSARCHDIR)mkvdate        \bin\rm -f $(VFILE).c        $(OSARCHDIR)mkvdate > $(VFILE).c        $(CC) -c $(VFILE).c /o $(VFILE).o        $(RM) $(LDENAME).a        ar rcv $(OBJECTDIR)$(LDENAME).a $(LIBFILES) $(VFILE).o        ranlib $(OBJECTDIR)$(LDENAME).a        $(RM) $(VFILE).o$(INSDIR)$(LDENAME).o :                 $(OBJECTDIR)$(LDENAME).a        ld /o $(INSDIR)$(LDENAME).o -r -u _main $(OBJECTDIR)$(LDENAME).a$(INSDIR)$(LDENAME) : $(INSDIR)$(LDENAME).o $(INSDIR)usrsubr.o        $(CC) $(INSDIR)$(LDENAME).o $(INSDIR)usrsubr.o $(FPFLAGS) $(LDFLAGS)\                 /o $(INSDIR)$(LDENAME)        rm -f $(INSDIR)usrsubr.o## ldeether from release - can't tar off with root permission.$(INSDIR)ldeether :  $(INSDIR)ldeether.c        $(CC) $(CFLAGS) $(INSDIR)ldeether.c /o $(INSDIR)ldeether        - rsh python "cd `pwd`; \users\maiko\bin\suid $(INSDIR)ldeether"$(INSDIR)makefile : $(BINDIR)usermakefile-$(OSARCHNAME)        rm -f $(INSDIR)makefile        ln $(BINDIR)usermakefile-$(OSARCHNAME) $(INSDIR)makefile$(INSDIR)usrsubr.c : $(SRCDIR)usrsubr.c        rm -f $(INSDIR)usrsubr.c        ln $(SRCDIR)usrsubr.c $(INSDIR)usrsubr.c$(INSDIR)ldeether.c : $(SRCDIR)ldeether.c        rm -f $(INSDIR)ldeether.c        ln $(SRCDIR)ldeether.c $(INSDIR)ldeether.ccsumfiles : $(CHKDIR)checksum $(CHKDIR)ldechecksum $(CHKDIR)README$(CHKDIR)README : $(BINDIR)checksum-readme        rm -f $(CHKDIR)README        ln $(BINDIR)checksum-readme $(CHKDIR)README$(CHKDIR)checksum : $(BINDIR)checksum        rm -f $(CHKDIR)checksum        cp -p $(BINDIR)checksum $(CHKDIR)checksum        chmod 755 $(CHKDIR)checksum$(CHKDIR)ldechecksum : $(BINDIR)ldechecksum        rm -f $(CHKDIR)ldechecksum        cp -p $(BINDIR)ldechecksum $(CHKDIR)ldechecksum        chmod 755 $(CHKDIR)ldechecksumscriptfiles : $(SCRPTDIR)install-medley $(SCRPTDIR)medley$(SCRPTDIR)install-medley : $(BINDIR)install-medley        rm -f $(SCRPTDIR)install-medley        cp -p $(BINDIR)install-medley $(SCRPTDIR)install-medley        chmod 755 $(SCRPTDIR)install-medley$(SCRPTDIR)medley : $(BINDIR)medley        rm -f $(SCRPTDIR)medley        cp -p $(BINDIR)medley $(SCRPTDIR)medley        chmod 755 $(SCRPTDIR)medley################################################################################# Obsolete################################################################################$(NATDIR)native.h : $(INCDIR)native.h        rm -f $(NATDIR)native.h        ln $(INCDIR)native.h $(NATDIR)native.h$(NATDIR)disp68K.il : $(SRCDIR)disp68K.il        rm -f $(NATDIR)disp68K.il        ln $(SRCDIR)disp68K.il $(NATDIR)disp68K.il################################################################################# Miscellaneous targets#        .c.s. should always have -O################################################################################cleanup :        rm  $(LIBFILES) $(EXTFILES) $(KEYOFF).c.o:        $(CC) $(RFLAGS) $*.c /o $@ $(INLINE).c.s:        $(CC) -S $(CFLAGS) /I$(INCDIR) $(SRCDIR)$*.c /o $(SRCDIR)$@ $(INLINE)$(OBJECTDIR)keymaker : ..\src\keymaker.c $(OBJECTDIR)keylib.o        $(CC) $(CFLAGS) /I$(INCDIR) ..\src\keymaker.c $(OBJECTDIR)keylib.o /o $(OBJECTDIR)keymakercxref :        cxref -c  $(DFLAGS) /I$(INCDIR) $(SRCDIR)*.c /o ..\all.cxref