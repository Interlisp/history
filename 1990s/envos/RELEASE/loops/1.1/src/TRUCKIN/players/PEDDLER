(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "INTERLISP" BASE 10)(FILECREATED "11-Jul-88 21:37:41" |{POGO:AISNORTH:XEROX}<LOOPSCORE>TRUCKIN>PLAYERS>PEDDLER.;3| 61171        changes to%:  (CLASSES Peddler)                    (METHODS Peddler.TakeTurn Peddler.SellGoods Peddler.RateSpotsNearAlices                            Peddler.RateProducers Peddler.RateConsumers Peddler.MaxPurchase                            Peddler.GoToStoppingPlace Peddler.FindStoppingPlace)                    (VARS PEDDLERCOMS)      previous date%: "15-Sep-87 13:10:00" |{POGO:AISNORTH:XEROX}<LOOPSCORE>TRUCKIN>PLAYERS>PEDDLER.;2|)(* "Copyright (c) 1987, 1988 by Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT PEDDLERCOMS)(RPAQQ PEDDLERCOMS ((DECLARE%: DONTCOPY (PROP MAKEFILE-ENVIRONMENT PEDDLER))                    (CLASSES Peddler)                    (METHODS Peddler.FindStoppingPlace Peddler.GoToStoppingPlace Peddler.MaxPurchase                            Peddler.RateConsumers Peddler.RateProducers Peddler.RateSpotsNearAlices                            Peddler.SellGoods Peddler.TakeTurn)                    (FNS)                    (INSTANCES)))(DECLARE%: DONTCOPY (PUTPROPS PEDDLER MAKEFILE-ENVIRONMENT (:PACKAGE "IL" :READTABLE "INTERLISP" :BASE 10)))(DEFCLASSES Peddler)(DEFCLASS Peddler   (MetaClass PlayerMeta doc "Peddler is an automated Truckin player that prioritizes its choices for destinations and stoppingPlaces. It is the first Truckin player to use RuleSets to filter and rate choices for RoadStops. Peddler was written for the second Loops Course in February 1983"           Edited%:                                           (* sm%: "19-MAY-83 17:04"))   (Supers Traveler)   (InstanceVariables (destination NIL doc "Current destination.")          (direction NIL doc "Forward or Backward direction of travel on the highway.")          (alices NIL doc "Instance of Alices chosen for end game.")          (sitCount 0 doc "Number of turns sitting at Alices Restaurant during an EndGame.")          (goal NIL doc "Peddle, SitTight, GetClose, or GoToAlices.")          (cashReserve 1000 doc "Minimum cash to keep on hand.")))(\BatchMethodDefs)(METH Peddler  FindStoppingPlace NIL      "Method implementing a RuleSet" (method Peddler.FindStoppingPlace RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 53))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 75)))            (name #,($A Peddler.FindStoppingPlace NIL RememberName))            (compiledRules Peddler.FindStoppingPlace)            (workSpace Peddler)            (tempVars (wStation gasStation))            (taskVars NIL)            (debugVars NIL)            (numRules 6)            (controlStructure DO1)            (whileCondition NIL)            (compilerOptions (A))            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  GoToStoppingPlace NIL      "Method implementing a RuleSet" (method Peddler.GoToStoppingPlace RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 60))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 76)))            (name #,($A Peddler.GoToStoppingPlace NIL RememberName))            (compiledRules Peddler.GoToStoppingPlace)            (workSpace Peddler)            (tempVars (realLocation numBuy))            (taskVars NIL)            (debugVars NIL)            (numRules 7)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions (A))            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  MaxPurchase (roadStop)      "Method implementing a RuleSet" (method Peddler.MaxPurchase RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 62)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 62))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 77)))            (name #,($A Peddler.MaxPurchase NIL RememberName))            (compiledRules Peddler.MaxPurchase)            (workSpace Peddler)            (tempVars (volumeCapacity weightCapacity volumeLimit weightLimit cashLimit producerLimit                              numBuy cashCapacity))            (taskVars NIL)            (debugVars NIL)            (numRules 3)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions (A))            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  RateConsumers (roadStop)      "Method implementing a RuleSet" (method Peddler.RateConsumers RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 63))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 78)))            (name #,($A Peddler.RateConsumers NIL RememberName))            (compiledRules Peddler.RateConsumers)            (workSpace Peddler)            (tempVars (rating cargo))            (taskVars NIL)            (debugVars NIL)            (numRules 8)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions (A))            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  RateProducers (roadStop)      "Method implementing a RuleSet" (method Peddler.RateProducers RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 64))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 79)))            (name #,($A Peddler.RateProducers NIL RememberName))            (compiledRules Peddler.RateProducers)            (workSpace Peddler)            (tempVars (rating maxBuy))            (taskVars NIL)            (debugVars NIL)            (numRules 11)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  RateSpotsNearAlices (roadStop)      "Method implementing a RuleSet" (method Peddler.RateSpotsNearAlices RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 65))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 80)))            (name #,($A Peddler.RateSpotsNearAlices NIL RememberName))            (compiledRules Peddler.RateSpotsNearAlices)            (workSpace Peddler)            (tempVars (rating cargo))            (taskVars NIL)            (debugVars NIL)            (numRules 6)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  SellGoods NIL      "Method implementing a RuleSet" (method Peddler.SellGoods RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 66))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 81)))            (name #,($A Peddler.SellGoods NIL RememberName))            (compiledRules Peddler.SellGoods)            (workSpace Peddler)            (tempVars (cargo sellQty))            (taskVars NIL)            (debugVars NIL)            (numRules 6)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions (A))            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH Peddler  TakeTurn NIL      "Method implementing a RuleSet" (method Peddler.TakeTurn RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67)) methodClass RuleSet UID (LKX0.%:F5.o28.E6A . 67))            (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 82)))            (name #,($A Peddler.TakeTurn NIL RememberName))            (compiledRules Peddler.TakeTurn)            (workSpace Peddler)            (tempVars (possibleStops))            (taskVars NIL)            (debugVars NIL)            (numRules 8)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions (A))            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 75))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 83))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 76))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 84))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 77))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 62)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 85))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 78))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 86))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 79))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 87))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 80))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 88))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 81))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 89))))(DEFINST RuleSetNode ((LKX0.%:F5.o28.E6A . 82))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67)) Source #,($& RuleSetSource (LKX0.%:F5.o28.E6A . 90))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 83))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 75)))         (created "11-Jul-88 21:35:58")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 91)) #,($& Rule (LKX0.%:F5.o28.E6A . 92)) #,($& Rule (LKX0.%:F5.o28.E6A . 93)) #,($& Rule (LKX0.%:F5.o28.E6A . 94)) #,($& Rule (LKX0.%:F5.o28.E6A . 95)) #,($& Rule (LKX0.%:F5.o28.E6A . 96)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 84))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 76)))         (created "11-Jul-88 21:36:08")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 97)) #,($& Rule (LKX0.%:F5.o28.E6A . 98)) #,($& Rule (LKX0.%:F5.o28.E6A . 99)) #,($& Rule (LKX0.%:F5.o28.E6A . 100)) #,($& Rule (LKX0.%:F5.o28.E6A . 101)) #,($& Rule (LKX0.%:F5.o28.E6A . 102)) #,($& Rule (LKX0.%:F5.o28.E6A . 103)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 85))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 77)))         (created "11-Jul-88 21:36:17")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 104)) #,($& Rule (LKX0.%:F5.o28.E6A . 105)) #,($& Rule (LKX0.%:F5.o28.E6A . 106)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 86))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 78)))         (created "11-Jul-88 21:36:25")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 107)) #,($& Rule (LKX0.%:F5.o28.E6A . 108)) #,($& Rule (LKX0.%:F5.o28.E6A . 109)) #,($& Rule (LKX0.%:F5.o28.E6A . 110)) #,($& Rule (LKX0.%:F5.o28.E6A . 111)) #,($& Rule (LKX0.%:F5.o28.E6A . 112)) #,($& Rule (LKX0.%:F5.o28.E6A . 113)) #,($& Rule (LKX0.%:F5.o28.E6A . 114)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 87))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 79)))         (created "11-Jul-88 21:36:36")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 115)) #,($& Rule (LKX0.%:F5.o28.E6A . 116)) #,($& Rule (LKX0.%:F5.o28.E6A . 117)) #,($& Rule (LKX0.%:F5.o28.E6A . 118)) #,($& Rule (LKX0.%:F5.o28.E6A . 119)) #,($& Rule (LKX0.%:F5.o28.E6A . 120)) #,($& Rule (LKX0.%:F5.o28.E6A . 121)) #,($& Rule (LKX0.%:F5.o28.E6A . 122)) #,($& Rule (LKX0.%:F5.o28.E6A . 123)) #,($& Rule (LKX0.%:F5.o28.E6A . 124)) #,($& Rule (LKX0.%:F5.o28.E6A . 125)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 88))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 80)))         (created "11-Jul-88 21:36:45")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 126)) #,($& Rule (LKX0.%:F5.o28.E6A . 127)) #,($& Rule (LKX0.%:F5.o28.E6A . 128)) #,($& Rule (LKX0.%:F5.o28.E6A . 129)) #,($& Rule (LKX0.%:F5.o28.E6A . 130)) #,($& Rule (LKX0.%:F5.o28.E6A . 131)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 89))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 81)))         (created "11-Jul-88 21:36:53")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 132)) #,($& Rule (LKX0.%:F5.o28.E6A . 133)) #,($& Rule (LKX0.%:F5.o28.E6A . 134)) #,($& Rule (LKX0.%:F5.o28.E6A . 135)) #,($& Rule (LKX0.%:F5.o28.E6A . 136)) #,($& Rule (LKX0.%:F5.o28.E6A . 137)))))(DEFINST RuleSetSource ((LKX0.%:F5.o28.E6A . 90))         (perspectiveNode #,($& RuleSetNode (LKX0.%:F5.o28.E6A . 82)))         (created "11-Jul-88 21:37:02")         (creator "BANE")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleList (#,($& Rule (LKX0.%:F5.o28.E6A . 138)) #,($& Rule (LKX0.%:F5.o28.E6A . 139)) #,($& Rule (LKX0.%:F5.o28.E6A . 140)) #,($& Rule (LKX0.%:F5.o28.E6A . 141)) #,($& Rule (LKX0.%:F5.o28.E6A . 142)) #,($& Rule (LKX0.%:F5.o28.E6A . 143)) #,($& Rule (LKX0.%:F5.o28.E6A . 144)) #,($& Rule (LKX0.%:F5.o28.E6A . 145)))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 91))         (source "(* Returns a stopping place en route to a destination.)IF truck:fuel=0THEN stoppingPlace_(AnyRoadStop $UnionHall);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 92))         (source "(* Dont run out of gas.)IF goal~='SitTight    truck:fuel < .25 * truck::MaxFuel   truck:cashBox>0   gasStation_(NearestRoadStop (RoadStops $GasStation .Range1 NIL 'Room))THEN stoppingPlace_gasStation;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 93))         (source "(* Obey the law - stop at WeighStations.)IF wStation_(NearestRoadStop (RoadStops $WeighStation .Range1 direction 'Room))   (Distance wStation)<(Distance destination) THEN stoppingPlace_wStation;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 94))         (source        "IF (Distance destination)<=.Range1 (RoomToParkP destination)THEN stoppingPlace_destination;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 95))         (source "IF gasStation_(FurthestRoadStop (RoadStops $GasStation .Range1 direction 'Room))   gasStation:qty>0THEN stoppingPlace_gasStation;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 96))         (source "THEN stoppingPlace_(NthRoadStop  maxMove direction NIL 'Room);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 53))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 97))         (source "	-> direction_(DirectionOf destination);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 98))         (source "        -> realLocation_truck:location;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 99))         (source "	IF .FindStoppingPlace stoppingPlace~=truck:location          ~stoppingPlace.BanditP	THEN (_ \PlayerInterface Move self stoppingPlace)               realLocation_truck:location;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 100))         (source "        IF realLocation~=stoppingPlace 	THEN (WriteGameStatus %"Oh!! %" driver %" Didnt reach stoppingPlace%");")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 101))         (source "	IF (ISA realLocation $GasStation)	THEN .BuyGas;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 102))         (source "	IF (ISA realLocation $Producer) ~(ISA realLocation $GasStation)           goal='Peddle	   realLocation=destination            numBuy_(_ self MaxPurchase realLocation)           numBuy>=1  	THEN (_ \PlayerInterface Buy self numBuy);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 103))         (source "	IF (ISA realLocation $Consumer) truck:cargo	THEN .SellGoods;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 60))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 104))         (source "	(* Rules for deciding how much the Peddler could buy at a Producer.)(* Sale can be limited by volume, weight, cash, or availability.)-> volumeCapacity _ truck::MaxVolume-truck:volume   weightCapacity _ truck::MaxWeight-truck:weight   cashCapacity _ (MAX 0  truck:cashBox-cashReserve);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 62))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 105))         (source "   -> volumeLimit _ volumeCapacity / roadStop::Commodity::VolPerQty   weightLimit _ weightCapacity / roadStop::Commodity::WtPerQty   cashLimit _ cashCapacity / (PricePerUnit roadStop)   producerLimit _ roadStop:qty;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 62))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 106))         (source "-> numBuy _ (MIN volumeLimit weightLimit cashLimit producerLimit);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 62))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 107))         (source           "	(* Rate the suitability of a proposed Consumer.)-> cargo _ (CAR truck:cargo) rating_0;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 108))         (source "(* if spoiled go to CityDump)IF ~cargo:status (ISA roadStop $CityDump) THEN (STOP 5000 'CityDump 'LookNoMore);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 109))         (source "IF ~cargo:statusTHEN (STOP NIL 'SpoiltGoods 'CannotSell);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 110))         (source       "(* Consumer must want current cargo.) IF ~(ISA cargo roadStop::Commodity)  THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 111))         (source "(* Need to be able to park) IF ~(RoomToParkP roadStop)  THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 112))         (source             "(* Exclude consumers that have full inventory.) IF roadStop:qty < 1  THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 113))         (source "(* Favor high price ratios.)  -> rating _ rating + 100 * roadStop:pr ;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 114))         (source    "(* Favor close places.)  -> rating _ rating - [truck::Gpm *(Distance roadStop truck:location)];")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 8)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 63))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 115))         (source "	(* Rate the suitability of a proposed Producer.)-> rating _ 0;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 116))         (source "(* Need to be able to park)IF ~(RoomToParkP roadStop) THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 117))         (source "(* Exclude perishables.) IF (SUBCLASS roadStop::Commodity $PerishableCommodity)  THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 118))         (source "(* Exclude gas stations.) IF (ISA roadStop $GasStation)  THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 119))         (source "(* Exclude producers that are sold out.) IF roadStop:qty < 1  THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 120))         (source "(* Exclude excessively fragile goods.) IF (SUBCLASS roadStop::Commodity $FragileCommodity)    THEN rating _ rating - [500 * roadStop::Commodity::FragilityLevel];")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 121))         (source "(* Penalize producers for which can buy < 2 items.) IF maxBuy_(_ self MaxPurchase roadStop) maxBuy < 1  THEN rating _ rating - 10000;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 122))         (source    "(* favor LuxuryGoods)IF (SUBCLASS roadStop::Commodity $LuxuryGoods)THEN rating _ rating + 200;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 8)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 123))         (source "(* favor higher ty) -> rating _ rating + 10 * maxBuy;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 9)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 124))         (source "(* Favor low price ratios.)  -> rating _ rating + 100 * [2 - roadStop:pr];")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 10)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 125))         (source   "(* Favor close places.)  -> rating _ rating - [truck::Gpm * (Distance roadStop truck:location)];")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 11)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 64))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 126))         (source "(* Rating RuleSet for spots near Alices.  Returns a number for spots.)-> cargo _ (CAR truck:cargo);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 127))         (source "IF ~(RoomToParkP roadStop) THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 128))         (source "IF (ISA roadStop $UnionHall) THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 129))         (source "IF (ISA roadStop $AlicesRestaurant) THEN (STOP NIL);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 130))         (source             "   (* Favor places closer to Alices.)-> rating _ 100 - 4 * (Distance roadStop alices);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 131))         (source "IF cargo (ISA roadStop $Consumer) (ISA cargo roadStop::Commodity)   roadStop:qty>0 roadStop:pr>1 THEN rating _ rating + 20;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 65))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 132))         (source "	-> cargo_(CAR truck:cargo);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 133))         (source              "	IF ~(ISA cargo truck:location::Commodity)	THEN (STOP NIL 'NoSale 'WrongKindOfBuyer);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 134))         (source "        (* Make sale as limited by cargo and consumer.)        IF ~cargo:status (ISA truck:location $CityDump)        THEN sellQty_(MIN truck:location:qty cargo:qty)              (_ \PlayerInterface Sell self cargo sellQty)             (STOP T 'Sold 'AtCityDump);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 135))         (source               "	IF truck:location:pr < 1.1 goal='Peddle 	THEN (STOP NIL 'NoSale 'AvoidCheapSkates);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 136))         (source "	IF truck:location:pr < 0 	THEN (STOP NIL 'NoSale 'NeverSellAtLoss);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 137))         (source "	IF cargo:status sellQty_(MIN truck:location:qty cargo:qty) sellQty>=1 	THEN (_ \PlayerInterface Sell self cargo sellQty);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 66))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 138))         (source "   (* Top-Level RuleSet for taking turns.  Sets goal and destination.) IF ~goal  THEN goal_'Peddle;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 139))         (source " IF truck:cargo goal='Peddle possibleStops_(RoadStops $Consumer)  THEN destination_(PickHiObj self 'RateConsumers possibleStops);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 140))         (source " IF ~truck:cargo goal='Peddle possibleStops_(RoadStops $Producer)  THEN destination_(PickHiObj self 'RateProducers possibleStops);")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 141))         (source "(* Don't move away from Alices during endgame.) IF goal='GoToAlices truck:location=alices  THEN goal_'SitTight;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 142))         (source "(* Except dont overstay at Alices.)IF truck:location=alices  .TimeAtStop > 25 goal='SitTight THEN alices_(NearestRoadStop (RoadStops $AlicesRestaurant))       destination_ (PickHiObj self 'RateSpotsNearAlices (RoadStops))       goal_'GetClose;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 143))         (source "(* Get near to Alices when time gets close)		 IF \Simulator:timeLeft < 50 ~[goal<<'(SitTight GetClose GoToAlices)]    THEN alices_(NearestRoadStop (RoadStops $AlicesRestaurant))       destination_ (PickHiObj self 'RateSpotsNearAlices (RoadStops))       goal_'GetClose;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 144))         (source "(* Go to Alices now that it is time) IF \Simulator:timeLeft < 30     ~(ISA truck:location $AlicesRestaurant)     THEN destination_ (NearestRoadStop (RoadStops $AlicesRestaurant))       goal_'GoToAlices ;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(DEFINST Rule ((LKX0.%:F5.o28.E6A . 145))         (source "IF ~(OR goal='SitTight        (AND goal='GetClose (Distance truck:location alices)<=3)) THEN .GoToStoppingPlace;")         (edited " 8-Jul-88 20:54:55")         (editor BANE)         (ruleNumber 8)         (ruleSet #,($& RuleSet (LKX0.%:F5.o28.E6A . 67))))(Method ((Peddler FindStoppingPlace) self) "Method implementing a RuleSet"   (PROG (^auditRecord ^value wStation gasStation)     ^firstRules         [COND            [(EQ (GetValue (GetValue self 'truck)                        'fuel)                 0)             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 54]                                 (PutAuditRec self 'stoppingPlace (AnyRoadStop ($ UnionHall))                                        ^auditRecord]            [[AND (NEQ (GetValue self 'goal)                       'SitTight)                  [LESSP (GetValue (GetValue self 'truck)                                'fuel)                         (TIMES 0.25 (GetClassValue (GetValue self 'truck)                                            'MaxFuel]                  (GREATERP (GetValue (GetValue self 'truck)                                   'cashBox)                         0)                  (SETQ gasStation (NearestRoadStop (RoadStops ($ GasStation)                                                           (_ s(elf Range1)                                                           NIL                                                           'Room]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 55]                                 (PutAuditRec self 'stoppingPlace gasStation ^auditRecord]            [[AND [SETQ wStation (NearestRoadStop (RoadStops ($ WeighStation)                                                         (_ self Range1)                                                         (GetValue self 'direction)                                                         'Room]                  (LESSP (Distance wStation)                         (Distance (GetValue self 'destination]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 56]                                 (PutAuditRec self 'stoppingPlace wStation ^auditRecord]            [[AND (LEQ (Distance (GetValue self 'destination))                       (_ self Range1))                  (RoomToParkP (GetValue self 'destination]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 57]                                 (PutAuditRec self 'stoppingPlace (GetValue self 'destination)                                        ^auditRecord]            [(AND [SETQ gasStation (FurthestRoadStop (RoadStops ($ GasStation)                                                            (_ self Range1)                                                            (GetValue self 'direction)                                                            'Room]                  (GREATERP (GetValue gasStation 'qty)                         0))             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 58]                                 (PutAuditRec self 'stoppingPlace gasStation ^auditRecord]            (T (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                          (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                                New))                                          (PutValue ^auditRecord 'rule (GetObjFromUID                                                                        '(LKX0.%:F5.o28.E6A . 59]                                   (PutAuditRec self 'stoppingPlace (NthRoadStop (GetValue                                                                                  self                                                                                  'maxMove)                                                                           (GetValue self                                                                                  'direction)                                                                           NIL                                                                           'Room)                                          ^auditRecord]     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler GoToStoppingPlace) self) "Method implementing a RuleSet"   (PROG (^auditRecord ^value realLocation numBuy)     ^firstRules         (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                    (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                          New))                                    (PutValue ^auditRecord 'rule (GetObjFromUID '(LKX0.%:F5.o28.E6A . 61                                                                                  ]                             (PutAuditRec self 'direction (DirectionOf (GetValue self 'destination))                                    ^auditRecord)))         [SETQ ^value (SETQ realLocation (GetValue (GetValue self 'truck)                                                'location]         [COND            ((AND (_ self FindStoppingPlace)                  (NEQ (GetValue self 'stoppingPlace)                       (GetValue (GetValue self 'truck)                              'location))                  (NOT (_ (GetValue self 'stoppingPlace)                          BanditP)))             (SETQ ^value (PROGN (_ PlayerInterface Move self (GetValue self 'stoppingPlace))                                 (SETQ realLocation (GetValue (GetValue self 'truck)                                                           'location]         [COND            ((NEQ realLocation (GetValue self 'stoppingPlace))             (SETQ ^value (WriteGameStatus "Oh!! " (GetValue self 'driver)                                 " Didnt reach stoppingPlace"]         [COND            ((ISA realLocation ($ GasStation))             (SETQ ^value (_ self BuyGas)]         [COND            ((AND (ISA realLocation ($ Producer))                  (NOT (ISA realLocation ($ GasStation)))                  (EQ (GetValue self 'goal)                      'Peddle)                  (EQ realLocation (GetValue self 'destination))                  (SETQ numBuy (_ self MaxPurchase realLocation))                  (GEQ numBuy 1))             (SETQ ^value (_ PlayerInterface Buy self numBuy)]         [COND            ((AND (ISA realLocation ($ Consumer))                  (GetValue (GetValue self 'truck)                         'cargo))             (SETQ ^value (_ self SellGoods)]     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler MaxPurchase) self roadStop) "Method implementing a RuleSet"   (PROG (^auditRecord ^value volumeCapacity weightCapacity volumeLimit weightLimit cashLimit                 producerLimit numBuy cashCapacity)     ^firstRules         [SETQ ^value (PROGN [SETQ volumeCapacity (DIFFERENCE (GetClassValue (GetValue self                                                                                    'truck)                                                                     'MaxVolume)                                                         (GetValue (GetValue self 'truck)                                                                'volume]                             [SETQ weightCapacity (DIFFERENCE (GetClassValue (GetValue self                                                                                    'truck)                                                                     'MaxWeight)                                                         (GetValue (GetValue self 'truck)                                                                'weight]                             (SETQ cashCapacity (MAX 0 (DIFFERENCE (GetValue (GetValue self                                                                                    'truck)                                                                          'cashBox)                                                              (GetValue self 'cashReserve]         [SETQ ^value (PROGN [SETQ volumeLimit (QUOTIENT volumeCapacity (GetClassValue                                                                         (GetClassValue roadStop                                                                                'Commodity)                                                                         'VolPerQty]                             [SETQ weightLimit (QUOTIENT weightCapacity (GetClassValue                                                                         (GetClassValue roadStop                                                                                'Commodity)                                                                         'WtPerQty]                             (SETQ cashLimit (QUOTIENT cashCapacity (PricePerUnit roadStop)))                             (SETQ producerLimit (GetValue roadStop 'qty]         (SETQ ^value (SETQ numBuy (MIN volumeLimit weightLimit cashLimit producerLimit)))     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler RateConsumers) self roadStop) "Method implementing a RuleSet"   (PROG (^auditRecord ^value rating cargo)     ^firstRules         (SETQ ^value (PROGN [SETQ cargo (CAR (GetValue (GetValue self 'truck)                                                     'cargo]                             (SETQ rating 0)))         [COND            ((AND (NOT (GetValue cargo 'status))                  (ISA roadStop ($ CityDump)))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop 5000 'CityDump 'LookNoMore)                                 (GO QUIT]         [COND            ((NOT (GetValue cargo 'status))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'SpoiltGoods 'CannotSell)                                 (GO QUIT]         [COND            ([NOT (ISA cargo (GetClassValue roadStop 'Commodity]             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((NOT (RoomToParkP roadStop))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((LESSP (GetValue roadStop 'qty)                    1)             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [SETQ ^value (SETQ rating (PLUS rating (TIMES 100 (GetValue roadStop 'pr]         [SETQ ^value (SETQ rating (DIFFERENCE rating (TIMES (GetClassValue (GetValue self                                                                                   'truck)                                                                    'Gpm)                                                             (Distance roadStop                                                                    (GetValue (GetValue self                                                                                     'truck)                                                                           'location]     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler RateProducers) self roadStop) "Method implementing a RuleSet"   (PROG (^value rating maxBuy)     ^firstRules         (SETQ ^value (SETQ rating 0))         [COND            ((NOT (RoomToParkP roadStop))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((SUBCLASS (GetClassValue roadStop 'Commodity)                    ($ PerishableCommodity))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((ISA roadStop ($ GasStation))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((LESSP (GetValue roadStop 'qty)                    1)             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((SUBCLASS (GetClassValue roadStop 'Commodity)                    ($ FragileCommodity))             (SETQ ^value (SETQ rating (DIFFERENCE rating (TIMES 500 (GetClassValue                                                                      (GetClassValue roadStop                                                                             'Commodity)                                                                      'FragilityLevel]         [COND            ((AND (SETQ maxBuy (_ self MaxPurchase roadStop))                  (LESSP maxBuy 1))             (SETQ ^value (SETQ rating (DIFFERENCE rating 10000]         [COND            ((SUBCLASS (GetClassValue roadStop 'Commodity)                    ($ LuxuryGoods))             (SETQ ^value (SETQ rating (PLUS rating 200]         [SETQ ^value (SETQ rating (PLUS rating (TIMES 10 maxBuy]         [SETQ ^value (SETQ rating (PLUS rating (TIMES 100 (DIFFERENCE 2 (GetValue roadStop                                                                                'pr]         [SETQ ^value (SETQ rating (DIFFERENCE rating (TIMES (GetClassValue (GetValue self                                                                                   'truck)                                                                    'Gpm)                                                             (Distance roadStop                                                                    (GetValue (GetValue self                                                                                     'truck)                                                                           'location]     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler RateSpotsNearAlices) self roadStop) "Method implementing a RuleSet"   (PROG (^value rating cargo)     ^firstRules         [SETQ ^value (SETQ cargo (CAR (GetValue (GetValue self 'truck)                                              'cargo]         [COND            ((NOT (RoomToParkP roadStop))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((ISA roadStop ($ UnionHall))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [COND            ((ISA roadStop ($ AlicesRestaurant))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL)                                 (GO QUIT]         [SETQ ^value (SETQ rating (DIFFERENCE 100 (TIMES 4 (Distance roadStop (GetValue self                                                                                      'alices]         [COND            ((AND cargo (ISA roadStop ($ Consumer))                  (ISA cargo (GetClassValue roadStop 'Commodity))                  (GREATERP (GetValue roadStop 'qty)                         0)                  (GREATERP (GetValue roadStop 'pr)                         1))             (SETQ ^value (SETQ rating (PLUS rating 20]     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler SellGoods) self) "Method implementing a RuleSet"   (PROG (^auditRecord ^value cargo sellQty)     ^firstRules         [SETQ ^value (SETQ cargo (CAR (GetValue (GetValue self 'truck)                                              'cargo]         [COND            ([NOT (ISA cargo (GetClassValue (GetValue (GetValue self 'truck)                                                   'location)                                    'Commodity]             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'NoSale 'WrongKindOfBuyer)                                 (GO QUIT]         [COND            ((AND (NOT (GetValue cargo 'status))                  (ISA (GetValue (GetValue self 'truck)                              'location)                       ($ CityDump)))             (SETQ ^value (PROGN [SETQ sellQty (MIN (GetValue (GetValue (GetValue self 'truck)                                                                     'location)                                                           'qty)                                                    (GetValue cargo 'qty]                                 (_ PlayerInterface Sell self cargo sellQty)                                 (PROGN                      (* ^value set by RuleSetStop)                                        (RuleSetStop T 'Sold 'AtCityDump)                                        (GO QUIT]         [COND            ((AND (LESSP (GetValue (GetValue (GetValue self 'truck)                                          'location)                                'pr)                         1.1)                  (EQ (GetValue self 'goal)                      'Peddle))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'NoSale 'AvoidCheapSkates)                                 (GO QUIT]         [COND            ((LESSP (GetValue (GetValue (GetValue self 'truck)                                     'location)                           'pr)                    0)             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'NoSale 'NeverSellAtLoss)                                 (GO QUIT]         [COND            ((AND (GetValue cargo 'status)                  [SETQ sellQty (MIN (GetValue (GetValue (GetValue self 'truck)                                                      'location)                                            'qty)                                     (GetValue cargo 'qty]                  (GEQ sellQty 1))             (SETQ ^value (_ PlayerInterface Sell self cargo sellQty)]     QUIT     ^lastRules         (RETURN ^value)))(Method ((Peddler TakeTurn) self) "Method implementing a RuleSet"   (PROG (^auditRecord ^value possibleStops)     ^firstRules         [COND            ((NOT (GetValue self 'goal))             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 68]                                 (PutAuditRec self 'goal 'Peddle ^auditRecord]         [COND            ([AND (GetValue (GetValue self 'truck)                         'cargo)                  (EQ (GetValue self 'goal)                      'Peddle)                  (SETQ possibleStops (RoadStops ($ Consumer]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 69]                                 (PutAuditRec self 'destination (PickHiObj self 'RateConsumers                                                                        possibleStops)                                        ^auditRecord]         [COND            ([AND (NOT (GetValue (GetValue self 'truck)                              'cargo))                  (EQ (GetValue self 'goal)                      'Peddle)                  (SETQ possibleStops (RoadStops ($ Producer]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 70]                                 (PutAuditRec self 'destination (PickHiObj self 'RateProducers                                                                        possibleStops)                                        ^auditRecord]         [COND            ([AND (EQ (GetValue self 'goal)                      'GoToAlices)                  (EQ (GetValue (GetValue self 'truck)                             'location)                      (GetValue self 'alices]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 71]                                 (PutAuditRec self 'goal 'SitTight ^auditRecord]         [COND            ((AND (EQ (GetValue (GetValue self 'truck)                             'location)                      (GetValue self 'alices))                  (GREATERP (_ self TimeAtStop)                         25)                  (EQ (GetValue self 'goal)                      'SitTight))             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 72]                                 (PutAuditRec self 'alices (NearestRoadStop (RoadStops ($                                                                                      AlicesRestaurant                                                                                          )))                                        ^auditRecord)                                 (PutAuditRec self 'destination (PickHiObj self 'RateSpotsNearAlices                                                                       (RoadStops))                                        ^auditRecord)                                 (PutAuditRec self 'goal 'GetClose ^auditRecord]         [COND            ([AND (LESSP (GetValue Simulator 'timeLeft)                         50)                  (NOT (FMEMB (GetValue self 'goal)                              '(SitTight GetClose GoToAlices]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 73]                                 (PutAuditRec self 'alices (NearestRoadStop (RoadStops ($                                                                                      AlicesRestaurant                                                                                          )))                                        ^auditRecord)                                 (PutAuditRec self 'destination (PickHiObj self 'RateSpotsNearAlices                                                                       (RoadStops))                                        ^auditRecord)                                 (PutAuditRec self 'goal 'GetClose ^auditRecord]         [COND            ([AND (LESSP (GetValue Simulator 'timeLeft)                         30)                  (NOT (ISA (GetValue (GetValue self 'truck)                                   'location)                            ($ AlicesRestaurant]             (SETQ ^value (PROGN [PROGN                     (* Make an audit record for this rule and set its audit values.)                                        (SETQ ^auditRecord (_ ($ StandardAuditRecord)                                                              New))                                        (PutValue ^auditRecord 'rule (GetObjFromUID                                                                      '(LKX0.%:F5.o28.E6A . 74]                                 (PutAuditRec self 'destination (NearestRoadStop (RoadStops                                                                                  ($ AlicesRestaurant                                                                                     )))                                        ^auditRecord)                                 (PutAuditRec self 'goal 'GoToAlices ^auditRecord]         [COND            ([NOT (OR (EQ (GetValue self 'goal)                          'SitTight)                      (AND (EQ (GetValue self 'goal)                               'GetClose)                           (LEQ (Distance (GetValue (GetValue self 'truck)                                                 'location)                                       (GetValue self 'alices))                                3]             (SETQ ^value (_ self GoToStoppingPlace)]     QUIT     ^lastRules         (RETURN ^value)))(\UnbatchMethodDefs)(PUTPROPS PEDDLER COPYRIGHT ("Xerox Corporation" 1987 1988))(DECLARE%: DONTCOPY  (FILEMAP (NIL)))STOP