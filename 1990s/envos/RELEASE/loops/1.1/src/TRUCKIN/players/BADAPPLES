(DEFINE-FILE-INFO PACKAGE "IL" READTABLE "INTERLISP" BASE 10)(FILECREATED "18-Jul-88 11:47:34" |{POGO:AISNORTH:XEROX}<LOOPSCORE>TRUCKIN>PLAYERS>BADAPPLES.;3| 45527        changes to%:  (METHODS BadApples.GetConsumer BadApples.GetHint BadApples.FindBandits                            BadApples.EvalBoard BadApples.TakeTurn BadApples.SellGoods                            BadApples.GoToStoppingPlace BadApples.FindStoppingPlace BadApples.BuyGas)                    (VARS BADAPPLESCOMS)                    (CLASSES BadApples)      previous date%: "15-Jul-88 15:58:35" |{POGO:AISNORTH:XEROX}<LOOPSCORE>TRUCKIN>PLAYERS>BADAPPLES.;2|)(* "Copyright (c) 1987, 1988 by Xerox Corporation.  All rights reserved.")(PRETTYCOMPRINT BADAPPLESCOMS)(RPAQQ BADAPPLESCOMS ((DECLARE%: DONTCOPY (PROP MAKEFILE-ENVIRONMENT BADAPPLES))                      (CLASSES BadApples)                      (INSTANCES)                      (FNS BESort BadApples.EvalBoard BadApples.FindBandits BadApples.Get                            BadApples.Sort)                      (METHODS BadApples.BuyGas BadApples.EvalBoard BadApples.FindBandits                              BadApples.FindStoppingPlace BadApples.GetConsumer BadApples.GetHint                              BadApples.GoToStoppingPlace BadApples.SellGoods BadApples.TakeTurn)))(DECLARE%: DONTCOPY (PUTPROPS BADAPPLES MAKEFILE-ENVIRONMENT (:PACKAGE "IL" :READTABLE "INTERLISP" :BASE 10)))(DEFCLASSES BadApples)(DEFCLASS BadApples   (MetaClass PlayerMeta Edited%:                            (* edited%: "15-JUL-83 10:54"))   (Supers Peddler)   (ClassVariables (CopyCV (Icon InitializeIVs))          (InitializeIVs #,NotSetValue)          (Icon #,NotSetValue))   (InstanceVariables (hints NIL doc                             "List of producer consumer rating triples, in decreasing order of rating"                             )          (consumer NIL doc "Current consumer")          (producer NIL doc "Current producer")))(DEFINEQ(BESort  [LAMBDA (a b)                                              (* edited%: "14-JUL-83 23:55")    (GREATERP (CADDR a)           (CADDR b])(BadApples.EvalBoard  [LAMBDA (self ourTruck)                                    (* edited%: "15-JUL-83 12:30")                    (* Evaluates all producer-consumer pairs on the board, and returns a list of           the top few, according to Dave's handy-dandy evaluation function)    (PROG (pairs distance profit maxWt maxVol cap maxDist)          (SETQ maxWt (@@ ourTruck MaxWeight))          (SETQ maxVol (@@ ourTruck MaxVolume))          (SETQ maxDist (@@ ourTruck MaxDist))          [SETQ pairs (for p in (RoadStops ($ Producer))                         join (for c in (Buyers (@@ p Commodity)                                               maxDist)                                 when (PROGN (SETQ cap (MIN (QUOTIENT maxVol (@@ (@@ p Commodity)                                                                                 VolPerQty))                                                            (QUOTIENT maxWt (@@ (@@ p Commodity)                                                                                WtPerQty))                                                            (@ p qty)))                                             (SETQ distance (Distance c p))                                             [SETQ profit (TIMES (@@ (@@ p Commodity)                                                                     AvgPrice)                                                                 cap                                                                 (DIFFERENCE (@ c pr)                                                                        (@ p pr)]                                             (SETQ turns (PLUS 2 (TIMES 4 (QUOTIENT distance maxDist)                                                                        )                                                               (QUOTIENT distance 5)))                                             (SETQ profit (QUOTIENT profit turns))                                             (GREATERP profit 10000))                                 collect (LIST p c profit]          (SETQ pairs (SORT pairs (FUNCTION BESort)))          (SETQ pairs (LDIFF pairs (NTH pairs 10)))          (RETURN pairs])(BadApples.FindBandits  [LAMBDA (self)                                             (* edited%: "14-JUL-83 20:40")                                                             (* Finds all roadstops wibandits,                                                              returns list)    (for X in (RoadStops) when (_ X BanditP) collect X])(BadApples.Get  [LAMBDA (self)                                             (* edited%: "15-JUL-83 09:02")                                                             (* New method template)    self])(BadApples.Sort  [LAMBDA (self)                                             (* edited%: "14-JUL-83 23:53")                                                             (* New method template)    self]))(\BatchMethodDefs)(METH BadApples  BuyGas NIL      "Method implementing a RuleSet" (method BadApples.BuyGas RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 649)) methodClass RuleSet UID (LOX0.%:F5.o28.D_; . 649))            (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 654)))            (name #,($A BadApples.BuyGas NIL RememberName))            (compiledRules BadApples.BuyGas)            (workSpace BadApples)            (tempVars (spaceInTank fuelAffordable fuelAvailable qty))            (taskVars NIL)            (debugVars NIL)            (numRules 2)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH BadApples  EvalBoard (ourTruck)      "Evaluates all producer-consumer pairs on the board, and returns a list of the top few, according to Dave's handy-dandy evaluation function"      (category (BadApples)))(METH BadApples  FindBandits NIL      "Returns list of all roadstops with bandits" (category (BadApples)))(METH BadApples  FindStoppingPlace NIL      "Method implementing a RuleSet" (method BadApples.FindStoppingPlace RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650)) methodClass RuleSet UID (LOX0.%:F5.o28.D_; . 650))            (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 655)))            (name #,($A BadApples.FindStoppingPlace NIL RememberName))            (compiledRules BadApples.FindStoppingPlace)            (workSpace BadApples)            (tempVars (roughRoad gasStation))            (taskVars NIL)            (debugVars NIL)            (numRules 7)            (controlStructure DO1)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH BadApples  GetConsumer NIL      "Method implementing a RuleSet" (method BadApples.GetConsumer RuleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 2)) methodClass RuleSet UID (LOX0.%:F5.o28.Eg> . 2))            (perspectiveNode #,($& RuleSetNode (LRX0.%:F5.o28.?z8 . 76)))            (name #,($A BadApples.GetConsumer NIL RememberName))            (compiledRules BadApples.GetConsumer)            (workSpace BadApples)            (tempVars (cargo))            (taskVars NIL)            (debugVars NIL)            (numRules 4)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH BadApples  GetHint NIL      "Method implementing a RuleSet" (method BadApples.GetHint RuleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 1)) methodClass RuleSet UID (LOX0.%:F5.o28.Eg> . 1))            (perspectiveNode #,($& RuleSetNode (LRX0.%:F5.o28.?z8 . 77)))            (name #,($A BadApples.GetHint NIL RememberName))            (compiledRules BadApples.GetHint)            (workSpace BadApples)            (tempVars NIL)            (taskVars NIL)            (debugVars NIL)            (numRules 3)            (controlStructure WHILEALL)            (whileCondition (ruleApplied))            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH BadApples  GoToStoppingPlace NIL      "Method implementing a RuleSet" (method BadApples.GoToStoppingPlace RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651)) methodClass RuleSet UID (LOX0.%:F5.o28.D_; . 651))            (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 656)))            (name #,($A BadApples.GoToStoppingPlace NIL RememberName))            (compiledRules BadApples.GoToStoppingPlace)            (workSpace BadApples)            (tempVars (realLocation numBuy))            (taskVars NIL)            (debugVars NIL)            (numRules 7)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH BadApples  SellGoods NIL      "Method implementing a RuleSet" (method BadApples.SellGoods RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 652)) methodClass RuleSet UID (LOX0.%:F5.o28.D_; . 652))            (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 657)))            (name #,($A BadApples.SellGoods NIL RememberName))            (compiledRules BadApples.SellGoods)            (workSpace BadApples)            (tempVars (cargo sellQty))            (taskVars NIL)            (debugVars NIL)            (numRules 3)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(METH BadApples  TakeTurn NIL      "Method implementing a RuleSet" (method BadApples.TakeTurn RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653)) methodClass RuleSet UID (LOX0.%:F5.o28.D_; . 653))            (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 658)))            (name #,($A BadApples.TakeTurn NIL RememberName))            (compiledRules BadApples.TakeTurn)            (workSpace BadApples)            (tempVars (possibleStops))            (taskVars NIL)            (debugVars NIL)            (numRules 11)            (controlStructure DOALL)            (whileCondition NIL)            (compilerOptions NIL)            (auditClass NIL)            (metaAssignments NIL)            (ruleClass NIL))(DEFINST RuleSetNode ((LOX0.%:F5.o28.D_; . 654))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 649)) Source #,($& RuleSetSource (LOX0.%:F5.o28.D_; . 659))))(DEFINST RuleSetNode ((LOX0.%:F5.o28.D_; . 655))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650)) Source #,($& RuleSetSource (LOX0.%:F5.o28.D_; . 660))))(DEFINST RuleSetNode ((LRX0.%:F5.o28.?z8 . 76))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 2)) Source #,($& RuleSetSource (LRX0.%:F5.o28.?z8 . 78))))(DEFINST RuleSetNode ((LRX0.%:F5.o28.?z8 . 77))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 1)) Source #,($& RuleSetSource (LRX0.%:F5.o28.?z8 . 19))))(DEFINST RuleSetNode ((LOX0.%:F5.o28.D_; . 656))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651)) Source #,($& RuleSetSource (LOX0.%:F5.o28.D_; . 661))))(DEFINST RuleSetNode ((LOX0.%:F5.o28.D_; . 657))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 652)) Source #,($& RuleSetSource (LOX0.%:F5.o28.D_; . 662))))(DEFINST RuleSetNode ((LOX0.%:F5.o28.D_; . 658))         (perspectives #,NotSetValue RuleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653)) Source #,($& RuleSetSource (LOX0.%:F5.o28.D_; . 663))))(DEFINST RuleSetSource ((LOX0.%:F5.o28.D_; . 659))         (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 654)))         (created "15-Jul-88 15:55:11")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LOX0.%:F5.o28.D_; . 664)) #,($& Rule (LOX0.%:F5.o28.D_; . 665)))))(DEFINST RuleSetSource ((LOX0.%:F5.o28.D_; . 660))         (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 655)))         (created "15-Jul-88 15:55:15")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LOX0.%:F5.o28.D_; . 666)) #,($& Rule (LOX0.%:F5.o28.D_; . 667)) #,($& Rule (LOX0.%:F5.o28.D_; . 668)) #,($& Rule (LOX0.%:F5.o28.D_; . 669)) #,($& Rule (LOX0.%:F5.o28.D_; . 670)) #,($& Rule (LOX0.%:F5.o28.D_; . 671)) #,($& Rule (LOX0.%:F5.o28.D_; . 672)))))(DEFINST RuleSetSource ((LRX0.%:F5.o28.?z8 . 78))         (perspectiveNode #,($& RuleSetNode (LRX0.%:F5.o28.?z8 . 76)))         (created "15-Jul-88 17:00:43")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LRX0.%:F5.o28.?z8 . 79)) #,($& Rule (LRX0.%:F5.o28.?z8 . 80)) #,($& Rule (LRX0.%:F5.o28.?z8 . 81)) #,($& Rule (LRX0.%:F5.o28.?z8 . 82)))))(DEFINST RuleSetSource ((LRX0.%:F5.o28.?z8 . 19))         (perspectiveNode #,($& RuleSetNode (LRX0.%:F5.o28.?z8 . 77)))         (created "15-Jul-88 16:56:24")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LRX0.%:F5.o28.?z8 . 83)) #,($& Rule (LRX0.%:F5.o28.?z8 . 84)) #,($& Rule (LRX0.%:F5.o28.?z8 . 85)))))(DEFINST RuleSetSource ((LOX0.%:F5.o28.D_; . 661))         (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 656)))         (created "15-Jul-88 15:55:19")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LOX0.%:F5.o28.D_; . 673)) #,($& Rule (LOX0.%:F5.o28.D_; . 674)) #,($& Rule (LOX0.%:F5.o28.D_; . 675)) #,($& Rule (LOX0.%:F5.o28.D_; . 676)) #,($& Rule (LOX0.%:F5.o28.D_; . 677)) #,($& Rule (LOX0.%:F5.o28.D_; . 678)) #,($& Rule (LOX0.%:F5.o28.D_; . 679)))))(DEFINST RuleSetSource ((LOX0.%:F5.o28.D_; . 662))         (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 657)))         (created "15-Jul-88 15:55:23")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LOX0.%:F5.o28.D_; . 680)) #,($& Rule (LOX0.%:F5.o28.D_; . 681)) #,($& Rule (LOX0.%:F5.o28.D_; . 682)))))(DEFINST RuleSetSource ((LOX0.%:F5.o28.D_; . 663))         (perspectiveNode #,($& RuleSetNode (LOX0.%:F5.o28.D_; . 658)))         (created "15-Jul-88 15:55:27")         (creator "BANE")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleList (#,($& Rule (LRX0.%:F5.o28.?z8 . 86)) #,($& Rule (LRX0.%:F5.o28.?z8 . 87)) #,($& Rule (LRX0.%:F5.o28.?z8 . 88)) #,($& Rule (LRX0.%:F5.o28.?z8 . 89)) #,($& Rule (LRX0.%:F5.o28.?z8 . 90)) #,($& Rule (LRX0.%:F5.o28.?z8 . 91)) #,($& Rule (LRX0.%:F5.o28.?z8 . 92)) #,($& Rule (LRX0.%:F5.o28.?z8 . 93)) #,($& Rule (LRX0.%:F5.o28.?z8 . 94)) #,($& Rule (LRX0.%:F5.o28.?z8 . 95)) #,($& Rule (LRX0.%:F5.o28.?z8 . 96)))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 664))         (source "(* Buy gasoline as limited by various constraints.)     THEN spaceInTank_truck::MaxFuel-truck:fuel	          fuelAvailable_truck:location:qty          fuelAffordable_truck:cashBox/(PricePerUnit truck:location)          qty_(MIN spaceInTank fuelAffordable fuelAvailable);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 649))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 665))         (source "(* Now appropriate quantity has been computed)    IF qty>=1     THEN  (_ \PlayerInterface Buy self qty );")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 649))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 666))         (source "(* Returns a stopping place en route to a destination.)IF truck:fuel=0 goal goal='PeddleTHEN stoppingPlace_(AnyRoadStop $UnionHall);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 667))         (source "IF truck:cashBox < 3000 ~truck:cargoTHEN stoppingPlace_(AnyRoadStop $UnionHall);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 668))         (source "(* Dont run out of gas.)IF goal~='SitTight    truck:fuel < .4 * truck::MaxFuel   truck:cashBox>0   gasStation_(NearestRoadStop (RoadStops $GasStation .Range1 NIL 'Room))THEN stoppingPlace_gasStation;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 669))         (source "(* Obey the law - stop at rough road for fragile goods.)IF truck:cargo (ISA (CAR truck:cargo) $FragileCommodity)   roughRoad_(NearestRoadStop (RoadStops $RoughRoad .Range1 direction 'Room))   (Distance roughRoad)<(Distance destination) THEN stoppingPlace_roughRoad;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 670))         (source        "IF (Distance destination)<=.Range1 (RoomToParkP destination)THEN stoppingPlace_destination;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 671))         (source "IF gasStation_(FurthestRoadStop (RoadStops $GasStation .Range1 direction 'Room))   gasStation:qty>0THEN stoppingPlace_gasStation;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 672))         (source "THEN stoppingPlace_(NthRoadStop  maxMove direction NIL 'Room);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 650))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 79))         (source "THEN cargo _ (CAR truck:cargo);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 2))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 80))         (source "THEN destination _ consumer;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 2))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 81))         (source "(* If our initial consumer couldn't buy, then choose any other)IF consumer:qty=0    THEN destination _ (NearestRoadStop (Buyers cargo));")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 2))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 82))         (source "(* If we've got garbage or no consumer, then go to the City Dump)IF (OR ~consumer ~cargo:status)    THEN destination _ (NearestRoadStop (RoadStops $CityDump));")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 2))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 83))         (source "IF ~hints    THEN hints _ (_ self EvalBoard truck)    producer _ (CAAR hints)    consumer _ (CADAR hints);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 1))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 84))         (source "IF ~hints THEN (STOP NIL 'NoGoodMove 'GaveUp);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 1))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 85))         (source "IF (OR producer:qty<1  consumer:qty<1 (AnyBanditsP producer consumer))    THEN hints _ (CDR hints)    producer _ (CAAR hints)    consumer _ (CADAR hints);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.Eg> . 1))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 673))         (source "	-> direction_(DirectionOf destination);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 674))         (source "        -> realLocation_truck:location;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 675))         (source "	IF .FindStoppingPlace stoppingPlace~=truck:location          ~stoppingPlace.BanditP	THEN (_ \PlayerInterface Move self stoppingPlace)               realLocation_truck:location;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 676))         (source "        IF realLocation~=stoppingPlace 	THEN (WriteGameStatus %"Oh!! %" driver %" Didnt reach stoppingPlace%");")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 677))         (source "	IF (ISA realLocation $GasStation)	THEN .BuyGas;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 678))         (source "	IF goal='Peddle	   realLocation=producer            numBuy_(_ self MaxPurchase realLocation)           numBuy>=1  	THEN (_ \PlayerInterface Buy self numBuy);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 679))         (source             "	IF (ISA realLocation $Consumer) realLocation=destination truck:cargo	THEN .SellGoods;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 651))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 680))         (source "	-> cargo_(CAR truck:cargo);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 652))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 681))         (source              "	IF ~(ISA cargo truck:location::Commodity)	THEN (STOP NIL 'NoSale 'WrongKindOfBuyer);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 652))))(DEFINST Rule ((LOX0.%:F5.o28.D_; . 682))         (source "	IF cargo:status sellQty_(MIN truck:location:qty cargo:qty) sellQty>=1 	THEN (_ \PlayerInterface Sell self cargo sellQty);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 652))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 86))         (source "   (* Top-Level RuleSet for taking turns.  Sets goal and destination.) IF ~goal  THEN goal_'Peddle;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 1)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 87))         (source " IF goal='Peddle ~truck:cargo THEN .GetHint;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 2)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 88))         (source " IF goal='Peddle ~hints    THEN (STOP NIL 'NoMove 'WeWillWait);")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 3)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 89))         (source " IF goal='Peddle truck:cargo    THEN .GetConsumer;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 4)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 90))         (source " IF goal='Peddle ~truck:cargo    THEN destination_producer;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 5)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 91))         (source "  IF goal='Peddle truck:fuel< .7*truck::MaxFuel    THEN destination_(NearestRoadStop (RoadStops $GasStation));")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 6)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 92))         (source "(* Don't move away from Alices during endgame.) IF goal='GoToAlices truck:location=alices  THEN goal_'SitTight;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 7)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 93))         (source "(* Except dont overstay at Alices.)IF truck:location=alices  .TimeAtStop > 25 goal='SitTight THEN alices_(NearestRoadStop (RoadStops $AlicesRestaurant))       destination_ (PickHiObj self 'RateSpotsNearAlices (RoadStops))       goal_'GetClose;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 8)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 94))         (source "(* Get near to Alices when time gets close)		 IF \Simulator:timeLeft < 100 ~[goal<<'(SitTight GetClose GoToAlices)]    THEN alices_(NearestRoadStop (RoadStops $AlicesRestaurant))       destination_ (PickHiObj self 'RateSpotsNearAlices (RoadStops))       goal_'GetClose;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 9)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 95))         (source "(* Go to Alices now that it is time) IF \Simulator:timeLeft < 30     ~(ISA truck:location $AlicesRestaurant)     THEN destination_ (NearestRoadStop (RoadStops $AlicesRestaurant))       goal_'GoToAlices ;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 10)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(DEFINST Rule ((LRX0.%:F5.o28.?z8 . 96))         (source "IF ~(OR goal='SitTight        (AND goal='GetClose (Distance truck:location alices)<=3)) THEN .GoToStoppingPlace;")         (edited "11-Jul-88 21:48:50")         (editor BANE)         (ruleNumber 11)         (ruleSet #,($& RuleSet (LOX0.%:F5.o28.D_; . 653))))(Method ((BadApples BuyGas) self) "Method implementing a RuleSet"   (PROG (^value spaceInTank fuelAffordable fuelAvailable qty)     ^firstRules         [SETQ ^value (PROGN [SETQ spaceInTank (DIFFERENCE (GetClassValue (GetValue self 'truck)                                                                  'MaxFuel)                                                      (GetValue (GetValue self 'truck)                                                             'fuel]                             (SETQ fuelAvailable (GetValue (GetValue (GetValue self 'truck)                                                                  'location)                                                        'qty))                             [SETQ fuelAffordable (QUOTIENT (GetValue (GetValue self 'truck)                                                                   'cashBox)                                                         (PricePerUnit (GetValue (GetValue                                                                                  self                                                                                  'truck)                                                                              'location]                             (SETQ qty (MIN spaceInTank fuelAffordable fuelAvailable]         [COND            ((GEQ qty 1)             (SETQ ^value (_ PlayerInterface Buy self qty)]     QUIT     ^lastRules         (RETURN ^value)))(Method ((BadApples EvalBoard) self ourTruck) "Evaluates all producer-consumer pairs on the board, and returns a list of the top few, according to Dave's handy-dandy evaluation function"   (PROG (pairs distance profit maxWt maxVol cap maxDist)         (SETQ maxWt (@@ ourTruck MaxWeight))         (SETQ maxVol (@@ ourTruck MaxVolume))         (SETQ maxDist (@@ ourTruck MaxDist))         [SETQ pairs (for p in (RoadStops ($ Producer))                        join (for c in (Buyers (@@ p Commodity)                                              maxDist)                                when (PROGN (SETQ cap (MIN (QUOTIENT maxVol (@@ (@@ p Commodity)                                                                                VolPerQty))                                                           (QUOTIENT maxWt (@@ (@@ p Commodity)                                                                               WtPerQty))                                                           (@ p qty)))                                            (SETQ distance (Distance c p))                                            [SETQ profit (TIMES (@@ (@@ p Commodity)                                                                    AvgPrice)                                                                cap                                                                (DIFFERENCE (@ c pr)                                                                       (@ p pr)]                                            (SETQ turns (PLUS 2 (TIMES 4 (QUOTIENT distance maxDist))                                                              (QUOTIENT distance 5)))                                            (SETQ profit (QUOTIENT profit turns))                                            (GREATERP profit 10000))                                collect (LIST p c profit]         (SETQ pairs (SORT pairs (FUNCTION BESort)))         (SETQ pairs (LDIFF pairs (NTH pairs 10)))         (RETURN pairs)))(Method ((BadApples FindBandits) self) "Returns list of all roadstops with bandits"   (for X in (RoadStops) when (_ X BanditP) collect X))(Method ((BadApples FindStoppingPlace) self) "Method implementing a RuleSet"   (PROG (^value roughRoad gasStation)     ^firstRules         [COND            [(AND (EQ (GetValue (GetValue self 'truck)                             'fuel)                      0)                  (GetValue self 'goal)                  (EQ (GetValue self 'goal)                      'Peddle))             (SETQ ^value (PutValue self 'stoppingPlace (AnyRoadStop ($ UnionHall]            [[AND (LESSP (GetValue (GetValue self 'truck)                                'cashBox)                         3000)                  (NOT (GetValue (GetValue self 'truck)                              'cargo]             (SETQ ^value (PutValue self 'stoppingPlace (AnyRoadStop ($ UnionHall]            ([AND (NEQ (GetValue self 'goal)                       'SitTight)                  [LESSP (GetValue (GetValue self 'truck)                                'fuel)                         (TIMES 0.4 (GetClassValue (GetValue self 'truck)                                           'MaxFuel]                  (GREATERP (GetValue (GetValue self 'truck)                                   'cashBox)                         0)                  (SETQ gasStation (NearestRoadStop (RoadStops ($ GasStation)                                                           (_ self Range1)                                                           NIL                                                           'Room]             (SETQ ^value (PutValue self 'stoppingPlace gasStation)))            ([AND (GetValue (GetValue self 'truck)                         'cargo)                  (ISA (CAR (GetValue (GetValue self 'truck)                                   'cargo))                       ($ FragileCommodity))                  [SETQ roughRoad (NearestRoadStop (RoadStops ($ RoughRoad)                                                          (_ self Range1)                                                          (GetValue self 'direction)                                                          'Room]                  (LESSP (Distance roughRoad)                         (Distance (GetValue self 'destination]             (SETQ ^value (PutValue self 'stoppingPlace roughRoad)))            [[AND (LEQ (Distance (GetValue self 'destination))                       (_ self Range1))                  (RoomToParkP (GetValue self 'destination]             (SETQ ^value (PutValue self 'stoppingPlace (GetValue self 'destination]            ((AND [SETQ gasStation (FurthestRoadStop (RoadStops ($ GasStation)                                                            (_ self Range1)                                                            (GetValue self 'direction)                                                            'Room]                  (GREATERP (GetValue gasStation 'qty)                         0))             (SETQ ^value (PutValue self 'stoppingPlace gasStation)))            (T (SETQ ^value (PutValue self 'stoppingPlace (NthRoadStop (GetValue self 'maxMove)                                                                 (GetValue self 'direction)                                                                 NIL                                                                 'Room]     QUIT     ^lastRules         (RETURN ^value)))(Method ((BadApples GetConsumer) self) "Method implementing a RuleSet"   (PROG (^value cargo)     ^firstRules         [SETQ ^value (SETQ cargo (CAR (GetValue (GetValue self 'truck)                                              'cargo]         [SETQ ^value (PutValue self 'destination (GetValue self 'consumer]         [COND            ((EQ (GetValue (GetValue self 'consumer)                        'qty)                 0)             (SETQ ^value (PutValue self 'destination (NearestRoadStop (Buyers cargo]         [COND            ([OR (NOT (GetValue self 'consumer))                 (NOT (GetValue cargo 'status]             (SETQ ^value (PutValue self 'destination (NearestRoadStop (RoadStops ($ CityDump]     QUIT     ^lastRules         (RETURN ^value)))(Method ((BadApples GetHint) self) "Method implementing a RuleSet"   (PROG (^value ^prevValue ruleApplied)         (SETQ ruleApplied T)     ^firstRules     cycleLoop         (COND            ((NOT ruleApplied)             (GO QUIT)))         (SETQ ^value ^noRuleApplied)         [COND            ((NOT (GetValue self 'hints))             (SETQ ^value (PROGN [PutValue self 'hints (_ self EvalBoard (GetValue self 'truck))]                                 [PutValue self 'producer (CAAR (GetValue self 'hints]                                 (PutValue self 'consumer (CADAR (GetValue self 'hints]         [COND            ((NOT (GetValue self 'hints))             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'NoGoodMove 'GaveUp)                                 (GO QUIT]         [COND            ([OR (LESSP (GetValue (GetValue self 'producer)                               'qty)                        1)                 (LESSP (GetValue (GetValue self 'consumer)                               'qty)                        1)                 (AnyBanditsP (GetValue self 'producer)                        (GetValue self 'consumer]             (SETQ ^value (PROGN [PutValue self 'hints (CDR (GetValue self 'hints]                                 [PutValue self 'producer (CAAR (GetValue self 'hints]                                 (PutValue self 'consumer (CADAR (GetValue self 'hints]         (COND            ((EQ ^value ^noRuleApplied)                      (* Here if no rule applied.)             (SETQ ruleApplied NIL)             (SETQ ^value ^prevValue))            (T                                               (* Here if some rule applied.)               (SETQ ruleApplied T)               (SETQ ^prevValue ^value)))         (GO cycleLoop)     QUIT     ^lastRules         (RETURN ^value)))(Method ((BadApples GoToStoppingPlace) self) "Method implementing a RuleSet"   (PROG (^value realLocation numBuy)     ^firstRules         [SETQ ^value (PutValue self 'direction (DirectionOf (GetValue self 'destination]         [SETQ ^value (SETQ realLocation (GetValue (GetValue self 'truck)                                                'location]         [COND            ((AND (_ self FindStoppingPlace)                  (NEQ (GetValue self 'stoppingPlace)                       (GetValue (GetValue self 'truck)                              'location))                  (NOT (_ (GetValue self 'stoppingPlace)                          BanditP)))             (SETQ ^value (PROGN (_ PlayerInterface Move self (GetValue self 'stoppingPlace))                                 (SETQ realLocation (GetValue (GetValue self 'truck)                                                           'location]         [COND            ((NEQ realLocation (GetValue self 'stoppingPlace))             (SETQ ^value (WriteGameStatus "Oh!! " (GetValue self 'driver)                                 " Didnt reach stoppingPlace"]         [COND            ((ISA realLocation ($ GasStation))             (SETQ ^value (_ self BuyGas)]         [COND            ((AND (EQ (GetValue self 'goal)                      'Peddle)                  (EQ realLocation (GetValue self 'producer))                  (SETQ numBuy (_ self MaxPurchase realLocation))                  (GEQ numBuy 1))             (SETQ ^value (_ PlayerInterface Buy self numBuy)]         [COND            ((AND (ISA realLocation ($ Consumer))                  (EQ realLocation (GetValue self 'destination))                  (GetValue (GetValue self 'truck)                         'cargo))             (SETQ ^value (_ self SellGoods)]     QUIT     ^lastRules         (RETURN ^value)))(Method ((BadApples SellGoods) self) "Method implementing a RuleSet"   (PROG (^value cargo sellQty)     ^firstRules         [SETQ ^value (SETQ cargo (CAR (GetValue (GetValue self 'truck)                                              'cargo]         [COND            ([NOT (ISA cargo (GetClassValue (GetValue (GetValue self 'truck)                                                   'location)                                    'Commodity]             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'NoSale 'WrongKindOfBuyer)                                 (GO QUIT]         [COND            ((AND (GetValue cargo 'status)                  [SETQ sellQty (MIN (GetValue (GetValue (GetValue self 'truck)                                                      'location)                                            'qty)                                     (GetValue cargo 'qty]                  (GEQ sellQty 1))             (SETQ ^value (_ PlayerInterface Sell self cargo sellQty)]     QUIT     ^lastRules         (RETURN ^value)))(Method ((BadApples TakeTurn) self) "Method implementing a RuleSet"   (PROG (^value possibleStops)     ^firstRules         [COND            ((NOT (GetValue self 'goal))             (SETQ ^value (PutValue self 'goal 'Peddle]         [COND            ([AND (EQ (GetValue self 'goal)                      'Peddle)                  (NOT (GetValue (GetValue self 'truck)                              'cargo]             (SETQ ^value (_ self GetHint)]         [COND            ([AND (EQ (GetValue self 'goal)                      'Peddle)                  (NOT (GetValue self 'hints]             (SETQ ^value (PROGN                             (* ^value set by RuleSetStop)                                 (RuleSetStop NIL 'NoMove 'WeWillWait)                                 (GO QUIT]         [COND            ((AND (EQ (GetValue self 'goal)                      'Peddle)                  (GetValue (GetValue self 'truck)                         'cargo))             (SETQ ^value (_ self GetConsumer)]         [COND            ([AND (EQ (GetValue self 'goal)                      'Peddle)                  (NOT (GetValue (GetValue self 'truck)                              'cargo]             (SETQ ^value (PutValue self 'destination (GetValue self 'producer]         [COND            ([AND (EQ (GetValue self 'goal)                      'Peddle)                  (LESSP (GetValue (GetValue self 'truck)                                'fuel)                         (TIMES 0.7 (GetClassValue (GetValue self 'truck)                                           'MaxFuel]             (SETQ ^value (PutValue self 'destination (NearestRoadStop (RoadStops ($ GasStation]         [COND            ([AND (EQ (GetValue self 'goal)                      'GoToAlices)                  (EQ (GetValue (GetValue self 'truck)                             'location)                      (GetValue self 'alices]             (SETQ ^value (PutValue self 'goal 'SitTight]         [COND            ((AND (EQ (GetValue (GetValue self 'truck)                             'location)                      (GetValue self 'alices))                  (GREATERP (_ self TimeAtStop)                         25)                  (EQ (GetValue self 'goal)                      'SitTight))             (SETQ ^value (PROGN [PutValue self 'alices (NearestRoadStop (RoadStops ($                                                                                      AlicesRestaurant                                                                                       ]                                 (PutValue self 'destination (PickHiObj self 'RateSpotsNearAlices                                                                    (RoadStops)))                                 (PutValue self 'goal 'GetClose]         [COND            ([AND (LESSP (GetValue Simulator 'timeLeft)                         100)                  (NOT (FMEMB (GetValue self 'goal)                              '(SitTight GetClose GoToAlices]             (SETQ ^value (PROGN [PutValue self 'alices (NearestRoadStop (RoadStops ($                                                                                      AlicesRestaurant                                                                                       ]                                 (PutValue self 'destination (PickHiObj self 'RateSpotsNearAlices                                                                    (RoadStops)))                                 (PutValue self 'goal 'GetClose]         [COND            ([AND (LESSP (GetValue Simulator 'timeLeft)                         30)                  (NOT (ISA (GetValue (GetValue self 'truck)                                   'location)                            ($ AlicesRestaurant]             (SETQ ^value (PROGN [PutValue self 'destination (NearestRoadStop (RoadStops ($                                                                                      AlicesRestaurant                                                                                            ]                                 (PutValue self 'goal 'GoToAlices]         [COND            ([NOT (OR (EQ (GetValue self 'goal)                          'SitTight)                      (AND (EQ (GetValue self 'goal)                               'GetClose)                           (LEQ (Distance (GetValue (GetValue self 'truck)                                                 'location)                                       (GetValue self 'alices))                                3]             (SETQ ^value (_ self GoToStoppingPlace)]     QUIT     ^lastRules         (RETURN ^value)))(\UnbatchMethodDefs)(PUTPROPS BADAPPLES COPYRIGHT ("Xerox Corporation" 1987 1988))(DECLARE%: DONTCOPY  (FILEMAP (NIL (2019 5262 (BESort 2029 . 2186) (BadApples.EvalBoard 2188 . 4439) (BadApples.FindBandits 4441 . 4819) (BadApples.Get 4821 . 5039) (BadApples.Sort 5041 . 5260)))))STOP