(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)(FILECREATED " 6-Apr-89 16:10:07" {ERIS}<NOTECARDS>E1.1RELEASE>TOOLS>RELEASETOOLS.\;14 29102        |changes| |to:|  (FNS GET-DEFAULT-DISPLAY-FONT)      |previous| |date:| " 6-Apr-89 13:34:30" {ERIS}<NOTECARDS>E1.1RELEASE>TOOLS>RELEASETOOLS.\;13); Copyright (c) 1989 by Envos Corporation.  All rights reserved.(PRETTYCOMPRINT RELEASETOOLSCOMS)(RPAQQ RELEASETOOLSCOMS ((FNS MAKE-NOTECARDS-SYSOUT LOADUP-SOURCES COMPILE-SOURCES GET-DIRECTORY                                  FIND-UNSAVED-FNS STARTUP-SYSOUT MAKE-SYSOUT                                   GET-DEFAULT-DISPLAY-FONT GET-FONT-PROFILE)))(DEFINEQ(MAKE-NOTECARDS-SYSOUT  (LAMBDA NIL                                       (* \; "Edited  6-Apr-89 13:33 by sye.envos")(* |;;;| "")(* |;;;| " Mar-16-89  Sye:  ")(* |;;;| "       1.)  Replace \"{Eris}<NoteCards>E1.1Beta>Tools>\" with \"{Eris}<NoteCards>E1.1Release>Tools>\"")(* |;;;| "        2.) Remove  (PRINTER-MENU-SETUP DEFAULTPRINTINGHOST) ")(* |;;;| " Mar-23-89 Sye:")(* |;;;| "        1.) Replace (SETQ NOTECARDS-SYSOUT-NAME (CONCAT \"Envos NoteCards 1.1 Release \" (DATE)))")(* |;;;| "              by            (SETQ NOTECARDS-SYSOUT-NAME \"Envos NoteCards 1.1 Release \")")(* |;;;| "       2.) Replace  (CNDIR \"{DSK}\")")(* |;;;| "              by              (SETQ LOGINHOST/DIR \"{DSK}\")  (CNDIR)")(* |;;;| "          ")(* |;;;| " April-3-89 Sye: rearranged background menu; ")(* |;;;| "                              added  XNS/UNIX authentication modes to the IDLER ; ")(* |;;;| "                              loaded PAGEHOLD package ;")(* |;;;| "                              loaded recompiled lispcore files from {eris}<notecards>e1.1release>lispcore")(* |;;;| "   ")(* |;;;| "Setup the Card Types & Load ALL of the card types NOW")    (SETQ NOTECARDTYPES '(|Text| |FileBox| |Sketch| |Graph| |Browser| |Search| |Document| |LinkIndex|                                ))(* |;;;| "No Startup Messages")    (SETQ |NC.SendStartupMessage| NIL)(* |;;;| "No Stub Cards")    (SETQ NOTECARDTYPESTUBS)(* |;;;| "Add any Extra Files Here")    (SETQ NOTECARDSLIBRARYFILES '(NCHACKS NEWSHADEITEM NCCOMPACT NCREPAIR NCMAPS))(* |;;;| "SYSLOAD the files")    (SETQ NC.LOADFLG 'SYSLOAD)(* |;;;| "Setup the directories")    (SETQ DISPLAYFONTDIRECTORIES (LIST "{Erinyes}<Lisp>Lyric>Fonts>" "{Erinyes}<Lisp>Fonts>"))    (SETQ DIRECTORIES (LIST "{Eris}<NoteCards>E1.1Release>Tools>"                             "{Eris}<notecards>e1.1release>lispcore>" "{Eris}<LispCore>Library>"                             "{Eris}<LispCore>Sources>" "{Erinyes}<LispLibrary>Medley>"                             "{Erinyes}<Lisp>Medley>Library>"                             "{Erinyes}<Lisp>Medley>Internal>Library>"                             "{Eris}<notecards>e1.1release>postscript" "{Erinyes}<LispUsers>Medley>"                             "{Erinyes}<Lisp>Medley>LispUsers>"))    (SETQ LISPUSERSDIRECTORIES DIRECTORIES)    (PROGN     (LET*      ((NCDIR (GET-DIRECTORY "Select Directory to load NoteCards from"))       (NCLIBDIR (CONCAT NCDIR "Library>")))      (SETQ NOTECARDSDIRECTORIES LISPUSERSDIRECTORIES)      (SETQ NOTECARDSNEXTDIRECTORIES LISPUSERSDIRECTORIES)      (SETQ NOTECARDS-SYSOUT-FILE-NAME (CONCAT NCDIR "NoteCards.sysout"))      (SETQ NOTECARDS-SYSOUT-NAME "Envos NoteCards 1.1 Release ")(* |;;;| "Load Necessary Files")      (LET ((SYSOUT (MENU (CREATE MENU                                 TITLE _ "From What Sysout?"                                 ITEMS _ '("Lisp.Sysout" "Full.Sysout")))))           (COND              ((STRING-EQUAL "Full.Sysout" SYSOUT))              ((STRING-EQUAL "Lisp.Sysout" SYSOUT)               (FILESLOAD 'TEDIT.LCOM)               (FILESLOAD 'FILEBROWSER.LCOM)               (FILESLOAD "HRULE.LCOM"))              (T (PROMPTPRINT "Abort Make Notecards")                 (HELP))))      (FILESLOAD 'SKETCH.LCOM)      (FILESLOAD "PS-SEND.LCOM")      (FILESLOAD "POSTSCRIPT.LCOM")      (FILESLOAD "UNIXCOMM.LCOM")      (FILESLOAD "DIGI-CLOCK.LCOM")      (FILESLOAD "CROCK.LCOM")      (FILESLOAD "DEFAULT-PRINTER.LCOM")      (FILESLOAD "CONN-DIR.LCOM")      (FILESLOAD "NEATICONS.DFASL")      (FILESLOAD "PAGEHOLD.LCOM")      (UNADVISE 'SHRINKW)(* |;;;| "NOTE: Need to include postscript fonts on tape.")(* |;;;| "Load NoteCards")      (FILESLOAD 'NOTECARDS.LCOM)(* |;;;| "Post NoteCards Files")      (FILESLOAD "NCPSMENU.LCOM")(* |;;;| "load lispcore files whose lcom creationdate are later than Feb-22-89")(* |;;;| " these files need to be recompiled in Medley sysout for safety reason")      (FILESLOAD "TEDITHCPY.LCOM")      (FILESLOAD "IMAGEOBJ.LCOM")      (FILESLOAD "IMAGEIO.LCOM")(* |;;;| "Load the Fonts")      (FONTCREATE 'TIMESROMAN 12)      (FONTCREATE 'TIMESROMAN 12 'BOLD)      (FONTCREATE 'HELVETICA 36)      (FONTCREATE 'HELVETICA 14 'BOLD)      (FONTCREATE 'HELVETICA 36 'BOLD)(* |;;;| "Set the READTABLE to interlisp")      (SETQ *READTABLE* FILERDTBL)(* |;;;| "Clear out the directories")      (SETQ DIRECTORIES NIL)      (SETQ LISPUSERSDIRECTORIES NIL)(* |;;;| "Setup the Background Menu")      (SETQ |BackgroundMenu| NIL)      (SETQ |BackgroundMenuCommands|       (LIST (SASSOC '|TEdit| |BackgroundMenuCommands|)             (SASSOC '|Sketch| |BackgroundMenuCommands|)             (SASSOC '|NoteCards| |BackgroundMenuCommands|)             '("----------" NIL)             (SASSOC '|Snap| |BackgroundMenuCommands|)             (SASSOC '|Hardcopy| |BackgroundMenuCommands|)             '("----------" NIL)             '(|Clocks| '(CROCK)                     "Analog Clock."                     (SUBITEMS ("Analog Clock" '(CROCK)                                      "Analog Clock.")                            ("Digital Clock" '(DIGI-CLOCK T)                                   "Digital Clock.")))             (SASSOC "FileBrowser" |BackgroundMenuCommands|)             (SASSOC "Directory Connector" |BackgroundMenuCommands|)             '("----------" NIL)             '(|Idle| '(IDLE)                     "Enter Idle mode"                     (SUBITEMS ("Show Profile" '(IDLE.SHOW.OPTIONS)                                      "Print current idle options in prompt window")                            ("Set Timeout" '(IDLE.SET.OPTION 'TIMEOUT)                                   "Set how long before idling started"                                   (SUBITEMS ("Never" (IDLE.SET.OPTION 'TIMEOUT 0)                                                    "Never spontaneously enter idle mode")))                            ("Choose Display" '(IDLE.SET.OPTION 'DISPLAYFN)                                   "Choose idle display")                            ("Forget" '(IDLE.SHOW.OPTION 'FORGET)                                   "Erase password when leaving idle mode?"                                   (SUBITEMS ("Do" '(IDLE.SET.OPTION 'FORGET T)                                                   "Erase password upon exiting idle mode")                                          ("Don't" '(IDLE.SET.OPTION 'FORGET NIL)                                                                                          "Retain password through idle mode (unless someone logs in)"                                                 )))                            ("Allowed Logins" '(IDLE.SHOW.OPTION 'ALLOWED.LOGINS)                                   "Who can exit idle mode"                                   (SUBITEMS ("Unlocked" '(IDLE.SET.OPTION 'ALLOWED.LOGINS                                                                 'UNLOCKED)                                                    "No login required to exit idle mode")                                          ("Locked" '(IDLE.SET.OPTION 'ALLOWED.LOGINS '(T))                                                 "Only the current user may exit idle mode")                                          ("Any Login" '(IDLE.SET.OPTION 'ALLOWED.LOGINS '                                                             (*))                                                 "Any user may exit, but require login")                                          ("Group" '(IDLE.SET.OPTION 'ALLOWED.LOGINS 'ADD)                                                 "Only allow specific users and/or groups to exit"                                                 (SUBITEMS ("Include Previous User"                                                            '(IDLE.SET.OPTION 'ALLOWED.LOGINS T)                                                                                                                      "If current user exits, check old password"                                                            )                                                        ("Add Member" '(IDLE.SET.OPTION                                                                               'ALLOWED.LOGINS                                                                              'ADD)                                                               "Add a group or username")                                                        ("Remove Member" '(IDLE.SET.OPTION                                                                           'ALLOWED.LOGINS                                                                           'REMOVE)                                                               "Remove a group or username")))))                            ("Authenticate" '(IDLE.SHOW.OPTION 'AUTHENTICATE)                                   "Authenticate user upon exiting idle mode?"                                   (SUBITEMS ("XNS" '(IDLE.SET.OPTION 'AUTHENTICATE T)                                                                                  "User will be authenticated using XNS mechanism upon exiting idle mode"                                                    )                                          ("UNIX" '(IDLE.SET.OPTION 'AUTHENTICATE 'UNIX)                                                                              "User will be authenticated using UNIX mechanism upon exiting idle mode"                                                 )                                          ("Don't" '(IDLE.SET.OPTION 'AUTHENTICATE NIL)                                                 "Accept any password--no authentication check")))))             '(|Logout| '(LOGOUT)                     "Save VM & Exit to Unix."                     (SUBITEMS ("Save image & Exit" '(LOGOUT)                                      "Save VM image & Exit to Unix.")                            ("Flush image & Exit" '(AND (MOUSECONFIRM "Confirm Exit wihout Saving?")                                                        (LOGOUT T))                                   "Suspend to Unix (VM image NOT saved).")                            ("Save VM" '(SAVEVM)                                   "Save the VM image.")                            ("Suspend & Exit" '(SUSPEND-LISP)                                                  "Suspend NoteCards & Exit to Unix (image NOT saved, but you can return to NoteCards)."                                   )))             '(|Neat Icons| '(PROGN (READVISE 'SHRINKW)                                    (SETQ |BackgroundMenuCommands|                                     (FOR ITEM IN |BackgroundMenuCommands|                                        WHEN (OR (NOT (LISTP ITEM))                                                     (NEQ (CAR ITEM)                                                          '|Neat Icons|)) COLLECT ITEM))                                    (SETQ |BackgroundMenu| NIL))                     "Turn on Neat Icons")             (LIST "Low Level Tools"                   (LIST 'AND '(MOUSECONFIRM "Warning these are DANGEROUS tools.")                         `(MENU ,(CREATE MENU                                        TITLE _ "Select the desired tool"                                        ITEMS _ (LIST (SASSOC 'EXEC |BackgroundMenuCommands|)                                                      (SASSOC "PSW" |BackgroundMenuCommands|)                                                      '("Show TEdit Props" '(                                                                            |NC.ToggleShowTEditProps|                                                                             )                                                                                                      "Toggle Showing of TEdit Props in Notecards Parameters Menu."                                                              )))))                   "Dangerous Low Level Debugging Tools")             '("Set Default Printer" '(SET-DEFAULT-PRINTER)                     "Makes one of the available printers the default printer."                     (SUBITEMS ("Set Default Printer" '(SET-DEFAULT-PRINTER)                                      "Makes one of the available printers the default printer.")                            ("Add Default Printer" '(ADD-DEFAULT-PRINTER)                                                            "Adds a printer to the list of available printers and makes it the default."                                   )                            ("Remove Default Printer" '(REMOVE-DEFAULT-PRINTER)                                   "Removes an available printer from the default printer list.")))             (SASSOC '|Postscript Parameters| |BackgroundMenuCommands|)             '("Set Default Display Font" '(GET-DEFAULT-DISPLAY-FONT)                     "Set the Default Display Font")))(* |;;;| "Smash the compiler definitions")      (MOVD 'NULL 'COMPILE T)      (MOVD 'NULL 'TCOMPL T)      (MOVD 'NULL 'BCOMPL T)      (MOVD 'NULL 'CL:COMPILE-FILE T)(* |;;;| "Bring up NoteCards Icon")      (TEDIT (CONCAT NCLIBDIR "ReleaseNote.tedit"))      (|NC.BringUpNoteCardsIcon|)(* |;;;| "Add a Make sysout menu")      (SETQ NOTECARDS-MAKE-SYSOUT-MENU (ADDMENU (CREATE MENU                                                       TITLE _ "Press to Start the MAKESYS"                                                       ITEMS _ '(|Make Sysout|)                                                       WHENSELECTEDFN _ 'STARTUP-SYSOUT)))      (SETQ |NC.ShowTEditProps| NIL)      (LOGOW "" NIL " NoteCards 1.1   Copyright (c) 1989 ")      (SETQ LOGINHOST/DIR "{DSK}")      (CNDIR)))))(LOADUP-SOURCES  (LAMBDA NIL                                        (* \; "Edited 27-Feb-89 16:08 by krivacic")(* |;;;| "Connect to the Right directory")    (LET*     ((SOURCE-DIR (GET-DIRECTORY "Load NoteCards Sources From"))      (LIBDIR (CONCAT SOURCE-DIR "Library>")))               (* FILESLOAD (FROM <NOTECARDS>LISP>)                                                            WHERE-IS-PATCH)     (FILESLOAD 'EXPORTS.ALL)     (SETQ |NC.InstallFlg| T)     (SETQ |NC.NoUpdateFlg| NIL)     (* |;;| "load notecards & postrelease patches")     (FILESLOAD NOTECARDS)     (SETQ NC.FILES |NC.Files|)     (SETQ NC.CODE (LDIFFERENCE |NC.Files| '(NOTECARDS.HASH)))     (SETQ NC.LIBFILES '(NCMAPS NCHACKS NCFILECARD NCGESTURES NCTABLETOPCARD NEWSHADEITEM))     (SETQ NC.AUXFILES '(NOTECARDS.HASH))     (SETQ NC.COMP (|for| FILE |in| (LDIFFERENCE |NC.Files| '(POSTRELEASEPATCHES                                                                             HOTECARDS.HASH))                      |collect| (MKATOM (CONCAT FILE "." COMPILE.EXT))))     (|for| FILE |in| NC.COMP |do| (|NC.LoadFileFromDirectories| FILE))     (* |;;| "Load all of the sources")     (|for| FILE |in| NC.CODE |do| (LOAD? FILE 'PROP))     (* |;;| "Load the POSTRELEASE patches")     (|for| COMS |in| POSTRELEASEPATCHESCOMS        |do| (|if| (EQ 'FILES (CAR COMS))                     |then| (|for| PATCHFILE |in| (CDR COMS)                                   |do| (LOAD? PATCHFILE 'PROP))))     (LET      ((SEEN-FNS (LIST))       (SEEN-PAIRS (LIST))       (DUP-TRIPS (LIST)))      (|for| COMS |in| POSTRELEASEPATCHESCOMS         |do|         (|if| (EQ 'FILES (CAR COMS))             |then|             (|for| PATCHFILE |in| (CDR COMS)                |do|                (PRINTOUT T "Looking at " PATCHFILE T)                (|for| PATCHCOMS |in| (EVAL (PACK (LIST PATCHFILE 'COMS)))                   |do| (|if| (EQ 'FNS (CAR PATCHCOMS))                                |then| (|for| FN |in| (CDR PATCHCOMS)                                              |do| (|if| (FMEMB FN SEEN-FNS)                                                           |then| (SETQ DUP-TRIPS                                                                       (CONS (LIST FN                                                                                   (LISTGET                                                                                           SEEN-PAIRS                                                                                          FN)                                                                                   PATCHFILE)))                                                                 (PRINTOUT T FN " in " PATCHFILE                                                                         " Already Seen in "                                                                        (LISTGET SEEN-PAIRS FN)                                                                        T))                                                    (SETQ SEEN-PAIRS (CONS FN (CONS PATCHFILE                                                                                     SEEN-PAIRS))))                                      (SETQ SEEN-FNS (APPEND SEEN-FNS (CDR PATCHCOMS))))))))      SEEN-PAIRS DUP-TRIPS))))(COMPILE-SOURCES  (LAMBDA NIL                                        (* \; "Edited 27-Feb-89 16:50 by krivacic")(* |;;;| "This must be compiled to run")    (IF (NOT (GETD 'CATL))        THEN (DEFINEQ (CATL (NLAMBDA ITEMS                                  (APPLY #'CL:CONCATENATE (CONS 'LIST                                                                (CL:MAPCAR                                                                 #'(LAMBDA (X)                                                                     (MKLIST (EVAL X)))                                                                 ITEMS))))))              (COMPILE 'CATL))(* |;;;| "Connect to the Right directory")    (LET* ((SOURCE-DIR (GET-DIRECTORY "Compile NoteCards to:"))           (LIBDIR (CONCAT SOURCE-DIR "Library>"))           (COMPILE-ALL (FMEMB (ASKUSER T 'N "Compile Everything (Don't use RC) ? "                                      '(Y N \y \n))                               '(Y \y)))           (CODE-FILES (LDIFFERENCE NC.CODE (CATL 'NCCONFIG 'POSTRELEASEPATCHES NC.AUXFILES                                                   NC.LIBFILES)))           (COMPILE-OPTIONS (|if| COMPILE-ALL                                |then| '(C ST)                              |else| '(RC ST)))           (LONG-WHEREIS (OR COMPILE-ALL (FMEMB (ASKUSER T 'N "Long where-is create ? "                                                       '(Y N \y \n))                                                '(Y \y))))           (DIRB-FILE (FMEMB (ASKUSER T 'N "Nake Dribble file {DSK}NoteCards.Drb ? "                                    '(Y N \y \n))                             '(Y \y))))          (|if| DIRB-FILE              |then| (DRIBBLE "{DSK}NoteCards.Drb"))          (|if| (NOT COMPILE-ALL)              |then| (SETQ RECOMPILEDEFAULT 'CHANGES)            |else| (SETQ RECOMPILEDEFAULT 'ALL))          (* |;;| "Make & Compile the Sources")          (MAKEFILES COMPILE-OPTIONS CODE-FILES)          (* |;;| "Make & Compile The libraries")          (CNDIR LIBDIR)          (MAKEFILES COMPILE-OPTIONS NC.LIBFILES)          (SETQ RECOMPILEDEFAULT 'CHANGES)          (* |;;| "re-connect back to base directory")          (CNDIR SOURCE-DIR)          (SETQ NCPATHS (|for| FILE |in| (LDIFFERENCE |NC.Files| '(NCCONFIG NOTECARDS.HASH                                                                                  POSTRELEASEPATCHES))                           |collect| (|NC.FindFile| FILE NIL NIL T)))          (|if| LONG-WHEREIS              |then| (XCL::WHERE-IS-NOTICE "NOTECARDS.HASH" :USE-FULLNAME T :FILES NCPATHS :NEW T                                :TEMP-FILE "{DSK}/tmp/TEMP.HASH")            |else| (COPYFILE "NOTECARDS.HASH" "NOTECARDS.HASH")                  (XCL::WHERE-IS-NOTICE "NOTECARDS.HASH" :USE-FULLNAME T :FILES NCPATHS))          (SETQ |NC.InstallFlg| T)          (SETQ |NC.NoUpdateFlg| NIL)          (MAKEFILE 'NCCONFIG COMPILE-OPTIONS)          (IF DIRB-FILE              THEN (DRIBBLE)))))(GET-DIRECTORY  (LAMBDA (MENU-TITLE)                               (* \; "Edited 24-Feb-89 15:52 by krivacic")    (LET* ((CON-DIR (MENU (|create| MENU                                 ITEMS _ (LIST "{Eris}<NoteCards>E1.1Release>"                                                "{Eris}<NoteCards>E1.1Beta>"                                                "{DSK}/usr/users/krivacic/notecards/")                                 TITLE _ MENU-TITLE)))           (NCLIBDIR (CONCAT CON-DIR "Library>")))(* |;;;| "Add paths to directories")          (AND (NOT (MEMBER NCLIBDIR DIRECTORIES))               (SETQ DIRECTORIES (CONS NCLIBDIR DIRECTORIES)))          (AND (NOT (MEMBER CON-DIR DIRECTORIES))               (SETQ DIRECTORIES (CONS CON-DIR DIRECTORIES)))          (AND (NOT (MEMBER NCLIBDIR LISPUSERSDIRECTORIES))               (SETQ LISPUSERSDIRECTORIES (CONS NCLIBDIR LISPUSERSDIRECTORIES)))          (AND (NOT (MEMBER CON-DIR LISPUSERSDIRECTORIES))               (SETQ LISPUSERSDIRECTORIES (CONS CON-DIR LISPUSERSDIRECTORIES)))          (CNDIR CON-DIR)          CON-DIR)))(FIND-UNSAVED-FNS  (LAMBDA NIL                                            (* \; "Edited 13-Jan-89 13:00 by rtk")    (LET     ((UNKNOWN-PAIRS (LIST))      (CODE-FILES NC.CODE)      WHERE)     (|for| COMS |in| POSTRELEASEPATCHESCOMS        |do|        (|if| (EQ 'FILES (CAR COMS))            |then|            (|for| PATCHFILE |in| (CDR COMS)               |do|               (PRINTOUT T "Looking at " PATCHFILE T)               (|for| PATCHCOMS |in| (EVAL (PACK (LIST PATCHFILE 'COMS)))                  |do| (|if| (EQ 'FNS (CAR PATCHCOMS))                               |then| (|for| FN |in| (CDR PATCHCOMS)                                             |do| (|if| (AND (SETQ WHERE (WHEREIS FN))                                                                     (NOT (INTERSECTION WHERE                                                                                  CODE-FILES)))                                                          |then| (SETQ UNKNOWN-PAIRS                                                                      (CONS FN (CONS PATCHFILE                                                                                      UNKNOWN-PAIRS)))                                                             )))))))     UNKNOWN-PAIRS)))(STARTUP-SYSOUT  (LAMBDA NIL                                        (* \; "Edited 13-Feb-89 16:55 by krivacic")    (CLOSEW NOTECARDS-MAKE-SYSOUT-MENU)    (SETQ *CD-DIRECTIRIES* NIL)    (SETQ *CD-OLD-DIRECTIRIES* NIL)    (ADD.PROCESS '(MAKE-SYSOUT))))(MAKE-SYSOUT  (LAMBDA NIL                                        (* \; "Edited 23-Feb-89 15:09 by krivacic")    (SETQ NC.STARTUPMESSAGESENTFLG NIL)    (SETTOPVAL 'LISPXHISTORY '(NIL 0 100 1000))    (MAKESYS NOTECARDS-SYSOUT-FILE-NAME NOTECARDS-SYSOUT-NAME)    (PROCESS.RETURN NIL)))(GET-DEFAULT-DISPLAY-FONT  (LAMBDA NIL                                       (* \; "Edited  6-Apr-89 16:09 by SYE.ENVOS")    (|if| (NOT (FASSOC 'PROMPT\ WINDOW FONTPROFILE))        |then| (SETQ FONTPROFILE (CONS (LIST 'PROMPT\ WINDOW                                                 (+ (CL:REDUCE 'IMAX (|for| ITEM |in|                                                                                           FONTPROFILE                                                                        |collect| (CADR ITEM)))                                                    1)                                                 (GET-FONT-PROFILE (DEFAULTFONT PROMPTWINDOW)))                                           FONTPROFILE)))    (|if| (NOT (FASSOC '|FILE BROWSER FONT| FONTPROFILE))        |then| (SETQ FONTPROFILE (CONS (LIST '|FILE BROWSER FONT|                                                 (+ (CL:REDUCE 'IMAX (|for| ITEM |in|                                                                                           FONTPROFILE                                                                        |collect| (CADR ITEM)))                                                    1)                                                 (GET-FONT-PROFILE FB.BROWSERFONT))                                           FONTPROFILE)))    (|if| (NOT (FASSOC '|FILE BROWSER PROMPT| FONTPROFILE))        |then| (SETQ FONTPROFILE (CONS (LIST '|FILE BROWSER PROMPT|                                                 (+ (CL:REDUCE 'IMAX (|for| ITEM |in|                                                                                           FONTPROFILE                                                                        |collect| (CADR ITEM)))                                                    1)                                                 (GET-FONT-PROFILE FB.PROMPTFONT))                                           FONTPROFILE)))    (* |;;| "Old version of menu.  Menu changed because most of the options in fontprofile are only for developers and most are undocumented and also appear to be unused. Keith Mountford.")    (* |;;| "(MENU (|create| MENU TITLE _ \"Choose Font Profile to Update\" MENUFONT _ '(HELVETICA 14 BOLD) ITEMS _ (|for| ITEM |in| FONTPROFILE |collect| (CAR ITEM))))")    (LET* ((FONT-TO-UPDATE (MENU (|create| MENU                                        TITLE _ "  Choose Font Profile to Update.   "                                        MENUFONT _ '(HELVETICA 14 BOLD)                                        ITEMS _ '(("FileBrowser Display Font" '|FILE BROWSER FONT|)                                                  ("FileBrowser Prompt Font" '|FILE BROWSER PROMPT|)                                                  ("Prompt Window Font" 'PROMPT\ WINDOW)                                                  ("Default Font" 'DEFAULTFONT)                                                  ("Menu Font" 'MENUFONT))                                        CENTERFLG _ T)))           (DEFAULT-PROFILE (FASSOC FONT-TO-UPDATE FONTPROFILE))           (NEW-DEFAULT (AND DEFAULT-PROFILE (|NC.GetFontFromUser| (CADDR DEFAULT-PROFILE)))))          (|if| NEW-DEFAULT              |then| (RPLACA (CDDR DEFAULT-PROFILE)                                (GET-FONT-PROFILE NEW-DEFAULT))                    (COND                       ((EQ 'PROMPT\ WINDOW FONT-TO-UPDATE)                        (DSPFONT NEW-DEFAULT PROMPTWINDOW))                       ((EQ '|FILE BROWSER FONT| FONT-TO-UPDATE)                        (SETQ FB.BROWSERFONT NEW-DEFAULT))                       ((EQ '|FILE BROWSER PROMPT| FONT-TO-UPDATE)                        (SETQ FB.PROMPTFONT NEW-DEFAULT))                       ((EQ 'MENUFONT FONT-TO-UPDATE)                        (SETQ |InspectBitmapMenu| NIL)                        (SETQ |SetPropertyMenu| NIL)                        (SETQ |BackgroundMenu| NIL)                        (SETQ |IconWindowMenu| NIL)                        (SETQ |InspectMenu| NIL)                        (SETQ |WindowMenu| NIL)))                    (FONTPROFILE FONTPROFILE)                    (POSTSCRIPT.INIT))          NEW-DEFAULT)))(GET-FONT-PROFILE  (LAMBDA (FONTSPEC)                                (* \; "Edited 31-Mar-89 13:54 by Mountford")    (|for| I |from| 0 |to| 2 |as| ITEM |in| (FONTPROP FONTSPEC 'DEVICESPEC)       |collect| ITEM))))(PUTPROPS RELEASETOOLS COPYRIGHT ("Envos Corporation" 1989))(DECLARE\: DONTCOPY  (FILEMAP (NIL (685 29018 (MAKE-NOTECARDS-SYSOUT 695 . 14762) (LOADUP-SOURCES 14764 . 18272) (COMPILE-SOURCES 18274 . 21414) (GET-DIRECTORY 21416 . 22529) (FIND-UNSAVED-FNS 22531 . 23888) (STARTUP-SYSOUT 23890 . 24161) (MAKE-SYSOUT 24163 . 24462) (GET-DEFAULT-DISPLAY-FONT 24464 . 28763) (GET-FONT-PROFILE 28765 . 29016)))))STOP