(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "ROOMS")(IL:FILECREATED "17-Aug-90 14:45:06" IL:|{DSK}<python>RELEASE>rooms>current>users-src>RANDOM-WINDOW-TYPES.;3| 14253        IL:|changes| IL:|to:|  (IL:VARS IL:RANDOM-WINDOW-TYPESCOMS)      IL:|previous| IL:|date:| "27-Jul-90 06:14:07" IL:|{DSK}<python>RELEASE>rooms>current>users-src>RANDOM-WINDOW-TYPES.;2|); Copyright (c) 1988, 1989, 1990 by Venue & Xerox Corporation.  All rights reserved.(IL:PRETTYCOMPRINT IL:RANDOM-WINDOW-TYPESCOMS)(IL:RPAQQ IL:RANDOM-WINDOW-TYPESCOMS          (           (IL:* IL:|;;| "Window types for various LispUsers modules")           (FILE-ENVIRONMENTS IL:RANDOM-WINDOW-TYPES)           (IL:P (REQUIRE "ROOMS"))                      (IL:* IL:|;;| "Window type for WHO-LINE")           (IL:WINDOW-TYPES :WHO-LINE)                      (IL:* IL:|;;| "Window types for the CALENDAR program")           (IL:WINDOW-TYPES :CALENDAR-YEAR :CALENDAR-MONTH)                      (IL:* IL:|;;| "Window type for the PRINTERMENU program")           (IL:WINDOW-TYPES :PRINTER-MENU-WINDOW)                      (IL:* IL:|;;| "Window type for some clocks")           (IL:WINDOW-TYPES :CROCK-WINDOW :BICLOCK)                      (IL:* IL:|;;| "Window types for AddressBook and PhoneDirectory")           (IL:COMS (IL:WINDOW-TYPES :ADDRESSBOOK :PHONE-DIRECTORY)                  (IL:FUNCTIONS ADDRESS-BOOK-WINDOW-P PHONE-DIRECTORY-WINDOW-P FIND-WINDOW))                      (IL:* IL:|;;| "Window type for GRID-ICONS")           (IL:WINDOW-TYPES :GRID-ICON-COMS-EDITOR)           (IL:COMS                   (IL:* IL:|;;| "special handlers for FILEWATCH.  these are somewhat broken")                  (IL:WINDOW-TYPES :FILE-WATCH)                  (IL:FUNCTIONS FILE-WATCH-EXIT-FUNCTION FILE-WATCH-ENTRY-FUNCTION)                  (IL:P (PUSHNEW 'FILE-WATCH-EXIT-FUNCTION *ROOM-EXIT-FUNCTIONS*)                        (PUSHNEW 'FILE-WATCH-ENTRY-FUNCTION *ROOM-ENTRY-FUNCTIONS*)))))(IL:* IL:|;;| "Window types for various LispUsers modules")(DEFINE-FILE-ENVIRONMENT IL:RANDOM-WINDOW-TYPES :COMPILER :COMPILE-FILE   :READTABLE "XCL"   :PACKAGE "ROOMS")(REQUIRE "ROOMS")(IL:* IL:|;;| "Window type for WHO-LINE")(DEF-WINDOW-TYPE :WHO-LINE :RECOGNIZER (LAMBDA (WINDOW)                                                  (DECLARE (GLOBAL IL:*WHO-LINE*))                                                  (EQ WINDOW IL:*WHO-LINE*))   :ABSTRACTER (LAMBDA (WINDOW)                      NIL)   :RECONSTITUTER (LAMBDA (PROPS)                         (DECLARE (GLOBAL IL:*WHO-LINE*))                         (IL:INSTALL-WHO-LINE-OPTIONS)                         IL:*WHO-LINE*)   :NO-SHAPE T                                               (IL:* IL:\; "don't scale placements")   :TITLE ""   :FILES (IL:WHO-LINE IL:RANDOM-WINDOW-TYPES))(IL:* IL:|;;| "Window types for the CALENDAR program")(DEF-WINDOW-TYPE :CALENDAR-YEAR :RECOGNIZER (LAMBDA (W)                                                       (EQ (IL:WINDOWPROP W 'IL:REPAINTFN)                                                           'IL:REPAINTYEAR))   :ABSTRACTER (LAMBDA (W)                      (LIST (IL:WINDOWPROP W 'IL:YEAR#)))   :RECONSTITUTER (LAMBDA                   (DATA)                   (DESTRUCTURING-BIND                    (YEAR)                    DATA                    (FLET ((FIND-CALENDAR-YEAR NIL                                  (FIND-IF #'(LAMBDA (W)                                                    (AND (EQ (IL:WINDOWPROP W 'IL:REPAINTFN)                                                             'IL:REPAINTYEAR)                                                         (EQL (IL:WINDOWPROP W 'IL:YEAR#)                                                              YEAR)))                                         (IL:OPENWINDOWS))))                          (OR (FIND-CALENDAR-YEAR)                              (PROGN (IL:CALENDAR NIL NIL YEAR)                                     (FIND-CALENDAR-YEAR))))))   :TITLE (LAMBDA (PLACEMENT REGION DSP)                 (PRINT-PEP-TITLE-STRING (OR (IL:WINDOWPROP (PLACEMENT-WINDOW PLACEMENT)                                                    'IL:YEAR#)                                             "YEAR")                        REGION DSP :NO-TITLE-BAR? T))   :FILES (IL:CALENDAR IL:RANDOM-WINDOW-TYPES))(DEF-WINDOW-TYPE :CALENDAR-MONTH :RECOGNIZER (LAMBDA (W)                                                        (EQ (IL:WINDOWPROP W 'IL:REPAINTFN)                                                            'IL:REPAINTMONTH))   :ABSTRACTER (LAMBDA (W)                      (LIST (IL:WINDOWPROP W 'IL:YEAR#)                            (IL:WINDOWPROP W 'IL:MONTH#)))   :RECONSTITUTER (LAMBDA                   (DATA)                   (DESTRUCTURING-BIND                    (YEAR MONTH)                    DATA                    (FLET ((FIND-CALENDAR-MONTH                            NIL                            (FIND-IF #'(LAMBDA (W)                                              (AND (EQ (IL:WINDOWPROP W 'IL:REPAINTFN)                                                       'IL:REPAINTYEAR)                                                   (EQL (IL:WINDOWPROP W 'IL:YEAR#)                                                        YEAR)                                                   (EQL (IL:WINDOWPROP W 'IL:MONTH#)                                                        MONTH)))                                   (IL:OPENWINDOWS))))                          (OR (FIND-CALENDAR-MONTH)                              (PROGN (IL:CALENDAR MONTH NIL YEAR)                                     (FIND-CALENDAR-MONTH))))))   :TITLE (LAMBDA (PLACEMENT REGION DSP)                 (PRINT-PEP-TITLE-STRING (LET ((MONTH-NUMBER (IL:WINDOWPROP (PLACEMENT-WINDOW                                                                                    PLACEMENT)                                                                    'IL:MONTH#)))                                              (IF MONTH-NUMBER                                                  (NTH (1- MONTH-NUMBER)                                                       '("Jan" "Feb" "Mar" "Apr" "May" "Jun" "Jul"                                                                "Aug" "Sep" "Oct" "Nov" "Dec"))                                                  "MONTH"))                        REGION DSP :NO-TITLE-BAR? T))   :FILES (IL:CALENDAR IL:RANDOM-WINDOW-TYPES))(IL:* IL:|;;| "Window type for the PRINTERMENU program")(DEF-WINDOW-TYPE :PRINTER-MENU-WINDOW :RECOGNIZER (LAMBDA (W)                                                             (AND (BOUNDP 'IL:PRINTERMENU.WINDOW)                                                                  (EQ W IL:PRINTERMENU.WINDOW)))   :RECONSTITUTER (LAMBDA (DATA)                         (DECLARE (IGNORE DATA))                         (UNLESS (AND (BOUNDP 'IL:PRINTERMENU.WINDOW)                                      IL:PRINTERMENU.WINDOW)                                (IL:PRINTERMENU))                         IL:PRINTERMENU.WINDOW)   :ABSTRACTER (LAMBDA (W)                      (DECLARE (IGNORE W))                      NIL)   :TITLE "PrinterMenu"   :FILES (IL:PRINTERMENU IL:RANDOM-WINDOW-TYPES))(IL:* IL:|;;| "Window type for some clocks")(DEF-WINDOW-TYPE :CROCK-WINDOW :RECOGNIZER (LAMBDA (W)                                                      (AND (BOUNDP 'IL:CROCKWINDOW)                                                           (EQ W IL:CROCKWINDOW)))   :RECONSTITUTER (LAMBDA (DATA)                         (DECLARE (IGNORE DATA))                         (UNLESS (AND (BOUNDP 'IL:CROCKWINDOW)                                      (IL:WINDOWP IL:CROCKWINDOW))                             (IL:CROCK (IL:CREATEREGION 0 0 100 100)))                         IL:CROCKWINDOW)   :ABSTRACTER (LAMBDA (W)                      (DECLARE (IGNORE W))                      NIL)   :TITLE "Crock"   :FILES (IL:CROCK IL:RANDOM-WINDOW-TYPES))(DEF-WINDOW-TYPE :BICLOCK :RECOGNIZER (LAMBDA (WINDOW)                                                 (EQ (IL:WINDOWPROP WINDOW 'IL:RESHAPEFN)                                                     'IL:BICLOCKRSFN))   :ABSTRACTER (LAMBDA (WINDOW)                      (DECLARE (IGNORE WINDOW))                      NIL)   :RECONSTITUTER (LAMBDA (DATA)                         (DECLARE (IGNORE DATA)                                (GLOBAL IL:BICLOCKWINDOW))                         (IF (BOUNDP 'IL:BICLOCKWINDOW)                             IL:BICLOCKWINDOW                             (IL:BICLOCK)))   :TITLE (LAMBDA (PLACEMENT REGION DSP)                 (PRINT-PEP-TITLE-STRING "Clock" REGION DSP :NO-TITLE-BAR? T))   :FILES (IL:BICLOCK IL:RANDOM-WINDOW-TYPES))(IL:* IL:|;;| "Window types for AddressBook and PhoneDirectory")(DEF-WINDOW-TYPE :ADDRESSBOOK :DEPENDENCIES (:TEXTSTREAM)   :RECOGNIZER ADDRESS-BOOK-WINDOW-P   :ABSTRACTER (LAMBDA (WINDOW)                      (DECLARE (IGNORE WINDOW))                      NIL)   :RECONSTITUTER (LAMBDA (DATA)                         (DECLARE (IGNORE DATA))                         (OR (FIND-WINDOW #'ADDRESS-BOOK-WINDOW-P T)                             (IL:|MakeAddressBook|)))   :TITLE "Address"   :FILES (IL:ADDRESSBOOK IL:RANDOM-WINDOW-TYPES))(DEF-WINDOW-TYPE :PHONE-DIRECTORY :RECOGNIZER PHONE-DIRECTORY-WINDOW-P   :ABSTRACTER (LAMBDA (WINDOW)                      (DECLARE (IGNORE WINDOW))                      NIL)   :RECONSTITUTER (LAMBDA (DATA)                         (DECLARE (IGNORE DATA))                         (OR (FIND-WINDOW #'PHONE-DIRECTORY-WINDOW-P T)                             (IL:|Let-your-fingers-do-the-walking|)))   :TITLE "Phone"   :FILES (IL:PHONE-DIRECTORY IL:RANDOM-WINDOW-TYPES))(DEFUN ADDRESS-BOOK-WINDOW-P (WINDOW)   (EQ (IL:WINDOWPROP WINDOW 'IL:|ProcessName|)       'IL:|Address Book|))(DEFUN PHONE-DIRECTORY-WINDOW-P (WINDOW)   (EQ (IL:WINDOWPROP WINDOW 'IL:BUTTONEVENTFN)       'IL:|Phone-Window-ButtonEventFn|))(DEFUN FIND-WINDOW (TEST &OPTIONAL INCLUDE-HIDDEN-P)   (DOLIST (WINDOW (ALL-WINDOWS INCLUDE-HIDDEN-P))       (WHEN (FUNCALL TEST WINDOW)             (RETURN WINDOW))))(IL:* IL:|;;| "Window type for GRID-ICONS")(DEF-WINDOW-TYPE :GRID-ICON-COMS-EDITOR :RECOGNIZER (LAMBDA (WINDOW)                                                               (EQ (IL:WINDOWPROP WINDOW                                                                           'IL:BUTTONEVENTFN)                                                                                                                                      '                                                            IL:LOADED-FILES-ICON-WINDOW-BUTTONEVENTFN                                                                   ))   :ABSTRACTER (LAMBDA (WINDOW)                      (DECLARE (IGNORE WINDOW))                      NIL)   :RECONSTITUTER (LAMBDA (DATA)                         (DECLARE (IGNORE DATA)                                (GLOBAL IL:LOADED-FILES-ICON-WINDOW))                         IL:LOADED-FILES-ICON-WINDOW)   :FILES (IL:GRID-ICONS IL:RANDOM-WINDOW-TYPES))(IL:* IL:|;;| "special handlers for FILEWATCH.  these are somewhat broken")(DEF-WINDOW-TYPE :FILE-WATCH :RECOGNIZER (LAMBDA (WINDOW)                                                    (EQ (IL:WINDOWPROP WINDOW 'IL:BUTTONEVENTFN)                                                        'IL:FW-BUTTONEVENTFN)))(DEFUN FILE-WATCH-EXIT-FUNCTION (ROOM)   (DECLARE (GLOBAL IL:|FW-Running?| IL:|FW-Anchor| IL:|FW-Position|))   (WHEN (FBOUNDP 'IL:FILEWATCH)       (COND          (IL:|FW-Running?| (ROOM-PROP ROOM :FILE-WATCH-ON? T)                 (ROOM-PROP ROOM :FILE-WATCH-ANCHOR IL:|FW-Anchor|)                 (ROOM-PROP ROOM :FILE-WATCH-POSITION (EXTERNALIZE-POSITION IL:|FW-Position|))                 (LET* ((CHANGED? NIL)                        (NEW-PLACEMENTS (DELETE-IF #'(LAMBDA (PLACEMENT)                                                            (AND (EQ (IL:WINDOWPROP (PLACEMENT-WINDOW                                                                                     PLACEMENT)                                                                            'IL:BUTTONEVENTFN)                                                                     'IL:FW-BUTTONEVENTFN)                                                                 (SETQ CHANGED? T)))                                               (ROOM-PLACEMENTS ROOM))))                       (WHEN CHANGED?                           (SETF (ROOM-PLACEMENTS ROOM)                                 NEW-PLACEMENTS)                           (ROOM-CHANGED ROOM :PLACEMENTS)))                 (IL:FILEWATCH :OFF)                 (IL:PROCESS.RESULT (IL:FIND.PROCESS "FileWatcher")                        T))          (T (ROOM-PROP ROOM :FILE-WATCH-ON? NIL)             (REMF (ROOM-PROPS ROOM)                   :FILE-WATCH-ANCHOR)             (REMF (ROOM-PROPS ROOM)                   :FILE-WATCH-POSITION)))))(DEFUN FILE-WATCH-ENTRY-FUNCTION (ROOM)   (DECLARE (GLOBAL IL:|FW-Properties|))   (WHEN (FBOUNDP 'IL:FILEWATCH)       (LET ((POS (ROOM-PROP ROOM :FILE-WATCH-POSITION))             (ANCHOR (ROOM-PROP ROOM :FILE-WATCH-ANCHOR)))            (WHEN POS                (SETF (GETF IL:|FW-Properties| 'IL:POSITION)                      (INTERNALIZE-POSITION POS)))            (WHEN ANCHOR                (SETF (GETF IL:|FW-Properties| 'IL:ANCHOR)                      ANCHOR))            (WHEN (ROOM-PROP ROOM :FILE-WATCH-ON?)                (IL:FILEWATCH :ON)                (IL:BLOCK)))))(PUSHNEW 'FILE-WATCH-EXIT-FUNCTION *ROOM-EXIT-FUNCTIONS*)(PUSHNEW 'FILE-WATCH-ENTRY-FUNCTION *ROOM-ENTRY-FUNCTIONS*)(IL:PUTPROPS IL:RANDOM-WINDOW-TYPES IL:COPYRIGHT ("Venue & Xerox Corporation" 1988 1989 1990))(IL:DECLARE\: IL:DONTCOPY  (IL:FILEMAP (NIL)))IL:STOP