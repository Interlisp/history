(DEFINE-FILE-INFO READTABLE "XCL" PACKAGE "ROOMS")(IL:FILECREATED "27-Jul-90 05:40:41" IL:|{DSK}<usr>local>lde>rooms>sources>ROOMS-MEDLEY-WINDOW-TYPES.;2| 11968        IL:|changes| IL:|to:|  (IL:VARS IL:ROOMS-MEDLEY-WINDOW-TYPESCOMS)      IL:|previous| IL:|date:| " 1-Nov-88 12:09:36" IL:|{DSK}<usr>local>lde>rooms>sources>ROOMS-MEDLEY-WINDOW-TYPES.;1|); Copyright (c) 1988, 1990 by Venue & Xerox Corporation.  All rights reserved.(IL:PRETTYCOMPRINT IL:ROOMS-MEDLEY-WINDOW-TYPESCOMS)(IL:RPAQQ IL:ROOMS-MEDLEY-WINDOW-TYPESCOMS ((IL:* IL:|;;| "window types for various modules") (FILE-ENVIRONMENTS IL:ROOMS-MEDLEY-WINDOW-TYPES) (IL:P (REQUIRE "ROOMS")) (IL:WINDOW-TYPES :EXEC :INSPECTOR :SPY-BUTTON :CHAT :TEXTSTREAM :TEDIT :BUTTON) (IL:COMS (IL:* IL:|;;| "the prompt window") (IL:DECLARE\: IL:EVAL@COMPILE IL:DONTCOPY (IL:P (OR (IL:RECLOOK (QUOTE IL:WINDOW)) (IL:EVAL (IL:SYSRECLOOK1 (QUOTE IL:WINDOW)))))) (IL:WINDOW-TYPES :PROMPT-WINDOW) (IL:GLOBALVARS IL:PROMPTWINDOW)) (IL:COMS (IL:* IL:|;;| "SEdit") (IL:ADVISE (IL:OPENWP :IN SEDIT::GET-CONTEXT)) (IL:WINDOW-TYPES :SEDIT)) (IL:COMS (IL:* IL:|;;| "File Browser") (IL:DECLARE\: IL:EVAL@COMPILE IL:DONTCOPY (IL:P (OR (IL:RECLOOK (QUOTE IL:FILEBROWSER)) (IL:EVAL (IL:SYSRECLOOK1 (QUOTE IL:FILEBROWSER)))) (OR (IL:RECLOOK (QUOTE IL:TABLEBROWSER)) (IL:EVAL (IL:SYSRECLOOK1 (QUOTE IL:TABLEBROWSER)))))) (IL:WINDOW-TYPES :FILE-BROWSER :TABLE-BROWSER)) (IL:COMS (IL:* IL:|;;| "Sketch") (IL:DECLARE\: IL:EVAL@COMPILE IL:DONTCOPY (IL:P (OR (IL:RECLOOK (QUOTE IL:SKETCH)) (IL:LOADDEF (QUOTE IL:SKETCH) (QUOTE IL:RECORDS) (QUOTE IL:SKETCH))))) (IL:WINDOW-TYPES :SKETCH)) (IL:COMS (IL:* IL:|;;| "Logo Window") (IL:WINDOW-TYPES :LOGO-WINDOW) (IL:ADVISE IL:LOGOW)) (IL:COMS (IL:* IL:|;;| "PSW") (IL:WINDOW-TYPES :PSW))))(IL:* IL:|;;| "window types for various modules")(DEFINE-FILE-ENVIRONMENT IL:ROOMS-MEDLEY-WINDOW-TYPES :COMPILER :COMPILE-FILE :READTABLE "XCL" :PACKAGE "ROOMS")(REQUIRE "ROOMS")(DEF-WINDOW-TYPE :EXEC :RECOGNIZER (LAMBDA (WINDOW) (IL:EQMEMB (QUOTE XCL::EXEC-CLOSEFN) (IL:WINDOWPROP WINDOW (QUOTE IL:CLOSEFN)))) :ABSTRACTER (LAMBDA (WINDOW) (LET* ((PROCESS (IL:WINDOWPROP WINDOW (QUOTE IL:PROCESS)))) (WHEN PROCESS (LET ((PROFILE (IL:PROCESSPROP PROCESS (QUOTE IL:PROFILE)))) (IL:BQUOTE (:REGION (IL:\\\, (EXTERNALIZE-REGION (WINDOW-REGION WINDOW))) :PACKAGE (IL:\\\, (IF PROFILE (PACKAGE-NAME (GETF PROFILE (QUOTE *PACKAGE*))) "IL")) :READTABLE (IL:\\\, (IF PROFILE (IL:READTABLEPROP (GETF PROFILE (QUOTE *READTABLE*)) (QUOTE IL:NAME)) "OLD-INTERLISP-T")))))))) :RECONSTITUTER (LAMBDA (ARGS) (LET ((PROCESS (ADD-EXEC :REGION (INTERNALIZE-REGION (GETF ARGS :REGION (LIST 0 0 400 100))) :PROFILE (OR (GETF ARGS :PROFILE) (IL:BQUOTE (*PACKAGE* (IL:\\\, (OR (FIND-PACKAGE (GETF ARGS :PACKAGE)) (FIND-PACKAGE "XCL-USER"))) *READTABLE* (IL:\\\, (OR (IL:FIND-READTABLE (GETF ARGS :READTABLE)) (IL:FIND-READTABLE "XCL"))))))))) (IL:* IL:|;;| "this is really grody.  why doesn't ADD-EXEC just take a window?") (IL:BLOCK) (IL:WFROMDS (IL:PROCESS.EVALV PROCESS (QUOTE *STANDARD-OUTPUT*))))) :TITLE (LAMBDA (PLACEMENT REGION DSP) (PRINT-PEP-TITLE-STRING (IL:WINDOWPROP (PLACEMENT-WINDOW PLACEMENT) (QUOTE IL:TITLE)) REGION DSP)))(DEF-WINDOW-TYPE :INSPECTOR :RECOGNIZER (IL:LAMBDA (WINDOW) (IL:WINDOWPROP WINDOW (QUOTE IL:DATUM))) :TITLE "Inspector")(DEF-WINDOW-TYPE :SPY-BUTTON :RECOGNIZER (LAMBDA (WINDOW) (EQ (IL:WINDOWPROP WINDOW (QUOTE IL:BUTTONEVENTFN)) (QUOTE IL:SPY.BUTTONA0001))) :ABSTRACTER (LAMBDA (WINDOW) (DECLARE (IGNORE WINDOW)) NIL) :RECONSTITUTER (LAMBDA (DATA) (DECLARE (IGNORE DATA) (GLOBAL IL:SPY.BUTTON)) (UNLESS (BOUNDP (QUOTE IL:SPY.BUTTON)) (IL:FILESLOAD "spy")) (IF IL:SPY.BUTTON IL:SPY.BUTTON (PROGN (IL:SPY.BUTTON (MAKE-POSITION 0 0)) IL:SPY.BUTTON))) :NO-SHAPE T :TITLE (LAMBDA (PLACEMENT REGION DSP) (PRINT-PEP-TITLE-STRING "Spy" REGION DSP :NO-TITLE-BAR? T)))(DEF-WINDOW-TYPE :CHAT :RECOGNIZER (LAMBDA (WINDOW) (EQ (IL:WINDOWPROP WINDOW (QUOTE IL:BUTTONEVENTFN)) (QUOTE IL:CHAT.BUTTONFN))) :ABSTRACTER (LAMBDA (WINDOW) (LIST :HOST (IL:CANONICAL.HOSTNAME (FIRST (IL:WINDOWPROP WINDOW (QUOTE IL:CHATHOST)))) :REGION (IL:WINDOWREGION WINDOW))) :RECONSTITUTER (LAMBDA (DATA) (LET ((WINDOW (IL:CREATEW (GETF DATA :REGION) "Chat"))) (IL:* IL:|;;| "start the chat process") (IL:CHAT (GETF DATA :HOST) NIL NIL WINDOW) (IL:* IL:|;;| "return the window") WINDOW)) :TITLE (LAMBDA (PLACEMENT REGION DSP) (PRINT-PEP-TITLE-STRING (FORMAT NIL "Chat ~A" (FIRST (IL:WINDOWPROP (PLACEMENT-WINDOW PLACEMENT) (QUOTE IL:CHATHOST)))) REGION DSP)))(DEF-WINDOW-TYPE :TEXTSTREAM :RECOGNIZER (LAMBDA (WINDOW) (IL:TYPE? IL:TEXTOBJ (IL:WINDOWPROP WINDOW (QUOTE IL:TEXTOBJ)))) :TITLE "Text")(DEF-WINDOW-TYPE :TEDIT :DEPENDENCIES (:TEXTSTREAM) :RECOGNIZER (LAMBDA (WINDOW) (OR (IL:WINDOWPROP WINDOW (QUOTE IL:TEDITCREATED)) (LET ((TEXTOBJ (IL:WINDOWPROP WINDOW (QUOTE IL:TEXTOBJ)))) (AND (IL:TYPE? IL:TEXTOBJ TEXTOBJ) (GETF (IL:FFETCH (IL:TEXTOBJ IL:EDITPROPS) IL:OF TEXTOBJ) (QUOTE IL:TEDITCREATEDWINDOW)))))) :ABSTRACTER (LAMBDA (WINDOW) (LET* ((STREAM (IL:FETCH (IL:TEXTOBJ IL:TXTFILE) IL:OF (IL:TEXTOBJ WINDOW)))) (WHEN STREAM (IL:BQUOTE (:REGION (IL:\\\, (EXTERNALIZE-REGION (WINDOW-REGION WINDOW))) :PATHNAME (IL:\\\, (MAKE-PATHNAME :VERSION :NEWEST :DEFAULTS (PATHNAME STREAM)))))))) :RECONSTITUTER (LAMBDA (PROPS) (IL:FILESLOAD (IL:SYSLOAD) IL:TEDIT) (LET* ((PATHNAME (GETF PROPS :PATHNAME)) (FOUND (WHEN PATHNAME (PROBE-FILE PATHNAME))) (NAMESTRING (WHEN FOUND (NAMESTRING FOUND))) (WINDOW (IL:\\TEDIT.CREATEW.FROM.REGION (INTERNALIZE-REGION (GETF PROPS :REGION (LIST 0 0 200 200))) (IF FOUND NAMESTRING)))) (IL:TEDIT (IF FOUND (INTERN NAMESTRING "INTERLISP") (IF PATHNAME (FORMAT NIL "Couldn't edit file ~A" (NAMESTRING PATHNAME)))) WINDOW NIL (LIST (QUOTE IL:TEDITCREATEDWINDOW) T (QUOTE IL:LEAVETTY) T)) WINDOW)) :TITLE "TEdit")(DEF-WINDOW-TYPE :BUTTON :RECOGNIZER (LAMBDA (WINDOW) (TYPEP (IL:WINDOWPROP WINDOW (QUOTE BUTTON)) (QUOTE BUTTON))) :ABSTRACTER (LAMBDA (WINDOW) (EXTERNALIZE-BUTTON (IL:WINDOWPROP WINDOW (QUOTE BUTTON)))) :RECONSTITUTER (LAMBDA (ARGS) (MAKE-BUTTON-WINDOW (APPLY (FUNCTION MAKE-BUTTON) ARGS) (INTERNALIZE-POSITION (GETF ARGS :POSITION (MAKE-POSITION 0 0))))) :TITLE (LAMBDA (PLACEMENT REGION DSP) (LET ((BUTTON (IL:WINDOWPROP (PLACEMENT-WINDOW PLACEMENT) (QUOTE BUTTON)))) (WHEN BUTTON (PRINT-PEP-TITLE-STRING (TEXT-STRING (BUTTON-TEXT BUTTON)) REGION DSP :NO-TITLE-BAR? T)))))(IL:* IL:|;;| "the prompt window")(IL:DECLARE\: IL:EVAL@COMPILE IL:DONTCOPY (OR (IL:RECLOOK (QUOTE IL:WINDOW)) (IL:EVAL (IL:SYSRECLOOK1 (QUOTE IL:WINDOW)))))(DEF-WINDOW-TYPE :PROMPT-WINDOW :RECOGNIZER (LAMBDA (WINDOW) (EQ WINDOW IL:PROMPTWINDOW)) :ABSTRACTER (LAMBDA (WINDOW) NIL) :RECONSTITUTER (LAMBDA (DATA) IL:PROMPTWINDOW) :UPDATER (LAMBDA (PLACEMENT) (LET ((FONT (IL:DSPFONT NIL IL:PROMPTWINDOW))) (PLACEMENT-PROP PLACEMENT :FONT (EXTERNALIZE-FONT FONT))) (PLACEMENT-PROP PLACEMENT :BORDER (IL:WINDOWPROP IL:PROMPTWINDOW (QUOTE IL:BORDER))) (PLACEMENT-PROP PLACEMENT :SHADE (IL:DSPTEXTURE NIL IL:PROMPTWINDOW)) (PLACEMENT-PROP PLACEMENT :TITLE (IL:WINDOWPROP IL:PROMPTWINDOW (QUOTE IL:TITLE))) (PLACEMENT-PROP PLACEMENT :OPERATION (IL:DSPOPERATION NIL IL:PROMPTWINDOW))) :PLACER (LAMBDA (PLACEMENT) (DO* ((CHANGED? NIL) (PROP-LIST (PLACEMENT-PROPS PLACEMENT) (CDDR PROP-LIST)) (PROP (CAR PROP-LIST) (CAR PROP-LIST)) (VALUE (CADR PROP-LIST) (CADR PROP-LIST))) ((NULL PROP-LIST) (WHEN CHANGED? (IL:* IL:|;;| "this is how we change the border & title without changing the region") (IL:CLOSEW IL:PROMPTWINDOW) (IL:ADVISEWDS IL:PROMPTWINDOW) (IL:SHOWWFRAME IL:PROMPTWINDOW) (IL:CLEARW IL:PROMPTWINDOW))) (CASE PROP (:BORDER (UNLESS (EQL VALUE (IL:FETCH (IL:WINDOW IL:WBORDER) IL:OF IL:PROMPTWINDOW)) (IL:REPLACE (IL:WINDOW IL:WBORDER) IL:OF IL:PROMPTWINDOW IL:WITH VALUE) (SETQ CHANGED? T))) (:FONT (LET ((NEW-FONT (IL:FONTCREATE VALUE NIL NIL NIL (QUOTE IL:DISPLAY)))) (UNLESS (EQ (IL:DSPFONT NEW-FONT IL:PROMPTWINDOW) NEW-FONT) (SETQ CHANGED? T)))) (:OPERATION (UNLESS (EQ VALUE (IL:DSPOPERATION VALUE IL:PROMPTWINDOW)) (SETQ CHANGED? T))) (:SHADE (UNLESS (EQ VALUE (IL:DSPTEXTURE VALUE IL:PROMPTWINDOW)) (SETQ CHANGED? T))) (:TITLE (UNLESS (EQL VALUE (IL:FETCH (IL:WINDOW IL:WTITLE) IL:OF IL:PROMPTWINDOW)) (IL:REPLACE (IL:WINDOW IL:WTITLE) IL:OF IL:PROMPTWINDOW IL:WITH VALUE) (SETQ CHANGED? T)))))) :TITLE (LAMBDA (PLACEMENT REGION DSP) (IL:DSPFILL REGION IL:BLACKSHADE (QUOTE IL:PAINT) DSP)))(IL:DECLARE\: IL:DOEVAL@COMPILE IL:DONTCOPY(IL:GLOBALVARS IL:PROMPTWINDOW))(IL:* IL:|;;| "SEdit")(REINSTALL-ADVICE (QUOTE (IL:OPENWP :IN SEDIT::GET-CONTEXT)) :BEFORE (QUOTE ((:FIRST (LOCALLY (DECLARE (SPECIAL IL:WINDOW)) (UN-HIDE-WINDOW IL:WINDOW))))))(IL:READVISE (IL:OPENWP :IN SEDIT::GET-CONTEXT))(DEF-WINDOW-TYPE :SEDIT :RECOGNIZER (LAMBDA (WINDOW) (IL:EQMEMB (QUOTE SEDIT::CLOSEFN) (IL:WINDOWPROP WINDOW (QUOTE IL:CLOSEFN)))) :TITLE "SEdit")(IL:* IL:|;;| "File Browser")(IL:DECLARE\: IL:EVAL@COMPILE IL:DONTCOPY (OR (IL:RECLOOK (QUOTE IL:FILEBROWSER)) (IL:EVAL (IL:SYSRECLOOK1 (QUOTE IL:FILEBROWSER))))(OR (IL:RECLOOK (QUOTE IL:TABLEBROWSER)) (IL:EVAL (IL:SYSRECLOOK1 (QUOTE IL:TABLEBROWSER)))))(DEF-WINDOW-TYPE :FILE-BROWSER :DEPENDENCIES (:TABLE-BROWSER) :RECOGNIZER (LAMBDA (WINDOW) (IL:TYPE? IL:FILEBROWSER (IL:WINDOWPROP WINDOW (QUOTE IL:FILEBROWSER)))) :ABSTRACTER (LAMBDA (WINDOW) (LET ((FB (IL:WINDOWPROP WINDOW (QUOTE IL:FILEBROWSER)))) (LIST :REGION (EXTERNALIZE-REGION (WINDOW-REGION WINDOW)) :PATTERN (IL:FETCH (IL:FILEBROWSER IL:PATTERN) IL:OF FB) :INFO (IL:FETCH (IL:FILEBROWSER IL:INFOMENUCHOICES) IL:OF FB)))) :RECONSTITUTER (LAMBDA (PROPS) (LET ((WINDOW (IL:FILEBROWSER (GETF PROPS :PATTERN "*") (GETF PROPS :INFO) (LIST (QUOTE IL:REGION) (INTERNALIZE-REGION (GETF PROPS :REGION)))))) (IL:* IL:|;;| "wait for FB to recompute") (IL:BLOCK) (IL:WITH.MONITOR (IL:FETCH (IL:FILEBROWSER IL:FBLOCK) IL:OF (IL:WINDOWPROP WINDOW (QUOTE IL:FILEBROWSER))) WINDOW))) :TITLE "FB" :FILES (IL:FILEBROWSER))(DEF-WINDOW-TYPE :TABLE-BROWSER :RECOGNIZER (LAMBDA (WINDOW) (IL:TYPE? IL:TABLEBROWSER (IL:WINDOWPROP WINDOW (QUOTE IL:TABLEBROWSER)))))(IL:* IL:|;;| "Sketch")(IL:DECLARE\: IL:EVAL@COMPILE IL:DONTCOPY (OR (IL:RECLOOK (QUOTE IL:SKETCH)) (IL:LOADDEF (QUOTE IL:SKETCH) (QUOTE IL:RECORDS) (QUOTE IL:SKETCH))))(DEF-WINDOW-TYPE :SKETCH :RECOGNIZER (LAMBDA (W) (IL:WINDOWPROP W (QUOTE IL:SKETCH))) :ABSTRACTER (LAMBDA (W) (LIST :FILE (IL:FETCH (IL:SKETCH IL:SKETCHNAME) IL:OF (IL:WINDOWPROP W (QUOTE IL:SKETCH))) :REGION (EXTERNALIZE-REGION (WINDOW-REGION W)))) :RECONSTITUTER (LAMBDA (DATA) (WHEN (FBOUNDP (QUOTE IL:SKETCH)) (IL:SKETCH (GETF DATA :FILE) (IL:CREATEW (INTERNALIZE-REGION (GETF DATA :REGION (LIST 0 0 500 500))) "Sketch")))) :TITLE "Sketch")(IL:* IL:|;;| "Logo Window")(DEF-WINDOW-TYPE :LOGO-WINDOW :RECOGNIZER (LAMBDA (WINDOW) (EQ (IL:WINDOWPROP WINDOW (QUOTE TYPE)) (QUOTE IL:LOGOW))) :ABSTRACTER (LAMBDA (WINDOW) (IL:WINDOWPROP WINDOW (QUOTE ABSTRACTION))) :RECONSTITUTER (LAMBDA (ABSTRACTION) (IL:LOGOW (GETF ABSTRACTION :STRING) NIL (GETF ABSTRACTION :TITLE) (GETF ABSTRACTION :TITLE-LOCATION))) :TITLE (LAMBDA (PLACEMENT REGION DSP) (PRINT-PEP-TITLE-STRING "Envos" REGION DSP :NO-TITLE-BAR? T)))(REINSTALL-ADVICE (QUOTE IL:LOGOW) :AFTER (QUOTE ((:LAST (IL:WINDOWPROP IL:!VALUE (QUOTE ABSTRACTION) (IL:BQUOTE ((IL:\\\,@ (WHEN STRING (IL:BQUOTE (:STRING (IL:\\\, STRING))))) (IL:\\\,@ (WHEN IL:TITLE (IL:BQUOTE (:TITLE (IL:\\\, IL:TITLE))))) (IL:\\\,@ (WHEN IL:TITLE-LOCATION (IL:BQUOTE (:TITLE-LOCATION (IL:\\\, IL:TITLE-LOCATION))))))))))))(IL:READVISE IL:LOGOW)(IL:* IL:|;;| "PSW")(DEF-WINDOW-TYPE :PSW :RECOGNIZER (LAMBDA (WINDOW) (DECLARE (GLOBAL IL:PROCESS.STATUS.WINDOW)) (EQ WINDOW IL:PROCESS.STATUS.WINDOW)) :TITLE (LAMBDA (PLACEMENT REGION DSP) (PRINT-PEP-TITLE-STRING "PSW" REGION DSP :NO-TITLE-BAR? T)))(IL:PUTPROPS IL:ROOMS-MEDLEY-WINDOW-TYPES IL:COPYRIGHT ("Venue & Xerox Corporation" 1988 1990))(IL:DECLARE\: IL:DONTCOPY  (IL:FILEMAP (NIL)))IL:STOP