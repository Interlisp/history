(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "XCL" BASE 10)(FILECREATED " 4-Aug-87 10:42:17" {DSK}<LISPFILES>DCOMS>CALL.\;3 9309         |changes| |to:|  (INSTRUCTIONS |apply|)      |previous| |date:| "30-Jul-87 18:34:34" {DSK}<LISPFILES>DCOMS>CALL.\;2); Copyright (c) 1987 by Quintus Computer Systems, Inc.  All rights reserved.(PRETTYCOMPRINT CALLCOMS)(RPAQQ CALLCOMS ((* |;;;| "This file was generated from {ERIS}<PROLOGCORE>LISPNEW>CALL.LSP;1, loaded 18-Jun-87 11:42:33")                 (INSTRUCTIONS XQP::|allocate| |apply| |call| XQP::|deallocate| XQP::|depart|                         XQP::|execute| XQP::|proceed| XQP::|progress|)                 (FUNCTIONS XQP::|dereference-for-apply| XQP::|do.execute|)                 (PROPERTIES XQP::|get-cell-for-apply|)                 (PROP MAKEFILE-ENVIRONMENT)))(* |;;;| "This file was generated from {ERIS}<PROLOGCORE>LISPNEW>CALL.LSP;1, loaded 18-Jun-87 11:42:33")(XQP::|def.both.mode| XQP::|allocate| NIL (* |;;;| "needed C")                                          (XQP::|put.24| R (XQP::|get.24| E))                                          (|if| (|before| E B)                                              |then| (XQP::|put.24| E (XQP::|get.24| B))                                                    (XQP::|put.addr| E XQP::|saved.B0| (XQP::|get.24|                                                                                        B0))                                            |else| (XQP::|put.24| E (XQP::|E.plus.env.size.from.CP|))                                                  (XQP::|put.addr| E XQP::|saved.B0| (XQP::|get.24|                                                                                      B)))                                          (XQP::|put.addr| E XQP::|saved.CP| (XQP::|get.24| CP))                                          (XQP::|put.addr| E XQP::|saved.CE| (XQP::|get.24| R))                                          (XQP::|check.stack| E)                                          (XQP::|continue| 0))(XQP::|def.both.mode| |apply|   NIL (PROG (C R)             (XQP::|dereference-for-apply| A2 C)             (XQP::|put.24| B0 (XQP::|get.24| B))             (XQP::|put.24| C C)             (XQP::|check.heap| 12)             (RETURN (SELECTQ (XQP::|untag.immed| A3)                         (0 (XQP::|dereference-for-apply| A1 R)                            (SELECTC (XQP::|tag.of| A1)                                (XQP::|struct.tag.8|                                      (XQP::|put.32| A1 (XQP::|get-cell-for-apply| R 1))                                     (XQP::|put.32| A2 (XQP::|get-cell-for-apply| R 2))                                     (XQP::|put.32| A3 (XQP::|get-cell-for-apply| R 3))                                     (XQP::|put.32| A4 (XQP::|get-cell-for-apply| R 4))                                     (LET ((I (LLSH (XQP::|arity.of.cell| R)                                                    1)))                                          (|if| (IGREATERP I 8)                                              |then| (\\BLT (XQP::|loc.Amem| 5)                                                            (\\ADDBASE R 10)                                                            (IDIFFERENCE I 8)))))                                (XQP::|list.tag.8|                                      (XQP::|put.32| A1 (XQP::|get-cell-for-apply| R 0))                                     (XQP::|put.32| A2 (XQP::|get-cell-for-apply| R 1)))                                (XQP::|symbol.tag.8|)                                (SHOULDNT '|apply|))                            (XQP::|continue.reading.at| (XQP::PROC.CLAUSES C)))                         (1 (|if| (NEQ (XQP::|tag.of| A1)                                       XQP::|struct.tag.8|)                                |then| (SHOULDNT 'XQP::|dynamic.index|))                            (XQP::|put.24| R (XQP::|untag.struct| A1))                            (XQP::|put.32| XQP::T0 (XQP::|get.cell| R 1))(* |;;;| "This code doesn't work for terms of arity 0.  Since they are just symbols, their tag won't be struct.tag.8, and we get a SHOULDNT break.  The code following the comment takes explicit account of symbols.")(* |;;;| "(|if| (NEQ (|tag.of| T0) |struct.tag.8|) |then| (SHOULDNT '|dynamic.index|)) (|put.24| R (|untag.struct| T0)) (|put.32| T0 (|get.cell| R 1))")                            (|if| (EQ (XQP::|tag.of| XQP::T0)                                      XQP::|struct.tag.8|)                                |then| (XQP::|put.24| R (XQP::|untag.struct| XQP::T0))                                      (XQP::|put.32| XQP::T0 (XQP::|get.cell| R 1))                              |elseif| (NEQ (XQP::|tag.of| XQP::T0)                                            XQP::|symbol.tag.8|)                                |then| (SHOULDNT 'XQP::|dynamic.index|))                            (XQP::|put.24| XQP::|CurClause| XQP::CLOCK.TIME)                            (XQP::|continue.writing.at| (XQP::PROC.LASTCLAUSE C)))                         (2 (XQP::|put.24| P (XQP::|add.code| C 1))                            (XQP::|put.16| N XQP::|unindexed.offset|)                            (XQP::|put.24| XQP::|CurClause| XQP::CLOCK.TIME)                            (|if| (XQP::|this.clause.is.alive|)                                |then| (XQP::|interpret.me|)                              |else| (XQP::|fast.fail|)))                         (SHOULDNT '|apply|)))))(XQP::|def.both.mode| |call| (|address| XQP::|size|) (XQP::|put.24| CP (XQP::|add.code| P 1))                                                     (XQP::|do.execute|))(XQP::|def.both.mode| XQP::|deallocate| NIL (XQP::|put.24| CP (XQP::|get.addr| E XQP::|saved.CP|))                                            (XQP::|put.24| E (XQP::|get.addr| E XQP::|saved.CE|))                                            (XQP::|continue.reading| 0))(XQP::|def.both.mode| XQP::|depart| (|address|) (XQP::|put.24| CP (XQP::|get.addr| E XQP::|saved.CP|)                                                       )                                                (XQP::|put.24| E (XQP::|get.addr| E XQP::|saved.CE|))                                                (XQP::|do.execute|))(XQP::|def.both.mode| XQP::|execute| (|address|) (XQP::|do.execute|))(XQP::|def.both.mode| XQP::|proceed| NIL (XQP::|continue.reading.at| (XQP::|add.code| CP 1)))(XQP::|def.both.mode| XQP::|progress| NIL (XQP::|put.24| CP (XQP::|get.addr| E XQP::|saved.CP|))                                          (XQP::|put.24| E (XQP::|get.addr| E XQP::|saved.CE|))                                          (XQP::|continue.reading.at| (XQP::|add.code| CP 1)))(XQP::|def.macro| XQP::|dereference-for-apply| (A R)   (|if| (NOT (MEMB A '(A1 A2 A3 A4)))       |then| (SHOULDNT 'XQP::|dereference-for-apply|))   (|if| (NOT (MEMB R '(R C P)))       |then| (SHOULDNT 'XQP::|dereference-for-apply|))   `(PROGN (|while| (EQ (XQP::|tag.of| ,A)                        XQP::|ref.tag.8|)                  (SETQ ,R (XQP::|untag.ref| ,A))                  (XQP::|WritePrologTagAndPtr| ,A (\\GETBASEBYTE ,R 0)                         (\\GETBASEPTR ,R 0)))           (SETQ ,R (XQP::|untag.anything| ,A))))(XQP::|def.open| XQP::|do.execute| NIL (XQP::|put.24| B0 (XQP::|get.24| B))                                       (XQP::|put.24| C (XQP::|address.operand|))                                       (XQP::|check.heap| 12)                                       (XQP::|continue.reading.at| (XQP::PROC.CLAUSES (XQP::|get.24|                                                                                       C))))(XQP::|def.props| XQP::|get-cell-for-apply| HI (LAMBDA (XQP::|Ptr| |Offset|)                                                 `(\\GETBASE ,XQP::|Ptr| ,(XQP::|Twice| |Offset| 0)))                                               LO                                               (LAMBDA (XQP::|Ptr| |Offset|)                                                 `(\\GETBASE ,XQP::|Ptr| ,(XQP::|Twice| |Offset| 1)))                                               XQP::|Tag|                                               (LAMBDA (XQP::|Ptr| |Offset|)                                                 `(\\GETBASEBYTE ,XQP::|Ptr|                                                         ,(XQP::|Twice| (XQP::|Twice| |Offset| 0)                                                                 0)))                                               XQP::|Ptr|                                               (LAMBDA (XQP::|Ptr| |Offset|)                                                 `(\\GETBASEPTR ,XQP::|Ptr| ,(XQP::|Twice| |Offset| 0                                                                                    )))                                               XQP::|Loc|                                               (LAMBDA (XQP::|Ptr| |Offset|)                                                 `(\\ADDBASE ,XQP::|Ptr| ,(XQP::|Twice| |Offset| 0))))(PUTPROPS CALL COPYRIGHT ("Quintus Computer Systems, Inc" 1987))(DECLARE\: DONTCOPY  (FILEMAP (NIL)))STOP