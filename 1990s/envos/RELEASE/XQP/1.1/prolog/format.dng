(ASSEMBLE.CLAUSE ( len 4 formatter ) 9    (start.calling LEN 3)    (send.direct.Ai 1)    (send.direct.Ai 2)    (send.direct.Ai 3)    (call.lisp 1)    (unify.local.Xn 4)    (proceed))(ASSEMBLE.CLAUSE ( cprint 3 formatter ) 9    (start.calling CPRINT 3)    (send.direct.Ai 1)    (send.direct.Ai 2)    (send.direct.Ai 3)    (call.lisp 1)    (unify.void 1)    (proceed))(ASSEMBLE.CLAUSE ( format 3 formatter ) 41    (allocate)    (get.Ai.variable.Yn 1 4)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 3)    (put.Ai.structure 4 format 3)    (unify.local.Yn 4)    (unify.local.Yn 2)    (unify.local.Yn 3)    (put.Ai.void 3)    (put.Ai.void 2)    (put.Ai.value.Yn 1 4)    (call 7 outsex 4 si)    (put.Ai.variable.Yn 1 1)    (call 7 current_output 1 si)    (put.Ai.value.Yn 1 4)    (call 6 set_output 1 si)    (put.Ai.value.Yn 2 3)    (put.Ai.value.Yn 1 2)    (call 4 format 2 formatter)    (put.Ai.unsafe.Yn 1 1)    (depart set_output 1 si))(ASSEMBLE.CLAUSE ( format 2 formatter ) 21    (allocate)    (get.Ai.variable.Yn 1 3)    (get.Ai.variable.Yn 2 1)    (put.Ai.value.Yn 1 3)    (is.a 128)    (put.Ai.variable.Yn 2 2)    (put.Ai.value.Yn 1 3)    (call 5 name 2 si)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart format_list1 2 formatter))(ASSEMBLE.CLAUSE ( format 2 formatter ) 23    (allocate)    (get.Ai.variable.Yn 1 2)    (get.Ai.variable.Yn 2 1)    (load.choice.point)    (store.variable.Yn 3)    (either 6 18)    (put.Ai.value.Yn 1 2)    (is.a 128)    (load.value.Yn 3)    (cut.to.choice.point)    (fail)    (or.finally)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart format_list1 2 formatter))(ASSEMBLE.CLAUSE ( format 2 formatter ) 1    (proceed))(ASSEMBLE.CLAUSE ( format_list1 2 formatter ) 9    (get.Ai.constant 1 NIL)    (put.Ai.value.Xn 1 2)    (head.cut)    (put.Ai.nil 2)    (execute format_list2 2 formatter))(ASSEMBLE.CLAUSE ( format_list1 2 formatter ) 11    (get.Ai.list 1)    (unify.variable.Xn 4)    (unify.variable.Xn 3)    (put.Ai.value.Xn 1 2)    (head.cut)    (put.Ai.list 2)    (unify.value.Xn 4)    (unify.value.Xn 3)    (execute format_list2 2 formatter))(ASSEMBLE.CLAUSE ( format_list1 2 formatter ) 9    (put.Ai.value.Xn 3 2)    (put.Ai.list 2)    (unify.local.Xn 1)    (unify.nil)    (put.Ai.value.Xn 1 3)    (execute format_list2 2 formatter))(ASSEMBLE.CLAUSE ( format_list2 2 formatter ) 64    (allocate)    (get.Ai.variable.Yn 1 4)    (get.Ai.variable.Yn 2 2)    (put.Ai.variable.Yn 6 1)    (put.Ai.variable.Yn 5 7)    (put.Ai.variable.Yn 4 8)    (put.Ai.variable.Yn 3 6)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 4)    (call 11 valid 6 formatter)    (body.cut)    (put.Ai.value.Yn 4 1)    (put.Ai.unsafe.Yn 3 8)    (put.Ai.unsafe.Yn 2 7)    (put.Ai.unsafe.Yn 1 6)    (call 8 output 4 formatter)    (load.choice.point)    (store.variable.Yn 5)    (either 8 63)    (put.Ai.value.Yn 1 1)    (is.a 254)    (load.value.Yn 5)    (cut.to.choice.point)    (put.Ai.value.Yn 2 4)    (put.Ai.variable.Yn 1 3)    (call 6 name 2 si)    (put.Ai.structure 2 format 2)    (unify.local.Yn 3)    (unify.local.Yn 2)    (put.Ai.unsafe.Yn 1 1)    (call 3 nerror 2 si)    (jump.to 64)    (or.finally)    (body.cut)    (fail))(ASSEMBLE.CLAUSE ( valid 6 formatter ) 7    (put.Ai.value.Xn 7 6)    (put.Ai.constant 6 0)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 7 formatter ) 12    (get.Ai.constant 1 NIL)    (get.Ai.nil 2)    (get.Ai.nil 3)    (get.Ai.list 4)    (unify.variable.Xn 1)    (unify.nil)    (get.Ai.nil 5)    (get.Ai.value.Xn 6 1)    (cut.proceed))(ASSEMBLE.CLAUSE ( valid 7 formatter ) 34    (get.Ai.constant 1 NIL)    (get.Ai.nil 3)    (get.Ai.list 4)    (unify.variable.Xn 1)    (unify.nil)    (get.Ai.nil 5)    (get.Ai.value.Xn 6 1)    (allocate)    (get.Ai.variable.Yn 7 1)    (head.cut)    (load.choice.point)    (store.variable.Yn 2)    (either 5 33)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 501)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( valid 7 formatter ) 24    (get.Ai.list 1)    (unify.constant 126)    (unify.list)    (unify.variable.Xn 1)    (unify.variable.Xn 9)    (put.Ai.value.Xn 8 7)    (head.cut)    (put.Ai.value.Xn 7 6)    (put.Ai.value.Xn 6 5)    (put.Ai.value.Xn 5 4)    (put.Ai.value.Xn 4 3)    (put.Ai.value.Xn 3 2)    (put.Ai.value.Xn 2 9)    (execute valid 8 formatter))(ASSEMBLE.CLAUSE ( valid 7 formatter ) 25    (get.Ai.list 1)    (unify.constant 13)    (unify.variable.Xn 1)    (put.Ai.value.Xn 8 7)    (head.cut)    (put.Ai.value.Xn 7 6)    (put.Ai.value.Xn 6 5)    (put.Ai.value.Xn 5 4)    (put.Ai.value.Xn 4 3)    (put.Ai.value.Xn 3 2)    (put.Ai.value.Xn 2 1)    (put.Ai.constant 1 110)    (execute valid 8 formatter))(ASSEMBLE.CLAUSE ( valid 7 formatter ) 8    (get.Ai.list 1)    (unify.variable.Xn 8)    (unify.variable.Xn 1)    (get.Ai.list 3)    (unify.value.Xn 8)    (unify.variable.Xn 3)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 66    (get.Ai.constant 1 42)    (get.Ai.list 2)    (allocate)    (unify.variable.Yn 3)    (unify.variable.Yn 4)    (put.Ai.value.Xn 1 3)    (get.Ai.variable.Yn 4 6)    (get.Ai.variable.Yn 5 7)    (get.Ai.variable.Yn 6 8)    (get.Ai.variable.Yn 7 9)    (get.Ai.variable.Yn 8 10)    (head.cut)    (put.Ai.value.Yn 4 10)    (put.Ai.variable.Yn 3 5)    (put.Ai.variable.Yn 2 11)    (call 14 check_int 4 formatter)    (put.Ai.symbol 6 numeric)    (put.Ai.variable.Yn 5 2)    (put.Ai.void 4)    (put.Ai.void 3)    (put.Ai.variable.Yn 2 1)    (put.Ai.value.Yn 1 3)    (call 14 specifier 6 formatter)    (put.Ai.unsafe.Yn 11 11)    (put.Ai.value.Yn 10 10)    (put.Ai.value.Yn 9 9)    (put.Ai.value.Yn 8 8)    (put.Ai.value.Yn 7 7)    (put.Ai.value.Yn 6 6)    (put.Ai.unsafe.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.unsafe.Yn 1 1)    (depart fillup 11 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 31    (get.Ai.constant 1 43)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant -43)    (unify.list)    (unify.constant 8)    (unify.variable.Xn 3)    (get.Ai.list 5)    (unify.variable.Xn 9)    (unify.variable.Xn 4)    (put.Ai.value.Xn 5 6)    (get.Ai.value.Xn 7 9)    (put.Ai.value.Xn 7 8)    (head.cut)    (put.Ai.constant 6 0)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 31    (get.Ai.constant 1 78)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant -78)    (unify.list)    (unify.constant 1)    (unify.variable.Xn 3)    (get.Ai.list 5)    (unify.variable.Xn 9)    (unify.variable.Xn 4)    (put.Ai.value.Xn 5 6)    (get.Ai.value.Xn 7 9)    (put.Ai.value.Xn 7 8)    (head.cut)    (put.Ai.constant 6 0)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 32    (get.Ai.constant 1 96)    (get.Ai.list 2)    (unify.variable.Xn 9)    (unify.list)    (unify.constant 116)    (unify.variable.Xn 1)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant -116)    (unify.list)    (unify.value.Xn 9)    (unify.variable.Xn 3)    (put.Ai.value.Xn 4 5)    (put.Ai.value.Xn 5 6)    (head.cut)    (load.value.Xn 7)    (add.pos.word 1)    (store.variable.Xn 6)    (put.Ai.value.Xn 7 8)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 31    (get.Ai.constant 1 110)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant -110)    (unify.list)    (unify.constant 1)    (unify.variable.Xn 3)    (get.Ai.list 5)    (unify.variable.Xn 9)    (unify.variable.Xn 4)    (put.Ai.value.Xn 5 6)    (get.Ai.value.Xn 7 9)    (put.Ai.value.Xn 7 8)    (head.cut)    (put.Ai.constant 6 0)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 29    (get.Ai.constant 1 116)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant -116)    (unify.list)    (unify.constant 32)    (unify.variable.Xn 3)    (put.Ai.value.Xn 4 5)    (put.Ai.value.Xn 5 6)    (head.cut)    (load.value.Xn 7)    (add.pos.word 1)    (store.variable.Xn 6)    (put.Ai.value.Xn 7 8)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 31    (get.Ai.constant 1 124)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant -124)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 3)    (get.Ai.list 5)    (unify.variable.Xn 9)    (unify.variable.Xn 4)    (put.Ai.value.Xn 5 6)    (get.Ai.value.Xn 7 9)    (put.Ai.value.Xn 7 8)    (head.cut)    (put.Ai.constant 6 0)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 23    (get.Ai.constant 1 126)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.list 4)    (unify.constant 126)    (unify.variable.Xn 3)    (put.Ai.value.Xn 4 5)    (put.Ai.value.Xn 5 6)    (put.Ai.value.Xn 6 7)    (put.Ai.value.Xn 7 8)    (head.cut)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 92    (allocate)    (get.Ai.variable.Yn 2 1)    (get.Ai.variable.Yn 3 13)    (get.Ai.variable.Yn 4 9)    (get.Ai.variable.Yn 5 4)    (get.Ai.variable.Yn 6 8)    (get.Ai.variable.Yn 7 5)    (get.Ai.variable.Yn 8 6)    (put.Ai.void 6)    (put.Ai.variable.Yn 5 12)    (put.Ai.variable.Yn 4 3)    (put.Ai.variable.Yn 3 10)    (put.Ai.symbol 2 atom)    (call 16 specifier 6 formatter)    (body.cut)    (put.Ai.value.Yn 5 6)    (put.Ai.variable.Yn 4 2)    (put.Ai.variable.Yn 3 7)    (put.Ai.value.Yn 2 13)    (put.Ai.unsafe.Yn 1 12)    (call 14 check_type 5 formatter)    (load.choice.point)    (store.variable.Yn 11)    (either 14 70)    (put.Ai.value.Yn 1 6)    (is.a 254)    (load.value.Yn 11)    (cut.to.choice.point)    (put.Ai.value.Yn 1 9)    (get.Ai.constant 1 NIL)    (put.Ai.value.Yn 1 4)    (get.Ai.list 1)    (unify.local.Yn 5)    (unify.nil)    (put.Ai.value.Yn 1 8)    (get.Ai.constant 1 NIL)    (check.heap)    (progress)    (or.finally)    (put.Ai.unsafe.Yn 1 10)    (get.Ai.value.Yn 1 9)    (put.Ai.value.Yn 1 8)    (get.Ai.list 1)    (unify.local.Yn 7)    (unify.variable.Xn 5)    (put.Ai.value.Yn 7 6)    (put.Ai.value.Yn 6 5)    (put.Ai.value.Yn 4 4)    (put.Ai.unsafe.Yn 3 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart valid 7 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 32    (put.Ai.value.Xn 9 2)    (put.Ai.value.Xn 2 3)    (put.Ai.value.Xn 3 4)    (put.Ai.value.Xn 4 5)    (put.Ai.value.Xn 5 6)    (put.Ai.value.Xn 6 7)    (put.Ai.value.Xn 7 8)    (load.value.Xn 1)    (load.pos.word 48)    (subtract)    (store.variable.Xn 8)    (load.value.Xn 8)    (load.pos.word 10)    (less.than)    (load.value.Xn 8)    (load.pos.word 0)    (not.less.than)    (head.cut)    (put.Ai.value.Xn 1 9)    (execute valid_integer 8 formatter))(ASSEMBLE.CLAUSE ( valid 8 formatter ) 30    (get.Ai.nil 4)    (get.Ai.list 5)    (unify.variable.Xn 1)    (unify.nil)    (get.Ai.nil 6)    (get.Ai.value.Xn 7 1)    (allocate)    (get.Ai.variable.Yn 8 1)    (load.choice.point)    (store.variable.Yn 2)    (either 5 29)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 503)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( valid_integer 8 formatter ) 26    (get.Ai.list 1)    (unify.variable.Xn 9)    (unify.variable.Xn 1)    (load.value.Xn 9)    (load.pos.word 48)    (subtract)    (store.variable.Xn 9)    (load.value.Xn 9)    (load.pos.word 10)    (less.than)    (load.value.Xn 9)    (load.pos.word 0)    (not.less.than)    (head.cut)    (load.value.Xn 8)    (load.pos.word 10)    (multiply)    (load.value.Xn 9)    (add)    (store.variable.Xn 8)    (execute valid_integer 8 formatter))(ASSEMBLE.CLAUSE ( valid_integer 8 formatter ) 56    (get.Ai.list 1)    (allocate)    (unify.variable.Yn 3)    (unify.variable.Yn 4)    (get.Ai.variable.Yn 2 5)    (get.Ai.variable.Yn 3 6)    (get.Ai.variable.Yn 4 7)    (get.Ai.variable.Yn 5 8)    (get.Ai.variable.Yn 6 9)    (get.Ai.variable.Yn 7 10)    (get.Ai.variable.Yn 8 11)    (put.Ai.symbol 6 numeric)    (put.Ai.variable.Yn 5 2)    (put.Ai.void 4)    (put.Ai.void 3)    (put.Ai.variable.Yn 2 1)    (put.Ai.value.Yn 1 3)    (call 14 specifier 6 formatter)    (body.cut)    (put.Ai.value.Yn 11 11)    (put.Ai.value.Yn 10 10)    (put.Ai.value.Yn 9 9)    (put.Ai.value.Yn 8 8)    (put.Ai.value.Yn 7 7)    (put.Ai.value.Yn 6 6)    (put.Ai.value.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.unsafe.Yn 1 1)    (depart fillup 11 formatter))(ASSEMBLE.CLAUSE ( valid_integer 8 formatter ) 30    (get.Ai.nil 3)    (get.Ai.list 4)    (unify.variable.Xn 1)    (unify.nil)    (get.Ai.nil 5)    (get.Ai.value.Xn 6 1)    (allocate)    (get.Ai.variable.Yn 7 1)    (load.choice.point)    (store.variable.Yn 2)    (either 5 29)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 503)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( fillup 11 formatter ) 89    (get.Ai.constant 1 atom)    (put.Ai.value.Xn 1 2)    (allocate)    (get.Ai.variable.Yn 3 10)    (get.Ai.variable.Yn 4 1)    (put.Ai.value.Xn 2 5)    (get.Ai.variable.Yn 6 9)    (get.Ai.variable.Yn 7 3)    (get.Ai.variable.Yn 8 7)    (get.Ai.variable.Yn 9 4)    (get.Ai.variable.Yn 10 5)    (get.Ai.variable.Yn 11 8)    (head.cut)    (put.Ai.value.Yn 5 5)    (put.Ai.variable.Yn 4 2)    (put.Ai.variable.Yn 3 6)    (call 14 check_type 5 formatter)    (load.choice.point)    (store.variable.Yn 11)    (either 14 63)    (put.Ai.value.Yn 1 5)    (is.a 254)    (load.value.Yn 11)    (cut.to.choice.point)    (put.Ai.value.Yn 1 9)    (get.Ai.constant 1 NIL)    (put.Ai.value.Yn 1 3)    (get.Ai.list 1)    (unify.local.Yn 4)    (unify.nil)    (put.Ai.value.Yn 1 7)    (get.Ai.constant 1 NIL)    (check.heap)    (progress)    (or.finally)    (load.value.Yn 10)    (minus)    (store.variable.Xn 1)    (put.Ai.value.Yn 2 9)    (get.Ai.list 2)    (unify.value.Xn 1)    (unify.list)    (unify.local.Yn 8)    (unify.variable.Xn 3)    (put.Ai.value.Yn 1 7)    (get.Ai.list 1)    (unify.local.Yn 6)    (unify.variable.Xn 5)    (put.Ai.value.Yn 7 5)    (put.Ai.value.Yn 6 4)    (put.Ai.value.Yn 4 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart valid 7 formatter))(ASSEMBLE.CLAUSE ( fillup 11 formatter ) 32    (get.Ai.constant 1 fill)    (put.Ai.value.Xn 1 4)    (put.Ai.value.Xn 2 5)    (get.Ai.list 6)    (unify.variable.Xn 6)    (unify.list)    (unify.variable.Xn 13)    (unify.variable.Xn 12)    (put.Ai.value.Xn 4 7)    (put.Ai.value.Xn 5 8)    (put.Ai.value.Xn 7 10)    (get.Ai.value.Xn 11 13)    (head.cut)    (load.value.Xn 3)    (minus)    (store.value.Xn 6)    (load.value.Xn 9)    (add.pos.word 1)    (store.variable.Xn 6)    (put.Ai.value.Xn 3 12)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( fillup 11 formatter ) 34    (get.Ai.constant 1 mark)    (put.Ai.value.Xn 1 4)    (put.Ai.value.Xn 2 5)    (get.Ai.list 6)    (unify.variable.Xn 6)    (unify.list)    (unify.variable.Xn 13)    (unify.variable.Xn 12)    (get.Ai.list 7)    (unify.variable.Xn 7)    (unify.variable.Xn 4)    (put.Ai.value.Xn 5 8)    (get.Ai.value.Xn 9 7)    (put.Ai.value.Xn 7 10)    (get.Ai.value.Xn 11 13)    (head.cut)    (load.value.Xn 3)    (minus)    (store.value.Xn 6)    (put.Ai.constant 6 0)    (put.Ai.value.Xn 3 12)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( fillup 11 formatter ) 26    (put.Ai.value.Xn 1 4)    (put.Ai.value.Xn 2 5)    (get.Ai.list 6)    (unify.variable.Xn 13)    (unify.list)    (unify.variable.Xn 14)    (unify.variable.Xn 12)    (put.Ai.value.Xn 4 7)    (put.Ai.value.Xn 5 8)    (put.Ai.value.Xn 6 9)    (put.Ai.value.Xn 7 10)    (get.Ai.value.Xn 11 14)    (load.value.Xn 3)    (minus)    (store.value.Xn 13)    (put.Ai.value.Xn 3 12)    (execute valid 7 formatter))(ASSEMBLE.CLAUSE ( output 4 formatter ) 75    (allocate)    (get.Ai.variable.Yn 1 2)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 4)    (get.Ai.variable.Yn 4 7)    (put.Ai.variable.Yn 1 5)    (call 11 current_output 1 si)    (put.Ai.variable.Yn 2 6)    (put.Ai.value.Yn 1 5)    (call 11 line_position 2 si)    (load.choice.point)    (store.variable.Yn 8)    (either 11 50)    (put.Ai.value.Yn 1 4)    (call 11 nofills 1 formatter)    (load.value.Yn 8)    (cut.to.choice.point)    (put.Ai.value.Yn 7 7)    (put.Ai.unsafe.Yn 6 6)    (put.Ai.void 5)    (put.Ai.unsafe.Yn 4 5)    (put.Ai.value.Yn 3 4)    (put.Ai.value.Yn 2 3)    (put.Ai.value.Yn 1 2)    (depart output 7 formatter)    (or.finally)    (put.Ai.variable.Yn 1 1)    (call 10 open_null_stream 1 si)    (put.Ai.value.Yn 7 7)    (put.Ai.unsafe.Yn 6 6)    (put.Ai.value.Yn 5 1)    (put.Ai.unsafe.Yn 4 5)    (put.Ai.value.Yn 3 4)    (put.Ai.value.Yn 2 3)    (put.Ai.value.Yn 1 2)    (call 4 output 7 formatter)    (put.Ai.unsafe.Yn 1 1)    (depart close 1 si))(ASSEMBLE.CLAUSE ( nofills 1 formatter ) 4    (get.Ai.constant 1 NIL)    (proceed))(ASSEMBLE.CLAUSE ( nofills 1 formatter ) 7    (get.Ai.list 1)    (unify.constant 0)    (unify.variable.Xn 1)    (execute nofills 1 formatter))(ASSEMBLE.CLAUSE ( output 7 formatter ) 4    (get.Ai.constant 1 NIL)    (cut.proceed))(ASSEMBLE.CLAUSE ( output 7 formatter ) 40    (get.Ai.nil 3)    (allocate)    (get.Ai.variable.Yn 4 3)    (get.Ai.variable.Yn 5 4)    (get.Ai.variable.Yn 6 5)    (get.Ai.variable.Yn 7 6)    (put.Ai.value.Yn 7 6)    (put.Ai.value.Yn 6 5)    (put.Ai.nil 5)    (put.Ai.variable.Yn 4 2)    (put.Ai.value.Xn 3 2)    (put.Ai.variable.Yn 2 1)    (call 9 output_field 7 formatter)    (body.cut)    (put.Ai.value.Yn 7 6)    (put.Ai.value.Yn 6 5)    (put.Ai.value.Yn 5 4)    (put.Ai.value.Yn 4 3)    (put.Ai.nil 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.unsafe.Yn 1 1)    (depart output 7 formatter))(ASSEMBLE.CLAUSE ( output 7 formatter ) 98    (allocate)    (get.Ai.variable.Yn 1 8)    (get.Ai.variable.Yn 2 9)    (get.Ai.list 3)    (unify.variable.Yn 12)    (unify.variable.Yn 3)    (get.Ai.variable.Yn 4 4)    (get.Ai.variable.Yn 5 5)    (get.Ai.variable.Yn 6 11)    (get.Ai.variable.Yn 7 7)    (load.value.Yn 12)    (load.pos.word 0)    (equal.to.else 30)    (put.Ai.variable.Yn 1 10)    (get.Ai.constant 1 NIL)    (jump.to 59)    (put.Ai.value.Yn 1 5)    (call 15 set_output 1 si)    (call 15 nl 0 si)    (put.Ai.constant 6 0)    (put.Ai.value.Yn 5 12)    (put.Ai.variable.Yn 4 10)    (put.Ai.value.Yn 3 11)    (put.Ai.value.Yn 2 9)    (put.Ai.value.Yn 1 8)    (call 14 find_fill_length 6 formatter)    (put.Ai.value.Yn 1 4)    (call 14 set_output 1 si)    (put.Ai.value.Yn 7 7)    (put.Ai.value.Yn 6 11)    (put.Ai.unsafe.Yn 5 10)    (put.Ai.variable.Yn 4 2)    (put.Ai.value.Yn 3 9)    (put.Ai.variable.Yn 2 1)    (put.Ai.value.Yn 1 8)    (call 10 output_field 7 formatter)    (body.cut)    (put.Ai.variable.Yn 2 6)    (put.Ai.value.Yn 1 4)    (call 10 line_position 2 si)    (put.Ai.value.Yn 7 7)    (put.Ai.unsafe.Yn 6 6)    (put.Ai.value.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.unsafe.Yn 1 1)    (depart output 7 formatter))(ASSEMBLE.CLAUSE ( output_field 7 formatter ) 5    (get.Ai.constant 1 NIL)    (get.Ai.nil 2)    (cut.proceed))(ASSEMBLE.CLAUSE ( output_field 7 formatter ) 28    (get.Ai.list 1)    (unify.variable.Xn 1)    (unify.list)    (unify.variable.Xn 10)    (unify.variable.Xn 11)    (put.Ai.value.Xn 8 6)    (put.Ai.value.Xn 9 7)    (load.value.Xn 1)    (load.pos.word 0)    (less.than)    (head.cut)    (put.Ai.value.Xn 7 5)    (put.Ai.value.Xn 6 4)    (put.Ai.value.Xn 5 3)    (put.Ai.value.Xn 4 2)    (put.Ai.value.Xn 3 11)    (put.Ai.value.Xn 2 10)    (execute do_output 9 formatter))(ASSEMBLE.CLAUSE ( output_field 7 formatter ) 35    (get.Ai.list 1)    (unify.variable.Xn 1)    (allocate)    (unify.variable.Yn 1)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 3)    (get.Ai.variable.Yn 4 4)    (get.Ai.variable.Yn 5 5)    (get.Ai.variable.Yn 6 6)    (get.Ai.variable.Yn 7 7)    (call 10 put 1 si)    (put.Ai.value.Yn 7 7)    (put.Ai.value.Yn 6 6)    (put.Ai.value.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart output_field 7 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 64    (get.Ai.constant 1 -43)    (allocate)    (get.Ai.variable.Yn 2 5)    (get.Ai.value.Xn 4 3)    (get.Ai.value.Xn 6 5)    (get.Ai.variable.Yn 8 6)    (get.Ai.variable.Yn 9 3)    (head.cut)    (put.Ai.variable.Yn 1 7)    (call 10 current_output 1 si)    (put.Ai.variable.Yn 2 1)    (put.Ai.unsafe.Yn 1 7)    (call 9 line_position 2 si)    (load.value.Yn 6)    (load.value.Yn 5)    (add)    (store.variable.Yn 2)    (load.value.Yn 2)    (load.value.Yn 1)    (less.than.else 57)    (load.choice.point)    (store.variable.Yn 4)    (either 7 54)    (put.Ai.value.Yn 1 3)    (is.a 1)    (load.value.Yn 4)    (cut.to.choice.point)    (put.Ai.value.Yn 1 3)    (get.Ai.constant 1 504)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress)    (load.value.Yn 2)    (load.value.Yn 1)    (subtract)    (store.variable.Xn 1)    (put.Ai.constant 2 32)    (depart write_many 2 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 43    (get.Ai.constant 1 -78)    (allocate)    (get.Ai.variable.Yn 2 2)    (get.Ai.value.Xn 4 3)    (get.Ai.value.Xn 6 5)    (head.cut)    (put.Ai.variable.Yn 1 4)    (call 7 current_output 1 si)    (put.Ai.variable.Yn 2 3)    (put.Ai.unsafe.Yn 1 4)    (call 6 line_position 2 si)    (load.value.Yn 3)    (load.pos.word 0)    (equal.to.else 36)    (load.value.Yn 2)    (add.neg.word -1)    (store.variable.Yn 1)    (jump.to 38)    (load.value.Yn 2)    (store.variable.Yn 1)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (depart write_many 2 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 15    (get.Ai.constant 1 -110)    (put.Ai.value.Xn 1 2)    (get.Ai.value.Xn 4 3)    (get.Ai.value.Xn 6 5)    (head.cut)    (put.Ai.constant 2 13)    (execute write_many 2 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 20    (get.Ai.constant 1 -116)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 2 4)    (put.Ai.value.Xn 3 5)    (put.Ai.value.Xn 4 6)    (get.Ai.nil 7)    (put.Ai.value.Xn 6 8)    (put.Ai.value.Xn 7 9)    (head.cut)    (put.Ai.nil 5)    (execute output_field 7 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 39    (get.Ai.constant 1 -116)    (allocate)    (get.Ai.variable.Yn 3 1)    (get.Ai.variable.Yn 4 2)    (get.Ai.variable.Yn 5 3)    (get.Ai.variable.Yn 6 4)    (get.Ai.list 7)    (unify.variable.Xn 1)    (unify.variable.Yn 5)    (get.Ai.variable.Yn 8 6)    (get.Ai.variable.Yn 9 7)    (head.cut)    (call 10 write_many 2 formatter)    (put.Ai.value.Yn 7 7)    (put.Ai.value.Yn 6 6)    (put.Ai.value.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart output_field 7 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 11    (get.Ai.constant 1 -124)    (get.Ai.constant 2 0)    (get.Ai.value.Xn 4 3)    (get.Ai.value.Xn 6 5)    (cut.proceed))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 58    (get.Ai.constant 1 -124)    (allocate)    (get.Ai.variable.Yn 2 2)    (get.Ai.value.Xn 4 3)    (get.Ai.value.Xn 6 5)    (get.Ai.variable.Yn 9 3)    (head.cut)    (put.Ai.variable.Yn 1 5)    (call 8 current_output 1 si)    (put.Ai.variable.Yn 2 1)    (put.Ai.unsafe.Yn 1 5)    (call 7 line_position 2 si)    (load.value.Yn 2)    (load.value.Yn 1)    (less.than.else 51)    (load.choice.point)    (store.variable.Yn 4)    (either 7 48)    (put.Ai.value.Yn 1 3)    (is.a 1)    (load.value.Yn 4)    (cut.to.choice.point)    (put.Ai.value.Yn 1 3)    (get.Ai.constant 1 504)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress)    (load.value.Yn 2)    (load.value.Yn 1)    (subtract)    (store.variable.Xn 1)    (put.Ai.constant 2 32)    (depart write_many 2 formatter))(ASSEMBLE.CLAUSE ( do_output 9 formatter ) 37    (allocate)    (get.Ai.variable.Yn 3 1)    (get.Ai.variable.Yn 4 2)    (get.Ai.list 5)    (unify.variable.Xn 3)    (unify.variable.Yn 3)    (get.Ai.variable.Yn 6 4)    (get.Ai.variable.Yn 7 5)    (get.Ai.variable.Yn 8 6)    (get.Ai.variable.Yn 9 7)    (put.Ai.value.Yn 4 7)    (call 10 write_to_user 4 formatter)    (put.Ai.value.Yn 7 7)    (put.Ai.value.Yn 6 6)    (put.Ai.value.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart output_field 7 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 6 formatter ) 12    (get.Ai.constant 1 NIL)    (put.Ai.value.Xn 1 4)    (put.Ai.value.Xn 2 5)    (put.Ai.value.Xn 3 6)    (head.cut)    (execute make_fill 3 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 6 formatter ) 26    (get.Ai.list 1)    (unify.variable.Xn 1)    (unify.list)    (unify.variable.Xn 9)    (unify.variable.Xn 10)    (put.Ai.value.Xn 7 5)    (put.Ai.value.Xn 8 6)    (load.value.Xn 1)    (load.pos.word 0)    (less.than)    (head.cut)    (put.Ai.value.Xn 6 4)    (put.Ai.value.Xn 5 3)    (put.Ai.value.Xn 4 2)    (put.Ai.value.Xn 3 10)    (put.Ai.value.Xn 2 9)    (execute find_fill_length 8 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 6 formatter ) 9    (get.Ai.list 1)    (unify.void 1)    (unify.variable.Xn 1)    (load.value.Xn 6)    (add.pos.word 1)    (store.variable.Xn 6)    (execute find_fill_length 6 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 8 formatter ) 37    (get.Ai.constant 1 -43)    (allocate)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 6 1)    (get.Ai.variable.Yn 7 2)    (get.Ai.variable.Yn 8 5)    (head.cut)    (put.Ai.variable.Yn 1 6)    (call 9 current_output 1 si)    (put.Ai.variable.Yn 2 4)    (put.Ai.unsafe.Yn 1 6)    (call 8 line_position 2 si)    (load.value.Yn 5)    (load.value.Yn 4)    (add)    (store.variable.Xn 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart make_fill 4 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 8 formatter ) 12    (get.Ai.constant 1 -78)    (put.Ai.value.Xn 1 6)    (put.Ai.value.Xn 2 7)    (put.Ai.value.Xn 3 8)    (head.cut)    (execute make_fill 3 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 8 formatter ) 18    (get.Ai.constant 1 -116)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 2 4)    (put.Ai.value.Xn 3 5)    (put.Ai.value.Xn 4 6)    (put.Ai.value.Xn 5 7)    (put.Ai.value.Xn 6 8)    (head.cut)    (execute find_fill_length 6 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 8 formatter ) 12    (get.Ai.constant 1 -110)    (put.Ai.value.Xn 1 6)    (put.Ai.value.Xn 2 7)    (put.Ai.value.Xn 3 8)    (head.cut)    (execute make_fill 3 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 8 formatter ) 39    (get.Ai.constant 1 -124)    (allocate)    (get.Ai.variable.Yn 6 1)    (get.Ai.variable.Yn 7 2)    (get.Ai.variable.Yn 8 5)    (head.cut)    (load.value.Xn 2)    (load.value.Xn 5)    (subtract)    (store.variable.Yn 3)    (put.Ai.variable.Yn 1 6)    (call 9 current_output 1 si)    (put.Ai.variable.Yn 2 4)    (put.Ai.unsafe.Yn 1 6)    (call 8 line_position 2 si)    (load.value.Yn 5)    (load.value.Yn 4)    (add)    (store.variable.Xn 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart make_fill 4 formatter))(ASSEMBLE.CLAUSE ( find_fill_length 8 formatter ) 35    (allocate)    (get.Ai.variable.Yn 3 1)    (get.Ai.list 4)    (unify.variable.Xn 3)    (unify.variable.Yn 2)    (get.Ai.variable.Yn 5 3)    (get.Ai.variable.Yn 6 4)    (get.Ai.variable.Yn 7 5)    (get.Ai.variable.Yn 8 7)    (put.Ai.variable.Yn 4 6)    (call 10 write_to_null 4 formatter)    (load.value.Yn 7)    (load.value.Yn 6)    (add)    (store.variable.Xn 6)    (put.Ai.value.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart find_fill_length 6 formatter))(ASSEMBLE.CLAUSE ( make_fill 3 formatter ) 31    (allocate)    (get.Ai.variable.Yn 1 1)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 4)    (put.Ai.variable.Yn 1 5)    (call 8 current_output 1 si)    (put.Ai.variable.Yn 2 3)    (put.Ai.unsafe.Yn 1 5)    (call 7 line_position 2 si)    (load.value.Yn 4)    (load.value.Yn 3)    (add)    (store.variable.Xn 3)    (put.Ai.value.Xn 4 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart make_fill 4 formatter))(ASSEMBLE.CLAUSE ( make_fill 4 formatter ) 7    (get.Ai.constant 1 NIL)    (get.Ai.constant 2 0)    (cut.proceed))(ASSEMBLE.CLAUSE ( make_fill 4 formatter ) 41    (allocate)    (get.Ai.variable.Yn 1 3)    (get.Ai.variable.Yn 2 1)    (load.value.Xn 3)    (load.value.Xn 4)    (subtract)    (store.variable.Xn 1)    (load.value.Xn 1)    (load.pos.word 0)    (not.less.than.else 26)    (load.value.Xn 1)    (load.value.Yn 1)    (integer.divide)    (store.variable.Yn 4)    (load.value.Xn 1)    (load.value.Yn 1)    (modulus)    (store.variable.Yn 2)    (jump.to 32)    (load.pos.word 0)    (store.variable.Yn 4)    (load.pos.word 0)    (store.variable.Yn 2)    (put.Ai.value.Yn 5 4)    (put.Ai.value.Yn 4 3)    (put.Ai.nil 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart build_fill 5 formatter))(ASSEMBLE.CLAUSE ( build_fill 5 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 4 3)    (cut.proceed))(ASSEMBLE.CLAUSE ( build_fill 5 formatter ) 21    (get.Ai.constant 2 0)    (put.Ai.value.Xn 2 3)    (put.Ai.value.Xn 6 5)    (load.value.Xn 1)    (add.neg.word -1)    (store.variable.Xn 1)    (put.Ai.value.Xn 5 6)    (put.Ai.list 3)    (unify.local.Xn 6)    (unify.local.Xn 2)    (put.Ai.constant 2 0)    (execute build_fill 5 formatter))(ASSEMBLE.CLAUSE ( build_fill 5 formatter ) 19    (put.Ai.value.Xn 6 3)    (load.value.Xn 1)    (add.neg.word -1)    (store.variable.Xn 1)    (load.value.Xn 2)    (add.neg.word -1)    (store.variable.Xn 2)    (load.value.Xn 5)    (add.pos.word 1)    (store.variable.Xn 7)    (put.Ai.list 3)    (unify.value.Xn 7)    (unify.local.Xn 6)    (execute build_fill 5 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 105    (get.Ai.constant 1 -68)    (allocate)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 7)    (load.value.Yn 7)    (load.pos.word 0)    (less.than.else 26)    (load.pos.word 45)    (store.variable.Xn 1)    (call 10 put 1 si)    (load.value.Yn 7)    (minus)    (store.variable.Yn 6)    (jump.to 28)    (load.value.Yn 7)    (store.variable.Yn 6)    (put.Ai.variable.Yn 2 2)    (put.Ai.value.Yn 1 6)    (call 8 name 2 si)    (put.Ai.variable.Yn 2 4)    (put.Ai.value.Yn 1 2)    (call 8 length 2 si)    (load.value.Yn 3)    (load.pos.word 0)    (equal.to.else 54)    (put.Ai.void 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.unsafe.Yn 1 4)    (depart write_clist 3 formatter)    (load.value.Yn 3)    (load.value.Yn 4)    (not.less.than.else 86)    (load.value.Yn 3)    (load.value.Yn 4)    (subtract)    (store.variable.Yn 5)    (load.pos.word 48)    (store.variable.Xn 1)    (call 8 put 1 si)    (load.pos.word 46)    (store.variable.Xn 1)    (call 8 put 1 si)    (put.Ai.constant 2 48)    (put.Ai.value.Yn 1 5)    (call 7 write_many 2 formatter)    (put.Ai.unsafe.Yn 1 2)    (depart write_list 1 formatter)    (load.value.Yn 4)    (load.value.Yn 3)    (subtract)    (store.variable.Xn 1)    (put.Ai.variable.Yn 3 1)    (put.Ai.unsafe.Yn 2 2)    (call 4 write_clist 3 formatter)    (load.pos.word 46)    (store.variable.Xn 1)    (call 4 put 1 si)    (put.Ai.unsafe.Yn 1 1)    (depart write_list 1 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 29    (get.Ai.constant 1 -69)    (allocate)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 1)    (load.value.Yn 3)    (load.pos.word 1)    (less.than.else 20)    (load.pos.word 1)    (store.variable.Yn 2)    (jump.to 22)    (load.value.Yn 3)    (store.variable.Yn 2)    (put.Ai.value.Yn 3 2)    (put.Ai.constant 2 69)    (put.Ai.value.Yn 1 1)    (depart cprint 3 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 29    (get.Ai.constant 1 -71)    (allocate)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 1)    (load.value.Yn 3)    (load.pos.word 2)    (less.than.else 20)    (load.pos.word 2)    (store.variable.Yn 2)    (jump.to 22)    (load.value.Yn 3)    (store.variable.Yn 2)    (put.Ai.value.Yn 3 2)    (put.Ai.constant 2 71)    (put.Ai.value.Yn 1 1)    (depart cprint 3 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 47    (get.Ai.constant 1 -82)    (allocate)    (get.Ai.variable.Yn 4 1)    (load.value.Xn 2)    (load.pos.word 2)    (not.less.than.else 29)    (load.value.Xn 2)    (load.pos.word 36)    (not.greater.than.else 29)    (put.Ai.variable.Yn 4 3)    (put.Ai.symbol 1 upper)    (call 6 convert_to_radix 4 formatter)    (put.Ai.unsafe.Yn 1 3)    (depart write_list 1 formatter)    (load.choice.point)    (store.variable.Yn 2)    (either 5 46)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 505)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 7    (get.Ai.constant 1 -97)    (put.Ai.value.Xn 1 3)    (execute write 1 si))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 11    (get.Ai.constant 1 -99)    (get.Ai.constant 2 1)    (put.Ai.value.Xn 1 3)    (head.cut)    (execute put 1 si))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 9    (get.Ai.constant 1 -99)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (execute write_many 2 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 11    (get.Ai.constant 1 -100)    (get.Ai.constant 2 0)    (put.Ai.value.Xn 1 3)    (head.cut)    (execute write 1 si))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 95    (get.Ai.constant 1 -100)    (allocate)    (get.Ai.variable.Yn 2 4)    (get.Ai.variable.Yn 3 7)    (load.value.Yn 7)    (load.pos.word 0)    (less.than.else 26)    (load.pos.word 45)    (store.variable.Xn 1)    (call 10 put 1 si)    (load.value.Yn 7)    (minus)    (store.variable.Yn 6)    (jump.to 28)    (load.value.Yn 7)    (store.variable.Yn 6)    (put.Ai.variable.Yn 2 3)    (put.Ai.value.Yn 1 6)    (call 9 name 2 si)    (put.Ai.variable.Yn 2 5)    (put.Ai.value.Yn 1 3)    (call 9 length 2 si)    (load.value.Yn 4)    (load.value.Yn 5)    (not.less.than.else 74)    (load.value.Yn 4)    (load.value.Yn 5)    (subtract)    (store.variable.Yn 2)    (load.pos.word 48)    (store.variable.Xn 1)    (call 9 put 1 si)    (load.pos.word 46)    (store.variable.Xn 1)    (call 9 put 1 si)    (put.Ai.constant 2 48)    (put.Ai.value.Yn 1 2)    (call 9 write_many 2 formatter)    (put.Ai.value.Yn 1 6)    (depart write 1 si)    (load.value.Yn 5)    (load.value.Yn 4)    (subtract)    (store.variable.Yn 2)    (put.Ai.variable.Yn 3 1)    (put.Ai.unsafe.Yn 2 3)    (put.Ai.value.Yn 1 2)    (call 4 write_list 3 formatter)    (load.pos.word 46)    (store.variable.Xn 1)    (call 4 put 1 si)    (put.Ai.unsafe.Yn 1 1)    (depart write_list 1 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 29    (get.Ai.constant 1 -101)    (allocate)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 1)    (load.value.Yn 3)    (load.pos.word 1)    (less.than.else 20)    (load.pos.word 1)    (store.variable.Yn 2)    (jump.to 22)    (load.value.Yn 3)    (store.variable.Yn 2)    (put.Ai.value.Yn 3 2)    (put.Ai.constant 2 101)    (put.Ai.value.Yn 1 1)    (depart cprint 3 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 12    (get.Ai.constant 1 -102)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 102)    (execute cprint 3 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 29    (get.Ai.constant 1 -103)    (allocate)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 1)    (load.value.Yn 3)    (load.pos.word 2)    (less.than.else 20)    (load.pos.word 2)    (store.variable.Yn 2)    (jump.to 22)    (load.value.Yn 3)    (store.variable.Yn 2)    (put.Ai.value.Yn 3 2)    (put.Ai.constant 2 103)    (put.Ai.value.Yn 1 1)    (depart cprint 3 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 4    (get.Ai.constant 1 -105)    (proceed))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 7    (get.Ai.constant 1 -107)    (put.Ai.value.Xn 1 3)    (execute write_canonical 1 si))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 7    (get.Ai.constant 1 -112)    (put.Ai.value.Xn 1 3)    (execute print 1 si))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 7    (get.Ai.constant 1 -113)    (put.Ai.value.Xn 1 3)    (execute writeq 1 si))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 47    (get.Ai.constant 1 -114)    (allocate)    (get.Ai.variable.Yn 4 1)    (load.value.Xn 2)    (load.pos.word 2)    (not.less.than.else 29)    (load.value.Xn 2)    (load.pos.word 36)    (not.greater.than.else 29)    (put.Ai.variable.Yn 4 3)    (put.Ai.symbol 1 lower)    (call 6 convert_to_radix 4 formatter)    (put.Ai.unsafe.Yn 1 3)    (depart write_list 1 formatter)    (load.choice.point)    (store.variable.Yn 2)    (either 5 46)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 505)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 11    (get.Ai.constant 1 -115)    (get.Ai.constant 2 0)    (put.Ai.value.Xn 1 3)    (head.cut)    (execute write_list 1 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 10    (get.Ai.constant 1 -115)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (put.Ai.void 3)    (execute write_list 3 formatter))(ASSEMBLE.CLAUSE ( write_to_user 4 formatter ) 7    (get.Ai.constant 1 -119)    (put.Ai.value.Xn 1 3)    (execute write 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 23    (get.Ai.constant 1 -68)    (get.Ai.constant 2 0)    (allocate)    (get.Ai.variable.Yn 3 1)    (get.Ai.variable.Yn 4 2)    (head.cut)    (put.Ai.value.Yn 1 1)    (call 5 write 1 si)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart commas 2 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 44    (get.Ai.constant 1 -68)    (allocate)    (get.Ai.variable.Yn 2 6)    (get.Ai.variable.Yn 3 5)    (get.Ai.variable.Yn 4 1)    (put.Ai.variable.Yn 4 3)    (put.Ai.value.Yn 3 5)    (put.Ai.value.Yn 2 6)    (put.Ai.constant 1 -100)    (call 9 write_to_null 4 formatter)    (put.Ai.variable.Yn 2 4)    (put.Ai.value.Yn 1 6)    (call 8 ten_power 2 formatter)    (load.value.Yn 5)    (load.value.Yn 4)    (integer.divide)    (store.variable.Xn 1)    (put.Ai.variable.Yn 2 2)    (call 6 commas 2 formatter)    (load.value.Yn 3)    (load.value.Yn 2)    (add)    (store.value.Yn 1)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 12    (get.Ai.constant 1 -69)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 69)    (execute len 4 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 12    (get.Ai.constant 1 -71)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 71)    (execute len 4 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 31    (get.Ai.constant 1 -82)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (allocate)    (get.Ai.variable.Yn 4 1)    (load.value.Xn 1)    (load.pos.word 2)    (not.less.than.else 26)    (load.value.Xn 1)    (load.pos.word 36)    (not.greater.than.else 26)    (put.Ai.value.Yn 3 1)    (depart find_radix_length 3 formatter)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 0)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 10    (get.Ai.constant 1 -97)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (execute write 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 14    (get.Ai.constant 1 -99)    (get.Ai.constant 2 1)    (get.Ai.constant 4 1)    (load.value.Xn 3)    (load.pos.word 32)    (greater.than)    (cut.proceed))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 14    (get.Ai.constant 1 -99)    (get.Ai.constant 2 1)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (head.cut)    (execute put 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 10    (get.Ai.constant 1 -99)    (get.Ai.value.Xn 4 2)    (load.value.Xn 3)    (load.pos.word 32)    (greater.than)    (cut.proceed))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 12    (get.Ai.constant 1 -99)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.constant 4 0)    (execute write_many 2 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 14    (get.Ai.constant 1 -100)    (get.Ai.constant 2 0)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (head.cut)    (execute write 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 56    (get.Ai.constant 1 -100)    (allocate)    (get.Ai.variable.Yn 2 5)    (get.Ai.variable.Yn 3 7)    (get.Ai.variable.Yn 4 1)    (put.Ai.variable.Yn 1 6)    (call 10 current_output 1 si)    (put.Ai.variable.Yn 2 3)    (put.Ai.value.Yn 1 6)    (call 10 line_position 2 si)    (put.Ai.value.Yn 1 7)    (call 9 write 1 si)    (put.Ai.variable.Yn 2 4)    (put.Ai.unsafe.Yn 1 6)    (call 8 line_position 2 si)    (load.value.Yn 5)    (load.value.Yn 4)    (subtract)    (load.value.Yn 3)    (add)    (store.variable.Yn 2)    (load.value.Yn 2)    (load.pos.word 0)    (less.than.else 52)    (load.pos.word 1)    (store.value.Yn 1)    (check.heap)    (progress)    (load.value.Yn 2)    (add.pos.word 2)    (store.value.Yn 1)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 12    (get.Ai.constant 1 -101)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 101)    (execute len 4 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 12    (get.Ai.constant 1 -102)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 102)    (execute len 4 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 12    (get.Ai.constant 1 -103)    (put.Ai.value.Xn 1 3)    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 103)    (execute len 4 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 7    (get.Ai.constant 1 -105)    (get.Ai.constant 4 0)    (proceed))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 10    (get.Ai.constant 1 -107)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (execute write_canonical 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 10    (get.Ai.constant 1 -112)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (execute print 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 10    (get.Ai.constant 1 -113)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (execute writeq 1 si))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 31    (get.Ai.constant 1 -114)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (allocate)    (get.Ai.variable.Yn 4 1)    (load.value.Xn 1)    (load.pos.word 2)    (not.less.than.else 26)    (load.value.Xn 1)    (load.pos.word 36)    (not.greater.than.else 26)    (put.Ai.value.Yn 3 1)    (depart find_radix_length 3 formatter)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 0)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 14    (get.Ai.constant 1 -115)    (get.Ai.constant 2 0)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (head.cut)    (execute write_list 1 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 13    (get.Ai.constant 1 -115)    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (get.Ai.constant 4 0)    (put.Ai.void 3)    (execute write_list 3 formatter))(ASSEMBLE.CLAUSE ( write_to_null 4 formatter ) 10    (get.Ai.constant 1 -119)    (put.Ai.value.Xn 1 3)    (get.Ai.constant 4 0)    (execute write 1 si))(ASSEMBLE.CLAUSE ( check_int 4 formatter ) 31    (get.Ai.constant 1 NIL)    (get.Ai.constant 2 0)    (get.Ai.nil 3)    (allocate)    (get.Ai.variable.Yn 4 1)    (head.cut)    (load.choice.point)    (store.variable.Yn 2)    (either 5 30)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 501)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_int 4 formatter ) 17    (get.Ai.list 1)    (allocate)    (unify.variable.Yn 1)    (unify.variable.Xn 1)    (get.Ai.value.Yn 2 1)    (get.Ai.value.Xn 3 1)    (put.Ai.value.Yn 1 1)    (is.a 24)    (load.value.Yn 1)    (load.pos.word 0)    (not.less.than)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_int 4 formatter ) 27    (get.Ai.constant 2 0)    (get.Ai.nil 3)    (allocate)    (get.Ai.variable.Yn 4 1)    (load.choice.point)    (store.variable.Yn 2)    (either 5 26)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 502)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 29    (get.Ai.nil 2)    (get.Ai.constant 3 0)    (get.Ai.nil 4)    (allocate)    (get.Ai.variable.Yn 5 1)    (head.cut)    (load.choice.point)    (store.variable.Yn 2)    (either 5 28)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 501)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 11    (get.Ai.constant 1 any)    (get.Ai.list 2)    (unify.variable.Xn 2)    (unify.variable.Xn 1)    (get.Ai.value.Xn 3 2)    (get.Ai.value.Xn 4 1)    (proceed))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 13    (get.Ai.constant 1 atom)    (get.Ai.list 2)    (unify.variable.Xn 1)    (unify.variable.Xn 2)    (get.Ai.value.Xn 3 1)    (get.Ai.value.Xn 4 2)    (is.a 128)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 24    (get.Ai.constant 1 char)    (get.Ai.list 2)    (allocate)    (unify.variable.Yn 1)    (unify.variable.Xn 1)    (get.Ai.value.Yn 3 1)    (get.Ai.value.Xn 4 1)    (put.Ai.value.Yn 1 1)    (is.a 24)    (load.pos.word 0)    (load.value.Yn 1)    (not.greater.than)    (load.value.Yn 1)    (load.pos.word 256)    (less.than)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 13    (get.Ai.constant 1 flp)    (get.Ai.list 2)    (unify.variable.Xn 1)    (unify.variable.Xn 2)    (get.Ai.value.Xn 3 1)    (get.Ai.value.Xn 4 2)    (is.a 32)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 19    (get.Ai.constant 1 flp)    (get.Ai.list 2)    (allocate)    (unify.variable.Yn 2)    (unify.variable.Xn 1)    (get.Ai.variable.Yn 3 1)    (get.Ai.value.Xn 4 1)    (put.Ai.value.Yn 1 2)    (is.a 24)    (load.value.Yn 2)    (float)    (store.value.Yn 1)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 13    (get.Ai.constant 1 int)    (get.Ai.list 2)    (unify.variable.Xn 1)    (unify.variable.Xn 2)    (get.Ai.value.Xn 3 1)    (get.Ai.value.Xn 4 2)    (is.a 24)    (check.heap)    (proceed))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 31    (get.Ai.constant 1 list)    (get.Ai.list 2)    (allocate)    (unify.variable.Yn 1)    (unify.variable.Xn 1)    (get.Ai.value.Yn 3 1)    (get.Ai.value.Xn 4 1)    (put.Ai.value.Yn 1 1)    (is.a 254)    (either 4 25)    (put.Ai.value.Yn 1 1)    (get.Ai.list 1)    (unify.void 2)    (check.heap)    (progress)    (or.finally)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 NIL)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( check_type 5 formatter ) 27    (get.Ai.constant 3 0)    (get.Ai.nil 4)    (allocate)    (get.Ai.variable.Yn 5 1)    (load.choice.point)    (store.variable.Yn 2)    (either 5 26)    (put.Ai.value.Yn 1 1)    (is.a 1)    (load.value.Yn 2)    (cut.to.choice.point)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 502)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( find_radix_length 3 formatter ) 7    (get.Ai.constant 2 0)    (get.Ai.constant 3 1)    (cut.proceed))(ASSEMBLE.CLAUSE ( find_radix_length 3 formatter ) 12    (put.Ai.value.Xn 4 3)    (load.value.Xn 2)    (load.pos.word 0)    (greater.than)    (head.cut)    (put.Ai.constant 3 0)    (execute find_radix_len 4 formatter))(ASSEMBLE.CLAUSE ( find_radix_length 3 formatter ) 20    (allocate)    (get.Ai.variable.Yn 3 1)    (load.value.Xn 2)    (minus)    (store.variable.Xn 2)    (put.Ai.variable.Yn 4 2)    (put.Ai.constant 3 0)    (call 5 find_radix_len 4 formatter)    (load.value.Yn 2)    (add.pos.word 1)    (store.value.Yn 1)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( find_radix_len 4 formatter ) 6    (get.Ai.constant 2 0)    (get.Ai.value.Xn 4 3)    (cut.proceed))(ASSEMBLE.CLAUSE ( find_radix_len 4 formatter ) 10    (load.value.Xn 2)    (load.value.Xn 1)    (integer.divide)    (store.variable.Xn 2)    (load.value.Xn 3)    (add.pos.word 1)    (store.variable.Xn 3)    (execute find_radix_len 4 formatter))(ASSEMBLE.CLAUSE ( convert_to_radix 4 formatter ) 54    (allocate)    (get.Ai.variable.Yn 1 1)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 3)    (get.Ai.variable.Yn 4 4)    (load.value.Yn 3)    (load.pos.word 0)    (equal.to.else 25)    (put.Ai.value.Yn 1 4)    (get.Ai.list 1)    (unify.constant 48)    (unify.nil)    (check.heap)    (progress)    (load.value.Yn 3)    (load.pos.word 0)    (less.than.else 46)    (load.value.Yn 3)    (minus)    (store.variable.Xn 3)    (put.Ai.value.Yn 1 4)    (get.Ai.list 1)    (unify.constant 45)    (unify.variable.Xn 4)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart convert_to_radix_1 4 formatter)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart convert_to_radix_1 4 formatter))(ASSEMBLE.CLAUSE ( convert_to_radix_1 4 formatter ) 8    (get.Ai.constant 1 upper)    (put.Ai.value.Xn 1 3)    (put.Ai.nil 3)    (execute convert_to_upper_radix 4 formatter))(ASSEMBLE.CLAUSE ( convert_to_radix_1 4 formatter ) 8    (get.Ai.constant 1 lower)    (put.Ai.value.Xn 1 3)    (put.Ai.nil 3)    (execute convert_to_lower_radix 4 formatter))(ASSEMBLE.CLAUSE ( convert_to_upper_radix 4 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 4 3)    (cut.proceed))(ASSEMBLE.CLAUSE ( convert_to_upper_radix 4 formatter ) 47    (allocate)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 3)    (get.Ai.variable.Yn 4 5)    (load.value.Xn 1)    (load.value.Yn 2)    (integer.divide)    (store.variable.Yn 1)    (load.value.Xn 1)    (load.value.Yn 2)    (modulus)    (add.neg.word -10)    (store.variable.Yn 6)    (load.value.Yn 6)    (load.pos.word 0)    (less.than.else 33)    (load.value.Yn 6)    (load.pos.word 48)    (add.pos.word 10)    (add)    (store.variable.Yn 4)    (jump.to 38)    (load.value.Yn 6)    (load.pos.word 65)    (add)    (store.variable.Yn 4)    (put.Ai.value.Yn 4 5)    (put.Ai.list 3)    (unify.value.Yn 4)    (unify.local.Yn 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart convert_to_upper_radix 4 formatter))(ASSEMBLE.CLAUSE ( convert_to_lower_radix 4 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 4 3)    (cut.proceed))(ASSEMBLE.CLAUSE ( convert_to_lower_radix 4 formatter ) 47    (allocate)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 3)    (get.Ai.variable.Yn 4 5)    (load.value.Xn 1)    (load.value.Yn 2)    (integer.divide)    (store.variable.Yn 1)    (load.value.Xn 1)    (load.value.Yn 2)    (modulus)    (add.neg.word -10)    (store.variable.Yn 6)    (load.value.Yn 6)    (load.pos.word 0)    (less.than.else 33)    (load.value.Yn 6)    (load.pos.word 48)    (add.pos.word 10)    (add)    (store.variable.Yn 4)    (jump.to 38)    (load.value.Yn 6)    (load.pos.word 97)    (add)    (store.variable.Yn 4)    (put.Ai.value.Yn 4 5)    (put.Ai.list 3)    (unify.value.Yn 4)    (unify.local.Yn 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart convert_to_lower_radix 4 formatter))(ASSEMBLE.CLAUSE ( write_many 2 formatter ) 4    (get.Ai.constant 1 0)    (cut.proceed))(ASSEMBLE.CLAUSE ( write_many 2 formatter ) 18    (allocate)    (get.Ai.variable.Yn 1 2)    (get.Ai.variable.Yn 2 1)    (put.Ai.value.Yn 1 1)    (call 5 put 1 si)    (load.value.Yn 2)    (add.neg.word -1)    (store.variable.Xn 1)    (put.Ai.value.Yn 2 1)    (depart write_many 2 formatter))(ASSEMBLE.CLAUSE ( write_list 1 formatter ) 4    (get.Ai.constant 1 NIL)    (proceed))(ASSEMBLE.CLAUSE ( write_list 1 formatter ) 11    (get.Ai.list 1)    (unify.variable.Xn 1)    (allocate)    (unify.variable.Yn 1)    (call 4 put 1 si)    (put.Ai.value.Yn 1 1)    (depart write_list 1 formatter))(ASSEMBLE.CLAUSE ( write_list 3 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 3 2)    (cut.proceed))(ASSEMBLE.CLAUSE ( write_list 3 formatter ) 3    (get.Ai.nil 2)    (get.Ai.nil 3)    (cut.proceed))(ASSEMBLE.CLAUSE ( write_list 3 formatter ) 23    (get.Ai.list 2)    (unify.variable.Xn 2)    (allocate)    (unify.variable.Yn 2)    (get.Ai.variable.Yn 3 3)    (load.value.Xn 1)    (add.neg.word -1)    (store.variable.Yn 1)    (put.Ai.value.Xn 1 2)    (call 6 put 1 si)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart write_list 3 formatter))(ASSEMBLE.CLAUSE ( write_clist 3 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 3 2)    (cut.proceed))(ASSEMBLE.CLAUSE ( write_clist 3 formatter ) 58    (allocate)    (get.Ai.variable.Yn 1 5)    (get.Ai.variable.Yn 2 6)    (get.Ai.variable.Yn 3 3)    (load.value.Yn 5)    (load.pos.word 3)    (modulus)    (store.variable.Yn 7)    (load.value.Yn 7)    (load.pos.word 0)    (equal.to.else 24)    (load.pos.word 3)    (store.variable.Yn 4)    (jump.to 26)    (load.value.Yn 7)    (store.variable.Yn 4)    (put.Ai.variable.Yn 3 2)    (put.Ai.value.Yn 2 6)    (put.Ai.value.Yn 1 4)    (call 8 cwrite_list 3 formatter)    (load.value.Yn 5)    (load.value.Yn 4)    (subtract)    (store.variable.Yn 1)    (load.value.Yn 1)    (load.pos.word 0)    (equal.to.else 46)    (jump.to 52)    (load.pos.word 44)    (store.variable.Xn 1)    (call 6 put 1 si)    (put.Ai.value.Yn 3 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart write_clist 3 formatter))(ASSEMBLE.CLAUSE ( cwrite_list 3 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 3 2)    (cut.proceed))(ASSEMBLE.CLAUSE ( cwrite_list 3 formatter ) 3    (get.Ai.nil 2)    (get.Ai.nil 3)    (cut.proceed))(ASSEMBLE.CLAUSE ( cwrite_list 3 formatter ) 23    (get.Ai.list 2)    (unify.variable.Xn 2)    (allocate)    (unify.variable.Yn 2)    (get.Ai.variable.Yn 3 3)    (load.value.Xn 1)    (add.neg.word -1)    (store.variable.Yn 1)    (put.Ai.value.Xn 1 2)    (call 6 put 1 si)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart cwrite_list 3 formatter))(ASSEMBLE.CLAUSE ( commas 2 formatter ) 37    (allocate)    (get.Ai.variable.Yn 1 2)    (get.Ai.variable.Yn 2 1)    (load.value.Yn 2)    (load.constant 999999)    (greater.than.else 20)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 2)    (check.heap)    (progress)    (load.value.Yn 2)    (load.pos.word 999)    (greater.than.else 32)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 1)    (check.heap)    (progress)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 0)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( ten_power 2 formatter ) 7    (put.Ai.value.Xn 3 2)    (put.Ai.constant 2 1)    (execute ten_power 3 formatter))(ASSEMBLE.CLAUSE ( ten_power 3 formatter ) 6    (get.Ai.constant 1 0)    (get.Ai.value.Xn 3 2)    (cut.proceed))(ASSEMBLE.CLAUSE ( ten_power 3 formatter ) 11    (load.value.Xn 1)    (add.neg.word -1)    (store.variable.Xn 1)    (load.value.Xn 2)    (load.pos.word 10)    (multiply)    (store.variable.Xn 2)    (execute ten_power 3 formatter))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 43)    (get.Ai.symbol 2 mark)    (get.Ai.list 3)    (unify.constant -43)    (unify.list)    (unify.constant 8)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 none)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 68)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -68)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 int)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 69)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -69)    (unify.list)    (unify.constant 6)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 flp)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 71)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -71)    (unify.list)    (unify.constant 6)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 flp)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 78)    (get.Ai.symbol 2 misc)    (get.Ai.list 3)    (unify.constant -78)    (unify.list)    (unify.constant 1)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 none)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 82)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -82)    (unify.list)    (unify.constant 8)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 int)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 97)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -97)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 atom)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 99)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -99)    (unify.list)    (unify.constant 1)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 char)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 100)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -100)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 int)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 101)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -101)    (unify.list)    (unify.constant 6)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 flp)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 102)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -102)    (unify.list)    (unify.constant 6)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 flp)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 103)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -103)    (unify.list)    (unify.constant 6)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 flp)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 105)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -105)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 any)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 107)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -107)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 any)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 110)    (get.Ai.symbol 2 mark)    (get.Ai.list 3)    (unify.constant -110)    (unify.list)    (unify.constant 1)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 none)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 112)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -112)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 any)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 113)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -113)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 any)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 114)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -114)    (unify.list)    (unify.constant 8)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 int)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 115)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -115)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 list)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 116)    (get.Ai.symbol 2 fill)    (get.Ai.list 3)    (unify.constant -116)    (unify.list)    (unify.constant 32)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 none)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 119)    (get.Ai.symbol 2 atom)    (get.Ai.list 3)    (unify.constant -119)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 any)    (get.Ai.symbol 6 simple)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 124)    (get.Ai.symbol 2 mark)    (get.Ai.list 3)    (unify.constant -124)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 none)    (get.Ai.symbol 6 numeric)    (proceed))(ASSEMBLE.CLAUSE ( specifier 6 formatter ) 21    (get.Ai.constant 1 126)    (get.Ai.symbol 2 misc)    (get.Ai.list 3)    (unify.constant -126)    (unify.list)    (unify.constant 0)    (unify.variable.Xn 1)    (get.Ai.value.Xn 4 1)    (get.Ai.symbol 5 none)    (get.Ai.symbol 6 simple)    (proceed))STOP