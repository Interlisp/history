(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 100)    (get.Ai.symbol 2 too% many% open% streams% when% trying% to% open% %~q)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 101)    (get.Ai.symbol 2 no% buffer% space% for% stream% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 102)    (get.Ai.symbol 2 trying% to% read% beyond% the% end% of% stream% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 103)    (get.Ai.symbol 2 %~q% is% not% a% file% name)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 104)    (get.Ai.symbol 2 %~q% is% not% a% valid% stream% number)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 106)    (get.Ai.symbol 2 no% permission% to% access% file% %~q)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 107)    (get.Ai.symbol 2 %~q% %-% no% such% file% or% directory)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 108)    (get.Ai.symbol 2 too% many% ungets% on% stream% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 109)    (get.Ai.symbol 2 cannot% create% saved% state% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 110)    (get.Ai.symbol 2 failed% to% complete% saved% file% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 111)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% in% call% to% close%/1)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 112)    (get.Ai.symbol 2 flush_output%(%'%$stream%'%(%~q%,_%)%)%:% not% an% open% output% stream)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 113)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% in% call% to% character_count%/2)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 114)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% in% call% to% line_count%/2)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 115)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% in% call% to% line_position%/2)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 116)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% used% for% input)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 117)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% used% for% output)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 118)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% used% for% input)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 119)    (get.Ai.symbol 2 invalid% stream%:% %'%$stream%'%(%~q%,% _%)% used% for% output)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 120)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % Not% file%'s% owner%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 121)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % No% such% device%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 122)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % Bad% file% number%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 123)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % File% exists%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 124)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % Not% a% directory%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 125)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % File% is% a% directory%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 126)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % File% table% overflow%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 127)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % Text% file% busy%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 128)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % Insufficient% space%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 129)    (get.Ai.symbol 2 Cannot% open% file% %~q%.% % Read%-only% file% system%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 130)    (get.Ai.symbol 2 Cannot% open% file% %~q%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 131)    (get.Ai.symbol 2 %~q% %-% cannot% find% stream% position% of% user%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 140)    (get.Ai.symbol 2 Cannot% find% library% package% %~q%.)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 141)    (get.Ai.symbol 2 Illegal% character% ASCII% %~d% found% in% quoted% token%.)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 142)    (get.Ai.symbol 2 stream_position%/3% %-% stream% %~q% connected% to% a% terminal%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 143)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% valid% stream%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 144)    (get.Ai.symbol 2 stream_position%/3% %-% invalid% seek% offset%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 145)    (get.Ai.symbol 2 QP_sgetc% %-% invalid% input% stream%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 146)    (get.Ai.symbol 2 QP_sputc% %-% invalid% output% stream%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 147)    (get.Ai.symbol 2 QP_sputs% %-% invalid% output% stream%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 148)    (get.Ai.symbol 2 stream_position%/3% %-% invalid% stream%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 149)    (get.Ai.symbol 2 stream_position%/3% %-% invalid% stream%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 150)    (get.Ai.symbol 2 Invalid% file% specification%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 151)    (get.Ai.symbol 2 Variable% given% as% %+Stream% argument%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 152)    (get.Ai.symbol 2 Can%'t% close% file% %~q)    (get.Ai.symbol 3 failable_io)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 153)    (get.Ai.symbol 2 invalid% stream%:% %~q% used% for% output)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 154)    (get.Ai.symbol 2 invalid% stream%:% %~q% used% for% input)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 155)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% valid% stream)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 156)    (get.Ai.symbol 2 %~q% %-% too% many% open% streams%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 157)    (get.Ai.symbol 2 %~q% %-% too% many% open% I%/O% channels%:% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 158)    (get.Ai.symbol 2 %~q% %-% %~q% should% be% one% of% %{read%,% write%,% append%})    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 160)    (get.Ai.symbol 2 unable% to% open% help% index% file% %~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 161)    (get.Ai.symbol 2 unable% to% create% temp% file% for% help% menu% %~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 162)    (get.Ai.symbol 2 unable% to% fork% a% new% shell%,% too% many% processes)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 163)    (get.Ai.symbol 2 unable% to% exec% a% new% shell)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 170)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% legal% flag% name)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 171)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% legal% value% for% this% flag)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 182)    (get.Ai.symbol 2 %~q% %-% %~q% is% neither% a% stream% nor% a% file% specification)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 185)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% valid% input% stream)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 186)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% valid% output% stream)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 187)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% valid% stream)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 188)    (get.Ai.symbol 2 Quoted% item%,% starting% with% %(%~w%)%,% is% not% closed)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 189)    (get.Ai.symbol 2 Comment%,% starting% with% %(%~w%)%,% is% not% closed)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 200)    (get.Ai.symbol 2 Stack% overflow%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 201)    (get.Ai.symbol 2 Heap% overflow% at% execute%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 202)    (get.Ai.symbol 2 Trail% overflow%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 203)    (get.Ai.symbol 2 Pushdown% list% overflow%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 204)    (get.Ai.symbol 2 Symbol% table% full% %(trying% to% add% a% new% atom%)%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 205)    (get.Ai.symbol 2 Symbol% table% full% %(trying% to% add% a% new% procedure%)%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 206)    (get.Ai.symbol 2 Prolog% database% %(codespace%)% full%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 207)    (get.Ai.symbol 2 out% of% space%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 208)    (get.Ai.symbol 2 Heap% overflow% at% check_heap%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 209)    (get.Ai.symbol 2 Heap% overflow% at% functor%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 300)    (get.Ai.symbol 2 %~q% is% not% a% grammar% rule% head)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 301)    (get.Ai.symbol 2 %~q% is% not% a% grammar% rule% body)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 302)    (get.Ai.symbol 2 invalid% arithmetic% expression%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 303)    (get.Ai.symbol 2 variable% is% not% bound% to% a% number%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 320)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% an% atom)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 321)    (get.Ai.symbol 2 %~q% %-% precedence% %~q% is% not% 0%.%.1200)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 322)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% known% operator% type)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 323)    (get.Ai.symbol 2 %~q% %-% %~q% is% a% built%-in% operator)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 324)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% list% of% atoms)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 330)    (get.Ai.symbol 2 attempting% to% assert% clause% for% static% procedure%%	%~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 331)    (get.Ai.symbol 2 %~q% %-% illegal% clause% head)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 332)    (get.Ai.symbol 2 attempting% to% use% %~q% on% static% procedure%%	%~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 333)    (get.Ai.symbol 2 attempting% to% use% clause%/2% on% static% procedure%%	%~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 334)    (get.Ai.symbol 2 %~q% %-% declaration% is% preceded% by% clauses% for% %~q)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 335)    (get.Ai.symbol 2 illegal% goal%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 336)    (get.Ai.symbol 2 built%-in% predicate% %~q% declared% dynamic)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 337)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% legal% predicate% specification)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 338)    (get.Ai.symbol 2 %~q% %-% insufficiently% instantiated)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 340)    (get.Ai.symbol 2 variable% given% as% goal%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 341)    (get.Ai.symbol 2 %~q% %-% argument% is% not% an% atom)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 342)    (get.Ai.symbol 2 variable% argument% given% to% call%/1%~i)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 343)    (get.Ai.symbol 2 module% name% is% not% an% atom%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 344)    (get.Ai.symbol 2 %~q%%	Module% declaration% must% appear% at% the% top% of% a% file)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 345)    (get.Ai.symbol 2 %~q%%	second% argument% is% not% a% valid% list)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 350)    (get.Ai.symbol 2 %~q% %-% argument% is% a% variable)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 351)    (get.Ai.symbol 2 %~q% %-%~n%	argument% is% not% the% name% of% a% file% which% was% opened% by%~n%	see%/1% or% tell%/1)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 352)    (get.Ai.symbol 2 illegal% file% name%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 353)    (get.Ai.symbol 2 variable% given% as% clause%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 354)    (get.Ai.symbol 2 attempting% to% redefine% built%-in% predicate% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 356)    (get.Ai.symbol 2 cannot% reload% part% of% a% multifile% procedure%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 357)    (get.Ai.symbol 2 %!% is% not% allowed% in% if%-part% of% a% conditional% %(%-%>%)% or% in% a% %~n% negation% %(%\%+%)%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 358)    (get.Ai.symbol 2 failed% to% assert% clause%:% %~n% %~q)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 359)    (get.Ai.symbol 2 File% %~q% was% closed% while% it% was% being% %~qed)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 361)    (get.Ai.symbol 2 %~q% %-% this% predicate% is% not% implemented)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 362)    (get.Ai.symbol 2 %~q% %-% illegal% context% for% declaration)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 363)    (get.Ai.symbol 2 meta_predicate%(%~q%)% %-% declaration% not% at% beginning% of% module)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 364)    (get.Ai.symbol 2 meta_predicate%(%~q%)% %-% variable% %~q% found% in% declaration)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 365)    (get.Ai.symbol 2 meta_predicate%(%~q%)% %-% invalid% declaration%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 370)    (get.Ai.symbol 2 %~q% %-% 2nd% argument% must% be% an% integer)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 375)    (get.Ai.symbol 2 %~q%:% No% such% directory)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 376)    (get.Ai.symbol 2 %~q% %-% you% are% using% the% wrong% operating% system%!)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 380)    (get.Ai.symbol 2 invalid% leash% specification%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 381)    (get.Ai.symbol 2 %~q% %-% you% can%'t% put% a% spypoint% on% a% built%-in% predicate)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 390)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% legal% predicate% specification)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 391)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% a% legal% file% specification)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 392)    (get.Ai.symbol 2 %~q% %-% argument% is% a% variable)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 393)    (get.Ai.symbol 2 cannot% open% file%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 394)    (get.Ai.symbol 2 cannot% expand% relative% file% specification%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 395)    (get.Ai.symbol 2 %~q% %-% illegal% arguments)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 400)    (get.Ai.symbol 2 failed% to% compile%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 401)    (get.Ai.symbol 2 failed% to% compile% head% of% clause%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 402)    (get.Ai.symbol 2 failed% to% compile% goal%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 403)    (get.Ai.symbol 2 more% than% 512% temporary% variables% in% a% clause%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 404)    (get.Ai.symbol 2 more% than% 255% permanent% variables% in% a% clause%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 406)    (get.Ai.symbol 2 more% than% 32768% bytes% of% code% for% a% clause%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 407)    (get.Ai.symbol 2 cannot% obey% command%:% %:%-% %~q)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 408)    (get.Ai.symbol 2 Foreign% interface%,% missing% foreign_file%(%~q%,% _%)% fact)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 409)    (get.Ai.symbol 2 Foreign% interface%,% missing% foreign%(%~q%,% _%)% fact)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 410)    (get.Ai.symbol 2 Foreign% interface%,% procedure% already% loaded%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 411)    (get.Ai.symbol 2 Foreign% interface%,% invalid% specification%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 412)    (get.Ai.symbol 2 Foreign% interface%,% intermediate% use% of% Unix% %"cc%"% failed% %(%~q%))    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 413)    (get.Ai.symbol 2 Foreign% interface%,% call% to% Unix% %"ld%"% failed%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 414)    (get.Ai.symbol 2 Foreign% interface%,% cannot% recover% symbol% table% from% saved% state%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 415)    (get.Ai.symbol 2 Foreign% interface%,% cannot% open% final% object% file% %~q% %(%~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 416)    (get.Ai.symbol 2 Foreign% interface%,% cannot% read% header% of% final% object% file% %~q% %(%~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 417)    (get.Ai.symbol 2 Foreign% interface%,% unable% to% allocate% memory% for% program%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 418)    (get.Ai.symbol 2 Foreign% interface%,% read% failure% while% loading% final% object% file% %~q% %(%~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 419)    (get.Ai.symbol 2 Foreign% interface%,% cannot% find% linkage% table% %~q% in% loaded% program)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 420)    (get.Ai.symbol 2 Foreign% interface%,% cannot% open% saved% state% %~q% %(%~q%)% to% read% symbols)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 421)    (get.Ai.symbol 2 Foreign% interface%,% cannot% write% symbol% file% %~q% %(%~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 422)    (get.Ai.symbol 2 Foreign% interface%,% failed% to% extract% symbols% from% saved% state% %~q% %(%~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 423)    (get.Ai.symbol 2 Foreign% interface%,% cannot% adjust% protection% of% symbol% file% %~q% %(%~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 424)    (get.Ai.symbol 2 Foreign% interface%,% invalid% language%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 425)    (get.Ai.symbol 2 INTERNAL% FAULT% %-% VMS% extended% virtual% memory% while% loading% foreign% program% %(moved% from% %~q% to% %~q%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 426)    (get.Ai.symbol 2 Foreign% interface%,% unable% to% obtain% required% data% from% %~q%.EXE% file% %(status% %~q%))    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 427)    (get.Ai.symbol 2 Foreign% interface%,% cannot% read% generated% %~q%.STB% file% %(status% %~q%))    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 428)    (get.Ai.symbol 2 Foreign% interface%,% LINK% operation% failed%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 429)    (get.Ai.symbol 2 Foreign% interface%,% cannot% find% symbol% %~q% in% program)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 430)    (get.Ai.symbol 2 Foreign% interface%,% error% while% trying% to% find% symbols% in% program%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 431)    (get.Ai.symbol 2 Foreign% interface%,% %~q% both% claim% to% define% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 432)    (get.Ai.symbol 2 Foreign% interface%,% inconsistent% specifications%~n% % % %~q%~n% % % %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 433)    (get.Ai.symbol 2 Foreign% interface%,% can%'t% redefine% built%-in% predicate%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 434)    (get.Ai.symbol 2 Foreign% interface%,% invalid% symbol% %~q% in% foreign_file%/2% fact%:%~n% % % %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 435)    (get.Ai.symbol 2 Foreign% interface%,% invalid% string% specification%:% %~q% %~nBad% string% length)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 436)    (get.Ai.symbol 2 Foreign% interface%,% Cannot% load% duplicate% %"minimal%"% file% name% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 437)    (get.Ai.symbol 2 Foreign% interface%,% Code% tail% grew% too% much% before% loading% foreign% code%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 438)    (get.Ai.symbol 2 Foreign% interface%,% Cannot% reload% foreign% file% %~q% %-% incomplete% call% to% %"bind%")    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 439)    (get.Ai.symbol 2 Foreign% interface%,% exceeded% maximum% text% space% size%:% %~d% %>% %~d)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 440)    (get.Ai.symbol 2 Foreign% interface%,% exceeded% maximum% data% space% size%:% %~d% %>% %~d)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 441)    (get.Ai.symbol 2 Foreign% interface%,% foreign% file% %~q% not% found)    (get.Ai.symbol 3 true)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 442)    (get.Ai.symbol 2 Foreign% interface%,% foreign% file% containing% %~q% needs% to% be% reloaded% %-% retry% saved% state)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 443)    (get.Ai.symbol 2 Foreign% interface%,% invalid% string% specification%:% %~q% %~nMissing% string% length)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 444)    (get.Ai.symbol 2 Foreign% interface%,% call% to% Domain%/IX% %"bind%"% failed%~i)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 450)    (get.Ai.symbol 2 module%(%~q%)% %-% variable% as% module% name)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 451)    (get.Ai.symbol 2 module%(%~q%)% %-% invalid% module% name)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 452)    (get.Ai.symbol 2 illegal% module% name%:% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 453)    (get.Ai.symbol 2 %:%-% %~q%%	%~q% is% an% illegal% predicate% specification)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 454)    (get.Ai.symbol 2 use_module% %-% file% %~q% did% not% begin% with% a% module% declaration)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 455)    (get.Ai.symbol 2 variable% as% argument% to% use_module%/2)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 457)    (get.Ai.symbol 2 %:%-% %~q%%	%~q% is% a% built%-in% predicate)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 458)    (get.Ai.symbol 2 Circular% export% chain% for% %~q% in% %~q)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 459)    (get.Ai.symbol 2 %~q%%	The% pseudo%-file% %'user%'% may% not% be% used% by% use_module)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 460)    (get.Ai.symbol 2 invalid% predicate% specification% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 461)    (get.Ai.symbol 2 %~q% cannot% be% abolished% as% it% is% imported)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 470)    (get.Ai.symbol 2 Mismatching% if%-endif% declarations%:% %%	%:%-% %~q%.% is% closed% by% %:%-% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 471)    (get.Ai.symbol 2 Unopened% if%-endif% sequence% ending% with% %%	%:%-% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 472)    (get.Ai.symbol 2 Unclosed% if%-endif% sequence% beginning% with% %%	%:%-% %~q%.)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 501)    (get.Ai.symbol 2 wrong% number% of% arguments%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 502)    (get.Ai.symbol 2 incompatible% argument% type%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 503)    (get.Ai.symbol 2 illegal% control% option%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 504)    (get.Ai.symbol 2 write% format% error%:% column% overflow%.%~i)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 505)    (get.Ai.symbol 2 write% format% error%:% invalid% radix%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 510)    (get.Ai.symbol 2 %~q% %-% %~q% is% not% an% atom% or% integer)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 511)    (get.Ai.symbol 2 invalid% data% base% key% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 520)    (get.Ai.symbol 2 name%/2%:% %~q% is% not% a% list% of% ASCII% codes)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 521)    (get.Ai.symbol 2 1st% argument% is% not% a% proper% list%:% %~q)    (get.Ai.symbol 3 trace)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 522)    (get.Ai.symbol 2 %~q% is% not% a% valid% %~w% file% specification% %(or% list% of% them%))    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 523)    (get.Ai.symbol 2 %~q% is% not% a% valid% %~w% file% specification)    (get.Ai.symbol 3 fail)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1001)    (get.Ai.symbol 2 %~q% is% not% a% known% event% type)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1002)    (get.Ai.symbol 2 %~q% is% not% a% known% event% type)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1003)    (get.Ai.symbol 2 calling% undefined% foreign% function% %(see% earlier% load% errors%)%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1004)    (get.Ai.symbol 2 load% code% buffer% overflow%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1005)    (get.Ai.symbol 2 put_byte%(_%)% buffer% full%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1006)    (get.Ai.symbol 2 atom% is% too% large%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1007)    (get.Ai.symbol 2 symbol_char%(N%,% %~q%,% _%)%:% N% out% of% range)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1009)    (get.Ai.symbol 2 event% has% no% associated% error%~i)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1010)    (get.Ai.symbol 2 clause% chain% corrupted% in% AddClause%(%))    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1011)    (get.Ai.symbol 2 tried% to% get% text% string% of% nontextual% atom% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1012)    (get.Ai.symbol 2 tried% to% get% length% of% nontextual% atom% %~q)    (get.Ai.symbol 3 abort)    (proceed))(ASSEMBLE.CLAUSE ( errortab 3 si ) 8    (get.Ai.constant 1 1013)    (get.Ai.symbol 2 tried% to% interpret% unbound% variable%~i)    (get.Ai.symbol 3 abort)    (proceed))STOP