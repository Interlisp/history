(ASSEMBLE.CLAUSE ( style_check_single_vars 4 si ) 53    (allocate)    (get.Ai.variable.Yn 1 1)    (get.Ai.variable.Yn 2 3)    (get.Ai.variable.Yn 3 2)    (gettopval STYLE%.SINGLE)    (store.integer 1)    (put.Ai.value.Yn 1 1)    (is.a 254)    (put.Ai.value.Yn 1 1)    (get.Ai.list 1)    (unify.void 2)    (body.cut)    (gettopval LOAD%.COUNT)    (store.variable.Xn 2)    (put.Ai.structure 3 %/ 2)    (unify.local.Yn 3)    (unify.local.Yn 2)    (put.Ai.list 1)    (unify.value.Xn 3)    (unify.nil)    (put.Ai.list 3)    (unify.value.Xn 2)    (unify.value.Xn 1)    (put.Ai.symbol 2 %[WARNING%:% Singleton% variables%,% clause% %~d% of% %~q%:% )    (put.Ai.symbol 1 user)    (call 4 format 3 formatter)    (put.Ai.value.Yn 1 1)    (call 3 list_elements 1 si)    (put.Ai.nil 3)    (put.Ai.symbol 2 %]%~n)    (put.Ai.symbol 1 user)    (depart format 3 formatter))(ASSEMBLE.CLAUSE ( style_check_single_vars 4 si ) 1    (proceed))(ASSEMBLE.CLAUSE ( list_elements 1 si ) 4    (get.Ai.constant 1 NIL)    (proceed))(ASSEMBLE.CLAUSE ( list_elements 1 si ) 11    (get.Ai.list 1)    (unify.variable.Xn 1)    (allocate)    (unify.variable.Yn 1)    (call 4 print_variable_name 1 si)    (put.Ai.value.Yn 1 1)    (depart list_elements1 1 si))(ASSEMBLE.CLAUSE ( list_elements1 1 si ) 4    (get.Ai.constant 1 NIL)    (proceed))(ASSEMBLE.CLAUSE ( list_elements1 1 si ) 18    (get.Ai.list 1)    (allocate)    (unify.variable.Yn 2)    (unify.variable.Yn 1)    (put.Ai.symbol 1 %,% )    (call 5 write 1 si)    (put.Ai.value.Yn 1 2)    (call 4 print_variable_name 1 si)    (put.Ai.value.Yn 1 1)    (depart list_elements1 1 si))(ASSEMBLE.CLAUSE ( style_check_discontiguous 2 si ) 66    (allocate)    (get.Ai.variable.Yn 1 3)    (get.Ai.variable.Yn 2 4)    (gettopval STYLE%.DISCONTIGUOUS)    (store.integer 1)    (put.Ai.value.Yn 1 3)    (call 8 has_clauses 1 si)    (load.choice.point)    (store.variable.Yn 5)    (either 8 32)    (put.Ai.value.Yn 2 4)    (put.Ai.value.Yn 1 3)    (call 8 is_discontiguous 2 %$load_facts)    (load.value.Yn 5)    (cut.to.choice.point)    (fail)    (or.finally)    (body.cut)    (put.Ai.symbol 2 %$load_facts)    (put.Ai.structure 1 is_discontiguous 2)    (unify.local.Yn 3)    (unify.local.Yn 4)    (call 6 assert_module 2 si)    (put.Ai.void 4)    (put.Ai.variable.Yn 3 1)    (put.Ai.variable.Yn 2 2)    (put.Ai.value.Yn 1 3)    (call 5 p_procedure 4 si)    (put.Ai.structure 1 %/ 2)    (unify.local.Yn 2)    (unify.local.Yn 1)    (put.Ai.list 3)    (unify.value.Xn 1)    (unify.nil)    (put.Ai.symbol 2 %[WARNING%:% Clauses% for% %~q% are% not% together% in% the% source% file%]%~n)    (put.Ai.symbol 1 user)    (depart format 3 formatter))(ASSEMBLE.CLAUSE ( style_check_discontiguous 2 si ) 1    (proceed))(ASSEMBLE.CLAUSE ( style_check_multiple 2 si ) 6    (gettopval STYLE%.MULTIPLE)    (store.integer 0)    (cut.proceed))(ASSEMBLE.CLAUSE ( style_check_multiple 2 si ) 21    (allocate)    (get.Ai.variable.Yn 1 2)    (get.Ai.variable.Yn 2 3)    (put.Ai.variable.Yn 3 1)    (put.Ai.constant 2 12)    (put.Ai.value.Yn 1 2)    (get.word)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.unsafe.Yn 1 1)    (depart style_check_multiple1 3 si))(ASSEMBLE.CLAUSE ( style_check_multiple1 3 si ) 7    (put.Ai.value.Xn 2 3)    (allocate)    (call 3 multi_style_checking_off 2 %$load_facts)    (depart.cut))(ASSEMBLE.CLAUSE ( style_check_multiple1 3 si ) 4    (get.Ai.constant 1 0)    (cut.proceed))(ASSEMBLE.CLAUSE ( style_check_multiple1 3 si ) 3    (get.Ai.value.Xn 3 1)    (cut.proceed))(ASSEMBLE.CLAUSE ( style_check_multiple1 3 si ) 115    (allocate)    (get.Ai.variable.Yn 1 4)    (get.Ai.variable.Yn 2 1)    (get.Ai.variable.Yn 3 2)    (put.Ai.value.Yn 2 4)    (put.Ai.variable.Yn 1 7)    (call 12 source_file_table 2 si)    (put.Ai.value.Yn 2 2)    (put.Ai.variable.Yn 1 6)    (call 12 source_file_table 2 si)    (put.Ai.void 4)    (put.Ai.variable.Yn 3 8)    (put.Ai.variable.Yn 2 9)    (put.Ai.value.Yn 1 1)    (call 12 p_procedure 4 si)    (put.Ai.structure 1 %/ 2)    (unify.local.Yn 9)    (unify.local.Yn 8)    (put.Ai.list 3)    (unify.value.Xn 1)    (unify.nil)    (put.Ai.symbol 2 %~nProcedure% %~q% is% being% redefined% in% a% different% file% %-% )    (put.Ai.symbol 1 user)    (call 10 format 3 formatter)    (put.Ai.list 3)    (unify.local.Yn 7)    (unify.nil)    (put.Ai.symbol 2 %~n% % % % Previous% file%:% %~w)    (put.Ai.symbol 1 user)    (call 9 format 3 formatter)    (put.Ai.list 3)    (unify.local.Yn 6)    (unify.nil)    (put.Ai.symbol 2 %~n% % % % New% file%:% % % % % % %~w)    (put.Ai.symbol 1 user)    (call 8 format 3 formatter)    (put.Ai.nil 3)    (put.Ai.symbol 2 %~nDo% you% really% want% to% redefine% it%?% )    (put.Ai.symbol 1 user)    (call 8 format 3 formatter)    (call 8 repeat 0 si)    (put.Ai.nil 3)    (put.Ai.symbol 2 %(y%,% n%,% p%,% or% %?%)% )    (put.Ai.symbol 1 user)    (call 8 format 3 formatter)    (put.Ai.variable.Yn 1 5)    (call 8 ttyeol_get 1 si)    (put.Ai.variable.Yn 2 3)    (put.Ai.unsafe.Yn 1 5)    (call 7 mult_ans 2 si)    (body.cut)    (put.Ai.value.Yn 4 2)    (put.Ai.value.Yn 3 4)    (put.Ai.value.Yn 2 1)    (put.Ai.unsafe.Yn 1 3)    (call 5 process_ans 4 si)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart recursive_load_check 2 si))(ASSEMBLE.CLAUSE ( mult_ans 2 si ) 6    (get.Ai.constant 1 121)    (get.Ai.symbol 2 yes)    (cut.proceed))(ASSEMBLE.CLAUSE ( mult_ans 2 si ) 6    (get.Ai.constant 1 110)    (get.Ai.symbol 2 no)    (cut.proceed))(ASSEMBLE.CLAUSE ( mult_ans 2 si ) 6    (get.Ai.constant 1 112)    (get.Ai.symbol 2 proceed)    (cut.proceed))(ASSEMBLE.CLAUSE ( mult_ans 2 si ) 10    (get.Ai.constant 1 104)    (head.cut)    (put.Ai.void 2)    (put.Ai.constant 1 63)    (execute mult_ans 2 si))(ASSEMBLE.CLAUSE ( mult_ans 2 si ) 38    (get.Ai.constant 1 63)    (head.cut)    (allocate)    (put.Ai.nil 3)    (put.Ai.symbol 2 %~n% % % % % % % y% % % % redefine% this% particular% procedure%.%~n)    (put.Ai.symbol 1 user)    (call 3 format 3 formatter)    (put.Ai.nil 3)    (put.Ai.symbol 2 % % % % % % % n% % % % don%'t% redefine% this% procedure%,% but% continue% loading%.%~n)    (put.Ai.symbol 1 user)    (call 3 format 3 formatter)    (put.Ai.nil 3)    (put.Ai.symbol 2 % % % % % % % p% % % % proceed% redefining% and% suppress% further% warnings%.%~n)    (put.Ai.symbol 1 user)    (call 3 format 3 formatter)    (put.Ai.nil 3)    (put.Ai.symbol 2 % % % % % % % %?% % % % print% this% information%.%~2n)    (put.Ai.symbol 1 user)    (call 3 format 3 formatter)    (fail))(ASSEMBLE.CLAUSE ( process_ans 4 si ) 4    (get.Ai.constant 1 yes)    (proceed))(ASSEMBLE.CLAUSE ( process_ans 4 si ) 12    (get.Ai.constant 1 proceed)    (put.Ai.symbol 2 %$load_facts)    (put.Ai.structure 1 multi_style_checking_off 2)    (unify.local.Xn 3)    (unify.local.Xn 4)    (execute assertz_module 2 si))(ASSEMBLE.CLAUSE ( process_ans 4 si ) 17    (get.Ai.constant 1 no)    (put.Ai.value.Xn 5 2)    (allocate)    (put.Ai.symbol 2 %$load_facts)    (put.Ai.structure 1 dont_load_procedure 2)    (unify.local.Xn 5)    (unify.local.Xn 4)    (call 3 assertz_module 2 si)    (fail))(ASSEMBLE.CLAUSE ( recursive_load_check 2 si ) 38    (allocate)    (get.Ai.variable.Yn 1 2)    (get.Ai.variable.Yn 2 3)    (put.Ai.variable.Yn 4 1)    (put.Ai.value.Yn 3 2)    (put.Ai.void 2)    (put.Ai.void 1)    (call 6 already_loading 4 %$load_facts)    (load.choice.point)    (store.variable.Xn 1)    (either 6 28)    (put.Ai.value.Yn 2 3)    (get.Ai.value.Yn 2 1)    (load.value.Xn 1)    (cut.to.choice.point)    (fail)    (or.finally)    (put.Ai.symbol 2 %$load_facts)    (put.Ai.structure 1 dont_load_procedure 2)    (unify.local.Yn 2)    (unify.local.Yn 1)    (call 3 assertz_module 2 si)    (fail))(ASSEMBLE.CLAUSE ( recursive_load_check 2 si ) 1    (proceed))(ASSEMBLE.CLAUSE ( style_check 1 si ) 4    (allocate)    (is.a 1)    (body.cut)    (fail))(ASSEMBLE.CLAUSE ( style_check 1 si ) 17    (get.Ai.constant 1 all)    (allocate)    (load.pos.word 1)    (settopval STYLE%.SINGLE)    (load.pos.word 1)    (settopval STYLE%.DISCONTIGUOUS)    (load.pos.word 1)    (settopval STYLE%.MULTIPLE)    (progress))(ASSEMBLE.CLAUSE ( style_check 1 si ) 8    (get.Ai.constant 1 single_var)    (load.pos.word 1)    (settopval STYLE%.SINGLE)    (proceed))(ASSEMBLE.CLAUSE ( style_check 1 si ) 8    (get.Ai.constant 1 discontiguous)    (load.pos.word 1)    (settopval STYLE%.DISCONTIGUOUS)    (proceed))(ASSEMBLE.CLAUSE ( style_check 1 si ) 8    (get.Ai.constant 1 multiple)    (load.pos.word 1)    (settopval STYLE%.MULTIPLE)    (proceed))(ASSEMBLE.CLAUSE ( no_style_check 1 si ) 4    (allocate)    (is.a 1)    (body.cut)    (fail))(ASSEMBLE.CLAUSE ( no_style_check 1 si ) 17    (get.Ai.constant 1 all)    (allocate)    (load.pos.word 0)    (settopval STYLE%.SINGLE)    (load.pos.word 0)    (settopval STYLE%.DISCONTIGUOUS)    (load.pos.word 0)    (settopval STYLE%.MULTIPLE)    (progress))(ASSEMBLE.CLAUSE ( no_style_check 1 si ) 8    (get.Ai.constant 1 single_var)    (load.pos.word 0)    (settopval STYLE%.SINGLE)    (proceed))(ASSEMBLE.CLAUSE ( no_style_check 1 si ) 8    (get.Ai.constant 1 discontiguous)    (load.pos.word 0)    (settopval STYLE%.DISCONTIGUOUS)    (proceed))(ASSEMBLE.CLAUSE ( no_style_check 1 si ) 8    (get.Ai.constant 1 multiple)    (load.pos.word 0)    (settopval STYLE%.MULTIPLE)    (proceed))STOP