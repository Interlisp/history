(ASSEMBLE.CLAUSE ( predicate_property 2 si ) 20    (allocate)    (get.Ai.variable.Yn 2 2)    (put.Ai.variable.Yn 4 1)    (put.Ai.variable.Yn 3 3)    (put.Ai.symbol 2 user)    (call 6 split_off_module_part 4 si)    (put.Ai.unsafe.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.unsafe.Yn 1 1)    (depart predicate_property 3 si))(ASSEMBLE.CLAUSE ( predicate_property 3 si ) 64    (allocate)    (get.Ai.variable.Yn 1 1)    (get.Ai.variable.Yn 2 6)    (get.Ai.variable.Yn 3 4)    (put.Ai.value.Yn 4 6)    (put.Ai.variable.Yn 3 3)    (put.Ai.variable.Yn 2 2)    (put.Ai.value.Yn 1 1)    (call 10 valid_pred_spec 4 si)    (put.Ai.variable.Yn 4 5)    (put.Ai.value.Yn 3 4)    (put.Ai.value.Yn 2 3)    (put.Ai.value.Yn 1 2)    (call 10 find_proc 4 si)    (put.Ai.variable.Yn 3 7)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 5)    (get.word)    (load.value.Yn 7)    (load.pos.word 3)    (boolean.and)    (store.variable.Xn 1)    (put.Ai.value.Yn 6 6)    (put.Ai.unsafe.Yn 5 5)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (call 6 property_of_predicate 6 si)    (put.Ai.unsafe.Yn 3 3)    (put.Ai.unsafe.Yn 2 2)    (put.Ai.value.Yn 1 1)    (functor)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( find_proc 4 si ) 29    (allocate)    (get.Ai.variable.Yn 1 1)    (get.Ai.variable.Yn 2 2)    (get.Ai.variable.Yn 3 3)    (get.Ai.variable.Yn 4 4)    (put.Ai.value.Yn 1 1)    (is.a 128)    (put.Ai.value.Yn 1 2)    (is.a 24)    (put.Ai.value.Yn 1 3)    (is.a 128)    (body.cut)    (put.Ai.value.Yn 4 4)    (put.Ai.value.Yn 3 3)    (put.Ai.value.Yn 2 2)    (put.Ai.value.Yn 1 1)    (depart check_predicate 4 si))(ASSEMBLE.CLAUSE ( find_proc 4 si ) 91    (allocate)    (get.Ai.variable.Yn 1 6)    (get.Ai.variable.Yn 2 7)    (get.Ai.variable.Yn 3 1)    (get.Ai.variable.Yn 4 5)    (put.Ai.value.Yn 1 5)    (call 10 current_procedure 1 si)    (put.Ai.variable.Yn 4 2)    (put.Ai.value.Yn 3 7)    (put.Ai.value.Yn 2 6)    (put.Ai.value.Yn 1 5)    (call 10 p_procedure 4 si)    (either 10 36)    (put.Ai.value.Yn 1 2)    (get.Ai.value.Yn 1 1)    (jump.to 48)    (or.finally)    (put.Ai.value.Yn 4 2)    (put.Ai.value.Yn 3 1)    (put.Ai.value.Yn 2 7)    (put.Ai.value.Yn 1 6)    (call 8 imports 4 si)    (put.Ai.value.Yn 1 1)    (call 8 current_module 1 si)    (load.choice.point)    (store.variable.Yn 3)    (either 8 90)    (put.Ai.variable.Yn 3 4)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 5)    (get.word)    (load.value.Yn 4)    (load.pos.word 64)    (boolean.and)    (load.pos.word 0)    (not.equal.to)    (load.value.Yn 3)    (cut.to.choice.point)    (load.choice.point)    (store.variable.Xn 1)    (either 5 87)    (put.Ai.unsafe.Yn 2 2)    (get.Ai.value.Yn 2 1)    (load.value.Xn 1)    (cut.to.choice.point)    (fail)    (or.finally)    (check.heap)    (progress)    (or.finally)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 37    (get.Ai.constant 1 1)    (allocate)    (get.Ai.variable.Yn 2 3)    (put.Ai.value.Xn 2 3)    (get.Ai.variable.Yn 6 1)    (put.Ai.value.Yn 1 3)    (call 6 built_in_predicate 2 si)    (body.cut)    (load.choice.point)    (store.variable.Yn 2)    (either 6 31)    (put.Ai.value.Yn 1 3)    (call 5 secret_built_in 1 si)    (load.value.Yn 2)    (cut.to.choice.point)    (fail)    (or.finally)    (put.Ai.value.Yn 1 1)    (get.Ai.constant 1 built_in)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 9    (get.Ai.constant 1 1)    (put.Ai.value.Xn 1 5)    (put.Ai.value.Xn 2 6)    (execute property_of_compiled_predicate 2 si))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 6    (get.Ai.constant 1 2)    (get.Ai.symbol 6 interpreted)    (proceed))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 6    (get.Ai.constant 1 3)    (get.Ai.symbol 6 dynamic)    (proceed))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 6    (get.Ai.constant 1 3)    (get.Ai.symbol 6 interpreted)    (proceed))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 20    (put.Ai.value.Xn 1 5)    (get.Ai.symbol 6 multifile)    (allocate)    (put.Ai.variable.Yn 3 1)    (put.Ai.constant 2 13)    (get.word)    (load.value.Yn 1)    (load.pos.word 16)    (boolean.and)    (load.pos.word 0)    (not.equal.to)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 12    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (put.Ai.value.Xn 3 4)    (get.Ai.structure 6 imported_from 1)    (unify.variable.Xn 4)    (execute imports 4 si))(ASSEMBLE.CLAUSE ( property_of_predicate 6 si ) 12    (put.Ai.value.Xn 1 2)    (put.Ai.value.Xn 2 3)    (put.Ai.value.Xn 3 4)    (get.Ai.symbol 6 exported)    (put.Ai.symbol 4 exported)    (execute has_module_property 4 %$module_facts))(ASSEMBLE.CLAUSE ( secret_built_in 1 si ) 4    (get.Ai.constant 1 %$TraceFlag)    (proceed))(ASSEMBLE.CLAUSE ( secret_built_in 1 si ) 4    (get.Ai.constant 1 %$Quintus%:% choice_point)    (proceed))(ASSEMBLE.CLAUSE ( secret_built_in 1 si ) 4    (get.Ai.constant 1 %$Quintus%:% trail)    (proceed))(ASSEMBLE.CLAUSE ( property_of_compiled_predicate 2 si ) 19    (get.Ai.symbol 2 foreign)    (allocate)    (put.Ai.variable.Yn 3 1)    (put.Ai.constant 2 13)    (get.word)    (load.value.Yn 1)    (load.pos.word 32)    (boolean.and)    (load.pos.word 0)    (not.equal.to)    (body.cut)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( property_of_compiled_predicate 2 si ) 3    (get.Ai.symbol 2 compiled)    (proceed))(ASSEMBLE.CLAUSE ( valid_pred_spec 4 si ) 5    (allocate)    (is.a 1)    (body.cut)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( valid_pred_spec 4 si ) 12    (allocate)    (get.Ai.variable.Yn 2 1)    (put.Ai.value.Yn 2 1)    (functor)    (put.Ai.value.Yn 1 1)    (is.a 128)    (body.cut)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( valid_pred_spec 4 si ) 12    (put.Ai.value.Xn 3 1)    (put.Ai.structure 2 predicate_property 2)    (unify.local.Xn 1)    (unify.local.Xn 4)    (put.Ai.constant 1 390)    (execute nerror2 3 si))(ASSEMBLE.CLAUSE ( dynamic_procedure 1 si ) 97    (allocate)    (get.Ai.variable.Yn 1 1)    (put.Ai.variable.Yn 3 6)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (get.word)    (load.value.Yn 6)    (load.pos.word 3)    (boolean.and)    (store.variable.Xn 1)    (load.value.Xn 1)    (load.pos.word 3)    (equal.to.else 25)    (check.heap)    (progress)    (load.choice.point)    (store.variable.Yn 5)    (either 8 38)    (put.Ai.value.Yn 1 1)    (call 8 has_clauses 1 si)    (load.value.Yn 5)    (cut.to.choice.point)    (fail)    (or.finally)    (put.Ai.value.Yn 1 1)    (call 7 check_for_new_module 1 si)    (gettopval INTERPRET%.CLAUSE)    (store.variable.Yn 4)    (gettopval FAILURE%.CLAUSE)    (store.variable.Yn 3)    (put.Ai.constant 1 1)    (call 7 block_events 1 si)    (put.Ai.value.Yn 3 4)    (put.Ai.constant 2 8)    (put.Ai.value.Yn 1 1)    (put.addr)    (put.Ai.value.Yn 3 3)    (put.Ai.constant 2 10)    (put.Ai.value.Yn 1 1)    (put.addr)    (put.Ai.variable.Yn 3 2)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (get.word)    (load.value.Yn 2)    (load.pos.word 65532)    (boolean.and)    (load.pos.word 3)    (boolean.or)    (store.variable.Xn 3)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (put.word)    (put.Ai.constant 1 1)    (depart unblock_events 1 si))(ASSEMBLE.CLAUSE ( interpreted_procedure 1 si ) 89    (allocate)    (get.Ai.variable.Yn 1 1)    (put.Ai.variable.Yn 3 6)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (get.word)    (load.value.Yn 6)    (load.pos.word 3)    (boolean.and)    (store.variable.Yn 5)    (load.value.Yn 5)    (load.pos.word 2)    (not.less.than.else 25)    (check.heap)    (progress)    (load.value.Yn 5)    (load.pos.word 0)    (equal.to.else 90)    (put.Ai.value.Yn 1 1)    (call 7 check_for_new_module 1 si)    (gettopval INTERPRET%.CLAUSE)    (store.variable.Yn 4)    (gettopval FAILURE%.CLAUSE)    (store.variable.Yn 3)    (put.Ai.constant 1 1)    (call 7 block_events 1 si)    (put.Ai.value.Yn 3 4)    (put.Ai.constant 2 8)    (put.Ai.value.Yn 1 1)    (put.addr)    (put.Ai.value.Yn 3 3)    (put.Ai.constant 2 10)    (put.Ai.value.Yn 1 1)    (put.addr)    (put.Ai.variable.Yn 3 2)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (get.word)    (load.value.Yn 2)    (load.pos.word 65532)    (boolean.and)    (load.pos.word 2)    (boolean.or)    (store.variable.Xn 3)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (put.word)    (put.Ai.constant 1 1)    (depart unblock_events 1 si)    (fail))(ASSEMBLE.CLAUSE ( compiled_procedure 1 si ) 72    (allocate)    (get.Ai.variable.Yn 1 1)    (put.Ai.variable.Yn 3 4)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (get.word)    (load.value.Yn 4)    (load.pos.word 3)    (boolean.and)    (store.variable.Yn 3)    (load.value.Yn 3)    (load.pos.word 1)    (equal.to.else 25)    (check.heap)    (progress)    (load.value.Yn 3)    (load.pos.word 0)    (equal.to.else 73)    (put.Ai.value.Yn 1 1)    (call 5 check_for_new_module 1 si)    (put.Ai.constant 1 1)    (call 5 block_events 1 si)    (put.Ai.variable.Yn 3 2)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (get.word)    (load.value.Yn 2)    (load.pos.word 65532)    (boolean.and)    (load.pos.word 1)    (boolean.or)    (store.variable.Xn 3)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 1)    (put.word)    (put.Ai.value.Yn 1 1)    (call 3 check_traps 1 interp)    (put.Ai.constant 1 1)    (depart unblock_events 1 si)    (fail))(ASSEMBLE.CLAUSE ( has_listable_clauses 4 si ) 47    (allocate)    (get.Ai.variable.Yn 4 2)    (put.Ai.value.Xn 4 3)    (put.Ai.value.Xn 3 2)    (put.Ai.value.Xn 2 1)    (put.Ai.value.Yn 1 2)    (call 6 procedure 4 si)    (put.Ai.variable.Yn 3 3)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 2)    (get.word)    (load.value.Yn 3)    (load.pos.word 3)    (boolean.and)    (store.variable.Xn 1)    (load.value.Xn 1)    (load.pos.word 2)    (not.less.than)    (put.Ai.variable.Yn 3 1)    (put.Ai.constant 2 10)    (put.Ai.value.Yn 1 2)    (get.addr)    (gettopval FAILURE%.CLAUSE)    (store.variable.Xn 1)    (load.value.Yn 1)    (load.value.Xn 1)    (not.equal.to)    (check.heap)    (progress))(ASSEMBLE.CLAUSE ( has_clauses 1 si ) 59    (allocate)    (get.Ai.variable.Yn 1 2)    (put.Ai.variable.Yn 3 4)    (put.Ai.constant 2 13)    (put.Ai.value.Yn 1 2)    (get.word)    (load.value.Yn 4)    (load.pos.word 3)    (boolean.and)    (store.variable.Yn 3)    (load.value.Yn 3)    (load.pos.word 2)    (not.less.than.else 39)    (put.Ai.variable.Yn 3 1)    (put.Ai.constant 2 10)    (put.Ai.value.Yn 1 2)    (get.addr)    (gettopval FAILURE%.CLAUSE)    (store.variable.Xn 1)    (load.value.Yn 1)    (load.value.Xn 1)    (not.equal.to)    (check.heap)    (progress)    (load.value.Yn 3)    (load.pos.word 1)    (equal.to.else 60)    (put.Ai.variable.Yn 3 1)    (put.Ai.constant 2 8)    (put.Ai.value.Yn 1 2)    (get.addr)    (gettopval UNDEFINED%.CLAUSE)    (store.variable.Xn 1)    (load.value.Yn 1)    (load.value.Xn 1)    (not.equal.to)    (check.heap)    (progress)    (fail))STOP