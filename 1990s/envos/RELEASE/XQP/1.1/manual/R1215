ref-12-15                    Xerox Quintus Prolog Reference Manual           Section 12-15: Importing Dynamic/Interpreted PredicatesThe assertion and retraction predicates can be used on imported dynamicpredicates.  For example, suppose the following file is loaded viause_module/1:              :- module(m1, [f/1]).            :- dynamic f/1.            f(0).Then f/1 can be manipulated as if it were defined in the current module.  Forexample,             | ?- clause(f(X), true).            X = 0The built-in predicate listing/1 distinguishes predicates which are importedinto the current source module by prefixing each clause with the module name.Thus,             | ?- listing(f).            m1:f(0).However, listing/1 does not prefix clauses with their module if they aredefined in the source module itself.  Note that             | ?- listing(_).can be used to see all the dynamic and interpreted predicates defined in orimported into the current type-in module.  And             | ?- listing(m1:_).can be used to see all such predicates which are defined in or imported intothe module m1.  In contrast,             | ?- listing.will show all the dynamic and interpreted predicates in the entire program, andin this case every clause will be prefixed by its module except when the moduleis 'user'.WARNING:  listing/0, and listing/1 when it refers to imported clauses, printsout clauses in the form             Module:Head :- Body.but clauses of this form are not accepted by consult/1 or compile/1.Similarly, assert((Module:Head :- Body)) is invalid.  Useassert(Module:(Head :- Body)) instead.