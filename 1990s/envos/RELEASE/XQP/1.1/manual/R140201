ref-14-2-1                    Xerox Quintus Prolog Reference Manual                       Section 14-2-1: assert(+Clause)assert(Clause) asserts Clause to the data base.  The relative position of thisclause with respect to other clauses for the same predicate is arbitrary.  Bydefault, Clause is asserted into the source module as the last clause of itsprocedure.  If you want to insert Clause in a particular position, useasserta/1 ({manual(ref-14-2-2)}) or assertz/1 ({manual(ref-14-2-3)}) instead.Clause must be instantiated to a non-numeric value.  If it is of the form'Head :- Body', then Head must also be instantiated to a non-numeric value.  Ifthese conditions are not satisfied, then assert/1 fails, and an error messageis sent to the standard error stream.  If there is a static definition for thespecified predicate, then assert/1 fails, an error message is sent to thestandard error stream, and the system enters the debugger in trace mode.Syntactic note:  if you want to write a term of the form 'Head :- Body' as theargument to assert/1, you must put it in parentheses, because the operatorprecedence of the ':-'/2 functor is greater than 1000 (see {manual(ref-2-6)}).For example,             | ?- assert(foo:-bar).will cause a syntax error; instead you should type             | ?- assert((foo:-bar)).