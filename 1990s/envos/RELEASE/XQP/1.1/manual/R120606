ref-12-6-6                    Xerox Quintus Prolog Reference Manual                           Section 12-6-6: spy(+X)spy(X) sets spypoints on all the predicates represented by X, which is either asingle predicate specification or a list of such specifications.  (See{manual(ref-3-1-1)}, for more information on predicate specifications.)If you use the predicate specification form Name but there are no clauses forName (of any arity), then a warning message will be displayed and no spypointwill be set.  If you really want to place a spypoint on a currently undefinedprocedure, then you must use the full form Name/Arity; you will still get awarning message, but the spypoint will be set in this case.If debugging is off, calling spy/1 will turn it on in debug mode, so that thedebugger will stop as soon as it reaches a spypoint.Note that since 'spy' is a built-in operator, the parentheses which usuallysurround the arguments to a predicate are not necessary (although they can beused if desired).  | ?- spy test/1.[The debugger will first leap -- showing spypoints (debug)][Spypoint placed on test/1]yes| ?-You can put spypoints on compiled procedures, as well as interpreted ones, butthere is a space and time penalty incurred.  This penalty does not go away whenyou simply turn off debugging (using nodebug/0); you must remove the spypointsexplicitly (using nospy/1 or nospyall/0).If spy/1 is given any invalid argument, it fails and sends an error message tothe standard error stream.