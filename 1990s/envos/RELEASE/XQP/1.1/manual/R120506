ref-12-5-6                    Xerox Quintus Prolog Reference Manual                Section 12-5-6: Debugging Compiled ProceduresThe Prolog debugger is normally used to debug interpreted procedures.  Theinterpreted program being debugged may have calls to procedures which arecompiled.  The debugger will show the Calls to these procedures frominterpreted clauses and the corresponding Fails or Exits.  However, thedebugger does not show the internal execution of such procedures, except forany calls to interpreted procedures which may take place.Spypoints can be placed on both interpreted and compiled procedures.  Spypointson compiled procedures allow these procedures to be debugged even when they arecalled from other compiled procedures.  The debugger only retains depth andancestor information when spypoints are called from interpreted clauses.Spypoints on compiled procedures which have been called from other compiledprocedures do not retain this information (their depth is shown as 0).  Thismeans that the 'g' option cannot show any ancestors for such calls, and the 'r'and 'f' options are more restricted.If you wish to trace the detailed execution of a particular procedure in acompiled program, the easiest thing to do is often to consult just that oneprocedure under the editor interface.  Then, if you run the program in tracemode, you will be able to step through that procedure.