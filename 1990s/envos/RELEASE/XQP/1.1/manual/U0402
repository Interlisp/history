user-4-2                      Xerox Quintus Prolog User's Guide                 Section 4-2: Finding All Solutions to a GoalThe phrases "backtrack through", "successively unify, through backtracking",and "fail back through" are used throughout this manual.  They are used whenspeaking about predicates which can be used in a non-determinate fashion, thatis, predicates which can succeed multiple times with possibly differentvariable bindings.  There are three basic ways one can "backtrack through" allanswers for a given predicate when executing the top level interpreter.Given the definition of q/1 as             | ?- compile(user).            q(c).            q(b).            q(a).            [user compiled (.150 sec 256 bytes)]            yesone could give the following query and then respond after each answer byentering a semicolon (;), representing or, followed by a carriage return.  Thisor (;) forces Prolog to fail to satisfy the goal, and therefore it goes backand tries to find another answer to the query.  The final 'no' response fromProlog indicates that no more answers can be found.              | ?- q(X).            X = c ;            X = b ;            X = a ;            noOne could generate all answers to a predicate without having to respond eachtime one is generated by giving the query             | ?- q(X), nl, write('X = '), write(X), nl, fail.            X = c            X = b            X = a            noNotice that the 'fail' at the end of the query is used in the same way that theor (;) is used in the previous example.Either of the two predicates setof/3 or bagof/3 can be used to put all theanswers to a query in a list (see the chapter on sets in the Xerox QuintusProlog Reference Manual for more details).  These predicates internallybacktrack through all answers.              | ?- setof(X, q(X), ListOfAnswers).            X = _107,            ListOfAnswers = [a,b,c] ;            no            | ?- bagof(X, q(X), ListOfAnswers).            X = _107,            ListOfAnswers = [c,b,a] ;            no