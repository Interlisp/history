ref-5-6-2                    Xerox Quintus Prolog Reference Manual                          Section 5-6-2: seeing(-S)seeing(S) unifies S with the current input stream.  This is exactly the same ascurrent_input(S), except that S will be unified with a file name if the currentinput stream was opened by see/1 ({manual(ref-5-6-1)}).seeing/1 can be used to verify that FileNameOrStream is still the current inputstream as follows:            /* nonvar(FileNameOrStream), */            see(FileNameOrStream),            ...            seeing(FileNameOrStream)If the current input stream has not been changed (or if changed, thenrestored), the above sequence will succeed for all file names and all streamobjects opened by open/3.  However, it will fail for all stream objects openedby see/1 (since only file name access to streams opened by see/1 is supported).This includes the stream object 'user_input' (since the standard input streamis assumed to be opened by see/1, and so seeing/1 would return 'user' in thiscase).If S is instantiated to a value that is not the identifier of the current inputstream, seeing(S) simply fails.seeing/1 can be followed by see/1 to ensure that a section of code leaves thecurrent input unchanged:            /* var(OldFileNameOrStream), */            seeing(OldFileNameOrStream),            ...            see(OldFileNameOrStream)The above is analogous to its stream-object-based counterpart,            /* var(OldStream), */            current_input(OldStream),            ...            set_input(OldStream)Both of these sequences will always succeed regardless of whether the currentinput stream was opened by see/1 or open/3 ({manual(ref-5-3-4)}).