ref-17-1                    Xerox Quintus Prolog Reference Manual                    Section 17-1: Definite Clause GrammarsProlog's grammar rules provide a convenient notation for expressing definiteclause grammars, which are useful for the analysis of both artificial andnatural languages.Definite clause grammars are an extension of the well-known context-freegrammars.  A grammar rule in Prolog takes the general form            head --> body.meaning "a possible form for head is body".  Both body and head are sequencesof one or more items linked by the standard Prolog conjunction operator ','(comma).Definite clause grammars extend context-free grammars in the following ways:   - A non-terminal symbol may be any Prolog term (other than a variable     or integer).   - A terminal symbol may be any Prolog term.  To distinguish terminals     from non-terminals, a sequence of one or more terminal symbols is     written within a grammar rule as a Prolog list.  An empty sequence is     written as the empty list '[]'. If the terminal symbols are ASCII     character codes, such lists can be written (as elsewhere) as strings.     An empty sequence is written as the empty list ('[]' or ' "" ').   - Extra conditions, in the form of Prolog procedure calls, may be     included in the right-hand side of a grammar rule.  Such procedure     calls are written enclosed in curly brackets ('{' and '}').   - The left-hand side of a grammar rule consists of a non-terminal,     optionally followed by a sequence of terminals (again written as a     Prolog list).   - Alternatives may be stated explicitly in the right-hand side of a     grammar rule, using the disjunction operator ';' (semicolon) as in     Prolog.  (The disjunction operator can also be written as '|'     (vertical-bar).)   - The cut symbol '!' (exclamation point) may be included in the     right-hand side of a grammar rule, as in a Prolog clause.  The cut     symbol does not need to be enclosed in curly brackets.  The     conditional arrow '->' can also be used in grammar rules, without the     curly brackets.  However, all other control predicates, repeat/0 for     example, can only be used within curly brackets.  If you use the goal     repeat/0 without the brackets it will be taken to be a non-terminal     symbol.