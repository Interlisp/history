user-6-7                      Xerox Quintus Prolog User's Guide           Section 6-7: Requesting More or Less Detailed DebuggingBy default, the debugger stops at every port and displays the instantiationstate of the procedure currently being debugged, followed by a question mark.The question mark is a debugger prompt which asks you to to specify the nextaction the debugger should take.  Whenever the question mark is displayed, youcan specify the degree of detail with which debugging should proceed.  In otherwords, even if you selected the 'debug' option originally, you can direct thedebugger to begin tracing a procedure in detail any time the question mark isdisplayed.  Conversely, even if you originally selected the 'trace' option, youcan direct the debugger to begin displaying only spypoints any time aquestion-mark prompt appears.To direct the debugger to proceed with detailed debugging or to begin detaileddebugging, press the Return key in response to the question mark.Alternatively, you can type 'c', which stands for "creep"; "creeping" through aprogram is the same as tracing it, or displaying it step by step.To direct the debugger to show the program's execution at the next spypoint,type 'l', which stands for "leap to the next spypoint."  If you type 'l' eachtime the debugger prompts you with a question mark, the debugger will displaythe program's execution at spypoints only.To direct the debugger to skip over the execution of a procedure, type 's' for"skip".  The debugger will not display anything during the execution of thecurrent procedure; it will begin displaying debugging information again at thefinal Exit or Fail port of the current procedure.  If any spypoints have beenset on procedures called by the current procedure, they will be ignored.  Thisoption can help save time by enabling you to determine quickly if a particularprocedure is executing successfully.  If the procedure succeeds, you can moveon to the next procedure; however, if it fails, you can direct the debugger toreexecute the procedure (by typing 'r' for "retry").  Then you can step throughthe execution of the procedure in detail and pinpoint the cause of the failure.NOTE:  In addition to the basic options discussed above, you can select severalother options when the debugger stops and prompts you.  These options arediscussed in {manual(user-6-12)}.