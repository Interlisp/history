("! -- built-in predicate" "! -- built-in predicate" U0610)("!" "!" R0403)("!, cut" "!, cut" R0204)("!, cut" "!, cut" R0403)(""is-not-provable" vs. "is-not-true" -- not(Goal)" ""is-not-provable" vs. "is-not-true" -- not(Goal)" L0403)("$VAR terms" "$VAR terms" R050102)("$VAR terms" "$VAR terms" R050103)("*, multiplication" "*, multiplication" R0601)("+ -- debugger option" "+ -- debugger option" R110504)("+, addition" "+, addition" R0601)("+, mode annotation" "+, mode annotation" R0001)("+P , +Q" "+P , +Q" R0401)("+P -> +Q ; +R" "+P -> +Q ; +R" R0406)("+P -> +Q" "+P -> +Q" R0407)("+P ; +Q" "+P ; +Q" R0402)("+X < +Y" "+X < +Y" R060303)("+X =:= +Y" "+X =:= +Y" R060301)("+X =< +Y" "+X =< +Y" R060305)("+X =\= +Y" "+X =\= +Y" R060302)("+X > +Y" "+X > +Y" R060304)("+X >= +Y" "+X >= +Y" R060306)(", -- built-in predicate" ", -- built-in predicate" U0610)(", -- debugger option" ", -- debugger option" R110504)(", atom" ", atom" R010103)(",, conjunction" ",, conjunction" R0401)("- -- debugger option" "- -- debugger option" R110504)("-, mode annotation" "-, mode annotation" R0001)("-, negation" "-, negation" R0601)("-, subtraction" "-, subtraction" R0601)("-->, grammar rules" "-->, grammar rules" R1701)("-> -- built-in predicate" "-> -- built-in predicate" U0610)("-> followed by ;" "-> followed by ;" R0406)("->, if-then-else" "->, if-then-else" R0406)("->, if-then-else" "->, if-then-else" R0407)("-X is +Expression" "-X is +Expression" R0602)(". -- debugger option" ". -- debugger option" R110504)("., period character" "., period character" R0202)("/, floating-point division" "/, floating-point division" R0601)("//, integer division" "//, integer division" R0601)("/\, bitwise conjunction" "/\, bitwise conjunction" R0601)("0 notation for character conversion" "0 notation for character conversion" R010101)(":" ":, use in meta_predicate declaration" R1217)(":" ":, use in Module:Goal" R1206)("; -- built-in predicate" "; -- built-in predicate" U0610)(";, disjunction" ";, disjunction" R0202)(";, disjunction" ";, disjunction" R0402)(";, disjunction" ";, disjunction" R0406)("< -- debugger option" "< -- debugger option" R110502)("<" "<" R060303)("<, arithmetic less than" "<, arithmetic less than" R060303)("<<, left shift" "<<, left shift" R0601)("= -- built-in predicate" "= -- built-in predicate" R1801)("= -- debugger option" "= -- debugger option" R110505)("= -- debugger option" "= -- debugger option" U061201)("=" "=" R1801)("=.. -- built-in predicate" "=.. -- built-in predicate" L0201)("=.. -- built-in predicate" "=.. -- built-in predicate" R0710)("=.." "=.." R0710)("=:=" "=:=" R060301)("=:=, arithmetic equal" "=:=, arithmetic equal" R060301)("=<" "=<" R060305)("=<, arithmetic less or equal" "=<, arithmetic less or equal" R060305)("==, equality of terms" "==, equality of terms" R0802)("==, identity of terms" "==, identity of terms" L0304)("=\= -- built-in predicate" "=\= -- built-in predicate" L0404)("=\=" "=\=" R060302)("=\=, arithmetic not equal" "=\=, arithmetic not equal" R060302)(">" ">" R060304)(">, arithmetic greater than" ">, arithmetic greater than" R060304)(">=" ">=" R060306)(">=, arithmetic greater or equal" ">=, arithmetic greater or equal" R060306)(">>, right shift" ">>, right shift" R0601)("? -- debugger option" "? -- debugger option" R110505)("? -- debugger option" "? -- debugger option" U061201)("?, mode annotation" "?, mode annotation" R0001)("?Pred =.. ?List" "?Pred =.. ?List" R0710)("?T1 == ?T2" "?T1 == ?T2" R0802)("?T1 @< ?T2" "?T1 @< ?T2" R0804)("?T1 @=< ?T2" "?T1 @=< ?T2" R0806)("?T1 @> ?T2" "?T1 @> ?T2" R0805)("?T1 @>= ?T2" "?T1 @>= ?T2" R0807)("?T1 \== ?T2" "?T1 \== ?T2" R0803)("?X = ?Y" "?X = ?Y" R1801)("@ -- debugger option" "@ -- debugger option" R110504)("@ command, debugging option" "@ command, debugging option" U061201)("@<, term less than" "@<, term less than" R0804)("@<, term lexicographically less than" "@<, term lexicographically less than" L0304)("@=<, term not greater than" "@=<, term not greater than" L0304)("@=<, term not greater than" "@=<, term not greater than" R0806)("@>, term greater than" "@>, term greater than" R0805)("@>, term lexicographically greater than" "@>, term lexicographically greater than" L0304)("@>=, term not less than" "@>=, term not less than" L0304)("@>=, term not less than" "@>=, term not less than" R0807)("[File], consulting a file" "[File], consulting a file" R030101)("[], empty list" "[], empty list" L030501)("[], empty list" "[], empty list" R010201)("[], empty list" "[], empty list" R1701)("\+ +P" "\+ +P" R0405)("\+ -- built-in predicate" "\+ -- built-in predicate" L0402)("\+, not-provable" "\+, not-provable" R0405)("\, bitwise complement" "\, bitwise complement" R0601)("\/, bitwise disjunction" "\/, bitwise disjunction" R0601)("\= -- library predicate" "\= -- library predicate" L040401)("\== -- built-in predicate" "\== -- built-in predicate" L0404)("\==, inequality of terms" "\==, inequality of terms" R0803)("\==, non-identity of terms" "\==, non-identity of terms" L0304)("^ -- built-in predicate" "^ -- built-in predicate" R1603)("^" "^" R1603)("|, disjunction" "|, disjunction" R010201)("|, disjunction" "|, disjunction" R0202)("|, disjunction" "|, disjunction" R0402)("|, disjunction" "|, disjunction" R0406)("|, rest of list" "|, rest of list" U08)("~= -- library predicate" "~= -- library predicate" L040402)("A Brief Prolog Tutorial" "A Brief Prolog Tutorial" U01)("abolish" "abolish" R130304)("abolish" "abolish" R130305)("abolish" "abolish" U08)("abolish(+Name, +Arity)" "abolish(+Name, +Arity)" R130305)("abolish(+Predicates)" "abolish(+Predicates)" R130304)("abolish/1 -- built-in predicate" "abolish/1 -- built-in predicate" R130304)("abolish/2 -- built-in predicate" "abolish/2 -- built-in predicate" R130305)("abort" "abort" R1004)("abort" "abort" U061201)("abort/0 -- built-in predicate" "abort/0 -- built-in predicate" R1004)("absolute name of file" "absolute name of file" L0502)("absolute-file-name" "absolute-file-name" R050315)("absolute_file_name(+RelFileSpec, -AbsFileSpec)" "absolute_file_name(+RelFileSpec, -AbsFileSpec)" R050315)("absolute_file_name/2 -- built-in predicate" "absolute_file_name/2 -- built-in predicate" L00)("absolute_file_name/2 -- built-in predicate" "absolute_file_name/2 -- built-in predicate" L0502)("absolute_file_name/2 -- built-in predicate" "absolute_file_name/2 -- built-in predicate" R050315)("absolute_file_name/2 -- built-in predicate" "absolute_file_name/2 -- built-in predicate" S0107)("Access to Lisp Variables from Prolog" "Access to Lisp Variables from Prolog" S0202)("access to streams, random" "access to streams, random" R050505)("access to streams, random" "access to streams, random" R050506)("Accessing Help Using Prolog Predicates" "Accessing Help Using Prolog Predicates" S0602)("Accessing the Help System Using Prolog Predicates" "Accessing the Help System Using Prolog Predicates" U020303)("adding elements to a set" "adding elements to a set" L010601)("addition" "addition" R0601)("add_element" "add_element" L010601)("add_element/3 -- library predicate" "add_element/3 -- library predicate" L010601)("Advanced Control Options" "Advanced Control Options" R110503)("AllSolutions" "AllSolutions" U0402)("alpha character, recognizing" "alpha character, recognizing" L0602)("alpha-var" "alpha-var" L0208)("alphabetic variants" "alphabetic variants" L0208)("alphanumeric characters, recognizing" "alphanumeric characters, recognizing" L0602)("alphanumeric" "alphanumeric" U08)("Altering Term Arguments -- library(change_arg)" "Altering Term Arguments -- library(change_arg)" L0204)("An Example" "An Example" R1702)("ancestors -- debugger option" "ancestors -- debugger option" R110502)("ancestors" "ancestors" R1005)("ancestors" "ancestors" U061201)("ancestors" "ancestors" U08)("ancestors(-Goals)" "ancestors(-Goals)" R1005)("ancestors/1 -- built-in predicate" "ancestors/1 -- built-in predicate" R1005)("and" "and" R0202)("and" "and" R0401)("and" "and, bitwise" R0601)("anonymous variables" "anonymous variables" R010104)("anonymous" "anonymous" U08)("append" "append" L010401)("append(?Prefix, ?Suffix, ?Combined)" "append(?Prefix, ?Suffix, ?Combined)" L010401)("append/3 -- library predicate" "append/3 -- library predicate" L010401)("append/3 -- library predicate" "append/3 -- library predicate" L010602)("append/3 -- library predicate" "append/3 -- library predicate" L0305)("append/5 -- library predicate" "append/5 -- library predicate" L0105)("appending elements of sets" "appending elements of sets" L010602)("appending lists" "appending lists" L010401)("appending to existing files" "appending to existing files" R050304)("arg" "arg" R0709)("arg(+ArgNum, +Term, -Arg)" "arg(+ArgNum, +Term, -Arg)" R0709)("arg-pattern" "arg-pattern" L0203)("arg/3 -- built-in predicate" "arg/3 -- built-in predicate" L0201)("arg/3 -- built-in predicate" "arg/3 -- built-in predicate" L0203)("arg/3 -- built-in predicate" "arg/3 -- built-in predicate" R0709)("arg0/3 -- library predicate" "arg0/3 -- library predicate" L0203)("args/3 -- library predicate" "args/3 -- library predicate" L0203)("args0/3 -- library predicate" "args0/3 -- library predicate" L0203)("argument" "argument" U010102)("argument" "argument" U010201)("argument" "argument" U08)("arguments" "arguments" R0102)("arguments" "arguments, accessing" L0203)("arguments" "arguments, altering" L0204)("arguments" "arguments, exchanging" L0204)("arguments" "arguments, finding by path" L0203)("arguments" "arguments, order for selector predicates" L0203)("arguments" "arguments, testing corresponding" L0203)("Arithmetic Comparison" "Arithmetic Comparison" R0603)("Arithmetic Expressions" "Arithmetic Expressions" R0601)("arithmetic expressions" "arithmetic expressions, inequality of" L0404)("Arithmetic limits" "Arithmetic limits" S0104)("arithmetic" "arithmetic" R06)("arithmetic" "arithmetic" R0601)("arithmetic" "arithmetic" R0603)("arithmetic" "arithmetic" U0701)("arithmetic" "arithmetic, functors" R0601)("Arithmetic" "Arithmetic, limits" R0003)("arity of a functor" "arity of a functor" R0102)("arity of functors, limits on" "arity of functors, limits on" S0105)("arity" "arity" U08)("arrays" "arrays, implementing using terms" L0204)("arrays" "arrays, library(logarr)" L0204)("ASCII, recognizing" "ASCII, recognizing" L0602)("ask/2 -- library predicate" "ask/2 -- library predicate" L0606)("ask/3 -- library predicate" "ask/3 -- library predicate" L0606)("Asking Prolog for Information" "Asking Prolog for Information" U010202)("asking questions" "asking questions" L0606)("Asking Questions" "Asking Questions" U0401)("ask_between/5 -- library predicate" "ask_between/5 -- library predicate" L0606)("ask_chars/4 -- library predicate" "ask_chars/4 -- library predicate" L0606)("ask_file/2 -- library predicate" "ask_file/2 -- library predicate" L050601)("ask_file/2 -- library predicate" "ask_file/2 -- library predicate" L0606)("ask_file/3 -- library predicate" "ask_file/3 -- library predicate" L050601)("ask_file/3 -- library predicate" "ask_file/3 -- library predicate" L0606)("ask_number/2 -- library predicate" "ask_number/2 -- library predicate" L0606)("ask_number/3 -- library predicate" "ask_number/3 -- library predicate" L0606)("ask_number/4 -- library predicate" "ask_number/4 -- library predicate" L0606)("ask_number/5 -- library predicate" "ask_number/5 -- library predicate" L0606)("ask_oneof/4 -- library predicate" "ask_oneof/4 -- library predicate" L0606)("assert" "assert" R130201)("assert" "assert" R1402)("assert(+Clause)" "assert(+Clause)" R130201)("assert(+Clause, -Ref)" "assert(+Clause, -Ref)" R1402)("assert/1 -- built-in predicate" "assert/1 -- built-in predicate" R130201)("assert/2 -- built-in predicate" "assert/2 -- built-in predicate" R1402)("asserta" "asserta" R130202)("asserta" "asserta" R1403)("asserta(+Clause)" "asserta(+Clause)" R130202)("asserta(+Clause, -Ref)" "asserta(+Clause, -Ref)" R1403)("asserta/1 -- built-in predicate" "asserta/1 -- built-in predicate" R130202)("asserta/2 -- built-in predicate" "asserta/2 -- built-in predicate" R1403)("asserted code, semantics of" "asserted code, semantics of" R13)("assertion and retraction predicates" "assertion and retraction predicates" R1215)("assertion and retraction predicates" "assertion and retraction predicates" R13)("Assertion Predicates" "Assertion Predicates" R1302)("assertz" "assertz" R130203)("assertz" "assertz" R1404)("assertz(+Clause)" "assertz(+Clause)" R130203)("assertz(+Clause, -Ref)" "assertz(+Clause, -Ref)" R1404)("assertz/1 -- built-in predicate" "assertz/1 -- built-in predicate" R130203)("assertz/2 -- built-in predicate" "assertz/2 -- built-in predicate" R1404)("associativity of operators" "associativity of operators" R0104)("atom" "atom" R0703)("atom" "atom" U08)("atom(?X)" "atom(?X)" R0703)("atom/1 -- built-in predicate" "atom/1 -- built-in predicate" R0703)("atom/2 -- built-in predicate" "atom/2 -- built-in predicate, comparison with string/1" L0302)("atomic term" "atomic term" U08)("atomic" "atomic" R0707)("atomic(?X)" "atomic(?X)" R0707)("atomic/1 -- built-in predicate" "atomic/1 -- built-in predicate" R0707)("atoms" "atoms" R010103)("atoms" "atoms, as constants" L0303)("atoms" "atoms, generating" L0308)("Atoms" "Atoms, maximum size of" S0105)("Atoms" "Atoms, maximum size of" S0509)("atoms" "atoms, names of" L0301)("atoms" "atoms, quoting" R050104)("atoms" "atoms, restrictions on names of" S0509)("atom_chars" "atom_chars" R071101)("atom_chars(?Atom, ?Chars)" "atom_chars(?Atom, ?Chars)" L030302)("atom_chars(?Atom, ?Chars)" "atom_chars(?Atom, ?Chars)" R071101)("atom_chars/2 -- built-in predicate" "atom_chars/2 -- built-in predicate" L0303)("atom_chars/2 -- built-in predicate" "atom_chars/2 -- built-in predicate" L030302)("atom_chars/2 -- built-in predicate" "atom_chars/2 -- built-in predicate" R071101)("atom_chars1/2 -- library predicate" "atom_chars1/2 -- library predicate" L030302)("atom_string(?Atom, ?String)" "atom_string(?Atom, ?String)" L030306)("atom_string/2 -- library predicate" "atom_string/2 -- library predicate" L0303)("atom_string/2 -- library predicate" "atom_string/2 -- library predicate" L030306)("a[bort] -- debugger option" "a[bort] -- debugger option" R110504)("Background Information" "Background Information" U0601)("backtracking" "backtracking" R0203)("backtracking" "backtracking" U010203)("backtracking" "backtracking" U0401)("backtracking" "backtracking" U08)("backtracking" "backtracking, terminating a loop" R190203)("backtracking" "backtracking, through all solutions" U0402)("backup -- debugger option" "backup -- debugger option" R110503)("backup" "backup" U061201)("bagof" "bagof" R1602)("bagof(?Template, +Goal, -Bag)" "bagof(?Template, +Goal, -Bag)" R1602)("bagof/3 -- built-in predicate" "bagof/3 -- built-in predicate" R1602)("bagof/3 -- built-in predicate" "bagof/3 -- built-in predicate" U0402)("Basic Concepts" "Basic Concepts" R1202)("Basic Control Options" "Basic Control Options" R110501)("Basic List Processing -- library(basics)" "Basic List Processing -- library(basics)" L0104)("Basic Operation of Help" "Basic Operation of Help" U020301)("Basic Operation of the On-line Help system" "Basic Operation of the On-line Help system" S0601)("Basic Options" "Basic Options" U061201)("basics" "basics" L0104)("bidirectional code, writing" "bidirectional code, writing" L0207)("binding variables to values" "binding variables to values" U010104)("binding variables to values" "binding variables to values" U08)("bit-vector operations" "bit-vector operations" R0601)("body of a clause" "body of a clause" R0201)("body of rule" "body of rule" U010101)("body of rule" "body of rule" U08)("break" "break" R1003)("break, debugging option" "break, debugging option" U061201)("break/0 -- built-in predicate" "break/0 -- built-in predicate" R0304)("break/0 -- built-in predicate" "break/0 -- built-in predicate" R1003)("buffer" "buffer, flushing output" R050310)("buffer" "buffer, flushing output" R050705)("buffer" "buffer, flushing output" R050707)("Building and Dismantling Terms" "Building and Dismantling Terms" R1903)("Built-in Operations on Files" "Built-in Operations on Files" L0502)("built-in operators" "built-in operators" R0104)("Built-in Operators" "Built-in Operators" R21)("built-in operators" "built-in operators, list of" R21)("Built-in Predicates for Debugging" "Built-in Predicates for Debugging" R1106)("Built-in Predicates for Handling Operators" "Built-in Predicates for Handling Operators" R0105)("Built-in Predicates" "Built-in Predicates" R20)("built-in predicates" "built-in predicates" U08)("built-in predicates" "built-in predicates, debugging" R1104)("built-in predicates" "built-in predicates, error messages for" U0405)("built-in predicates" "built-in predicates, extended by the library" R1201)("built-in predicates" "built-in predicates, grammar-related" R1704)("built-in predicates" "built-in predicates, list of" R20)("built-in predicates" "built-in predicates, new" U0707)("built-in predicates" "built-in predicates, obsolete" U0706)("built-in predicates" "built-in predicates, redefining" R1101)("built-in" "built-in" R20)("built-in-operators" "built-in-operators" R21)("b[reak] -- debugger option" "b[reak] -- debugger option" R110504)("C" "C" R170404)("C(?S1, ?Terminal, ?S2)" "C(?S1, ?Terminal, ?S2)" R170404)("C/3 -- built-in predicate" "C/3 -- built-in predicate" R1703)("C/3 -- built-in predicate" "C/3 -- built-in predicate" R170404)("call port of a procedure box" "call port of a procedure box" R1102)("call to procedure" "call to procedure" R0201)("call" "call" R0404)("call(+X)" "call(+X)" R0404)("call/1 -- built-in predicate" "call/1 -- built-in predicate" R0404)("calling Prolog from Lisp" "calling Prolog from Lisp" S0204)("Calling Prolog from Lisp" "Calling Prolog from Lisp" S0205)("Calling Prolog with Top Level Active" "Calling Prolog with Top Level Active" S0206)("can_open_file/2 -- library predicate" "can_open_file/2 -- library predicate" L0504)("can_open_file/3 -- library predicate" "can_open_file/3 -- library predicate" L0504)("case conversion" "case conversion" L0309)("case conversion" "case conversion, in nonstandard character sets" L0309)("cgensym/2 -- library predicate" "cgensym/2 -- library predicate" L0308)("Chaecking terms for subterms -- library(occurs)" "Chaecking terms for subterms -- library(occurs)" L0205)("change-module" "change-module" R1208)("change_arg/4 -- library predicate" "change_arg/4 -- library predicate" L0204)("change_arg/5 -- library predicate" "change_arg/5 -- library predicate" L0204)("change_path_arg/4 -- library predicate" "change_path_arg/4 -- library predicate" L0204)("change_path_arg/5 -- library predicate" "change_path_arg/5 -- library predicate" L0204)("changing term arguments" "changing term arguments" L0204)("changing term arguments" "changing term arguments, by path" L0204)("Changing the Execution State" "Changing the Execution State" R10)("char" "char" L0301)("character escaping" "character escaping" R0103)("character escaping" "character escaping" R050104)("character escaping" "character escaping, flag" R1803)("character escaping" "character escaping, flag" R1804)("character" "character" R0502)("characters that begin identifiers, recognizing" "characters that begin identifiers, recognizing" L0602)("characters" "characters, classification" L0602)("characters" "characters, conversion to integers" R010101)("characters" "characters, conversion to integers" R0601)("characters" "characters, end-of-file" L0602)("characters" "characters, end-of-line" L0602)("characters" "characters, input and output of" R0502)("characters" "characters, strings of" R010201)("characters, extracting from text objects" "characters, extracting from text objects" L0306)("character_count" "character_count" R050501)("character_count(+Stream, -N)" "character_count(+Stream, -N)" R050501)("character_count/2 -- built-in predicate" "character_count/2 -- built-in predicate" R050501)("CharEsc" "CharEsc" R0103)("chars" "chars" L0301)("chars" "chars" L0303)("chars" "chars, taking apart" L030703)("char_atom(?Char, ?Atom)" "char_atom(?Char, ?Atom)" L030304)("char_atom/2 -- library predicate" "char_atom/2 -- library predicate" L0303)("char_atom/2 -- library predicate" "char_atom/2 -- library predicate" L030304)("char_string(?Char, ?String)" "char_string(?Char, ?String)" L030308)("char_string/2 -- library predicate" "char_string/2 -- library predicate" L0303)("char_string/2 -- library predicate" "char_string/2 -- library predicate" L030308)("char_strings" "char_strings" R010804)("checker" "checker" U0708)("checker, compatibility tool" "checker, compatibility tool" L070102)("checking for disjoint ordered sets" "checking for disjoint ordered sets" L0107)("checking for existence of file names" "checking for existence of file names" L0504)("checking for intersecting ordered sets" "checking for intersecting ordered sets" L0107)("checking for set equality" "checking for set equality" L010601)("checking for subsets of ordered sets" "checking for subsets of ordered sets" L0107)("checking for term subsumption" "checking for term subsumption" L0208)("Checking Functors -- library(same_functor)" "Checking Functors -- library(same_functor)" L0207)("checking permissions of files" "checking permissions of files" L0504)("Checking Terms for Subterms -- library(occurs)" "Checking Terms for Subterms -- library(occurs)" L0205)("checking terms for subterms" "checking terms for subterms" L0205)("Checking to See if a File Exists" "Checking to See if a File Exists" L0504)("Choosing an Option at a Debugging Port" "Choosing an Option at a Debugging Port" R110305)("circular terms" "circular terms" R0205)("CL:VALUES function" "CL:VALUES function" S0204)("Classifying Characters -- library(ctypes)" "Classifying Characters -- library(ctypes)" L0602)("clause" "clause" R1304)("clause" "clause" R1405)("clause" "clause" U0101)("clause" "clause" U010201)("clause" "clause" U08)("clause(+Head, ?Body)" "clause(+Head, ?Body)" R1304)("clause(?Head, ?Body, ?Ref)" "clause(?Head, ?Body, ?Ref)" R1405)("clause/2 -- built-in predicate" "clause/2 -- built-in predicate" R1304)("clause/3 -- built-in predicate" "clause/3 -- built-in predicate" R1405)("clauses" "clauses" R0201)("clauses" "clauses, data base references to" R1401)("clauses" "clauses, declarative interpretation of" R0203)("clauses" "clauses, in multiple files, for one predicate" R030501)("clauses" "clauses, instances of" R0203)("Clauses" "Clauses, maximum size of compiled" S0105)("clauses" "clauses, procedural interpretation of" R0203)("clauses" "clauses, removing" S0508)("clauses" "clauses, unit" R0201)("close" "close" R050306)("close(+X)" "close(+X)" R050306)("close/1 -- built-in predicate" "close/1 -- built-in predicate" L0502)("close/1 -- built-in predicate" "close/1 -- built-in predicate" R050306)("Closed World Assumption" "Closed World Assumption" L0403)("close_all_streams/0 -- library predicate" "close_all_streams/0 -- library predicate" L0504)("closing a stream" "closing a stream, input or output" R050306)("closing a stream" "closing a stream, input" R050603)("closing a stream" "closing a stream, output" R050606)("closing files" "closing files" L0502)("column boundaries in output" "column boundaries in output" R050108)("comma" "comma" R0401)("commands" "commands" U08)("comments in input stream" "comments in input stream" L0608)("comments" "comments" R0107)("committing to first solution to query" "committing to first solution to query" L0405)("commutative operators, writing pattern matchers over" "commutative operators, writing pattern matchers over" L0105)("compare" "compare" R0808)("compare(?Op, ?T1, ?T2)" "compare(?Op, ?T1, ?T2)" R0808)("compare/3 -- built-in predicate" "compare/3 -- built-in predicate" L0201)("compare/3 -- built-in predicate" "compare/3 -- built-in predicate" L0304)("compare/3 -- built-in predicate" "compare/3 -- built-in predicate" R0808)("compare_strings/3 -- library predicate" "compare_strings/3 -- library predicate" L0304)("compare_strings/4 -- library predicate" "compare_strings/4 -- library predicate" L0304)("comparing padded strings" "comparing padded strings" L0304)("Comparing Terms" "Comparing Terms" R08)("Comparing Text Objects" "Comparing Text Objects" L0304)("Comparison of Xerox Quintus Prolog and DEC-10 Prolog" "Comparison of Xerox Quintus Prolog and DEC-10 Prolog" S05)("comparison" "comparison, of arbitrary terms" R08)("comparison" "comparison, of numbers" R0603)("compatibility checker" "compatibility checker" U0708)("compile" "compile" R030102)("compile(+File)" "compile(+File)" R030102)("compile/1 -- built-in predicate" "compile/1 -- built-in predicate" R030102)("compile/1 -- built-in predicate" "compile/1 -- built-in predicate, use with the module system" R1205)("compiled and interpreted code, mixing" "compiled and interpreted code, mixing" S0503)("compiled procedures, debugging" "compiled procedures, debugging" R1001)("compiled procedures, debugging" "compiled procedures, debugging" R110506)("compiled procedures, debugging" "compiled procedures, debugging" U0604)("compiler" "compiler" U0703)("compiler" "compiler" U08)("compiling a subsidiary file" "compiling a subsidiary file" U0304)("compiling programs" "compiling programs" R030102)("compiling programs" "compiling programs, alternative to" R030103)("compiling programs" "compiling programs, during program execution" R0304)("compiling" "compiling, From File Browser" L0505)("compiling-a-file" "compiling-a-file" U0303)("complement of an integer" "complement of an integer" R0601)("compound query" "compound query" U08)("compound term" "compound term" U08)("compound terms" "compound terms" R0102)("compound" "compound" R0102)("concat" "concat" R0201)("concat/3 -- library predicate" "concat/3 -- library predicate" L0305)("concatenating text objects" "concatenating text objects" L0305)("Concatenation Functions" "Concatenation Functions" L030501)("Concatenation" "Concatenation" L0305)("concat_atom/2 -- library predicate" "concat_atom/2 -- library predicate" L030501)("concat_chars/3 -- library predicate" "concat_chars/3 -- library predicate" L030501)("conclusion" "conclusion" U0101)("conclusion" "conclusion" U08)("condition" "condition" U08)("Conditionals and Disjunction" "Conditionals and Disjunction" R1901)("conditionals" "conditionals" R0406)("conditionals" "conditionals" R0407)("conditionals" "conditionals" R1901)("conditionals" "conditionals" U0502)("conjunction" "conjunction" R0202)("conjunction" "conjunction" R0401)("conjunction" "conjunction, bitwise" R0601)("connective" "connective" U08)("constant" "constant" U010202)("constant" "constant" U08)("constant-to-character conversion" "constant-to-character conversion" L030301)("constants" "constants" R0101)("constants" "constants, kinds of" L0303)("constants" "constants, reading from the terminal" L0606)("constants" "constants, reading from the terminal" L0608)("constants" "constants, reading" L0608)("consult" "consult" R030101)("consult" "consult" U010201)("consult" "consult" U08)("consult(+File)" "consult(+File)" R030101)("consult/1 -- built-in predicate" "consult/1 -- built-in predicate" R030101)("consult/1 -- built-in predicate" "consult/1 -- built-in predicate, use with the module system" R1205)("consulting a file" "consulting a file" U0303)("consulting a program" "consulting a program" U0703)("consulting a program" "consulting a program, during execution" U0613)("consulting a subsidiary file" "consulting a subsidiary file" U0304)("Consulting and Compiling" "Consulting and Compiling" R0301)("consulting programs" "consulting programs" R030101)("consulting programs" "consulting programs, alternative to" R030103)("consulting programs" "consulting programs, during program execution" R0304)("consulting" "consulting, From File Browser" L0505)("consulting-a-file" "consulting-a-file" U0303)("contains_term/2 -- library predicate" "contains_term/2 -- library predicate" L0205)("contains_var/2 -- library predicate" "contains_var/2 -- library predicate" L0205)("context-free grammars" "context-free grammars" R1701)("continued lines, UNIX format" "continued lines, UNIX format" L0604)("control character, recognizing" "control character, recognizing" L0602)("Control characters" "Control characters" U0003)("control flow" "control flow" R1102)("control predicates in grammar rules" "control predicates in grammar rules" R1701)("Control" "Control" R04)("control" "control" R1001)("control-C interrupts" "control-C interrupts" R1001)("Control-z" "Control-z" U020202)("conventions" "conventions" U0003)("conventions" "conventions" U0501)("conversion predicates" "conversion predicates" L0303)("conversion predicates" "conversion predicates, naming" L0303)("Converting between Constants and Characters" "Converting between Constants and Characters" L0303)("Converting between Constants and Text" "Converting between Constants and Text" R0711)("converting lists to sets" "converting lists to sets" L010601)("converting lists to sets" "converting lists to sets" L0107)("Converting Non-module-files into Module-files" "Converting Non-module-files into Module-files" R1204)("copy_term(+Term, -Copy)" "copy_term(+Term, -Copy)" R0713)("copy_term/2 -- built-in predicate" "copy_term/2 -- built-in predicate" L0201)("copy_term/2 -- built-in predicate" "copy_term/2 -- built-in predicate" R0713)("correspond/4 -- library predicate" "correspond/4 -- library predicate" L0105)("correspondences of Lisp to Prolog" "correspondences of Lisp to Prolog" S0204)("counting subterms" "counting subterms, identical" L0205)("counting subterms" "counting subterms, unifiable" L0205)("Creating a Module Dynamically" "Creating a Module Dynamically" R1209)("Creating Dynamic Predicates" "Creating Dynamic Predicates" U0408)("creating new files" "creating new files" R050304)("creep" "creep" U0605)("creep" "creep" U061201)("creep" "creep" U08)("creeping" "creeping" R110301)("creeping" "creeping" R110302)("creeping" "creeping" R110305)("creeping" "creeping" R110501)("cross-reference" "cross-reference" U08)("cross-references" "cross-references, following" S060101)("cross-references" "cross-references, locating" S060101)("cross-referencing Prolog programs" "cross-referencing Prolog programs" L070101)("current input and output streams" "current input and output streams" R05)("current input and output streams" "current input and output streams" R050311)("current input and output streams" "current input and output streams" R050312)("current input and output streams" "current input and output streams" R050313)("current input and output streams" "current input and output streams" R050314)("current input stream, reading lines from" "current input stream, reading lines from" L0603)("Current Modules" "Current Modules" R1213)("Current operators, determining" "Current operators, determining" R010502)("current output stream" "current output stream, writing characters to" L0603)("current output stream" "current output stream, writing lines to" L0603)("current working directory" "current working directory" L0502)("current" "current" R1213)("current-key" "current-key" R1504)("current_atom" "current_atom" R0903)("current_atom(?Atom)" "current_atom(?Atom)" R0903)("current_atom/1 -- built-in predicate" "current_atom/1 -- built-in predicate" R0903)("current_input" "current_input" R050313)("current_input(-Stream)" "current_input(-Stream)" R050313)("current_input/1 -- built-in predicate" "current_input/1 -- built-in predicate" R050313)("current_key(?KeyName, ?KeyTerm)" "current_key(?KeyName, ?KeyTerm)" R1504)("current_key/2 -- built-in predicate" "current_key/2 -- built-in predicate" R1504)("current_module(Mod)" "current_module(Mod)" R121301)("current_module(Module, File)" "current_module(Module, File)" R121302)("current_module/1 -- built-in predicate" "current_module/1 -- built-in predicate" R121301)("current_module/2 -- built-in predicate" "current_module/2 -- built-in predicate" R121302)("current_op" "current_op" R010502)("current_op(?Precedence, ?Type, ?Op)" "current_op(?Precedence, ?Type, ?Op)" R010502)("current_op/3 -- built-in predicate" "current_op/3 -- built-in predicate" R010502)("current_output" "current_output" R050314)("current_output(-Stream)" "current_output(-Stream)" R050314)("current_output/1 -- built-in predicate" "current_output/1 -- built-in predicate" R050314)("current_predicate" "current_predicate" R0904)("current_predicate(?Name, ?Term)" "current_predicate(?Name, ?Term)" R0904)("current_predicate/2 -- built-in predicate" "current_predicate/2 -- built-in predicate" R0904)("current_predicate/2 -- built-in predicate" "current_predicate/2 -- built-in predicate" R121401)("current_stream" "current_stream" R050307)("current_stream(?File, ?Mode, ?Stream)" "current_stream(?File, ?Mode, ?Stream)" R050307)("current_stream/3 -- built-in predicate" "current_stream/3 -- built-in predicate" L0502)("current_stream/3 -- built-in predicate" "current_stream/3 -- built-in predicate" R050307)("cursor" "cursor" U08)("cut" "cut" R0204)("cut" "cut" R0403)("cut" "cut" R1902)("cut" "cut" U08)("cut" "cut, local cut (->)" R0407)("cut" "cut, placement of" R190202)("cut" "cut, use with generate-and-test paradigm" R190203)("c[reep] -- debugger option" "c[reep] -- debugger option" R110305)("c[reep] -- debugger option" "c[reep] -- debugger option" R110501)("data base modification" "data base modification" R13)("Data Base References" "Data Base References" R14)("data base references, removing" "data base references, removing" S0507)("data base" "data base" U08)("data conversion predicates" "data conversion predicates" L0303)("data conversion predicates" "data conversion predicates, naming" L0303)("data space, global" "data space, global" S0301)("Data Tables" "Data Tables" R190401)("database" "database" R14)("database-tut" "database-tut" U010201)("debug" "debug" R110601)("debug" "debug" U08)("debug-options" "debug-options" U0612)("debug-select" "debug-select" U0606)("debug/0 -- built-in predicate" "debug/0 -- built-in predicate" R110601)("Debugger Concepts" "Debugger Concepts" R1103)("debugger" "debugger, improvements to" S0504)("debugger" "debugger, leashing procedure ports" S0504)("debugger" "debugger, options" S0504)("debugger" "debugger, print depth" S0504)("debugger" "debugger, turning off" S0504)("Debugging Code in a Module" "Debugging Code in a Module" R1210)("Debugging Compiled Procedures" "Debugging Compiled Procedures" R110506)("Debugging Compiled Procedures" "Debugging Compiled Procedures" U0604)("Debugging Example" "Debugging Example" U0611)("Debugging Only Selected Procedures" "Debugging Only Selected Procedures" U0606)("Debugging Programs" "Debugging Programs" U06)("Debugging Selected Procedures" "Debugging Selected Procedures" R110303)("debugging" "debugging" R11)("debugging" "debugging" R110605)("debugging" "debugging" U06)("debugging" "debugging" U0602)("debugging" "debugging, built-in predicates for" R1106)("debugging" "debugging, changing prompting" U0608)("debugging" "debugging, Control c interrupts" R1001)("debugging" "debugging, current state of" R110605)("debugging" "debugging, debug mode" R110301)("debugging" "debugging, debugging flag" R1803)("debugging" "debugging, debugging flag" R1804)("debugging" "debugging, during compilation" R030102)("debugging" "debugging, during consultation" R030101)("debugging" "debugging, error conditions" R1101)("debugging" "debugging, format of messages" U0610)("debugging" "debugging, help" R1105)("debugging" "debugging, leashing" R110610)("debugging" "debugging, messages" R1104)("debugging" "debugging, modules" R1210)("debugging" "debugging, options for" U0612)("debugging" "debugging, options when prompted by debugger" R1105)("debugging" "debugging, ports" R110305)("debugging" "debugging, redefining procedures during" U0613)("debugging" "debugging, removing spypoints" R110607)("debugging" "debugging, removing spypoints" R110608)("debugging" "debugging, selected procedures only" R110303)("debugging" "debugging, setting spypoints" R110606)("debugging" "debugging, state of" U0609)("debugging" "debugging, trace mode" R110301)("debugging" "debugging, trace mode" R110302)("debugging" "debugging, trapping calls to undefined predicates" R110609)("debugging" "debugging, turning off" R110504)("debugging" "debugging, turning off" R110603)("debugging" "debugging, turning off" R110604)("debugging" "debugging, turning off" U0603)("debugging" "debugging, turning on" R110601)("debugging" "debugging, turning on" R110602)("debugging" "debugging, turning on" U0602)("debugging" "debugging, unknown flag" R1804)("debugging" "debugging, use with compiled procedures" R1001)("debugging" "debugging, use with compiled procedures" R110506)("debugging" "debugging, use with compiled procedures" U0604)("debugging-a-procedure" "debugging-a-procedure" U0602)("debugging-option-g" "debugging-option-g" U061201)("debugging/0 -- built-in predicate" "debugging/0 -- built-in predicate" R110605)("debugoptions" "debugoptions" U0612)("DEC-10 Prolog Compatible Character I/O to Terminal" "DEC-10 Prolog Compatible Character I/O to Terminal" R0507)("DEC-10 Prolog, comparison to" "DEC-10 Prolog, comparison to" S05)("DEC-10 Prolog-Compatible File Handling" "DEC-10 Prolog-Compatible File Handling" R0506)("DEC-10 Prolog-file-handling" "DEC-10 Prolog-file-handling" R0506)("decimal digit, recognizing" "decimal digit, recognizing" L0602)("declarations, module" "declarations, module" R030202)("Declarative and Procedural Semantics" "Declarative and Procedural Semantics" R0203)("declarative semantics" "declarative semantics" R0203)("default arguments" "default arguments" L0606)("Defining a Module" "Defining a Module" R1203)("Defining Clauses for a Predicate in Multiple Files" "Defining Clauses for a Predicate in Multiple Files" R0305)("Defining Procedures Directly" "Defining Procedures Directly" U0305)("defining-a-module" "defining-a-module" R1203)("definite clause grammars" "definite clause grammars" R1701)("definite clause grammars" "definite clause grammars, generation of phrases" R170403)("definite" "definite" R1701)("Definition" "Definition" R1401)("delete" "delete" L0105)("delete/3 -- library predicate" "delete/3 -- library predicate" L0105)("delete_file/1 -- library predicate" "delete_file/1 -- library predicate" L0503)("deleting common elements of sets" "deleting common elements of sets" L010601)("deleting elements from a list" "deleting elements from a list" L0105)("deleting files" "deleting files" L0503)("delimiter pairs, recognizing" "delimiter pairs, recognizing" L0602)("del_element" "del_element" L010601)("del_element/3 -- library predicate" "del_element/3 -- library predicate" L010601)("depth of procedure invocation" "depth of procedure invocation" R1104)("depth of procedure invocation" "depth of procedure invocation" R110502)("depth" "depth" R1008)("depth(-D)" "depth(-D)" R1008)("depth/1 -- built-in predicate" "depth/1 -- built-in predicate" R1008)("Determinacy Detection" "Determinacy Detection" R190402)("determinacy detection" "determinacy detection, last clause" R1905)("determinacy detection" "determinacy detection, via indexing" R190402)("determinacy of goals, forcing" "determinacy of goals, forcing" L0405)("determinacy" "determinacy" R190402)("determinate" "determinate" U08)("determinate, making procedures" "determinate, making procedures" R190201)("difference of ordered sets" "difference of ordered sets" L0107)("digit recognition" "digit recognition, arbitrary base" L0602)("digit recognition" "digit recognition, decimal" L0602)("directive" "directive" U08)("directives" "directives" R0201)("directives" "directives, in compiled files" R030102)("directives" "directives, in consulted files" R030101)("directories, searching" "directories, searching" R030601)("directory" "directory, current working" L0502)("directory" "directory, default" L0502)("disjoint sets, checking for" "disjoint sets, checking for" L010601)("disjoint/2 -- library predicate" "disjoint/2 -- library predicate" L010601)("disjunct" "disjunct" R1901)("Disjunction and Conditionals" "Disjunction and Conditionals" U0502)("disjunction" "disjunction" R0202)("disjunction" "disjunction" R0402)("disjunction" "disjunction" R1901)("disjunction" "disjunction" U0502)("disjunction" "disjunction" U08)("disjunction" "disjunction, bitwise" R0601)("Display Toggles" "Display Toggles" S060102)("display" "display" R050105)("display" "display" U061201)("display(?X)" "display(?X)" R050105)("display/1 -- built-in predicate" "display/1 -- built-in predicate" R050105)("division" "division" U0701)("division" "division, floating-point" R0601)("division" "division, integer" R0601)("division" "division, of floating-point numbers" S0502)("division" "division, of integers" S0502)("Driving Example" "Driving Example" U010203)("duplication, removing from a list" "duplication, removing from a list" L0105)("Dynamic and Static Procedures" "Dynamic and Static Procedures" R1301)("dynamic code, semantics of" "dynamic code, semantics of" R13)("dynamic predicates" "dynamic predicates" U0408)("dynamic predicates" "dynamic predicates" U0703)("dynamic predicates" "dynamic predicates" U08)("dynamic procedures" "dynamic procedures" S0503)("dynamic" "dynamic" R1301)("dynamic" "dynamic, predicates, importing" R1215)("dynamic" "dynamic, procedures and declarations" R1301)("dynamic" "dynamic, procedures in compiled programs" R030102)("dynamic-modules" "dynamic-modules" R1209)("dynamic-procedures" "dynamic-procedures" U0408)("d[isplay] -- debugger option" "d[isplay] -- debugger option" R110502)("editor" "editor" S0401)("efficiency, increasing" "efficiency, increasing" R19)("elements of a list" "elements of a list, deleting" L0105)("elements of a list" "elements of a list, finding" L010403)("elements of a list" "elements of a list, finding" L0105)("elements of a list" "elements of a list, permutations" L0105)("elements of a list" "elements of a list, removing duplicates" L0105)("elements of a list" "elements of a list, reversing" L0105)("elements of a list" "elements of a list, selecting" L0105)("elements of a list" "elements of a list, summing" L0105)("elements of a set" "elements of a set, adding" L010601)("elements of a set" "elements of a set, appending" L010602)("elements of a set" "elements of a set, deleting common" L010601)("elements of a set" "elements of a set, deleting" L010601)("elements of a set" "elements of a set, finding" L010602)("elements of a set" "elements of a set, removing" L010601)("elements of a set" "elements of a set, selecting pairs" L010601)("elements of a set" "elements of a set, selecting" L010601)("elements of ordered sets" "elements of ordered sets, adding" L0107)("elements of ordered sets" "elements of ordered sets, checking for intersecting" L0107)("elements of ordered sets" "elements of ordered sets, deleting" L0107)("elements of ordered sets" "elements of ordered sets, product" L0107)("Emacs" "Emacs, invoking Prolog with" R0003)("Emacs" "Emacs, loading modules" R1211)("embedded-commands" "embedded-commands" U0304)("Enabling and Disabling the Garbage Collector" "Enabling and Disabling the Garbage Collector" S0303)("end of file" "end of file, characters" L0602)("end of file" "end of file, detecting" L0602)("end of line" "end of line, characters" L0602)("end of line" "end of line, characters" L0607)("end of line" "end of line, detecting" L0602)("end of page" "end of page, detecting" L0602)("end-of-file character" "end-of-file character" U0003)("end-of-file" "end-of-file, character" R0003)("end-of-file" "end-of-file, character" R1003)("end-of-file" "end-of-file, on character input" R050201)("end-of-file" "end-of-file, on term input" R050101)("end-of-file" "end-of-file, sending from keyboard" R1003)("end_of_file atom" "end_of_file atom" R050101)("end_of_file, atom" "end_of_file, atom" U0003)("ensure-loaded" "ensure-loaded" R030103)("ensure_loaded(+FileSpec)" "ensure_loaded(+FileSpec)" R030103)("ensure_loaded/1 -- built-in predicate" "ensure_loaded/1 -- built-in predicate" R030103)("ensure_loaded/1 -- built-in predicate" "ensure_loaded/1 -- built-in predicate" R1205)("enter-prolog" "enter-prolog" U020102)("Entering Information into Prolog" "Entering Information into Prolog" U010201)("entering Prolog without Emacs" "entering Prolog without Emacs" U0102)("Entering Prolog" "Entering Prolog" U020102)("enumerating elements of lists" "enumerating elements of lists" L010402)("enumerating solutions to a goal" "enumerating solutions to a goal" R1601)("enumerating solutions to a goal" "enumerating solutions to a goal" R1602)("enumerating subterms of a term" "enumerating subterms of a term" L0205)("env-options" "env-options" R110504)("Environment Options" "Environment Options" R110504)("equality of ordered sets" "equality of ordered sets" L0107)("equality" "equality, arithmetic" R060301)("equality" "equality, floating-point" R0603)("equality" "equality, of terms" R0802)("equality" "equality, unification" R1801)("equals" "equals" R1801)("erase" "erase" R1406)("erase(+Ref)" "erase(+Ref)" R1406)("erase/1 -- built-in predicate" "erase/1 -- built-in predicate" R1406)("Error Conditions" "Error Conditions" R1101)("Error Messages for Built-in Predicates" "Error Messages for Built-in Predicates" U0405)("error messages" "error messages, built-in predicates" U0405)("error messages" "error messages, syntax" U0306)("error-conditions" "error-conditions" R1101)("escaping, character" "escaping, character" R0103)("escaping, character" "escaping, character" R050104)("Example" "Example" R130204)("exchanging arguments of terms" "exchanging arguments of terms" L0204)("exclamation point, recognizing" "exclamation point, recognizing" L0602)("executing Lisp functions from within Prolog" "executing Lisp functions from within Prolog" S0202)("Executing Lisp Functions from Within Prolog" "Executing Lisp Functions from Within Prolog" S0203)("executing operating system commands" "executing operating system commands" R0003)("Executing Xerox Lisp Functions from Prolog" "Executing Xerox Lisp Functions from Prolog" U0407)("executing Xerox Lisp functions from within Prolog" "executing Xerox Lisp functions from within Prolog" U0407)("execution" "execution, interrupting" U0404)("execution" "execution, tracing every step of" U0605)("execution" "execution, tracing every step of" U061102)("exhaustive tracing of execution" "exhaustive tracing of execution" S0504)("Exhaustive Tracing" "Exhaustive Tracing" R110302)("Exhaustively Tracing Execution of a Program" "Exhaustively Tracing Execution of a Program" U061102)("existence of files, checking for" "existence of files, checking for" L0504)("existential quantification" "existential quantification" R1601)("exit port of a procedure box" "exit port of a procedure box" R1102)("Exiting Prolog" "Exiting Prolog" U010204)("expand_term" "expand_term" R170401)("expand_term(+T1, -T2)" "expand_term(+T1, -T2)" R170401)("expand_term/2 -- built-in predicate" "expand_term/2 -- built-in predicate" R170401)("explicit unification" "explicit unification" R1801)("export" "export" U08)("exporting predicates from a module" "exporting predicates from a module" R1203)("expressions, arithmetic" "expressions, arithmetic" R0601)("expressions, arithmetic" "expressions, arithmetic, inequality of" L0404)("extracting characters from text objects" "extracting characters from text objects" L0306)("fact" "fact" U0101)("fact" "fact" U08)("fail port of a procedure box" "fail port of a procedure box" R1102)("fail" "fail" R0410)("fail, debugging option" "fail, debugging option" U061201)("fail/0 -- built-in predicate" "fail/0 -- built-in predicate" R0410)("fail/0 -- built-in predicate" "fail/0 -- built-in predicate" U0610)("failing through all solutions" "failing through all solutions" U0402)("false" "false" R0411)("false/0 -- built-in predicate" "false/0 -- built-in predicate" R0411)("false/0 -- built-in predicate" "false/0 -- built-in predicate" U0610)("File Browser" "File Browser" L0505)("file names" "file names" R050302)("file names" "file names, reading from terminal" L0606)("File Specifications" "File Specifications" R050302)("file, searching for in a library" "file, searching for in a library" S0107)("file-handling" "file-handling" R0503)("fileerrors flag" "fileerrors flag" R050308)("fileerrors flag" "fileerrors flag" R050309)("fileerrors flag" "fileerrors flag" R1803)("fileerrors flag" "fileerrors flag" R1804)("fileerrors" "fileerrors" R050309)("fileerrors/0 -- built-in predicate" "fileerrors/0 -- built-in predicate" R050309)("files" "files" L05)("files" "files, absolute file names" R050315)("files" "files, appending to" R050304)("files" "files, checking for existence" L0504)("files" "files, checking permissions of" L0504)("files" "files, checking whether openable" L0504)("files" "files, closing" L0502)("files" "files, closing" R050306)("files" "files, creating new" R050304)("files" "files, DEC-10 Prolog compatible handling of" R0506)("files" "files, deleting" L0503)("files" "files, finding absolute name" L0502)("files" "files, I/O after renaming" L0503)("files" "files, loading" R030103)("files" "files, opening for input and output" L0502)("files" "files, opening for input" L0502)("files" "files, opening for output" L0502)("files" "files, opening" L0504)("files" "files, opening" R050304)("files" "files, predicate clauses in multiple files" R030501)("files" "files, reading names from terminal" L050601)("files" "files, renaming" L0503)("files" "files, searching for in a library" R0306)("files" "files, searching for library" L0502)("file_exists/1 -- library predicate" "file_exists/1 -- library predicate" L0504)("file_exists/2 -- library predicate" "file_exists/2 -- library predicate" L0504)("file_must_exist/2 -- library predicate" "file_must_exist/2 -- library predicate" L0504)("find definition" "find definition" U0403)("Find Definition" "Find Definition" U061201)("find-definition command" "find-definition command" R030501)("find-definition command" "find-definition command" R110504)("find-definition" "find-definition" U0403)("find-more-definition command" "find-more-definition command" R030501)("find-more-definition command" "find-more-definition command" R110504)("Finding a Terms Arguments -- library(arg)" "Finding a Terms Arguments -- library(arg)" L0203)("Finding All Solutions to a Goal" "Finding All Solutions to a Goal" U0402)("Finding and Extracting Substrings" "Finding and Extracting Substrings" L0307)("finding corresponding elements of lists" "finding corresponding elements of lists" L0105)("finding elements of lists" "finding elements of lists" L010402)("finding intersection of ordered sets" "finding intersection of ordered sets" L0107)("finding keywords for memory usage statistics" "finding keywords for memory usage statistics" S030102)("finding known elements in a list" "finding known elements in a list" L010403)("finding length of text objects" "finding length of text objects" L0306)("finding members of sets" "finding members of sets" L010602)("finding permutations of a list" "finding permutations of a list" L0105)("finding position of list element" "finding position of list element" L0105)("finding single differences between lists" "finding single differences between lists" L0105)("finding subsequences of a list" "finding subsequences of a list" L0105)("finding subtree of a tree" "finding subtree of a tree" L0203)("finding successive pairs in a list" "finding successive pairs in a list" L0105)("finding sum of list elements" "finding sum of list elements" L0105)("finding the last element in a list" "finding the last element in a list" L0105)("Finding the Length and Contents of a Text Object" "Finding the Length and Contents of a Text Object" L0306)("finding the shorter of two lists" "finding the shorter of two lists" L0105)("finding the source code for a procedure" "finding the source code for a procedure" R110504)("find_symbol/3 -- built-in predicate" "find_symbol/3 -- built-in predicate" S0201)("first-lib-chapter" "first-lib-chapter" L01)("first-order logic" "first-order logic" U0101)("first-order logic" "first-order logic" U08)("fixed-point numbers" "fixed-point numbers" R0003)("flag" "flag, character escaping" R1804)("flag" "flag, character_escapes" R1803)("flag" "flag, debugging" R1803)("flag" "flag, debugging" R1804)("flag" "flag, fileerrors" R1803)("flag" "flag, fileerrors" R1804)("flag" "flag, gc" R1803)("flag" "flag, gc" R1804)("flag" "flag, gc_margin" R1803)("flag" "flag, gc_margin" R1804)("flag" "flag, gc_trace" R1803)("flag" "flag, gc_trace" R1804)("flag" "flag, type-in module" R1804)("flag" "flag, unknown procedure" R1804)("flight example" "flight example" U0611)("float" "float" R0705)("float(?X)" "float(?X)" R0705)("float, arithmetic functor" "float, arithmetic functor" R0601)("float/1 -- built-in predicate" "float/1 -- built-in predicate" R0705)("float/1 -- built-in predicate" "float/1 -- built-in predicate" S0502)("float/1, arithmetic functor" "float/1, arithmetic functor" S0502)("floating-point numbers" "floating-point numbers" R0003)("Floating-point Numbers" "Floating-point Numbers" R010102)("floating-point numbers" "floating-point numbers" S0502)("Floating-point Numbers" "Floating-point Numbers" U0702)("floating-point numbers" "floating-point numbers, division" S0502)("floating-point numbers" "floating-point numbers, range of" S0104)("floating-point" "floating-point" U0701)("floats" "floats" R010102)("floats" "floats, as constants" L0303)("floats" "floats, coercion of integers to" R0601)("floats" "floats, comparison of" R0603)("floats" "floats, equality of" R0603)("Floats" "Floats, limits" R0003)("floats" "floats, printing" R050108)("floats" "floats, syntax of" R010102)("flush_output" "flush_output" R050310)("flush_output(+Stream)" "flush_output(+Stream)" R050310)("flush_output/1 -- built-in predicate" "flush_output/1 -- built-in predicate" R050310)("following cross-references" "following cross-references" S060101)("Following Cross-references" "Following Cross-references" U020302)("forcing determinacy of goals" "forcing determinacy of goals" L0405)("Forcing Goal Determinacy -- once(Goal)" "Forcing Goal Determinacy -- once(Goal)" L0405)("foreign function interface" "foreign function interface" R0003)("foreign-interface" "foreign-interface" S0204)("foreign/2 -- user-defined predicate" "foreign/2 -- user-defined predicate" R0003)("foreign/3 -- user-defined predicate" "foreign/3 -- user-defined predicate" R0003)("foreign_file/2 -- user-defined predicate" "foreign_file/2 -- user-defined predicate" R0003)("Formal Syntax" "Formal Syntax" R0108)("Format of Debugging Messages" "Format of Debugging Messages" R1104)("Format of Debugging Messages" "Format of Debugging Messages" U0610)("format" "format" R050108)("format" "format" R050401)("format(+Control, +Arguments)" "format(+Control, +Arguments)" R050108)("format/2 -- built-in predicate" "format/2 -- built-in predicate" R050108)("format/3 -- built-in predicate" "format/3 -- built-in predicate" R050401)("formatted printing" "formatted printing" R050108)("Four List Processing Packages" "Four List Processing Packages" L0103)("free_of_term/2 -- library predicate" "free_of_term/2 -- library predicate" L0205)("free_of_var/2 -- library predicate" "free_of_var/2 -- library predicate" L0205)("fromonto" "fromonto" L050602)("full" "full" R0108)("full-stop" "full-stop" R010804)("full-stop" "full-stop" R0203)("full-stop" "full-stop" U010201)("full-stop" "full-stop" U08)("full-stop" "full-stop, use of" R050101)("full-stop" "full-stop, use of" R050102)("functor" "functor" R0102)("functor" "functor" R0708)("functor" "functor" U08)("functor(?Term, ?Name, ?Arity)" "functor(?Term, ?Name, ?Arity)" R0708)("functor/3 -- built-in predicate" "functor/3 -- built-in predicate" L0201)("functor/3 -- built-in predicate" "functor/3 -- built-in predicate" R0708)("functors of terms" "functors of terms, matching" L0207)("Functors" "Functors, maximum arity of" S0105)("f[ail] -- debugger option" "f[ail] -- debugger option" R110503)("g -- debugger option" "g -- debugger option" R110502)("Garbage Collection and Programming Style" "Garbage Collection and Programming Style" S0302)("garbage collection" "garbage collection" R130301)("garbage collection" "garbage collection" R130304)("Garbage collection" "Garbage collection" S0302)("garbage collection" "garbage collection" U08)("garbage collection" "garbage collection, enabling and disabling" S0303)("garbage collection" "garbage collection, flags" R1803)("garbage collection" "garbage collection, flags" R1804)("garbage collection" "garbage collection, invoking directly" S0305)("garbage collection" "garbage collection, margin flag" R1803)("garbage collection" "garbage collection, margin flag" R1804)("garbage collection" "garbage collection, monitoring" S0304)("garbage collection" "garbage collection, on/off flag" R1803)("garbage collection" "garbage collection, on/off flag" R1804)("garbage collection" "garbage collection, trace flag" R1803)("garbage collection" "garbage collection, trace flag" R1804)("garbage_collect" "garbage_collect" S030501)("garbage_collect/0 -- built-in predicate" "garbage_collect/0 -- built-in predicate" R0003)("garbage_collect/0 -- built-in predicate" "garbage_collect/0 -- built-in predicate" S030501)("gc flag" "gc flag" R1803)("gc flag" "gc flag" R1804)("gc" "gc" S030302)("gc/0 -- built-in predicate" "gc/0 -- built-in predicate" R0003)("gc_margin flag" "gc_margin flag" R1803)("gc_margin flag" "gc_margin flag" R1804)("gc_trace flag" "gc_trace flag" R1803)("gc_trace flag" "gc_trace flag" R1804)("genarg" "genarg" L0203)("genarg/3 -- library predicate" "genarg/3 -- library predicate" L0203)("genarg0/3 -- library predicate" "genarg0/3 -- library predicate" L0203)("generate-and-test, use with cut" "generate-and-test, use with cut" R190203)("Generating Atoms" "Generating Atoms" L0308)("generating lists" "generating lists" L010402)("generating lists" "generating lists, of identical length" L0105)("generating subsets of a set" "generating subsets of a set" L0105)("generating subsets of a set" "generating subsets of a set" L010602)("generation of phrases" "generation of phrases" R170403)("gensym" "gensym" L0308)("gensym/1 -- library predicate" "gensym/1 -- library predicate" L0308)("gensym/2 -- library predicate" "gensym/2 -- library predicate" L0305)("gensym/2 -- library predicate" "gensym/2 -- library predicate" L0308)("get" "get" R050202)("get" "get" R050402)("get(-N)" "get(-N)" R050202)("get/1 -- built-in predicate" "get/1 -- built-in predicate" R050202)("get/2 -- built-in predicate" "get/2 -- built-in predicate" R050402)("get0" "get0" R050201)("get0" "get0" R050402)("get0(-N)" "get0(-N)" R050201)("get0/1 -- built-in predicate" "get0/1 -- built-in predicate" R050201)("get0/2 -- built-in predicate" "get0/2 -- built-in predicate" R050402)("getting" "getting" U02)("gettopval/2 -- built-in predicate" "gettopval/2 -- built-in predicate" S0202)("get_line/1 -- library predicate" "get_line/1 -- library predicate" L0603)("get_line/2 -- library predicate" "get_line/2 -- library predicate" L0603)("global data space" "global data space" S0301)("Global Variables" "Global Variables" S060103)("Glossary" "Glossary" U08)("goal" "goal" R0201)("goal" "goal" U08)("goal" "goal, enumerating solutions" R1601)("goal" "goal, enumerating solutions" R1602)("goals" "goals, forcing determinacy of" L0405)("grammar rules" "grammar rules" L0301)("Grammar Rules" "Grammar Rules" R17)("Grammar-related Built-in Predicates" "Grammar-related Built-in Predicates" R1704)("grammar-rules" "grammar-rules" R17)("grammars" "grammars" R17)("grammars" "grammars, generation of phrases" R170403)("grammars" "grammars, translation into clauses" R1703)("graphic character, recognizing" "graphic character, recognizing" L0602)("halt" "halt" R1002)("halt" "halt" U020202)("halt/0 -- built-in predicate" "halt/0 -- built-in predicate" R1002)("Halting the Execution of Prolog" "Halting the Execution of Prolog" U020202)("head of a clause" "head of a clause" R0201)("head of rule" "head of rule" U010101)("head of rule" "head of rule" U08)("Help Options" "Help Options" R110505)("help system" "help system" S06)("help system" "help system, accessing with Prolog predicates" S0602)("Help system" "Help system, on-line" S0501)("help" "help" S0601)("help" "help" S060101)("help" "help" S0602)("help" "help" S060201)("help" "help" S060202)("help" "help" U0203)("help" "help" U020302)("help" "help" U020303)("help" "help, during debugging" R1105)("help(+Topic)" "help(+Topic)" S060202)("help, debugging option" "help, debugging option" U061201)("help-system" "help-system" U0203)("help/0 -- built-in predicate" "help/0 -- built-in predicate" S060201)("help/1 -- built-in predicate" "help/1 -- built-in predicate" S060202)("Horn clause" "Horn clause" U010101)("Horn clause" "Horn clause" U08)("Horn Clauses" "Horn Clauses" U010101)("How to Use the Xerox Quintus Prolog Manuals" "How to Use the Xerox Quintus Prolog Manuals" U0002)("h[elp] -- debugger option" "h[elp] -- debugger option" R110505)("I/O Streams" "I/O Streams" S0106)("identifier, recognizing" "identifier, recognizing" L0602)("if-then-else" "if-then-else" R0406)("if-then-else" "if-then-else" R0407)("imp" "imp" R130302)("import" "import" U08)("Important Issues in Use of retract/1" "Important Issues in Use of retract/1" R130302)("importation" "importation" R030202)("importation" "importation, predicates from another module" R1202)("importation" "importation, predicates from another module" R1205)("Importing Dynamic/Interpreted Predicates" "Importing Dynamic/Interpreted Predicates" R1215)("Improved Compiler/Interpreter Interface" "Improved Compiler/Interpreter Interface" S0503)("Improved Debugger" "Improved Debugger" S0504)("Improved Handling of Data Base References" "Improved Handling of Data Base References" S0507)("incompatibilities" "incompatibilities" U0705)("incore/1 -- built-in predicate" "incore/1 -- built-in predicate" R0404)("incrementally interpreting or compiling" "incrementally interpreting or compiling" R0003)("Index to on-line manuals" "Index to on-line manuals" S060101)("index/3 -- library predicate" "index/3 -- library predicate" L030702)("indexing" "indexing" R1904)("indexing" "indexing, of dynamic code" R1301)("Inequality" "Inequality" L0404)("inequality" "inequality, of arithmetic expressions" L0404)("inequality" "inequality, of terms" L0404)("inequality" "inequality, of terms" L040401)("inequality" "inequality, sound" L040402)("infinite loops -- using maxdepth/1 to prevent" "infinite loops -- using maxdepth/1 to prevent" R1007)("infix operators" "infix operators" R0102)("infix operators" "infix operators" R0104)("initialization file" "initialization file" U0308)("Initialization Files" "Initialization Files" S0101)("initialization of Prolog -- prolog.ini files" "initialization of Prolog -- prolog.ini files" S0101)("Input and Output of Characters" "Input and Output of Characters" R0502)("Input and Output of Terms" "Input and Output of Terms" R0501)("Input and output streams" "Input and output streams" S0106)("Input and output streams" "Input and output streams" S0506)("input and output streams" "input and output streams, standard" S0105)("Input and output using renamed files" "Input and output using renamed files" L0503)("Input and Output Using Specified Streams" "Input and Output Using Specified Streams" R0504)("Input and Output" "Input and Output" R05)("input and output" "input and output, DEC-10 Prolog compatible handling of" R0507)("input and output" "input and output, of characters" R0502)("input and output" "input and output, of terms" R0501)("input and output" "input and output, streams" R05)("input and output" "input and output, streams" R0503)("input and output" "input and output, streams" R050601)("input and output" "input and output, with explicit stream argument" R050401)("input and output" "input and output, with explicit stream argument" R050402)("input stream" "input stream, reading constants from" L0608)("input stream" "input stream, reading lines from" L0603)("input stream" "input stream, reading lists from" L0608)("input stream" "input stream, reading sentences from" L0605)("input stream" "input stream, reading sentences from" L060502)("input" "input, Pascal-like" L0608)("input" "input, prompted" L0607)("input" "input, reading file names from terminal" L0606)("instance" "instance" R1407)("instance(+Ref, -Term)" "instance(+Ref, -Term)" R1407)("instance/2 -- built-in predicate" "instance/2 -- built-in predicate" R1407)("instantiated" "instantiated" R0701)("instantiation fault" "instantiation fault" R1101)("instantiation" "instantiation" U08)("integer" "integer" R0704)("integer(?X)" "integer(?X)" R0704)("integer, arithmetic functor" "integer, arithmetic functor" R0601)("integer/1 -- built-in predicate" "integer/1 -- built-in predicate" R0704)("integer/1 -- built-in predicate" "integer/1 -- built-in predicate" S0502)("integer/1, arithmetic functor" "integer/1, arithmetic functor" S0502)("integers as terms" "integers as terms" L0203)("Integers" "Integers" R010101)("integers" "integers, as constants" L0303)("integers" "integers, coercion of floats to" R0601)("integers" "integers, comparison of" R0603)("integers" "integers, division" S0502)("Integers" "Integers, limits" R0003)("integers" "integers, printing" R050108)("integers" "integers, range of" R06)("integers" "integers, syntax of" R010101)("internal data base" "internal data base" R15)("internal" "internal" R15)("interpretation of clauses" "interpretation of clauses, declarative" R0203)("interpretation of clauses" "interpretation of clauses, procedural" R0203)("interpreted predicates, importing" "interpreted predicates, importing" R1215)("interpreter" "interpreter" U0703)("interpreter" "interpreter" U08)("interrupting program execution" "interrupting program execution" U0404)("interrupting Prolog" "interrupting Prolog" R1001)("Interrupting the Execution of a Program" "Interrupting the Execution of a Program" U0404)("intersect/2 -- library predicate" "intersect/2 -- library predicate" L010601)("intersection of sets" "intersection of sets" L010601)("intersection/3 -- library predicate" "intersection/3 -- library predicate" L010601)("Introduction -- library(files)" "Introduction -- library(files)" L0501)("Introduction -- library(not)" "Introduction -- library(not)" L0401)("Introduction -- library(strings)" "Introduction -- library(strings)" L0301)("Introduction" "Introduction" L00)("Introduction" "Introduction" L0101)("Introduction" "Introduction" L0201)("Introduction" "Introduction" L0601)("Introduction" "Introduction" R00)("Introduction" "Introduction" R1201)("introduction" "introduction" U00)("invocation identifier" "invocation identifier" U0610)("invocation" "invocation, box" R1102)("invocation" "invocation, identifier" R1104)("Invoking the Garbage Collector Directly" "Invoking the Garbage Collector Directly" S0305)("is" "is" R0602)("is-not-provable" "is-not-provable" L0402)("is/2 -- built-in predicate" "is/2 -- built-in predicate" R0602)("is/2 -- built-in predicate" "is/2 -- built-in predicate" U08)("is_alnum/1 -- library predicate" "is_alnum/1 -- library predicate" L0602)("is_alpha/1 -- library predicate" "is_alpha/1 -- library predicate" L0602)("is_ascii/1 -- library predicate" "is_ascii/1 -- library predicate" L0602)("is_cntrl/1 -- library predicate" "is_cntrl/1 -- library predicate" L0602)("is_csym/1 -- library predicate" "is_csym/1 -- library predicate" L0602)("is_csymf/1 -- library predicate" "is_csymf/1 -- library predicate" L0602)("is_digit/1 -- library predicate" "is_digit/1 -- library predicate" L0602)("is_digit/3 -- library predicate" "is_digit/3 -- library predicate" L0602)("is_endfile/1 -- library predicate" "is_endfile/1 -- library predicate" L0602)("is_endline/1 -- library predicate" "is_endline/1 -- library predicate" L0602)("is_graph/1 -- library predicate" "is_graph/1 -- library predicate" L0602)("is_list/1 -- library predicate" "is_list/1 -- library predicate" L0105)("is_lower/1 -- library predicate" "is_lower/1 -- library predicate" L0602)("is_newline/1 -- library predicate" "is_newline/1 -- library predicate" L0602)("is_newpage/1 -- library predicate" "is_newpage/1 -- library predicate" L0602)("is_ordset/1 -- library predicate" "is_ordset/1 -- library predicate" L0107)("is_paren/2 -- library predicate" "is_paren/2 -- library predicate" L0602)("is_period/1 -- library predicate" "is_period/1 -- library predicate" L0602)("is_print/1 -- library predicate" "is_print/1 -- library predicate" L0602)("is_punct/1 -- library predicate" "is_punct/1 -- library predicate" L0602)("is_quote/1 -- library predicate" "is_quote/1 -- library predicate" L0602)("is_set/1 -- library predicate" "is_set/1 -- library predicate" L010601)("is_space/1 -- library predicate" "is_space/1 -- library predicate" L0602)("is_upper/1 -- library predicate" "is_upper/1 -- library predicate" L0602)("is_white/1 -- library predicate" "is_white/1 -- library predicate" L0602)("iteration" "iteration" R0412)("keys, recorded" "keys, recorded" R1504)("keysort" "keysort" R0810)("keysort(+L1, -L2)" "keysort(+L1, -L2)" R0810)("keysort/2 -- built-in predicate" "keysort/2 -- built-in predicate" R0810)("keys_and_values/3 -- library predicate" "keys_and_values/3 -- library predicate" L0105)("keywords for memory usage statistics" "keywords for memory usage statistics" S030102)("keywords for memory usage statistics" "keywords for memory usage statistics, listing" S030102)("Last Clause Determinacy Detection" "Last Clause Determinacy Detection" R1905)("last-lib-chapter" "last-lib-chapter" L06)("last/2 -- library predicate" "last/2 -- library predicate" L0105)("layout characters" "layout characters" L0608)("Layout of Prolog programs" "Layout of Prolog programs" U0501)("layout restrictions, Prolog source code" "layout restrictions, Prolog source code" S0401)("layout" "layout" U05)("leap" "leap" U061201)("leap" "leap" U08)("leaping" "leaping" R110301)("leaping" "leaping" R110501)("leash" "leash" R110610)("leash(+Mode)" "leash(+Mode)" R110610)("leash/1 -- built-in predicate" "leash/1 -- built-in predicate" R110610)("leash/1 -- built-in predicate" "leash/1 -- built-in predicate" S0504)("leashing debugger ports" "leashing debugger ports" S0504)("Leashing" "Leashing" R110304)("leashing" "leashing" U0608)("leashing" "leashing" U08)("length of lists" "length of lists, checking for same" L0105)("length" "length" R1802)("length(?L, ?N)" "length(?L, ?N)" R1802)("length/2 -- built-in predicate" "length/2 -- built-in predicate" L010602)("length/2 -- built-in predicate" "length/2 -- built-in predicate" R1802)("letter, lowercase" "letter, lowercase, conversion to" L0602)("letter, lowercase" "letter, lowercase, recognizing" L0602)("letter, recognizing" "letter, recognizing" L0602)("letter, uppercase" "letter, uppercase, conversion to" L0602)("letter, uppercase" "letter, uppercase, recognizing" L0602)("lexical scope of variables" "lexical scope of variables" R0201)("lib-fbprolog" "lib-fbprolog" L0505)("lib-unix" "lib-unix" L050602)("libcaseconv" "libcaseconv" L0309)("libctypes" "libctypes" L0309)("libinfo" "libinfo" L00)("liblists" "liblists" L0105)("libmaplist" "libmaplist" L070202)("libmaps" "libmaps" L070202)("libordered" "libordered" L070202)("libordprefix" "libordprefix" L070202)("libordsets" "libordsets" L0107)("library files" "library files, searching for in a directory" L0502)("library" "library, as extension of built-in predicates" R1201)("library" "library, searching for a file in" R0306)("library(aggregate) -- unsupported" "library(aggregate) -- unsupported" L070202)("library(arg)" "library(arg)" L0203)("library(arrays) -- unsupported" "library(arrays) -- unsupported" L070202)("library(ask)" "library(ask)" L050601)("library(ask)" "library(ask)" L0606)("library(assoc) -- unsupported" "library(assoc) -- unsupported" L070202)("library(bags) -- unsupported" "library(bags) -- unsupported" L070202)("library(basics)" "library(basics)" L0104)("library(basics)" "library(basics)" L0305)("library(between) -- unsupported" "library(between) -- unsupported" L070202)("library(call) -- unsupported" "library(call) -- unsupported" L0206)("library(call) -- unsupported" "library(call) -- unsupported" L070202)("library(caseconv) -- unsupported" "library(caseconv) -- unsupported" L0304)("library(caseconv) -- unsupported" "library(caseconv) -- unsupported" L0309)("library(caseconv) -- unsupported" "library(caseconv) -- unsupported" L070202)("library(change_arg)" "library(change_arg)" L0204)("library(checker) -- unsupported" "library(checker) -- unsupported" L070102)("library(continued)" "library(continued)" L0604)("library(ctypes)" "library(ctypes)" L0304)("library(ctypes)" "library(ctypes)" L0309)("library(ctypes)" "library(ctypes)" L0602)("library(ctypes)" "library(ctypes)" L070202)("library(decons) -- unsupported" "library(decons) -- unsupported" L070202)("library(fbprolog) -- Prolog and the File Browser" "library(fbprolog) -- Prolog and the File Browser" L0505)("library(fbprolog)" "library(fbprolog)" L0505)("library(files)" "library(files)" L0501)("library(findall) -- unsupported" "library(findall) -- unsupported" L070202)("library(flatten) -- unsupported" "library(flatten) -- unsupported" L070202)("library(foreach) -- unsupported" "library(foreach) -- unsupported" L070202)("library(freevars) -- unsupported" "library(freevars) -- unsupported" L070202)("library(fromonto) -- unsupported" "library(fromonto) -- unsupported" L050602)("library(fromonto) -- unsupported" "library(fromonto) -- unsupported" L070202)("library(fromonto)" "library(fromonto)" L050602)("library(heaps) -- unsupported" "library(heaps) -- unsupported" L070202)("library(knuth_b_1) -- unsupported" "library(knuth_b_1) -- unsupported" L070202)("library(lineio)" "library(lineio)" L0603)("library(lists)" "library(lists)" L0105)("library(logarr) -- unsupported" "library(logarr) -- unsupported" L070202)("library(mapand) -- unsupported" "library(mapand) -- unsupported" L070202)("library(maplist) -- unsupported" "library(maplist) -- unsupported" L0206)("library(maplist) -- unsupported" "library(maplist) -- unsupported" L070202)("library(maps) -- unsupported" "library(maps) -- unsupported" L070202)("library(math) -- unsupported" "library(math) -- unsupported" L070202)("library(multil) -- unsupported" "library(multil) -- unsupported" L070202)("library(not)" "library(not)" L0403)("library(note) -- unsupported" "library(note) -- unsupported" L070202)("library(ordered) -- unsupported" "library(ordered) -- unsupported" L070202)("library(ordprefix) -- unsupported" "library(ordprefix) -- unsupported" L070202)("library(ordset)" "library(ordset)" L0107)("library(print_chars) -- unsupported" "library(print_chars) -- unsupported" L070202)("library(prompt)" "library(prompt)" L0607)("library(qsort) -- unsupported" "library(qsort) -- unsupported" L070202)("library(queues) -- unsupported" "library(queues) -- unsupported" L070202)("library(random) -- unsupported" "library(random) -- unsupported" L070202)("library(readconst)" "library(readconst)" L0608)("library(read_in)" "library(read_in)" L0605)("library(read_in)" "library(read_in)" L060501)("library(read_sent)" "library(read_sent)" L0605)("library(read_sent)" "library(read_sent)" L060502)("library(retract) -- unsupported" "library(retract) -- unsupported" L070202)("library(same_functor)" "library(same_functor)" L0207)("library(samsort) -- unsupported" "library(samsort) -- unsupported" L070202)("library(setof) -- unsupported" "library(setof) -- unsupported" L070202)("library(sets)" "library(sets)" L0106)("library(show) -- unsupported" "library(show) -- unsupported" L070202)("library(show_module) -- unsupported" "library(show_module) -- unsupported" L070202)("library(strings)" "library(strings)" L0304)("library(subsumes)" "library(subsumes)" L0208)("library(trees) -- unsupported" "library(trees) -- unsupported" L070202)("library(unify)" "library(unify)" L0209)("library(update) -- unsupported" "library(update) -- unsupported" L070202)("library(xref) -- unsupported" "library(xref) -- unsupported" L070101)("library, searching for a file in" "library, searching for a file in" S0107)("library-directory" "library-directory" R030601)("library/1, special-purpose functor" "library/1, special-purpose functor" S0107)("library_directory(?DirSpec)" "library_directory(?DirSpec)" R030601)("library_directory/1 -- built-in predicate" "library_directory/1 -- built-in predicate" L0502)("library_directory/1 -- built-in predicate" "library_directory/1 -- built-in predicate" S0107)("library_directory/1 -- user-defined predicate" "library_directory/1 -- user-defined predicate" R030601)("library_directory/1 -- user-defined predicate" "library_directory/1 -- user-defined predicate" S0107)("libsamsort" "libsamsort" L070202)("LibSearching" "LibSearching" R0306)("LibSearching" "LibSearching" S0107)("limits" "limits" R0003)("limits" "limits" R1101)("limits, arithmetic" "limits, arithmetic" S0104)("lines" "lines" L0603)("lines" "lines, reading and writing" L0603)("lines" "lines, reading continued" L0604)("lines" "lines, reading continued, UNIX format" L0604)("lines" "lines, reading from the terminal" L0607)("lines" "lines, reading" L0603)("line_count" "line_count" R050502)("line_count(+Stream, -N)" "line_count(+Stream, -N)" R050502)("line_count/2 -- built-in predicate" "line_count/2 -- built-in predicate" R050502)("line_position" "line_position" R050503)("line_position(+Stream, -N)" "line_position(+Stream, -N)" R050503)("line_position/2 -- built-in predicate" "line_position/2 -- built-in predicate" R050503)("Lisp functions, executing from within Prolog" "Lisp functions, executing from within Prolog" U0407)("Lisp interface" "Lisp interface" S0204)("Lisp objects" "Lisp objects, as constants" L0303)("Lisp Packages and Prolog" "Lisp Packages and Prolog" S0201)("Lisp Packages" "Lisp Packages" S0201)("Lisp" "Lisp, Access to variables from within Prolog" S0202)("Lisp" "Lisp, calling Prolog from" S0204)("Lisp" "Lisp, calling Prolog from" S0205)("Lisp" "Lisp, executing from within Prolog" S0203)("lisp_apply/2 -- built-in predicate" "lisp_apply/2 -- built-in predicate" S0203)("lisp_apply/3 -- built-in predicate" "lisp_apply/3 -- built-in predicate" R0003)("lisp_apply/3 -- built-in predicate" "lisp_apply/3 -- built-in predicate" S0203)("lisp_predicate/2 -- built-in predicate" "lisp_predicate/2 -- built-in predicate" R0003)("lisp_predicate/2" "lisp_predicate/2" S0204)("lisp_predicate/3" "lisp_predicate/3" S0204)("list as goal" "list as goal" R030101)("list processing packages" "list processing packages" L0103)("List Processing" "List Processing" L01)("list" "list" U08)("list-processing" "list-processing" L01)("listing open streams" "listing open streams" L0502)("listing" "listing" R0901)("listing" "listing" R0902)("listing(+Predicate)" "listing(+Predicate)" R0902)("listing/0 -- built-in predicate" "listing/0 -- built-in predicate" R0901)("listing/0 -- built-in predicate" "listing/0 -- built-in predicate, with module system" R1215)("listing/1 -- built-in predicate" "listing/1 -- built-in predicate" R0902)("listing/1 -- built-in predicate" "listing/1 -- built-in predicate, with module system" R1215)("Lists as Ordered Sets -- library(ordsets)" "Lists as Ordered Sets -- library(ordsets)" L0107)("Lists as Sequences -- library(lists)" "Lists as Sequences -- library(lists)" L0105)("Lists as Sets" "Lists as Sets" L0106)("lists" "lists" R010201)("lists" "lists, appending common prefix to" L0105)("lists" "lists, appending" L010401)("lists" "lists, as ordered sets" L0107)("lists" "lists, as sets" L0106)("lists" "lists, checking for proper" L0105)("lists" "lists, combining" L010401)("lists" "lists, converting to ordered sets" L0107)("lists" "lists, converting to sets" L010601)("lists" "lists, deleting elements from" L0105)("lists" "lists, determining nonmembership in" L010404)("lists" "lists, finding corresponding elements in" L0105)("lists" "lists, finding elements of" L010402)("lists" "lists, finding known elements" L010403)("lists" "lists, finding position of element in" L0105)("lists" "lists, finding proper subsequences of" L0105)("lists" "lists, finding subsequences of" L0105)("lists" "lists, finding successive pairs in" L0105)("lists" "lists, finding the last element of" L0105)("lists" "lists, finding the shorter of two" L0105)("lists" "lists, generating" L010402)("lists" "lists, keys and values" L0105)("lists" "lists, of identical length" L0105)("lists" "lists, permutations of" L0105)("lists" "lists, proper" L0102)("Lists" "Lists, proper" R0809)("lists" "lists, reading from the terminal" L0608)("lists" "lists, reading" L0608)("lists" "lists, removing duplicated elements" L0105)("lists" "lists, reversing" L0105)("lists" "lists, selecting element of" L0105)("lists" "lists, single differences between" L0105)("lists" "lists, summing elements of" L0105)("list_to_ord_set/2 -- library predicate" "list_to_ord_set/2 -- library predicate" L0107)("list_to_set/2 -- library predicate" "list_to_set/2 -- library predicate" L010601)("load" "load" U08)("Loading a File into Prolog" "Loading a File into Prolog" U0301)("Loading a Module" "Loading a Module" R1205)("loading a program into Prolog" "loading a program into Prolog, without TEdit" U0303)("Loading Programs into Prolog" "Loading Programs into Prolog" U03)("Loading Programs Through TEdit" "Loading Programs Through TEdit" U0302)("Loading Programs Using the Module System" "Loading Programs Using the Module System" R0302)("Loading Programs without TEdit" "Loading Programs without TEdit" U0303)("Loading Programs" "Loading Programs" R03)("loading" "loading" R03)("loading" "loading, files" R030103)("loading" "loading, module-files" R030202)("loading" "loading, programs" R0205)("loading-a-module" "loading-a-module" R1205)("loading-programs" "loading-programs" U03)("loading-programs-without-tedit" "loading-programs-without-tedit" U0303)("load_foreign_files(+ListOfFiles, +ListOfLibraries)" "load_foreign_files(+ListOfFiles, +ListOfLibraries)" S0208)("load_foreign_files/2 -- built-in predicate" "load_foreign_files/2 -- built-in predicate" R0003)("local cut" "local cut" R0406)("local cut" "local cut" R0407)("local stack space" "local stack space" S0301)("local-cut" "local-cut" R0407)("locating cross-references" "locating cross-references" S060101)("Locating Procedures Through TEdit" "Locating Procedures Through TEdit" U0403)("locating procedures with TEdit" "locating procedures with TEdit" U0403)("logic programming" "logic programming" U0101)("logic programming" "logic programming" U08)("logical inference" "logical inference" U0101)("Looking at Terms" "Looking at Terms" R07)("Looking at the Program State" "Looking at the Program State" R09)("loops" "loops" R0412)("loops" "loops, infinite" R1007)("loops" "loops, terminating backtracking" R190203)("lower/1 -- library predicate" "lower/1 -- library predicate" L0309)("lower/2 -- library predicate" "lower/2 -- library predicate" L0309)("lowercase letter, recognizing" "lowercase letter, recognizing" L0602)("l[eap] -- debugger option" "l[eap] -- debugger option" R110305)("l[eap] -- debugger option" "l[eap] -- debugger option" R110501)("Main Menu" "Main Menu" S060101)("Major Features of Xerox Quintus Prolog" "Major Features of Xerox Quintus Prolog" U0001)("Making Procedures Determinate" "Making Procedures Determinate" R190201)("manual" "manual" S060203)("manual" "manual" S060204)("manual" "manual, on-line access to" S06)("manual(+X)" "manual(+X)" S060204)("manual/0 -- built-in predicate" "manual/0 -- built-in predicate" S060203)("manual/1 -- built-in predicate" "manual/1 -- built-in predicate" S060204)("matching principal functors of terms" "matching principal functors of terms" L0207)("maxdepth" "maxdepth" R1007)("maxdepth(+D)" "maxdepth(+D)" R1007)("maxdepth/1 -- built-in predicate" "maxdepth/1 -- built-in predicate" R1007)("member" "member" L010402)("member(?Element, ?List)" "member(?Element, ?List)" L010402)("member/2 -- library predicate" "member/2 -- library predicate" L010402)("member/2 -- library predicate" "member/2 -- library predicate" L010602)("memberchk" "memberchk" L010403)("memberchk(+Element, +List)" "memberchk(+Element, +List)" L010403)("memberchk/2 -- library predicate" "memberchk/2 -- library predicate" L010403)("memberchk/2 -- library predicate" "memberchk/2 -- library predicate" L010602)("membership in a list" "membership in a list" L010404)("Memory Management" "Memory Management" S0508)("memory reclamation" "memory reclamation" R0003)("memory reclamation" "memory reclamation" R130301)("memory reclamation" "memory reclamation" R130304)("Memory Use" "Memory Use" S03)("memory" "memory" S03)("memory, Prologs use of" "memory, Prologs use of, compared to DEC-10 Prolog" S0508)("memory, Prologs use of" "memory, Prologs use of, general description" S03)("meta-logical predicates" "meta-logical predicates" R07)("meta-predicate" "meta-predicate" R1217)("meta-predicate" "meta-predicate" U08)("meta-variables" "meta-variables" R0001)("meta_predicate declaration" "meta_predicate declaration" R1217)("midstring" "midstring" L030701)("midstring/3 -- library predicate" "midstring/3 -- library predicate" L030701)("midstring/4 -- library predicate" "midstring/4 -- library predicate" L030701)("midstring/5 -- library predicate" "midstring/5 -- library predicate" L030701)("midstring/6 -- library predicate" "midstring/6 -- library predicate" L030701)("midstring/[3-6" "midstring/[3-6" L030701)("minus" "minus, subtraction" R0601)("minus" "minus, unary minus" R0601)("Miscellaneous Built-in Predicates" "Miscellaneous Built-in Predicates" R18)("Miscellaneous Incompatibilities" "Miscellaneous Incompatibilities" U0705)("Miscellaneous" "Miscellaneous" S0509)("mixed/1 -- library predicate" "mixed/1 -- library predicate" L0309)("mixed/2 -- library predicate" "mixed/2 -- library predicate" L0309)("mixing compiled and interpreted code" "mixing compiled and interpreted code" S0503)("mod, remainder after integer division" "mod, remainder after integer division" R0601)("Mode declarations" "Mode declarations" R0001)("modes, TEdit" "modes, TEdit" S04)("modifying library predicates" "modifying library predicates" L00)("Modifying the Data Base" "Modifying the Data Base" R13)("Module Declarations" "Module Declarations" R030202)("Module Files" "Module Files" R030201)("module name expansion" "module name expansion" R1216)("module name expansion" "module name expansion" R1217)("module name expansion" "module name expansion, predicates using" R1216)("module" "module" L00)("module" "module" R030205)("module" "module" U08)("module(+ModuleName)" "module(+ModuleName)" R030205)("module-expansion-list" "module-expansion-list" R1216)("module-file" "module-file" U08)("module-files" "module-files" R1203)("module-files" "module-files, converting into" R1204)("module-files" "module-files, loading" R030202)("module-files" "module-files, loading" R1205)("module-name-expansion" "module-name-expansion" R1216)("module/1 -- built-in predicate" "module/1 -- built-in predicate" R030205)("Modules and Loading through the Editor Interface" "Modules and Loading through the Editor Interface" R1211)("modules" "modules" R12)("modules" "modules, assert/retract on imported predicates" R1215)("modules" "modules, currently loaded" R1213)("modules" "modules, currently loaded" R1214)("modules" "modules, debugging" R1210)("modules" "modules, declarations" R030202)("modules" "modules, declarations" R1203)("modules" "modules, defining" R1203)("modules" "modules, dynamic creation of" R1209)("modules" "modules, exporting predicates from" R1203)("modules" "modules, importation" R030202)("modules" "modules, importing predicates into" R1205)("modules" "modules, loading code via Emacs" R1211)("modules" "modules, loading" R1205)("modules" "modules, name clashes" R1212)("modules" "modules, name expansion" R1216)("modules" "modules, name expansion, meta_predicate declaration" R1217)("modules" "modules, predicates defined in" R121401)("modules" "modules, predicates exported from" R121402)("modules" "modules, predicates imported into" R121402)("Modules" "Modules, source" R1207)("modules" "modules, source" R1216)("modules" "modules, type-in" R1207)("modules" "modules, type-in" R1208)("modules" "modules, type-in" R1804)("modules" "modules, visibility rules" R1206)("Monitoring Garbage Collections as They Happen" "Monitoring Garbage Collections as They Happen" S0304)("more-or-less" "more-or-less" U0607)("Multifile Declarations" "Multifile Declarations" R030501)("multifile predicate" "multifile predicate" U08)("multifile procedures" "multifile procedures" S0503)("multifile procedures" "multifile procedures" S0505)("multifile" "multifile" R030501)("multifile/1 -- compiler directive" "multifile/1 -- compiler directive" R030501)("multiple solutions from Lisp -- setof/3" "multiple solutions from Lisp -- setof/3" S0205)("multiplication" "multiplication" R0601)("name clash" "name clash" R1212)("name clash" "name clash" U08)("Name Clashes" "Name Clashes" R1212)("Name expansion, module" "Name expansion, module" R1216)("name of a functor" "name of a functor" R0102)("name" "name" R071103)("name" "name" R1212)("name(?Constant, ?Chars)" "name(?Constant, ?Chars)" L030301)("name(?Constant, ?Chars)" "name(?Constant, ?Chars)" R071103)("name/1 -- library predicate" "name/1 -- library predicate" L0302)("name/2 -- built-in predicate" "name/2 -- built-in predicate" L0303)("name/2 -- built-in predicate" "name/2 -- built-in predicate" L030301)("name/2 -- built-in predicate" "name/2 -- built-in predicate" R071103)("Name/Arity form" "Name/Arity form" R020101)("name1/2 -- library predicate" "name1/2 -- library predicate" L030301)("named constants" "named constants" L0302)("naming data conversion predicates" "naming data conversion predicates" L0303)("negation" "negation" L04)("negation" "negation" L0403)("negation" "negation, bitwise" R0601)("negation" "negation, by failure" R0405)("negation" "negation, simulating with not-provable" L0403)("negation" "negation, sound, simulating" L0403)("New Predicates" "New Predicates" U0707)("newline character, recognizing" "newline character, recognizing" L0602)("nextto/3 -- library predicate" "nextto/3 -- library predicate" L0105)("NIL" "NIL" L030501)("nl" "nl" R050205)("nl" "nl" R050402)("nl/0 -- built-in predicate" "nl/0 -- built-in predicate" R050205)("nl/1 -- built-in predicate" "nl/1 -- built-in predicate" R050402)("nodebug" "nodebug" R110603)("nodebug" "nodebug" U0603)("nodebug" "nodebug" U061201)("nodebug/0 -- built-in predicate" "nodebug/0 -- built-in predicate" R110603)("nofileerrors" "nofileerrors" R050308)("nofileerrors/0 -- built-in predicate" "nofileerrors/0 -- built-in predicate" R050308)("nogc" "nogc" S030303)("nogc/0 -- built-in predicate" "nogc/0 -- built-in predicate" R0003)("nonmember(+Element, +List)" "nonmember(+Element, +List)" L010404)("nonmembership in a list" "nonmembership in a list" L010404)("nonvar" "nonvar" R0702)("nonvar(?X)" "nonvar(?X)" R0702)("nonvar/1 -- built-in predicate" "nonvar/1 -- built-in predicate" R0702)("Normal Layout" "Normal Layout" U0501)("nospy" "nospy" R110607)("nospy" "nospy" U060603)("nospy" "nospy" U061201)("nospy(+X)" "nospy(+X)" R110607)("nospy/1 -- built-in predicate" "nospy/1 -- built-in predicate" R110607)("nospyall" "nospyall" R110608)("nospyall/0 -- built-in predicate" "nospyall/0 -- built-in predicate" R110608)("nospyall/0 -- built-in predicate" "nospyall/0 -- built-in predicate" S0504)("nospyall/0 -- built-in predicate" "nospyall/0 -- built-in predicate" U060603)("not-provable (\+)" "not-provable (\+)" R0405)("not-provable" "not-provable" L0402)("not-provable" "not-provable" R0405)("not-provable" "not-provable, simulating negation with" L0403)("not/1 -- library predicate" "not/1 -- library predicate" L0403)("Notation Used in This Manual" "Notation Used in This Manual" R0001)("Notation" "Notation" R010801)("Note on Argument Order" "Note on Argument Order" L0206)("Notes" "Notes" R010805)("notrace" "notrace" R110604)("notrace" "notrace" U0603)("notrace/0 -- built-in predicate" "notrace/0 -- built-in predicate" R110604)("no_style_check" "no_style_check" R030302)("no_style_check(+X)" "no_style_check(+X)" R030302)("no_style_check/1 -- built-in predicate" "no_style_check/1 -- built-in predicate" R030302)("no_style_check/1 -- built-in predicate" "no_style_check/1 -- built-in predicate" S0505)("no_style_check/1 -- built-in predicate" "no_style_check/1 -- built-in predicate" U0307)("no_style_check/1 -- built-in predicate" "no_style_check/1 -- built-in predicate" U0704)("nth0/3 -- library predicate" "nth0/3 -- library predicate" L0105)("nth0/4 -- library predicate" "nth0/4 -- library predicate" L0105)("nth1/3 -- library predicate" "nth1/3 -- library predicate" L0105)("nth1/4 -- library predicate" "nth1/4 -- library predicate" L0105)("nth_char/2 -- library predicate" "nth_char/2 -- library predicate" L0306)("null streams" "null streams" R050305)("number" "number" R0706)("number(?X)" "number(?X)" R0706)("number/1 -- built-in predicate" "number/1 -- built-in predicate" R0706)("number/1 -- built-in predicate" "number/1 -- built-in predicate" S0502)("numbers" "numbers, comparison of" R0603)("numbers" "numbers, names of" L0302)("numbers" "numbers, syntax for" L030301)("numbers, range of" "numbers, range of" S0104)("numbervars" "numbervars" R0712)("numbervars(?Term, +FirstVar, -LastVar)" "numbervars(?Term, +FirstVar, -LastVar)" R0712)("numbervars/3 -- built-in predicate" "numbervars/3 -- built-in predicate" R0712)("number_chars" "number_chars" R071102)("number_chars(?Number, ?Chars)" "number_chars(?Number, ?Chars)" L030303)("number_chars(?Number, ?Chars)" "number_chars(?Number, ?Chars)" R071102)("number_chars/2 -- built-in predicate" "number_chars/2 -- built-in predicate" L0303)("number_chars/2 -- built-in predicate" "number_chars/2 -- built-in predicate" L030303)("number_chars/2 -- built-in predicate" "number_chars/2 -- built-in predicate" R071102)("number_chars1/2 -- library predicate" "number_chars1/2 -- library predicate" L030303)("number_string(?Number, ?String)" "number_string(?Number, ?String)" L030307)("number_string/2 -- library predicate" "number_string/2 -- library predicate" L0303)("number_string/2 -- library predicate" "number_string/2 -- library predicate" L030307)("numerical input, prompting for" "numerical input, prompting for" L0606)("n[odebug] -- debugger option" "n[odebug] -- debugger option" R110504)("object code" "object code" U08)("Obsolete Built-in Predicates" "Obsolete Built-in Predicates" U0706)("Obtaining Information about Loaded Modules" "Obtaining Information about Loaded Modules" R1214)("Obtaining User Input" "Obtaining User Input" L06)("occur check" "occur check" L0209)("Occur Check" "Occur Check" R0205)("occurrences_of_term/3 -- library predicate" "occurrences_of_term/3 -- library predicate" L0205)("occurrences_of_var/3 -- library predicate" "occurrences_of_var/3 -- library predicate" L0205)("On-line Documentation" "On-line Documentation" L070201)("On-line help" "On-line help" S0501)("On-line Help" "On-line Help" S06)("on-line help" "on-line help, accessing with Prolog predicates" S0602)("on-line help" "on-line help, following cross references" U020302)("on-line help" "on-line help, following cross-references" S060101)("on-line help" "on-line help, from Prolog predicates" U020303)("on-line help" "on-line help, index to manuals" S060101)("on-line help" "on-line help, locating cross-references" S060101)("on-line help" "on-line help, using the display system" U0203)("on-line" "on-line" S06)("op" "op" R010501)("op(+Precedence, +Type, +Name)" "op(+Precedence, +Type, +Name)" R010501)("op/3 -- built-in predicate" "op/3 -- built-in predicate" R010501)("open" "open" R050304)("open(+File, +Mode, -Stream)" "open(+File, +Mode, -Stream)" R050304)("open/3 -- built-in predicate" "open/3 -- built-in predicate" L0502)("open/3 -- built-in predicate" "open/3 -- built-in predicate" R050304)("open/3 -- built-in predicate" "open/3 -- built-in predicate" S0506)("opening a file for input or output" "opening a file for input or output" R050304)("opening files" "opening files" L0504)("opening streams" "opening streams, for input and output" L0502)("opening streams" "opening streams, for input" L0502)("opening streams" "opening streams, for output" L0502)("open_file/3 -- library predicate" "open_file/3 -- library predicate" L0504)("open_null_stream" "open_null_stream" R050305)("open_null_stream(-Stream)" "open_null_stream(-Stream)" R050305)("open_null_stream/1 -- built-in predicate" "open_null_stream/1 -- built-in predicate" R050305)("operating system commands, executing" "operating system commands, executing" R0003)("operating systems, portability between" "operating systems, portability between" L0602)("Operations on Files" "Operations on Files" L05)("Operator Types" "Operator Types" R010401)("operator" "operator" R010401)("operators" "operators" R0104)("operators" "operators" U08)("operators" "operators, associativity of" R0104)("operators" "operators, built-in predicates for handling" R0105)("operators" "operators, built-in" R0104)("operators" "operators, built-in" R21)("operators" "operators, current" R010502)("operators" "operators, declaring" R010501)("operators" "operators, infix" R0102)("operators" "operators, infix" R0104)("operators" "operators, postfix" R0102)("operators" "operators, postfix" R0104)("operators" "operators, precedence of" R0104)("operators" "operators, prefix" R0102)("operators" "operators, prefix" R0104)("operators" "operators, syntax restrictions on" R0106)("operators" "operators, type of" R0104)("optimization, tail recursion" "optimization, tail recursion" R1906)("Options Available during Debugging" "Options Available during Debugging" R1105)("Options Available during Debugging" "Options Available during Debugging" U0612)("or" "or" R0202)("or" "or" R0402)("or" "or, bitwise" R0601)("order on terms, standard" "order on terms, standard" R0801)("ordered sets" "ordered sets, adding elements to" L0107)("ordered sets" "ordered sets, checking for disjoint" L0107)("ordered sets" "ordered sets, checking for equality" L0107)("ordered sets" "ordered sets, checking for intersecting" L0107)("ordered sets" "ordered sets, checking for subsets of" L0107)("ordered sets" "ordered sets, checking for" L0107)("ordered sets" "ordered sets, creating from lists" L0107)("ordered sets" "ordered sets, deleting elements" L0107)("ordered sets" "ordered sets, difference of" L0107)("ordered sets" "ordered sets, intersection of" L0107)("ordered sets" "ordered sets, product of" L0107)("ordered sets" "ordered sets, symmetric difference of" L0107)("ordered sets" "ordered sets, union of multiple" L0107)("ordered sets" "ordered sets, union of two" L0107)("ordering of sets" "ordering of sets" L0107)("ord_add_element/3 -- library predicate" "ord_add_element/3 -- library predicate" L0107)("ord_del_element/3 -- library predicate" "ord_del_element/3 -- library predicate" L0107)("ord_disjoint/2 -- library predicate" "ord_disjoint/2 -- library predicate" L0107)("ord_intersect/2 -- library predicate" "ord_intersect/2 -- library predicate" L0107)("ord_intersect/3 -- library predicate" "ord_intersect/3 -- library predicate" L0107)("ord_intersection/3 -- library predicate" "ord_intersection/3 -- library predicate" L0107)("ord_seteq/2 -- library predicate" "ord_seteq/2 -- library predicate" L0107)("ord_setproduct/3 -- library predicate" "ord_setproduct/3 -- library predicate" L0107)("ord_subset/2 -- library predicate" "ord_subset/2 -- library predicate" L0107)("ord_subtract/3 -- library predicate" "ord_subtract/3 -- library predicate" L0107)("ord_symdiff/3 -- library predicate" "ord_symdiff/3 -- library predicate" L0107)("ord_union/2 -- library predicate" "ord_union/2 -- library predicate" L0107)("ord_union/3 -- library predicate" "ord_union/3 -- library predicate" L0107)("Other Limits in Xerox Quintus Prolog" "Other Limits in Xerox Quintus Prolog" S0105)("Other Prompted Input -- library(prompt)" "Other Prompted Input -- library(prompt)" L0607)("Other Related Library Files" "Other Related Library Files" L0506)("otherwise" "otherwise" R0409)("otherwise/0 -- built-in predicate" "otherwise/0 -- built-in predicate" R0409)("otherwise/0 -- built-in predicate" "otherwise/0 -- built-in predicate" U0610)("output" "output" R05)("Overview" "Overview" S0301)("Packages in Xerox Lisp" "Packages in Xerox Lisp" S0102)("Packages" "Packages" S0102)("Packages, Lisp" "Packages, Lisp" S0201)("padded strings, comparing" "padded strings, comparing" L0304)("pairfrom/4 -- library predicate" "pairfrom/4 -- library predicate" L010601)("parent" "parent" U08)("parentheses, recognizing" "parentheses, recognizing" L0602)("parsing phrases" "parsing phrases" R170403)("Pascal-like Input -- library(readconst)" "Pascal-like Input -- library(readconst)" L0608)("Pascal-like input" "Pascal-like input" L0608)("passing Prolog terms to Lisp" "passing Prolog terms to Lisp" S0204)("path" "path, changing term arguments by" L0204)("path" "path, through a term" L0203)("pathname" "pathname" U08)("path_arg -- library predicate" "path_arg -- library predicate" L0203)("pattern matchers, writing" "pattern matchers, writing" L0105)("period character (.)" "period character (.)" R0202)("period, recognizing" "period, recognizing" L0602)("perm/2 -- library predicate" "perm/2 -- library predicate" L0105)("perm2/4 -- library predicate" "perm2/4 -- library predicate" L0105)("phrase" "phrase" R170402)("phrase" "phrase" R170403)("phrase(+Phrase, ?List)" "phrase(+Phrase, ?List)" R170403)("phrase(+Phrase, ?List, ?Rest)" "phrase(+Phrase, ?List, ?Rest)" R170402)("phrase/2 -- built-in predicate" "phrase/2 -- built-in predicate" R170403)("phrase/3 -- built-in predicate" "phrase/3 -- built-in predicate" R170402)("Placement of Cuts" "Placement of Cuts" R190202)("port of a procedure box" "port of a procedure box" R1102)("port" "port" U0601)("port" "port" U08)("portability between operating systems" "portability between operating systems" L0602)("Porting From Other Quintus Prologs" "Porting From Other Quintus Prologs" U0701)("Porting Programs to Xerox Quintus Prolog" "Porting Programs to Xerox Quintus Prolog" U07)("porting programs" "porting programs" U07)("porting-programs" "porting-programs" U07)("portray/1 -- user-defined predicate" "portray/1 -- user-defined predicate" L00)("portray/1 -- user-defined predicate" "portray/1 -- user-defined predicate" R050106)("portray_clause(+Clause)" "portray_clause(+Clause)" R050107)("portray_clause/1 -- built-in predicate" "portray_clause/1 -- built-in predicate" R050107)("ports of debugger -- leashing" "ports of debugger -- leashing" S0504)("position in a stream" "position in a stream, character_count/2" R050501)("position in a stream" "position in a stream, line_count/2" R050502)("position in a stream" "position in a stream, line_position/2" R050503)("position in a stream" "position in a stream, stream_position/2" R050506)("position in a stream" "position in a stream, stream_position/3" R050505)("position/3" "position/3" L0203)("postfix operators" "postfix operators" R0102)("postfix operators" "postfix operators" R0104)("pptree.pl -- unsupported" "pptree.pl -- unsupported" L070202)("precedence of operators" "precedence of operators" R0104)("precedence" "precedence" U08)("Precision of numbers, on I/O" "Precision of numbers, on I/O" R050108)("predicate properties" "predicate properties" R0905)("predicate properties" "predicate properties, multifile" R030501)("Predicate Specifications" "Predicate Specifications" R0002)("Predicate Specifications" "Predicate Specifications" R020101)("predicate" "predicate" U010102)("predicate" "predicate" U010201)("predicate" "predicate" U08)("predicate" "predicate, dynamic" U0408)("predicate" "predicate, static" U0408)("predicate-names" "predicate-names" U010201)("Predicates Defined in a Module" "Predicates Defined in a Module" R121401)("Predicates Related to Sets" "Predicates Related to Sets" L010602)("Predicates Visible in a Module" "Predicates Visible in a Module" R121402)("predicates" "predicates" R0201)("Predicates" "Predicates" U010102)("predicates" "predicates, asking about properties" R0905)("predicates" "predicates, exported from modules" R121401)("predicates" "predicates, imported into modules" R121402)("predicates" "predicates, importing dynamic" R1215)("predicates" "predicates, in multiple files" R030501)("predicates" "predicates, removing properties" R1303)("predicates" "predicates, specifications" R020101)("Predicates" "Predicates, user-defined" R0904)("predicates" "predicates, using module name expansion" R1216)("predicates, new" "predicates, new" U0707)("PredicateSpecifications" "PredicateSpecifications" R020101)("predicate_property" "predicate_property" R0905)("predicate_property(?PredSpec, ?PredProperty)" "predicate_property(?PredSpec, ?PredProperty)" R0905)("predicate_property/2 -- built-in predicate" "predicate_property/2 -- built-in predicate" R0905)("predicate_property/2 -- built-in predicate" "predicate_property/2 -- built-in predicate" R121402)("prefix operators" "prefix operators" R0102)("prefix operators" "prefix operators" R0104)("premise" "premise" U0101)("premise" "premise" U08)("principal functor of a term" "principal functor of a term" L0201)("principal functor of a term" "principal functor of a term" R0102)("print depth limit" "print depth limit" S0504)("print" "print" R050106)("print" "print" R050401)("print" "print" U061201)("print(?X)" "print(?X)" R050106)("print/1 -- built-in predicate" "print/1 -- built-in predicate" L00)("print/1 -- built-in predicate" "print/1 -- built-in predicate" R050106)("print/2 -- built-in predicate" "print/2 -- built-in predicate" R050401)("printing characters, recognizing" "printing characters, recognizing" L0602)("printing clauses" "printing clauses" R050107)("Printing Options" "Printing Options" R110502)("printing Prolog terms from Lisp" "printing Prolog terms from Lisp" S0204)("printing" "printing, formatted" R050108)("printing" "printing, print depth limit in debugger" R110502)("private predicates" "private predicates" R1202)("procedural modularity" "procedural modularity" R1201)("procedural semantics" "procedural semantics" R0203)("procedure box" "procedure box" R1102)("procedures" "procedures" R0201)("procedures" "procedures" U08)("procedures" "procedures, calls to" R0201)("procedures" "procedures, defining directly into Prolog" U0305)("procedures" "procedures, depth of invocation" R1104)("procedures" "procedures, dynamic and static" R1301)("procedures" "procedures, finding definition" R110504)("procedures" "procedures, listing all" R0901)("procedures" "procedures, listing selected" R0902)("procedures" "procedures, locating with TEdit" U0403)("procedures" "procedures, making determinate using cut" R190201)("procedures" "procedures, redefining during execution" R0304)("procedures" "procedures, redefining during program execution" U0613)("procedures" "procedures, self-modifying" R13)("procedures" "procedures, tracing every step of execution" U0605)("procedures" "procedures, tracing every step of execution" U061102)("procedures" "procedures, undefined" R110609)("product of ordered sets" "product of ordered sets" L0107)("product of two sets" "product of two sets" L010601)("Program Layout" "Program Layout" U05)("program layout" "program layout" U0501)("program space" "program space" S0301)("programs" "programs" R0201)("programs" "programs" U08)("programs" "programs, interrupting execution of" U0404)("programs" "programs, layout" U0501)("programs" "programs, loading into Prolog without TEdit" U0303)("programs" "programs, loading" R0205)("programs" "programs, running" U04)("programs" "programs, style checking" R0303)("project/3 -- library predicate" "project/3 -- library predicate" L0203)("Prolog interface" "Prolog interface, examples" L0505)("Prolog Layout Restrictions Under TEdit" "Prolog Layout Restrictions Under TEdit" S0401)("Prolog terms" "Prolog terms, passing to Lisp" S0204)("Prolog terms" "Prolog terms, printing from Lisp" S0204)("Prolog" "Prolog" U010103)("Prolog" "Prolog, calling from Lisp" S0205)("prolog" "prolog, commands" U0202)("prolog" "prolog, compiler" U0301)("prolog" "prolog, entering without Emacs" U0102)("prolog" "prolog, entering" U020102)("prolog" "prolog, interpreter" U0301)("prolog" "prolog, prompt, top-level" U0202)("prolog" "prolog, prompts" U0409)("Prolog" "Prolog, source code layout restrictions" S0401)("prolog-ini" "prolog-ini" S0101)("prolog.ini files" "prolog.ini files" S0101)("prolog.ini files" "prolog.ini files" U0308)("prolog.log file" "prolog.log file" R1104)("prolog_flag" "prolog_flag" R1803)("prolog_flag" "prolog_flag" R1804)("prolog_flag(+FlagName, -OldValue, +NewValue)" "prolog_flag(+FlagName, -OldValue, +NewValue)" R1803)("prolog_flag(?FlagName, ?Value)" "prolog_flag(?FlagName, ?Value)" R1804)("prolog_flag(gc, -Old, ?New)" "prolog_flag(gc, -Old, ?New)" S030301)("prolog_flag(gc_trace, -Old, ?New)" "prolog_flag(gc_trace, -Old, ?New)" S030401)("prolog_flag/2 -- built-in predicate" "prolog_flag/2 -- built-in predicate" R1804)("prolog_flag/3 -- built-in predicate" "prolog_flag/3 -- built-in predicate" R1803)("prolog_flag/3 -- built-in predicate" "prolog_flag/3 -- built-in predicate" S030301)("prolog_flag/3 -- built-in predicate" "prolog_flag/3 -- built-in predicate" S030401)("prompt" "prompt" R1805)("prompt(-Old, +New)" "prompt(-Old, +New)" R1805)("prompt/1 -- library predicate" "prompt/1 -- library predicate" L0607)("prompt/2 -- built-in predicate" "prompt/2 -- built-in predicate" R1805)("prompted_char/2 -- library predicate" "prompted_char/2 -- library predicate" L0607)("prompted_constant/2 -- library predicate" "prompted_constant/2 -- library predicate" L0608)("prompted_constants/2 -- library predicate" "prompted_constants/2 -- library predicate" L0608)("prompted_line/2 -- library predicate" "prompted_line/2 -- library predicate" L0607)("prompted_line/3 -- library predicate" "prompted_line/3 -- library predicate" L0607)("prompting for user input" "prompting for user input" L0607)("prompting for user input" "prompting for user input" L0608)("prompting for user input" "prompting for user input, numerical" L0606)("prompting for user input" "prompting for user input, textual" L0606)("prompts" "prompts" U0202)("prompts" "prompts" U0409)("proper list" "proper list" R0809)("proper lists" "proper lists" L0102)("proper lists" "proper lists, checking for" L0105)("proper-lists" "proper-lists" L0102)("properties of predicates" "properties of predicates" R0905)("proposition" "proposition" U010102)("proposition" "proposition" U08)("proving theorems, predicates for" "proving theorems, predicates for" L0208)("public predicates" "public predicates" R1202)("public predicates" "public predicates" R1203)("public" "public" U08)("punctuation, recognizing" "punctuation, recognizing" L0602)("put" "put" R050204)("put" "put" R050402)("put(+N)" "put(+N)" R050204)("put/1 -- built-in predicate" "put/1 -- built-in predicate" R050204)("put/2 -- built-in predicate" "put/2 -- built-in predicate" R050402)("put_chars/1 -- library predicate" "put_chars/1 -- library predicate" L0603)("put_line/1 -- library predicate" "put_line/1 -- library predicate" L0603)("p[rint] -- debugger option" "p[rint] -- debugger option" R110502)("quantifying variables for not/1" "quantifying variables for not/1" L0403)("queries" "queries" R0201)("queries" "queries, committing to first solution" L0405)("query" "query" U010103)("query" "query" U010202)("query" "query" U0202)("query" "query" U0401)("query" "query" U08)("querying the data base" "querying the data base" U0401)("Querying the State of the Debugger and Spypoints" "Querying the State of the Debugger and Spypoints" U0609)("question mark, recognizing" "question mark, recognizing" L0602)("questions" "questions, asking" L0606)("questions" "questions, default answers to" L0606)("questions" "questions, line of bounded length" L0606)("questions" "questions, numerical answers between two values" L0606)("questions" "questions, unrestricted numerical answers" L0606)("quotation mark" "quotation mark" L0602)("quotation mark" "quotation mark" L0608)("quoted token" "quoted token" L0608)("quoting atoms" "quoting atoms" R050104)("radix" "radix, printing in" R050108)("random access to streams" "random access to streams" R050505)("random access to streams" "random access to streams" R050506)("range of numbers" "range of numbers" S0104)("range" "range, prompting for a number in a given" L0606)("read" "read" R050101)("read" "read" R050401)("read(-X)" "read(-X)" R050101)("read/1 -- built-in predicate" "read/1 -- built-in predicate" R050101)("read/1 -- built-in predicate" "read/1 -- built-in predicate" R050104)("read/2 -- built-in predicate" "read/2 -- built-in predicate" R050104)("read/2 -- built-in predicate" "read/2 -- built-in predicate" R050401)("Reading and Writing Lines -- library(lineio)" "Reading and Writing Lines -- library(lineio)" L0603)("reading constants" "reading constants" L0608)("reading constants" "reading constants, from the input stream" L0608)("reading constants" "reading constants, from the terminal" L0606)("reading constants" "reading constants, from the terminal" L0608)("Reading Continued Lines -- library(continued)" "Reading Continued Lines -- library(continued)" L0604)("reading continued lines" "reading continued lines" L0604)("Reading English Sentences" "Reading English Sentences" L0605)("reading file names from the terminal" "reading file names from the terminal" L050601)("reading file names from the terminal" "reading file names from the terminal" L0606)("reading lines" "reading lines" L0603)("reading lines" "reading lines, continued" L0604)("reading lines" "reading lines, continued, UNIX format" L0604)("reading lines" "reading lines, from the current input stream" L0603)("reading lines" "reading lines, from the terminal" L0607)("reading lists" "reading lists" L0608)("reading lists" "reading lists, from the terminal" L0608)("reading sentences" "reading sentences" L060502)("Reading the State of Opened Streams" "Reading the State of Opened Streams" R0505)("read_constant/1 -- library predicate" "read_constant/1 -- library predicate" L0608)("read_constant/2 -- library predicate" "read_constant/2 -- library predicate" L0608)("read_constants/1 -- library predicate" "read_constants/1 -- library predicate" L0608)("read_constants/2 -- library predicate" "read_constants/2 -- library predicate" L0608)("read_in/1 -- library predicate" "read_in/1 -- library predicate" L060501)("read_oper_continued_line/1 -- library predicate" "read_oper_continued_line/1 -- library predicate" L0604)("read_sent/1 -- library predicate" "read_sent/1 -- library predicate" L060502)("read_unix_continued_line/1 -- library predicate" "read_unix_continued_line/1 -- library predicate" L0604)("recorda" "recorda" R1501)("recorda(+Key, ?Term, -Ref)" "recorda(+Key, ?Term, -Ref)" R1501)("recorda/3 -- built-in predicate" "recorda/3 -- built-in predicate" R1501)("recorded keys" "recorded keys" R1504)("recorded" "recorded" R1503)("recorded(?Key, ?Term, ?Ref)" "recorded(?Key, ?Term, ?Ref)" R1503)("recorded/3 -- built-in predicate" "recorded/3 -- built-in predicate" R1503)("recordz" "recordz" R1502)("recordz(+Key, ?Term, -Ref)" "recordz(+Key, ?Term, -Ref)" R1502)("recordz/3 -- built-in predicate" "recordz/3 -- built-in predicate" R1502)("recursion" "recursion" U08)("redefining built-in predicates" "redefining built-in predicates" R1101)("redefining procedures during execution" "redefining procedures during execution" R0304)("redefining procedures during execution" "redefining procedures during execution" U0613)("Redefining Procedures during Program Execution" "Redefining Procedures during Program Execution" R0304)("redefining-during-execution" "redefining-during-execution" R0304)("redo port of a procedure box" "redo port of a procedure box" R1102)("references to clauses and records" "references to clauses and records" R14)("remainder (mod)" "remainder (mod)" R0601)("remove_dups/2 -- library predicate" "remove_dups/2 -- library predicate" L0105)("removing an element from a set" "removing an element from a set" L010601)("removing duplicated parts from a list" "removing duplicated parts from a list" L0105)("Removing Spypoints" "Removing Spypoints" U060603)("rename/2 -- library predicate" "rename/2 -- library predicate" L0503)("rename_file/2 -- library predicate" "rename_file/2 -- library predicate" L0503)("Renaming and Deleting Files" "Renaming and Deleting Files" L0503)("renaming files" "renaming files" L0503)("repeat" "repeat" R0412)("repeat/0 -- built-in predicate" "repeat/0 -- built-in predicate" R0412)("Requesting More or Less Detailed Debugging" "Requesting More or Less Detailed Debugging" U0607)("Requesting More or Less Frequent Prompting" "Requesting More or Less Frequent Prompting" U0608)("retract" "retract" R130301)("retract(+Clause)" "retract(+Clause)" R130301)("retract/1 -- built-in predicate" "retract/1 -- built-in predicate" R130301)("retractall(+Head)" "retractall(+Head)" R130303)("retractall/1 -- built-in predicate" "retractall/1 -- built-in predicate" R130303)("Retraction Predicates" "Retraction Predicates" R1303)("retries" "retries" U061201)("retry" "retry" U061103)("retry" "retry" U061201)("return key" "return key" U061201)("Returning to the Top-level Prolog Prompt" "Returning to the Top-level Prolog Prompt" U020201)("rev/2 -- library predicate" "rev/2 -- library predicate" L0105)("rewriting terms" "rewriting terms" L0204)("rule of inference" "rule of inference" U0101)("rule of inference" "rule of inference" U08)("rule of inference" "rule of inference, body of" U010101)("rule of inference" "rule of inference, head of" U010101)("running a program" "running a program" U04)("Running Programs" "Running Programs" U04)("Running the Compatibility Checker" "Running the Compatibility Checker" U0708)("running-programs" "running-programs" U04)("r[etry] -- debugger option" "r[etry] -- debugger option" R110305)("r[etry] -- debugger option" "r[etry] -- debugger option" R110501)("r[etry] -- debugger option" "r[etry] -- debugger option" R110503)("r[etry] -- debugger option" "r[etry] -- debugger option" S0504)("same_functor/2 -- library predicate" "same_functor/2 -- library predicate" L0207)("same_functor/3 -- library predicate" "same_functor/3 -- library predicate" L0207)("same_functor/4 -- library predicate" "same_functor/4 -- library predicate" L0207)("same_length/2 -- library predicate" "same_length/2 -- library predicate" L0105)("same_length/3 -- library predicate" "same_length/3 -- library predicate" L0105)("saved state" "saved state" U08)("saved state, equivalent under Xerox Lisp" "saved state, equivalent under Xerox Lisp" S0103)("Saved States and Xerox Lisp" "Saved States and Xerox Lisp" S0103)("saving a debugging run" "saving a debugging run" R1104)("searching for a file in a library" "searching for a file in a library" S0107)("Searching for a File in a List of Libraries" "Searching for a File in a List of Libraries" R0306)("Searching for a File in a List of Libraries" "Searching for a File in a List of Libraries" S0107)("searching for library files" "searching for library files" L0502)("searching" "searching, for a file in a library" R0306)("searching" "searching, for a file in directories" R030601)("see" "see" R050601)("see(+S)" "see(+S)" R050601)("see/1 -- built-in predicate" "see/1 -- built-in predicate" L0502)("see/1 -- built-in predicate" "see/1 -- built-in predicate" R050601)("seeing" "seeing" R050602)("seeing(-S)" "seeing(-S)" R050602)("seeing/1 -- built-in predicate" "seeing/1 -- built-in predicate" R050602)("seen" "seen" R050603)("seen/0 -- built-in predicate" "seen/0 -- built-in predicate" R050603)("select" "select" L0105)("select" "select" L010601)("select/3 -- library predicate" "select/3 -- library predicate" L010601)("select/4 -- library predicate" "select/4 -- library predicate" L0105)("selecting element of" "selecting element of" L0105)("selector predicates, argument order" "selector predicates, argument order" L0203)("self-modifying procedures" "self-modifying procedures" R13)("semantics" "semantics" R02)("semantics" "semantics" U08)("semantics" "semantics, declarative" R0203)("semantics" "semantics, of dynamic code" R13)("semantics" "semantics, procedural" R0203)("semicolon" "semicolon" R0402)("sentence terminator, recognizing" "sentence terminator, recognizing" L0602)("sentences" "sentences" R0108)("sentences" "sentences, clauses and directives" R0201)("sentences, reading" "sentences, reading" L0605)("sentences, reading" "sentences, reading" L060502)("Set Processing -- library(sets)" "Set Processing -- library(sets)" L010601)("seteq/2 -- library predicate" "seteq/2 -- library predicate" L010601)("setof" "setof" R1601)("setof(?Template, +Goal, -Set)" "setof(?Template, +Goal, -Set)" R1601)("setof/3 -- built-in predicate" "setof/3 -- built-in predicate" R1601)("setof/3 -- built-in predicate" "setof/3 -- built-in predicate" U0402)("setof/3 -- built-in predicate" "setof/3 -- built-in predicate, multiple solutions from Lisp" S0205)("setproduct/3 -- library predicate" "setproduct/3 -- library predicate" L010601)("SetRelated" "SetRelated" L010602)("sets -- collecting solutions to a goal" "sets -- collecting solutions to a goal" R16)("sets" "sets" R16)("sets" "sets, adding elements to" L010601)("sets" "sets, appending" L010602)("sets" "sets, building" L010403)("sets" "sets, checking for disjoint" L010601)("sets" "sets, checking for equality" L010601)("sets" "sets, checking for subset" L010601)("sets" "sets, checking for" L010601)("sets" "sets, converting lists to" L010601)("sets" "sets, deleting common elements" L010601)("sets" "sets, deleting elements from" L010601)("sets" "sets, finding members of" L010602)("sets" "sets, generating proper subsets of" L0105)("sets" "sets, generating subsets of" L0105)("sets" "sets, generating subsets of" L010602)("sets" "sets, intersection of" L010601)("sets" "sets, length of" L010602)("sets" "sets, lists as" L0106)("sets" "sets, ordered" L0107)("sets" "sets, product of" L010601)("sets" "sets, removing an element from" L010601)("sets" "sets, removing duplicate elements" L010601)("sets" "sets, selecting an element of" L010601)("sets" "sets, selecting pairs of elements from" L010601)("sets" "sets, symmetric difference of" L010601)("sets" "sets, union of multiple" L010601)("sets" "sets, union of two" L010601)("Sets:  Collecting Solutions to a Goal" "Sets:  Collecting Solutions to a Goal" R16)("Setting Spypoints" "Setting Spypoints" U060601)("setting-spypoints" "setting-spypoints" U060601)("settopval/2 -- built-in predicate" "settopval/2 -- built-in predicate" S0202)("set_input" "set_input" R050311)("set_input(+Stream)" "set_input(+Stream)" R050311)("set_input/1 -- built-in predicate" "set_input/1 -- built-in predicate" R050311)("set_output" "set_output" R050312)("set_output(+Stream)" "set_output(+Stream)" R050312)("set_output/1 -- built-in predicate" "set_output/1 -- built-in predicate" R050312)("shifting" "shifting" R0601)("shorter_list/2 -- library predicate" "shorter_list/2 -- library predicate" L0105)("show_module/1, library predicate" "show_module/1, library predicate" R121402)("side-effect" "side-effect" U08)("side-effects" "side-effects, in repeat loops" R0412)("simple query" "simple query" U08)("simple term" "simple term" U08)("simulating negation with not-provable" "simulating negation with not-provable" L0403)("single-stepping" "single-stepping" R110301)("single-stepping" "single-stepping" R110302)("skeletal predicate specification" "skeletal predicate specification" R020101)("skip" "skip" R050203)("skip" "skip" R050402)("skip" "skip" U061103)("skip" "skip" U061201)("skip(+N)" "skip(+N)" R050203)("skip/1 -- built-in predicate" "skip/1 -- built-in predicate" R050203)("skip/2 -- built-in predicate" "skip/2 -- built-in predicate" R050402)("skip_constant/0 -- library predicate" "skip_constant/0 -- library predicate" L0608)("skip_constant/1 -- library predicate" "skip_constant/1 -- library predicate" L0608)("skip_constants/1 -- library predicate" "skip_constants/1 -- library predicate" L0608)("skip_constants/2 -- library predicate" "skip_constants/2 -- library predicate" L0608)("skip_line/0 -- library predicate" "skip_line/0 -- library predicate" L0603)("solutions, finding all" "solutions, finding all" U0402)("sort" "sort" R0809)("sort(+L1, -L2)" "sort(+L1, -L2)" R0809)("sort/2 -- built-in predicate" "sort/2 -- built-in predicate" R0809)("sound inequality" "sound inequality" L040402)("sound negation simulation" "sound negation simulation" L0403)("source code" "source code" U08)("source module" "source module" R1207)("source module" "source module" R1216)("source-file" "source-file" R050316)("source-file" "source-file" R050317)("source-module" "source-module" R1207)("source_file(-FileSpec)" "source_file(-FileSpec)" R050316)("source_file(?PredSpec, ?FileSpec)" "source_file(?PredSpec, ?FileSpec)" R050317)("source_file/1 -- built-in predicate" "source_file/1 -- built-in predicate" R050316)("source_file/2 -- built-in predicate" "source_file/2 -- built-in predicate" R050317)("space reclamation" "space reclamation" R130301)("space reclamation" "space reclamation" R130304)("space" "space" L0602)("space" "space, recognizing" L0602)("span_left/3 -- library predicate" "span_left/3 -- library predicate" L030704)("span_left/4 -- library predicate" "span_left/4 -- library predicate" L030704)("span_left/5 -- library predicate" "span_left/5 -- library predicate" L030704)("span_right/3 -- library predicate" "span_right/3 -- library predicate" L030704)("span_right/4 -- library predicate" "span_right/4 -- library predicate" L030704)("span_right/5 -- library predicate" "span_right/5 -- library predicate" L030704)("span_trim/5 -- library predicate" "span_trim/5 -- library predicate" L030704)("specifications, predicate" "specifications, predicate" R020101)("spy this" "spy this, debugging option" U061201)("spy" "spy" R110606)("spy(+X)" "spy(+X)" R110606)("spy/1 -- built-in predicate" "spy/1 -- built-in predicate" R110606)("spy/1 -- built-in predicate" "spy/1 -- built-in predicate, use with the module system" R1210)("spypoint" "spypoint" U08)("spypoint" "spypoint, removing" U060603)("spypoint" "spypoint, setting" U060601)("spypoint" "spypoint, using" U060602)("spypoint" "spypoint, using" U061104)("spypoint-example" "spypoint-example" U061104)("spypoints" "spypoints" R110303)("spypoints" "spypoints, removing all" S0504)("spypoints" "spypoints, removing" R110504)("spypoints" "spypoints, removing" R110607)("spypoints" "spypoints, removing" R110608)("spypoints" "spypoints, setting on compiled procedures" S0504)("spypoints" "spypoints, setting" R110504)("spypoints" "spypoints, setting" R110606)("stack space" "stack space" S0301)("standard input and output streams" "standard input and output streams" R05)("Standard input and output streams" "Standard input and output streams" S0105)("Standard Order of Terms" "Standard Order of Terms" R0801)("standard order on terms" "standard order on terms" R0801)("standard syntax" "standard syntax" R050104)("standard" "standard" R0801)("starting Prolog" "starting Prolog" U0102)("Starting The Prolog Top Level" "Starting The Prolog Top Level" S0207)("static predicates" "static predicates" U0408)("static predicates" "static predicates" U08)("static procedures" "static procedures" R1301)("statistics" "statistics" S030101)("statistics" "statistics" S030102)("statistics(?Keyword, -List)" "statistics(?Keyword, -List)" S030102)("statistics/0 -- built-in predicate" "statistics/0 -- built-in predicate" R0003)("statistics/0 -- built-in predicate" "statistics/0 -- built-in predicate" S030101)("statistics/2 -- built-in predicate" "statistics/2 -- built-in predicate" R0003)("statistics/2 -- built-in predicate" "statistics/2 -- built-in predicate" S030102)("statistics/2 -- built-in predicate" "statistics/2 -- built-in predicate" S0508)("Storage management" "Storage management" S03)("Stream and File Handling" "Stream and File Handling" R0503)("stream objects" "stream objects" R050303)("Stream Position Information for Terminal I/O" "Stream Position Information for Terminal I/O" R050504)("stream position objects" "stream position objects" R050505)("stream" "stream" R0503)("stream" "stream" R0505)("stream" "stream" U08)("Stream-based Input and Output of Characters" "Stream-based Input and Output of Characters" R050402)("Stream-based Input and Output of Terms" "Stream-based Input and Output of Terms" R050401)("stream-based input and output" "stream-based input and output" S0506)("stream-character" "stream-character" R050402)("stream-position" "stream-position" R050505)("stream-position" "stream-position" R050506)("stream-term" "stream-term" R050401)("Streams and File Names" "Streams and File Names" R050301)("streams" "streams" R0503)("streams" "streams, closing all" L0504)("streams" "streams, closing" L0502)("streams" "streams, closing" R050306)("streams" "streams, current input and output" R05)("streams" "streams, current input and output" R050311)("streams" "streams, current input and output" R050312)("streams" "streams, current input and output" R050313)("streams" "streams, current input and output" R050314)("streams" "streams, finding out what streams are open" R050307)("streams" "streams, I/O of characters on a specified stream" R050402)("streams" "streams, I/O of terms on a specified stream" R050401)("streams" "streams, listing open" L0502)("Streams" "Streams, maximum number of" S0105)("streams" "streams, null" R050305)("streams" "streams, opening" L0502)("streams" "streams, opening" R050304)("streams" "streams, position information for terminal I/O" R050504)("streams" "streams, random access to" R050505)("streams" "streams, random access to" R050506)("streams" "streams, reading from" L0608)("streams" "streams, reading the state of" R0505)("streams" "streams, standard input and output" R05)("streams" "streams, using under Xerox Lisp" S0106)("stream_object" "stream_object" R050303)("stream_position(+Stream, -Old, +New)" "stream_position(+Stream, -Old, +New)" R050505)("stream_position(?Stream, ?Pos)" "stream_position(?Stream, ?Pos)" R050506)("stream_position/2 -- built-in predicate" "stream_position/2 -- built-in predicate" R050506)("stream_position/3 -- built-in predicate" "stream_position/3 -- built-in predicate" R050505)("stream_pos_object" "stream_pos_object" R050505)("string/1 -- library predicate" "string/1 -- library predicate" L0302)("STRINGP data type" "STRINGP data type" L0301)("strings" "strings" L0301)("strings" "strings, and garbage collection" L0301)("strings" "strings, as constants" L0303)("strings" "strings, comparing padded" L0304)("strings" "strings, comparing" L0304)("strings" "strings, testing for" L0302)("strings, lists of ASCII characters" "strings, lists of ASCII characters" R010201)("string_char/3 -- library predicate" "string_char/3 -- library predicate" L0306)("string_chars(?String, ?Chars)" "string_chars(?String, ?Chars)" L030305)("string_chars/2 -- library predicate" "string_chars/2 -- library predicate" L0303)("string_chars/2 -- library predicate" "string_chars/2 -- library predicate" L030305)("string_length/2 -- library predicate" "string_length/2 -- library predicate" L0306)("string_search/3 -- library predicate" "string_search/3 -- library predicate" L030702)("string_size/2 -- library predicate" "string_size/2 -- library predicate" L0306)("structure" "structure" U08)("Style checking for Prolog source code" "Style checking for Prolog source code" S0505)("Style Checking" "Style Checking" R0303)("Style Checking" "Style Checking" S0505)("Style Checking" "Style Checking" U0704)("style checking, predicates for control of" "style checking, predicates for control of" R0303)("style conventions" "style conventions" U0307)("style conventions" "style conventions" U0501)("style warning facility" "style warning facility" U0307)("style warning facility" "style warning facility" U0704)("Style Warnings" "Style Warnings" U0307)("style" "style" R0303)("style-checking" "style-checking" U0307)("style-restrictions" "style-restrictions" U0501)("style-warnings" "style-warnings" U0307)("style_check" "style_check" R030301)("style_check(+X)" "style_check(+X)" R030301)("style_check/1 -- built-in predicate" "style_check/1 -- built-in predicate" R030301)("style_check/1 -- built-in predicate" "style_check/1 -- built-in predicate" S0505)("style_check/1 -- built-in predicate" "style_check/1 -- built-in predicate" U0307)("style_check/1 -- built-in predicate" "style_check/1 -- built-in predicate" U0704)("subchars/4 -- library predicate" "subchars/4 -- library predicate" L030703)("subchars/5 -- library predicate" "subchars/5 -- library predicate" L030703)("subchars/[4,5" "subchars/[4,5" L030703)("subgoal_of" "subgoal_of" R1006)("subgoal_of(?S)" "subgoal_of(?S)" R1006)("subgoal_of/2 -- built-in predicate" "subgoal_of/2 -- built-in predicate" R1006)("subseq/3 -- library predicate" "subseq/3 -- library predicate" L0105)("subseq0" "subseq0" L0105)("subseq0/2 -- library predicate" "subseq0/2 -- library predicate" L0105)("subseq0/2 -- library predicate" "subseq0/2 -- library predicate" L010602)("subseq1" "subseq1" L0105)("subseq1/2 -- library predicate" "subseq1/2 -- library predicate" L0105)("subseq1/2 -- library predicate" "subseq1/2 -- library predicate" L010602)("subset, checking for" "subset, checking for" L010601)("subset/2 -- library predicate" "subset/2 -- library predicate" L010601)("subsets of a set, generating" "subsets of a set, generating" L010602)("subsidiary file, compiling or consulting" "subsidiary file, compiling or consulting" U0304)("substring" "substring" L030702)("substring/4 -- library predicate" "substring/4 -- library predicate" L030702)("substring/5 -- library predicate" "substring/5 -- library predicate" L030702)("substring/[4,5" "substring/[4,5" L030702)("substrings" "substrings, searching for" L030702)("subsumes/2 -- library predicate" "subsumes/2 -- library predicate" L0208)("subsuming terms" "subsuming terms" L0208)("subsuming terms" "subsuming terms, checking for" L0208)("subterms" "subterms, checking for in terms" L0205)("subterms" "subterms, counting identical occurrences" L0205)("subterms" "subterms, counting unifiable occurrences" L0205)("subterms" "subterms, enumerating" L0205)("subterms" "subterms, identity with" L0205)("subterms" "subterms, proper" L0205)("subterms" "subterms, unification with" L0205)("subtract/3 -- library predicate" "subtract/3 -- library predicate" L010601)("subtraction" "subtraction" R0601)("sub_term/2 -- library predicate" "sub_term/2 -- library predicate" L0205)("sum of list elements" "sum of list elements" L0105)("sumlist/2 -- library predicate" "sumlist/2 -- library predicate" L0105)("Summary of the Packages" "Summary of the Packages" L070202)("Summary" "Summary" L0406)("Summary" "Summary" R110306)("swapping arguments of terms" "swapping arguments of terms" L0204)("swap_args/4 -- library predicate" "swap_args/4 -- library predicate" L0204)("swap_args/6 -- library predicate" "swap_args/6 -- library predicate" L0204)("Symbols and Conventions" "Symbols and Conventions" U0003)("symbols" "symbols" U0003)("symdiff/3 -- library predicate" "symdiff/3 -- library predicate" L010601)("symmetric difference of ordered sets" "symmetric difference of ordered sets" L0107)("symmetric difference of sets" "symmetric difference of sets" L010601)("Syntax Error Messages" "Syntax Error Messages" U0306)("syntax for numbers" "syntax for numbers" L030301)("syntax of floating-point numbers" "syntax of floating-point numbers" S0502)("Syntax of Sentences as Terms" "Syntax of Sentences as Terms" R010802)("Syntax of Terms as Tokens" "Syntax of Terms as Tokens" R010803)("Syntax of Tokens as Character Strings" "Syntax of Tokens as Character Strings" R010804)("Syntax Restrictions" "Syntax Restrictions" R0106)("syntax" "syntax" R01)("syntax" "syntax" R0106)("syntax" "syntax" R010801)("syntax" "syntax" R010802)("syntax" "syntax" R010803)("syntax" "syntax" R010804)("syntax" "syntax" U08)("syntax" "syntax, errors" U0306)("syntax" "syntax, formal" R0108)("syntax" "syntax, of atoms" R010103)("syntax" "syntax, of compound terms" R0102)("syntax" "syntax, of floats" R010102)("syntax" "syntax, of integers" R010101)("syntax" "syntax, of lists" R010201)("syntax" "syntax, of sentences as terms" R010802)("syntax" "syntax, of terms as tokens" R010803)("syntax" "syntax, of tokens as character strings" R010804)("syntax" "syntax, of variables" R010104)("syntax" "syntax, restrictions" R0106)("syntax" "syntax, rule notation" R010801)("syntax" "syntax, standard" R050104)("syntax-messages" "syntax-messages" U0306)("sys" "sys" S01)("SYSOUT" "SYSOUT" S0103)("System-dependent Features of Xerox Quintus Prolog" "System-dependent Features of Xerox Quintus Prolog" S01)("System-dependent Features" "System-dependent Features" R0003)("s[kip] -- debugger option" "s[kip] -- debugger option" R110305)("s[kip] -- debugger option" "s[kip] -- debugger option" R110501)("tab" "tab" L0602)("tab" "tab" R050206)("tab" "tab" R050402)("tab(+N)" "tab(+N)" R050206)("tab/1 -- built-in predicate" "tab/1 -- built-in predicate" R050206)("tab/2 -- built-in predicate" "tab/2 -- built-in predicate" R050402)("tail recursion optimization" "tail recursion optimization" R1906)("taking apart text objects" "taking apart text objects" L030701)("TEdit interface" "TEdit interface" S04)("TEdit Modes" "TEdit Modes" S0402)("TEdit" "TEdit, style restrictions" U0501)("tell" "tell" R050604)("tell(+S)" "tell(+S)" R050604)("tell/1 -- built-in predicate" "tell/1 -- built-in predicate" L0502)("tell/1 -- built-in predicate" "tell/1 -- built-in predicate" R050604)("telling" "telling" R050605)("telling(-S)" "telling(-S)" R050605)("telling/1 -- built-in predicate" "telling/1 -- built-in predicate" R050605)("term comparison" "term comparison" L0201)("Term Manipulation Library Packages" "Term Manipulation Library Packages" L02)("Term Subsumption -- library(subsumes)" "Term Subsumption -- library(subsumes)" L0208)("term" "term" R0501)("term" "term" R08)("term" "term" U08)("Term1 \= Term2" "Term1 \= Term2" L040401)("Term1 ~= Term2" "Term1 ~= Term2" L040402)("terminal I/O, stream position information for" "terminal I/O, stream position information for" R050504)("terminal requirements" "terminal requirements" R0003)("terminal" "terminal, reading file names from" L0606)("terminal" "terminal, reading lines from" L0607)("Terminating a Backtracking Loop" "Terminating a Backtracking Loop" R190203)("Terms" "Terms" R0101)("terms" "terms, alphabetic variants" L0208)("terms" "terms, arguments of" R0709)("terms" "terms, as arrays" L0204)("terms" "terms, as sentences" R0108)("terms" "terms, built-in predicates for" L0201)("terms" "terms, changing arguments by path" L0204)("terms" "terms, changing arguments to" L0204)("terms" "terms, checking for subterms" L0205)("terms" "terms, circular" R0205)("terms" "terms, comparison of" R08)("terms" "terms, compound" R0102)("terms" "terms, enumerating subterms" L0205)("terms" "terms, exchanging arguments of" L0204)("terms" "terms, finding arguments by path" L0203)("terms" "terms, finding arguments of" L0203)("terms" "terms, finding principal functor of" L0203)("terms" "terms, identity with subterms" L0205)("terms" "terms, inequality of" L0404)("terms" "terms, inequality of" L040401)("terms" "terms, input and output of" R0501)("terms" "terms, integers as" L0203)("terms" "terms, matching principal functors of" L0207)("terms" "terms, ordering on" R0801)("terms" "terms, predicates for looking at" R07)("terms" "terms, principal functor of" R0708)("terms" "terms, rewriting" L0204)("terms" "terms, sound inequality of" L040402)("terms" "terms, subsumption" L0208)("terms" "terms, subsumption, checking for" L0208)("terms" "terms, testing elements of two" L0203)("terms" "terms, testing unifiability of" L040401)("terms" "terms, unification with subterms" L0205)("terms" "terms, unification" L0209)("TermStreamPos" "TermStreamPos" R050504)("term_backtrack" "term_backtrack" R190203)("term_expansion" "term_expansion" R170401)("term_expansion/2 -- user-defined predicate" "term_expansion/2 -- user-defined predicate" R170401)("text objects" "text objects" L0301)("text objects" "text objects" L0302)("text objects" "text objects, concatenating" L0305)("text objects" "text objects, extracting characters from" L0306)("text objects" "text objects, finding length of" L0306)("text objects" "text objects, searching for substrings" L030702)("text objects" "text objects, taking apart" L030701)("text objects" "text objects, taking apart" L030702)("text objects" "text objects, taking apart" L030704)("Text Processing" "Text Processing" L03)("text, reading and writing" "text, reading and writing" L0603)("textual input, prompting for" "textual input, prompting for" L0606)("The "is-not-provable" Operator" "The "is-not-provable" Operator" L0402)("The "span" family" "The "span" family" L030704)("The Compatibility Checker -- library(checker)" "The Compatibility Checker -- library(checker)" L070102)("The Compiler/Interpreter Interface" "The Compiler/Interpreter Interface" U0703)("The Cross-referencer -- library(xref)" "The Cross-referencer -- library(xref)" L070101)("The Cut" "The Cut" R0204)("The Cut" "The Cut" R1902)("The Foreign Function Interface" "The Foreign Function Interface" S02)("The Help System" "The Help System" S0501)("The Internal Data Base" "The Internal Data Base" R15)("The Lisp Interface" "The Lisp Interface" S0204)("The meta_predicate Declaration" "The meta_predicate Declaration" R1217)("The Procedure Box Control Flow Model" "The Procedure Box Control Flow Model" R1102)("The Prolog System" "The Prolog System" U0102)("The Six Term Manipulation Packages" "The Six Term Manipulation Packages" L0202)("The Source Module" "The Source Module" R1207)("The TEdit Interface" "The TEdit Interface" S04)("The tools Directory" "The tools Directory" L0701)("The Top-level Prolog Prompt" "The Top-level Prolog Prompt" U0202)("The Type-in Module" "The Type-in Module" R1208)("The Unsupported Library" "The Unsupported Library" L07)("theorem provers, predicates for" "theorem provers, predicates for" L0208)("timing statistics" "timing statistics" S030102)("token" "token, quoted" L0608)("token" "token, unquoted" L0608)("tokens" "tokens" R0108)("told" "told" R050606)("told/0 -- built-in predicate" "told/0 -- built-in predicate" R050606)("to_lower/2 -- library predicate" "to_lower/2 -- library predicate" L0304)("to_lower/2 -- library predicate" "to_lower/2 -- library predicate" L0309)("to_lower/2 -- library predicate" "to_lower/2 -- library predicate" L0602)("to_upper/2 -- library predicate" "to_upper/2 -- library predicate" L0304)("to_upper/2 -- library predicate" "to_upper/2 -- library predicate" L0309)("to_upper/2 -- library predicate" "to_upper/2 -- library predicate" L0602)("Trace Mode and Debug Mode" "Trace Mode and Debug Mode" R110301)("trace" "trace" R110602)("trace" "trace" U0602)("trace" "trace" U08)("trace-example" "trace-example" U0605)("trace-step" "trace-step" U0605)("trace/0 -- built-in predicate" "trace/0 -- built-in predicate" R110602)("trace_execution" "trace_execution" U0605)("tracing a procedure execution" "tracing a procedure execution" S0504)("Tracing Every Step of a Procedure Execution" "Tracing Every Step of a Procedure Execution" U0605)("tracing" "tracing" R110301)("tracing" "tracing" R110302)("tracing" "tracing, trace flag" R1803)("tracing" "tracing, trace flag" R1804)("tracing-a-procedure" "tracing-a-procedure" U0602)("Translation of Grammar Rules into Prolog Clauses" "Translation of Grammar Rules into Prolog Clauses" R1703)("tree, finding subtree of" "tree, finding subtree of" L0203)("trimcore/0 -- built-in predicate" "trimcore/0 -- built-in predicate" R0003)("true" "true" R0408)("true/0 -- built-in predicate" "true/0 -- built-in predicate" R0408)("true/0 -- built-in predicate" "true/0 -- built-in predicate" U0610)("tty-character" "tty-character" R0507)("ttyflush" "ttyflush" R050707)("ttyflush/0 -- built-in predicate" "ttyflush/0 -- built-in predicate" R050707)("ttyget" "ttyget" R050702)("ttyget(-N)" "ttyget(-N)" R050702)("ttyget/1 -- built-in predicate" "ttyget/1 -- built-in predicate" R050702)("ttyget0" "ttyget0" R050701)("ttyget0(-N)" "ttyget0(-N)" R050701)("ttyget0/1 -- built-in predicate" "ttyget0/1 -- built-in predicate" R050701)("ttynl" "ttynl" R050705)("ttynl/0 -- built-in predicate" "ttynl/0 -- built-in predicate" R050705)("ttyput" "ttyput" R050704)("ttyput(+N)" "ttyput(+N)" R050704)("ttyput/1 -- built-in predicate" "ttyput/1 -- built-in predicate" R050704)("ttyskip" "ttyskip" R050703)("ttyskip(+N)" "ttyskip(+N)" R050703)("ttyskip/1 -- built-in predicate" "ttyskip/1 -- built-in predicate" R050703)("ttytab" "ttytab" R050706)("ttytab(+N)" "ttytab(+N)" R050706)("ttytab/1 -- built-in predicate" "ttytab/1 -- built-in predicate" R050706)("Turning Off the Debugger" "Turning Off the Debugger" U0603)("Turning On the Debugger" "Turning On the Debugger" U0602)("tutorial" "tutorial" U0003)("Type coercion" "Type coercion" S0502)("type error" "type error" R1101)("Type Testing" "Type Testing" L0302)("type-in module" "type-in module" R1207)("type-in module" "type-in module, changing" R1208)("type-in-module" "type-in-module" R1208)("types.pl -- unsupported" "types.pl -- unsupported" L070202)("unary minus" "unary minus" R0601)("unbound" "unbound" U08)("Undefined Predicates" "Undefined Predicates" U0406)("undefined procedures" "undefined procedures" R110609)("undefined procedures" "undefined procedures, system response to" U0406)("underscore, recognizing" "underscore, recognizing" L0602)("unifiability of terms" "unifiability of terms" L040401)("Unification -- library(unify)" "Unification -- library(unify)" L0209)("unification" "unification" R0203)("Unification" "Unification" U010104)("unification" "unification" U08)("unification" "unification, and term subsumption" L0208)("unification" "unification, explicit" R1801)("unification" "unification, of terms" L0209)("unification" "unification, successive" U0402)("unify" "unify" L0209)("unify/2 -- library predicate" "unify/2 -- library predicate" L0209)("uninstantiated" "uninstantiated" R0701)("union of ordered sets" "union of ordered sets, multiple" L0107)("union of ordered sets" "union of ordered sets, two" L0107)("union of sets" "union of sets, multiple" L010601)("union of sets" "union of sets, two" L010601)("union/2 -- library predicate" "union/2 -- library predicate" L010601)("union/3 -- library predicate" "union/3 -- library predicate" L010601)("unit clause" "unit clause" R0201)("unit clause" "unit clause" U08)("univ" "univ" L0201)("univ" "univ" R0710)("unix/1 -- built-in predicate" "unix/1 -- built-in predicate" R0003)("unknown procedure catching" "unknown procedure catching" R1301)("unknown procedure catching" "unknown procedure catching" R1804)("unknown procedure trapping" "unknown procedure trapping" S0504)("unknown" "unknown" R110609)("unknown(-OldAction, +NewAction)" "unknown(-OldAction, +NewAction)" R110609)("unknown-procedures" "unknown-procedures" R110609)("unknown/2 -- built-in predicate" "unknown/2 -- built-in predicate" R110609)("unquoted token" "unquoted token" L0608)("Unsupported Packages in the library Directory" "Unsupported Packages in the library Directory" L0702)("upper/1 -- library predicate" "upper/1 -- library predicate" L0309)("upper/2 -- library predicate" "upper/2 -- library predicate" L0309)("uppercase letter" "uppercase letter" L0602)("user-defined predicates" "user-defined predicates" R0904)("user-defined predicates" "user-defined predicates, new" U0707)("UserInput" "UserInput" L06)("user_error -- reserved stream" "user_error -- reserved stream" R050303)("user_error -- reserved stream" "user_error -- reserved stream" R050506)("user_input -- reserved stream" "user_input -- reserved stream" R050303)("user_input -- reserved stream" "user_input -- reserved stream" R050506)("user_output -- reserved stream" "user_output -- reserved stream" R050303)("user_output -- reserved stream" "user_output -- reserved stream" R050506)("use_module" "use_module" R030203)("use_module" "use_module" R030204)("use_module(+FileSpec, +ImportList)" "use_module(+FileSpec, +ImportList)" R030204)("use_module(+FileSpecList)" "use_module(+FileSpecList)" R030203)("use_module/1 -- built-in predicate" "use_module/1 -- built-in predicate" R030203)("use_module/1 -- built-in predicate" "use_module/1 -- built-in predicate" R1205)("use_module/2 -- built-in predicate" "use_module/2 -- built-in predicate" R030204)("use_module/2 -- built-in predicate" "use_module/2 -- built-in predicate" R1205)("Using an Initialization File" "Using an Initialization File" U0308)("Using Embedded consult/1 or compile/1 Directives" "Using Embedded consult/1 or compile/1 Directives" U0304)("Using Help" "Using Help" U0203)("Using Prolog With TEdit" "Using Prolog With TEdit" U0201)("Using Spypoints to Debug a Procedure" "Using Spypoints to Debug a Procedure" U060602)("Using Spypoints" "Using Spypoints" U061104)("Using System Warnings" "Using System Warnings" U061101)("Using TEdit -- An Overview" "Using TEdit -- An Overview" U020101)("Using the Skip and Retry Options" "Using the Skip and Retry Options" U061103)("Using Xerox Quintus Prolog" "Using Xerox Quintus Prolog" U02)("VALUES function" "VALUES function" S0204)("var" "var" R0701)("var(?X)" "var(?X)" R0701)("var/1 -- built-in predicate" "var/1 -- built-in predicate" R0701)("variable" "variable" U010202)("variable" "variable" U08)("variables" "variables" R010104)("variables" "variables" R0201)("variables" "variables, anonymous" R010104)("Variables" "Variables, declarations" R0001)("variables" "variables, instantiation of" R0701)("Variables" "Variables, Lisp" S0202)("variables" "variables, meta-" R0001)("variables" "variables, scope of" R0201)("variables" "variables, syntax of" R010104)("variables, printing of" "variables, printing of" S0509)("variant/2 -- library predicate" "variant/2 -- library predicate" L0208)("Visibility Rules" "Visibility Rules" R1206)("visibility" "visibility" R1206)("vms/1 -- built-in predicate" "vms/1 -- built-in predicate" R0003)("warnings" "warnings" U061101)("warnings, style" "warnings, style" S0505)("ways of invoking Prolog" "ways of invoking Prolog" R0003)("What is a "Proper" List?" "What is a "Proper" List?" L0102)("What is Logic Programming?" "What is Logic Programming?" U0101)("white space character, recognizing" "white space character, recognizing" L0602)("windows" "windows" U08)("windows, selecting modes for" "windows, selecting modes for" S04)("write" "write" R050102)("write" "write" R050401)("write" "write" U061201)("write(?X)" "write(?X)" R050102)("write-canonical" "write-canonical" R050104)("write-canonical" "write-canonical" R050401)("write/1 -- built-in predicate" "write/1 -- built-in predicate" R050102)("write/2 -- built-in predicate" "write/2 -- built-in predicate" R050401)("writeq" "writeq" R050103)("writeq" "writeq" R050401)("writeq(?X)" "writeq(?X)" R050103)("writeq/1 -- built-in predicate" "writeq/1 -- built-in predicate" R050103)("writeq/2 -- built-in predicate" "writeq/2 -- built-in predicate" R050401)("write_canonical(?Term)" "write_canonical(?Term)" R050104)("write_canonical/1 -- built-in predicate" "write_canonical/1 -- built-in predicate" R050104)("write_canonical/2 -- built-in predicate" "write_canonical/2 -- built-in predicate" R050401)("writing bidirectional code" "writing bidirectional code" L0207)("writing characters" "writing characters, to the current output stream" L0603)("Writing Efficient Programs" "Writing Efficient Programs" R19)("writing lines" "writing lines" L0603)("writing lines" "writing lines, to the current output stream" L0603)("writing pattern matchers over commutative operators" "writing pattern matchers over commutative operators" L0105)("writing prompts to the terminal" "writing prompts to the terminal" L0607)("w[rite] -- debugger option" "w[rite] -- debugger option" R110502)("x -- debugger option" "x -- debugger option" R110503)("x -- debugger option" "x -- debugger option" U061201)("X, identity for numbers" "X, identity for numbers" R0601)("Xerox Quintus Prolog style conventions" "Xerox Quintus Prolog style conventions" U0307)("XEROX-QUINTUS-PROLOG Package" "XEROX-QUINTUS-PROLOG Package" S0201)("XQP Package" "XQP Package" S0201)("XQPInfo commands" "XQPInfo commands, use with help system" S0601)("XQPInfo" "XQPInfo" U0203)("X^P" "X^P" R1603)("Yes-no Questions, and Others -- library(ask)" "Yes-no Questions, and Others -- library(ask)" L0606)("yes-no questions, asking" "yes-no questions, asking" L0606)("yesno/1 -- library predicate" "yesno/1 -- library predicate" L0606)("yesno/2 -- library predicate" "yesno/2 -- library predicate" L0606)("zero-quote notation for character conversion" "zero-quote notation for character conversion" R010101)