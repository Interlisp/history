;; Being tested:    SEdit;;;; Source:          {ERIS}<LispCore>DOC>SEDIT>SEDIT.TEDIT;;;; Created By:      Henry Cate III;;;; Creation Date:   February 4, 1987;;;; Last Update:;;;; Filed As:        {eris}<lispcore>test>SEdit>command-high.u;;;;;;(do-test "load the functions for the prompter for interactive tests"  (if (not (fboundp 'do-test-menu-setup))	(load "{ERINYES}<test>TOOLS>DO-TEST-MENU.dfasl"))  T)(do-test-group  "High level, high priority test"	:before (progn	(setq window-list (do-test-menu-Setup "High-level")))	:after (progn	(do-test-menu-Cleanup window-list))(do-test "Trouble typing with parentheses"  (let* (( user-result (do-test-menu-Message window-list 'high "     Testing parenthesesIf needed, bring up a second exec and type: \"(cl:in-package 'xcl-test)\"Then in the exec type:(setq tempx '(5)) (il:SEdit tempx) Put the edit caret after the five in the SEdit window.Type:\"(()6 7 8\"Now complete the edit by typing control x.  Were you able to get this far?"))	    (good-value (equal '(5 (nil 6 7 8)) tempx)))	(and user-result (if (eq t user-result) good-value T))  ))(do-test "Trouble creating dotted pairs"  (let* (( user-result (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (5 (nil 6 7 8))     Testing dotted pairs.Put the edit caret after the 8.  Type: \" .9\" Put the edit caret after the smaller list.  Type: \" .10\"  Now complete the edit by selecting DONE from the pop-up menu.  Were you able to get this far?"))	    (good-value (equal '(5 (nil 6 7 8 . 9) . 10) tempx)))	(and user-result (if (eq t user-result) good-value T))  ))(do-test "Trouble with single quote"  (let* (( user-result (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (5 (nil 6 7 8 . 9) . 10)     Testing single quotes.Pick the smaller list as a structure by holding both keys down over the open parenthensis.Press the delete key.Type: \"'(5 6 7\"Now complete the edit by selecting DONE from the pop-up menu.  Were you able to get this far?"))	    (good-value (equal '(5 (quote (5 6 7)) . 10) tempx)))	(and user-result (if (eq t user-result) good-value T))  ))(do-test "Trouble with control x"  (let* (( user-result (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (5 (quote (5 6 7)) . 10)     Testing control-w.Pick the smaller list as a structure by holding both keys down over the close parenthensis.Type control W.Now complete the edit by typing control x.  Were you able to get this far?"))	    (good-value (equal '(5 . 10) tempx)))	(and user-result (if (eq t user-result) good-value T))  ))(do-test "Trouble with control ("  (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (5 . 10)     Testing meta-(.Select 10 as a structure. Pick meta-( from the pop menu.Check to see if the caret is in front of the ten.Now complete the edit by typing control x.  Was the caret in front of the ten?"))(do-test "Trouble with control ("  (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (5 10)     Testing meta-A.Place the edit caret after the ten. Type: \" 11 12 13\"Pick control-A from the pop-up menu.Confirm yes it is ok to abort. Were you able to get this far?"))(do-test "Trouble with control-B"  (do-test-menu-Message window-list 'high "Assumping tempx is currently equals (5 10)     Testing meta-B.Type:  \"(il:dv tempx)\"Pick control-B from the pop menu and enter 3.Now complete the edit by selecting DONE from the pop-up menu. Do you see (#3r12 #3r101)?"))(do-test "Trouble with control-J"  (let* (( user-result (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (5 10)     Testing meta-J.First restore the base by picking control-B from the popup menu and entering 10.Delete everything inside the big list.Type: \"x x x\"Then select these three elements.Pick control-J from the pop menu.Now complete the edit by selecting DONE from the pop-up menu.  Were you able to get this far?"))	    (good-value (equal '(xxx) tempx)))	(and user-result (if (eq t user-result) good-value T))  ))(do-test "Trouble with control-M"  (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (xxx)     Testing meta-M.Pick control-M from the pop menu.Now complete the edit by selecting DONE from the pop-up menu.  Does the menu come up and stay up?"))(do-test "Trouble with control-U"  (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (xxx)     Testing meta-U.Place the edit structure caret after the symbol xxx.Type: \" yyy\"Select Undo from the menu.  Were you able to get this far?"))(do-test "Trouble with control-R"  (let* (( user-result (do-test-menu-Message window-list 'high "Assumping SEdit is editing tempx which currently equals (xxx)     Testing meta-R.Place the edit structure caret after the symbol xxx.Type: \" yyy\"Select Undo, Redo, and Exit from the menu.Were you able to get this far?"))	    (good-value (equal '(xxx yyy) tempx)))	(and user-result (if (eq t user-result) good-value T))  )))	; end of do-test-groupSTOP